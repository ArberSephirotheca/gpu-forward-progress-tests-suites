#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 ivec4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_11 {
 int _f0;
 bvec2 _f1;
 uvec2 _f2;
 ivec3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 ivec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 uvec4 _f1;
 vec4 _f2;
 uvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 _GLF_struct_6 _f1;
 vec3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 uvec4 _f1;
 ivec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 bool _f1;
 uint workgroup_id;
 ivec3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_5 _f0;
 _GLF_struct_10 _f1;
 vec3 _f2;
 _GLF_struct_12 _f3;
 float _f4;
 mat3x4 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint num_workgroup;
 uvec2 _f1;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))))), true, false, false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))).y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), false), false, false)), true, true))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(reflect(vec2(-7210.8183, 29.60), injectionSwitch)) : injectionSwitch)).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, abs(0.0)))) : _GLF_FUZZED(vec2(3.5, 449.990)))).y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, abs(0.0)))) : _GLF_FUZZED(vec2(3.5, 449.990)))).y)))))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, abs(0.0)))) : _GLF_FUZZED(vec2(3.5, 449.990)))).y)))), true, false, true)))), true, false))))))), false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(38.68) : injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(true, (true) && true)), true)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false), true), true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! (bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 8149.6036))), vec2(_GLF_FUZZED(3.9), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))], float(mat4x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), bvec2(false, true))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true))))), true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(-79.00), _GLF_FUZZED(-6.8)), bvec2(false, false))))).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), true), true)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), false), false, true)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false), true), true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), (! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 8149.6036))), vec2(_GLF_IDENTITY(_GLF_FUZZED(3.9), mix(float(_GLF_FUZZED(3.9)), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), bvec2(false, true))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true))))), true))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-218.225), _GLF_FUZZED(-6.0)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), true), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), true), true))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false), true), true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 8149.6036))), vec2(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) - 0.0)), bvec2(false, true))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true))))), true))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), true), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false), true), true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 8149.6036))), vec2(_GLF_FUZZED(3.9), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), bvec2(false, true))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false), true), true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 8149.6036))), vec2(_GLF_FUZZED(3.9), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), bvec2(false, true))).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), true))), true))))), true))), false, true))))), true, false))) || false))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false, true, false))))))), true && (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))))))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1])), injectionSwitch)).y)))))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), exp(0.0), log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), exp(0.0), log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(66.00)), float(injectionSwitch.x), bool(true)))))) - 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) || false, true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool((! (true))), ! (! (bool((! (true))))))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)))) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || false))))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool((! (true))), ! (! _GLF_IDENTITY((bool((! (true)))), ! (! ((bool((! (true)))))))))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))), false, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-96.22) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.y), bool(true))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-96.22) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.y), bool(true))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-96.22) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.y), bool(true))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-96.22) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.y), bool(true))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-96.22) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.y), bool(true))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false, false)))))))), false, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, true))), false, true))))))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.0, 0.1)))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(uintBitsToFloat(atomicCompSwap(write_val, 168360u, 76393u))))))), injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))), true)))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))), true)))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))), true))) && true)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(37.41)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true), true))))), true))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false)))))))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false))))))))))))) && true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mat2(1.0) * (vec2(injectionSwitch.x, 1.0)))) - vec2(0.0, 0.0))) * mat2(1.0)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mat2(1.0) * (vec2(injectionSwitch.x, 1.0)))) - vec2(0.0, 0.0))) * mat2(1.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mat2(1.0) * (vec2(injectionSwitch.x, 1.0)))) - vec2(0.0, 0.0))) * mat2(1.0)))) > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mat2(1.0) * (vec2(injectionSwitch.x, 1.0)))) - vec2(0.0, 0.0))) * mat2(1.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mat2(1.0) * (vec2(injectionSwitch.x, 1.0)))) - vec2(0.0, 0.0))) * mat2(1.0)))) > injectionSwitch.y)) && true))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-54.92)), bool(false)))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.3)), vec2(_GLF_FUZZED(-177.599), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && ((false)))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true)))) && true, ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))), (bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && true) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false)), false || (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), (! (false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), (! (false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)) || false, (_GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))) || false, true && ((! (false)) || false))) || false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))), ((! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, true && ((! (false)) || false))) || false)) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))) || false))), false, true), false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))).x), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-734.394)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((6582.6987 / 85.98)) : 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (true ? vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 1.0) : _GLF_FUZZED(vec3(-0.6, 5.8, -845.129))))))), mix(float(_GLF_FUZZED(-3.6)), float(float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (true ? vec3(0.0, 1.0, 1.0) : _GLF_FUZZED(vec3(-0.6, 5.8, -845.129)))))))), bool(true)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x)), float(_GLF_FUZZED(9046.8784)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, tan(length(0.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-342.561, -309.921, -53.08, 3.2, -83.59, 3.0)) : mat3x2(injectionSwitch, 0.0, tan(length(0.0)), 1.0, 1.0))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -6005.3424)) : injectionSwitch)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) || false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(ivec3(1), _GLF_struct_0(_GLF_IDENTITY(1, (1) << 0), gl_NumWorkGroups.x, uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u, 1u)))), mat3x2(1.0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.3)), clamp(float(_GLF_FUZZED(8.3)), _GLF_IDENTITY(float(_GLF_FUZZED(8.3)), (float(_GLF_FUZZED(8.3))) / 1.0), float(_GLF_FUZZED(8.3)))), float(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(252.207)), bool(false))))), 1.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true))), _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / cos(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)))))))), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.9) : 0.0))))) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(distance(vec4(-4.6, -5950.2017, -1.6, 962.956), vec4(-1.8, 1043.5930, -35.76, 0.1)))))))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(66.58)), float(1.0), bool(true))))), 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))), (vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (true ? vec4(1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-143.085, 9165.5569, 9.6, -3.4)))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))))))), max(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))))))), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428))))))))) : _GLF_FUZZED(549.625))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))))))), (sqrt(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -357.162))), bool(false))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 0.0))), sqrt(vec4(1.0, 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), float(mat2x4(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) - 0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) ? _GLF_FUZZED(ldexp(4.6, 87416)) : mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), float(mat2(1.0, 1.0, 0.0, 1.0)))), bool(true))))), 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / cos(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(cos(0.0), cos(tan(0.0)) * (cos(0.0)))), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), transpose(transpose(_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (false ? _GLF_FUZZED(mat3(75.31, 4.1, -2.5, -521.806, -73.76, -5.4, -7074.4471, -354.577, -795.222)) : true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0))), 0.0, 0.0))))))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), (sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 0.0))), sqrt(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec4(-1.1, 9975.3611, 586.760, -13.11), radians(vec4(-7550.7883, -324.805, 6.1, 60.80)))) : 1.0)), 1.0, 1.0, 0.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))) - 0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))).x > injectionSwitch.y), true, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) ? _GLF_FUZZED(ldexp(4.6, 87416)) : mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), float(mat2(1.0, 1.0, 0.0, 1.0)))), bool(true))))), 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / cos(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(cos(0.0), cos(tan(0.0)) * (cos(0.0)))), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), transpose(transpose(_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (false ? _GLF_FUZZED(mat3(75.31, 4.1, -2.5, -521.806, -73.76, -5.4, -7074.4471, -354.577, -795.222)) : true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0))), 0.0, 0.0))))))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), (sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 0.0))), sqrt(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec4(-1.1, 9975.3611, 586.760, -13.11), radians(vec4(-7550.7883, -324.805, 6.1, 60.80)))) : 1.0)), 1.0, 1.0, 0.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))) - 0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))).x > injectionSwitch.y), true, true, true)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) ? _GLF_FUZZED(ldexp(4.6, 87416)) : mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), float(mat2(1.0, 1.0, 0.0, 1.0)))), bool(true))))), 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / cos(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0)))))), (false ? _GLF_FUZZED(exp(-72.64)) : float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(cos(0.0), cos(tan(0.0)) * (cos(0.0)))), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0))))))))), 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), transpose(transpose(_GLF_IDENTITY(true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)), (false ? _GLF_FUZZED(mat3(75.31, 4.1, -2.5, -521.806, -73.76, -5.4, -7074.4471, -354.577, -795.222)) : true ? mat3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(11.26, -96.47, 9122.0896, 49.37, 0.4, 4431.7732, -8149.9414, 6786.7835, -919.428)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0))), 0.0, 0.0))))))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), (sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 0.0))), sqrt(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), (vec4(1.0, 1.0, 1.0, 0.0)) * mat4(1.0)), max(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec4(-1.1, 9975.3611, 586.760, -13.11), radians(vec4(-7550.7883, -324.805, 6.1, 60.80)))) : 1.0)), 1.0, 1.0, 0.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))) - 0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)))).x > injectionSwitch.y), true, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-66.53)), vec2(_GLF_FUZZED(-5.0), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * _GLF_IDENTITY((0), ((0)) / 1))))))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * (0))))))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)) : _GLF_FUZZED(462.465)))), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))))))))) : _GLF_FUZZED(mat2(48.83, 5.7, 731.237, 273.538)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (_GLF_IDENTITY(1 * (0), (1 * (0)) << 0))))))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * (0))))))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))) : _GLF_FUZZED(mat2(48.83, 5.7, 731.237, 273.538)))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (_GLF_IDENTITY(1 * (0), clamp(1 * (0), 1 * (0), 1 * (0))))))))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * (0))))))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))) : _GLF_FUZZED(mat2(48.83, 5.7, 731.237, 273.538)))))))))) : _GLF_FUZZED(vec2(6039.1007, -253.613))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * _GLF_IDENTITY((0), ((0)) / 1))))))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * (0))))))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)) : _GLF_FUZZED(462.465)))), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))))))))) : _GLF_FUZZED(mat2(48.83, 5.7, 731.237, 273.538)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (_GLF_IDENTITY(1 * (0), (1 * (0)) << 0))))))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * (0))))))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))) : _GLF_FUZZED(mat2(48.83, 5.7, 731.237, 273.538)))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (_GLF_IDENTITY(1 * (0), clamp(1 * (0), 1 * (0), 1 * (0))))))))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (1 * (0))))))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0))) : _GLF_FUZZED(mat2(48.83, 5.7, 731.237, 273.538)))))))))) : _GLF_FUZZED(vec2(6039.1007, -253.613))))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-644.064)))))), false, true, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_5(_GLF_struct_3(mat4x2(1.0)), _GLF_IDENTITY(true, ! (! (true))), gl_WorkGroupID.x, ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1))), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | _GLF_IDENTITY(0, 0 | (0))))))), 0 ^ (1)))) << 0), ((1) | (_GLF_IDENTITY(1, 0 ^ (1)))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-43891), (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-43891), (true ? 0 : _GLF_FUZZED(-43891)) | (true ? 0 : _GLF_FUZZED(-43891)))) | 0)))))), _GLF_struct_4(mat4x2(_GLF_IDENTITY(1.0, float(vec2(1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (mat2(0.0, 0.0, 1.0, 0.0)) * mat2(1.0)))))))))), uvec4(1u), ivec2(1), mat4x2(1.0))), _GLF_struct_10(mat2x3(1.0), _GLF_struct_6(mat2x3(1.0), uvec4(1u), vec4(1.0), uvec2(1u), uvec2(1u)), vec3(1.0), _GLF_struct_7(mat3x2(1.0), mat4(1.0)), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(50.74) : injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(50.74) : injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))))))), (injectionSwitch.y) - tan(0.0)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(50.74) : injectionSwitch.y)), (injectionSwitch.y) - tan(0.0)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false))), false))))))), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-4.3, -42.98, -448.547, 52.77)))), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat2(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), ivec3(1), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u)))), _GLF_struct_9(vec2(1.0), bvec4(true)), bvec4(true)), vec3(1.0), _GLF_struct_12(_GLF_struct_11(1, bvec2(true), uvec2(1u), ivec3(1), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(_GLF_FUZZED(9.5)), float((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), bool(true)))) / 1.0), 1.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, sqrt(1.0), 0.0)), (false ? _GLF_FUZZED(reflect(-376.126, -44.32)) : _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(_GLF_FUZZED(9.5)), float((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), bool(true)))) / 1.0), 1.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, sqrt(1.0), 0.0)), (float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(_GLF_FUZZED(9.5)), float((_GLF_IDENTITY(1.0, max(1.0, 1.0)))), bool(true)))) / 1.0), 1.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, sqrt(1.0), 0.0))) / 1.0)))) + _GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(89.38))), mix(float(_GLF_FUZZED(-39.28)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-97.90)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) + _GLF_IDENTITY(0.0, 0.0 + (0.0)))), bool(true)))) / abs(1.0)))), mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), bvec3(true), mat4x3(1.0), mat3x2(1.0)), 1.0, mat3x4(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0)))), _GLF_struct_14(_GLF_struct_13(ivec4(1), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u))) | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1u, 1u))), (0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-5122.3497)), 1.0 * ((true ? 1.0 : _GLF_FUZZED(-5122.3497)))))), mat4x3(1.0), uvec4(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_15._f0.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(760.048)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(760.048)), float(injectionSwitch.y), bool(true))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(760.048)), float(injectionSwitch.y), bool(true)))))))) || false), true, true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))), subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) >> 0), int(4), int(4)))), clamp(~ (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) >> 0), int(4), int(4)))), ~ (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) >> 0), int(4), int(4)))), ~ (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(4)))) >> 0), int(4), int(4))))))))), (int(int(4))) ^ 0)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u + (atomicLoad(write_val, 4, 64, 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-302.612)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) ? _GLF_FUZZED(vec2(0.3, 5.9)) : injectionSwitch), vec2(mat3x2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.3, 5.9)) : injectionSwitch), 1.0, abs(1.0), cos(0.0), 0.0)))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.3, 5.9)) : injectionSwitch), vec2(mat3x2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.3, 5.9)) : injectionSwitch), 1.0, abs(1.0), cos(0.0), 0.0)))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.3, 5.9)) : injectionSwitch), vec2(mat3x2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.3, 5.9)) : injectionSwitch), 1.0, abs(1.0), cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), (float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0))) * cos(0.0))))))).y), true)))) || false))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((false)), true && (((false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && (((false)))))), ! (! (! ((false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
