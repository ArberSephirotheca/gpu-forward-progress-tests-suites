#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.0, -824.649)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0))), float(_GLF_FUZZED(vec2(0.4, -33.21).r)), bool(false)))), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-602.272)), bool(false))), 1.0)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(asinh(2.5))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), true, true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-602.272)), bool(false))), 1.0)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(asinh(2.5))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), true, true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-602.272)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-602.272)), bool(false))) : _GLF_FUZZED(58.97))), 1.0)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(51.24), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -80.22 : 2.3))), bvec2(_GLF_IDENTITY(true, (true) || false), false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(83.41, (true ? _GLF_IDENTITY(83.41, (83.41) + 0.0) : _GLF_FUZZED(93.40))))), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(true)))) : _GLF_FUZZED(asinh(2.5))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), true, true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-10190))), bool(false)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.41)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))) && true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))) && true) || false)) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) || false)) || false))) || false, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))) && true) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(((false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY((((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)) && true) && true))) && true) || false)))))) || _GLF_IDENTITY(false, ! (! (false)))))) || false), ! (! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) || false)) || false))) || false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))))), true, true))))))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false), false, _GLF_IDENTITY(true, false || (true))))))) || false, true, true))), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) || false))))))), false), false, _GLF_IDENTITY(true, false || (true))))))) || false, true, true))), false, false))))))))))))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true && (false || (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (true && (false || (! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(! (true && (false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec3((_GLF_IDENTITY(false, (false) || false)), true, true)))))), true, true, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, mix(float(_GLF_FUZZED(418.835)), float(injectionSwitch.y), bool(true)))) - 0.0)) + 0.0)), float(_GLF_FUZZED(vec2(-748.307, 7348.2474).s)), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(418.835)), float(injectionSwitch.y), bool(true)))) - 0.0)) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-748.307, 7348.2474), (vec2(-748.307, 7348.2474)) + log(vec2(1.0, 1.0))).s)), min(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-748.307, 7348.2474), (vec2(-748.307, 7348.2474)) + log(vec2(1.0, 1.0))).s)), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-748.307, 7348.2474), (vec2(-748.307, 7348.2474)) + log(vec2(1.0, 1.0))).s)))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(418.835, max(418.835, _GLF_IDENTITY(418.835, (true ? 418.835 : _GLF_FUZZED(sin(-9644.3837)))))))), float(injectionSwitch.y), bool(true)))) - 0.0)) + 0.0)), float(_GLF_FUZZED(vec2(-748.307, 7348.2474).s)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(418.835)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))) - 0.0)) + 0.0)), float(_GLF_FUZZED(vec2(-748.307, 7348.2474).s)), bool(false))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_IDENTITY(bool(bvec4(bool(! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(bool(! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2175.5000) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 0.0, 0.0, 0.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2175.5000) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2175.5000) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2175.5000) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 0.0, 0.0, 0.0)))), (float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2175.5000) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x), clamp(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x), mix(float(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x), mix(float(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x)), float(_GLF_FUZZED(-294.892)), bool(false)))), float(_GLF_FUZZED(7812.1548)), bool(false))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x), mix(float(_GLF_FUZZED((-3.6))), float(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(696.084))), injectionSwitch.x)), bool(true)))))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) + length(vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id), 0u ^ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id), 0u ^ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))), 1u, 1u))), (~ (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(packSnorm4x8(vec4(1646.2716, 34.52, 17.69, -2463.1235))) : workgroup_id)), workgroup_id))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))), clamp(~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), ~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), ~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(123677u) : (workgroup_id))), _GLF_IDENTITY((workgroup_id), clamp(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(write_val) : (workgroup_id))), (workgroup_id), (workgroup_id))))))), workgroup_id))))))), (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) ^ 0u)), _GLF_IDENTITY(1u, (1u) | (1u)) * (~ (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(clamp(subgroup_id, 86987u, atomicAdd(write_val, workgroup_size))) : workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))))), (~ (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), _GLF_IDENTITY(clamp(~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), ~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), uint(_GLF_IDENTITY(uvec4((workgroup_id), 1u, 0u, 0u), (_GLF_IDENTITY(uvec4((workgroup_id), 1u, 0u, 0u), min(uvec4((workgroup_id), 1u, 0u, 0u), uvec4((workgroup_id), 1u, 0u, 0u)))) | (uvec4((workgroup_id), 1u, 0u, 0u))))))), workgroup_id)), ~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))), (clamp(~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), ~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), ~ (max(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), workgroup_id)))) ^ 0u))))), (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) ^ 0u)), _GLF_IDENTITY(1u, (1u) | (1u)) * (~ (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (true ? ~ (workgroup_id) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (true ? ~ (workgroup_id) : _GLF_FUZZED(subgroup_local_id)))))) : _GLF_FUZZED(write_val))))), workgroup_id))))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(clamp(subgroup_id, 86987u, atomicAdd(write_val, workgroup_size))) : workgroup_size * workgroup_id))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) - (0 & 51823))), ((_GLF_IDENTITY(64, (64) - (0 & 51823)))) ^ 0), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))) ? (64) : _GLF_FUZZED(-39394)))), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))) | (64))) >> (1 ^ 1), 0 ^ ((_GLF_IDENTITY(64, 0 | (64))) >> (1 ^ 1)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, 0 | _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec3((64), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), 1)), (int(ivec3((64), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1))) - 0)), (true ? _GLF_IDENTITY((64), ~ (~ ((64)))) : _GLF_FUZZED(92661))))), min((_GLF_IDENTITY(64, 0 | _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec3((64), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), 1)), (int(ivec3((64), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1))) - 0)), (true ? _GLF_IDENTITY((64), ~ (~ ((64)))) : _GLF_FUZZED(92661))))), (_GLF_IDENTITY(64, 0 | _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec3((64), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), 1)), (int(ivec3((64), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1))) - 0)), (true ? _GLF_IDENTITY((64), ~ (~ ((64)))) : _GLF_FUZZED(92661))))))))), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-86577) : _GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), (int(int(0))) / 1), 0 ^ (_GLF_IDENTITY(int(int(0)), (int(int(0))) / 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (0)) << 0, 0 ^ (_GLF_IDENTITY((~ (0)) << _GLF_IDENTITY(0, (0) | (0)), ((~ (0)) << 0) - _GLF_IDENTITY(0, ~ (~ (0)))))), int(ivec4(_GLF_IDENTITY((~ (0)) << 0, 0 ^ (_GLF_IDENTITY((~ (0)) << 0, ((~ (0)) << 0) - _GLF_IDENTITY(0, ~ (~ (0)))))), 0, 0, 1))))))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(17374) : 0))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), _GLF_IDENTITY(~ (0), (~ (0)) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))) << 0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + 0)))), ((~ _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-45395) : 1)), 1)) * ((0))), ((0)) + 0))))) ^ 0) << 0, ((~ (0)) << 0) - 0))))))) >> 0, ((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(17374) : 0))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), _GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)), ((~ (0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))) << 0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) + 0)))), ((~ _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-45395) : 1)), 1)) * ((0))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-45395) : 1)), 1)) * ((0))))), ((0)) + 0))))) ^ 0) << 0, ((~ (0)) << 0) - 0))))))) >> 0) + 0)) ^ 0)));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
