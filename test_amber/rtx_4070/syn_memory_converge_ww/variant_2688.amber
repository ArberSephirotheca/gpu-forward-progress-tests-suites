#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), false, true, true))))), true, false, false)))))
  barrier();
 uvec3 GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.2)))), float(_GLF_FUZZED(6065.1645)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id.z = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), vec2(_GLF_FUZZED(-57.55), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat4x3(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), vec2(_GLF_FUZZED(-57.55), (injectionSwitch)[1]), bvec2(false, true)), sqrt(1.0), 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, cos(0.0), 0.0)))).y) || false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(5.6) : injectionSwitch.x, (false ? _GLF_FUZZED(5.6) : injectionSwitch.x) / 1.0))))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true, true)), ! (! (bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true, true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(263.169)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true && (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, false || (true)), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), false || ((false))))), bool(bvec3(! (! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), false || ((false))))), bool(bvec3(! (! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0)))).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.1)), bool(false))))) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true)) || false))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0)))), min(float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0)))), float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(_GLF_IDENTITY(-2006.4964, max(_GLF_IDENTITY(-2006.4964, float(vec2(-2006.4964, 0.0))), -2006.4964)))), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9308.4203 * 61.15)), _GLF_FUZZED(262.238)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9308.4203 * 61.15)), _GLF_FUZZED(262.238)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.3, 1.7)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) - vec2(0.0, 0.0)))).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4530.6062, min(_GLF_IDENTITY(-4530.6062, clamp(-4530.6062, -4530.6062, -4530.6062)), _GLF_IDENTITY(-4530.6062, float(_GLF_IDENTITY(vec2(-4530.6062, 1.0), (vec2(-4530.6062, 1.0)) / vec2(1.0, 1.0))))))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x)) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true)) || false))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0)))), min(float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0)))), float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(_GLF_IDENTITY(-2006.4964, max(_GLF_IDENTITY(-2006.4964, float(vec2(-2006.4964, 0.0))), -2006.4964)))), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9308.4203 * 61.15)), _GLF_FUZZED(262.238)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9308.4203 * 61.15)), _GLF_FUZZED(262.238)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.3, 1.7)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) - vec2(0.0, 0.0)))).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4530.6062, min(_GLF_IDENTITY(-4530.6062, clamp(-4530.6062, -4530.6062, -4530.6062)), _GLF_IDENTITY(-4530.6062, float(_GLF_IDENTITY(vec2(-4530.6062, 1.0), (vec2(-4530.6062, 1.0)) / vec2(1.0, 1.0))))))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x)) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * exp(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(_GLF_IDENTITY(false, true && (false)), false))).x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true)) || false))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true)) || false))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true)) || false))))))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, exp(0.0), 0.0, 1.0))))))))))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) && true)))))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0)))), min(float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0)))), float(vec3(injectionSwitch.x, 0.0, sqrt(log(1.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-85.15))))).y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(_GLF_IDENTITY(-2006.4964, max(_GLF_IDENTITY(-2006.4964, float(vec2(-2006.4964, 0.0))), -2006.4964)))), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4530.6062) : injectionSwitch.x)) > injectionSwitch.y)) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9308.4203 * 61.15)), _GLF_FUZZED(262.238)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))), injectionSwitch.y))))))).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9308.4203 * 61.15)), _GLF_FUZZED(262.238)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.3, 1.7)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) - vec2(0.0, 0.0)))).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4530.6062, min(_GLF_IDENTITY(-4530.6062, clamp(-4530.6062, -4530.6062, -4530.6062)), _GLF_IDENTITY(-4530.6062, float(_GLF_IDENTITY(vec2(-4530.6062, 1.0), (vec2(-4530.6062, 1.0)) / vec2(1.0, 1.0))))))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x)) > injectionSwitch.y)) && true))))), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4530.6062, min(_GLF_IDENTITY(-4530.6062, clamp(-4530.6062, -4530.6062, -4530.6062)), _GLF_IDENTITY(-4530.6062, float(_GLF_IDENTITY(vec2(-4530.6062, 1.0), (vec2(-4530.6062, 1.0)) / vec2(1.0, 1.0))))))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x)) > injectionSwitch.y)) && true))))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-882.263), _GLF_FUZZED(-2006.4964)), bvec2(false, false))).x > injectionSwitch.y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4530.6062, min(_GLF_IDENTITY(-4530.6062, clamp(-4530.6062, -4530.6062, -4530.6062)), _GLF_IDENTITY(-4530.6062, float(_GLF_IDENTITY(vec2(-4530.6062, 1.0), (vec2(-4530.6062, 1.0)) / vec2(1.0, 1.0))))))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x)) > injectionSwitch.y)) && true))))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)), (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)), (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z)), 0u + (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)), (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z))))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z, (true ? _GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z : _GLF_FUZZED(153513u))), (_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z) | (_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))))), uint(5u)))), max(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(uvec4(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u))), (_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u + (5u)))))), uvec2(uvec4(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))) * uvec2(1u, 1u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), max(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), min((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), uvec2(uvec4(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))))), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), max(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(uvec4(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), max(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(uvec4(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))))), min(uint(_GLF_IDENTITY(uvec2(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> 0u))), max(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(uvec4(uvec2(subgroup_size, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) << 0u)) | (_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u)))))), max(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(uvec4(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z * subgroup_size, min(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z * subgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) ^ uvec3(0u, 0u, 0u)).z * subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id.y = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, max(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).y + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec4(injectionSwitch, 0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-67.55)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3247.9372)), bool(false))) < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(vec2(-0.0, 6.8), vec2(_GLF_IDENTITY(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(4907.4873)), bool(false)))) * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(vec2(-0.0, 6.8), vec2(_GLF_IDENTITY(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-0.0, mix(float(-0.0), float(_GLF_FUZZED(73.97)), bool(false))), 6.8), vec2(_GLF_IDENTITY(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), 1.0 * ((true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(vec2(-0.0, 6.8), vec2(_GLF_IDENTITY(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) * vec3(1.0, 1.0, 1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(1.6, 45.83, -1173.1701, -2.5, 3541.4276, 14.27, -8.2, -6.3)) : mat4x2(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(vec2(-0.0, 6.8), vec2(_GLF_IDENTITY(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY((1.0) / 1.0, (true ? (1.0) / 1.0 : _GLF_FUZZED(-4.7)))), float(_GLF_FUZZED(-437.866)), bool(false)))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), 1.0 * ((true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(vec2(-0.0, 6.8), vec2(_GLF_IDENTITY(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(_GLF_IDENTITY(mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (mat4(mat4x3(vec2(-0.0, 6.8), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.9)), float(0.0), bool(true))), 1.0, 1.0, 1.0)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true))
    barrier();
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) | 0), 4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(((77135 / -4793) ^ -15976)) : (4))) * (1 ^ (-14015 & 0))))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), true && (bool(_GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))))) || false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, min(write_val, write_val)), 4, 64, _GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id.x = read_val;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 0.0, 1.0))) > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), true))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat2x4(mat3x4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))).x)) > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) && true))), true && (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) && true))))))))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) && true)))) || false)))) || false)))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true)))), false, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, false, false))) && true))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) ^ 0u)) >> 0u)), ((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) ^ 0u)) >> 0u))) << 0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> 0u)) >> 0u, ~ (~ ((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id), ((false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)) | uvec3(0u, 0u, 0u))).x)), (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> 0u)) >> 0u)))) : _GLF_FUZZED((write_val % 59235u))))) >> 0u) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : _GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(uvec3(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)))), max((false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : _GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(uvec3(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)))), (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : _GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(uvec3(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id))))))).x)), _GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))), (_GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, 1u * (0u))), _GLF_IDENTITY((0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, 1u * (0u))), 0u + (0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), ((0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, 1u * (0u))), 0u + (0u ^ (_GLF_IDENTITY(0u, 1u * (0u))))))) | 0u))), 0u | ((uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u))))))) / 1u))) >> 0u)), ((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id[0], GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id[1], GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id[2]))) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)), (true ? uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, uvec3(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id[0], GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id[1], GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id[2]))) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))), (_GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))), 0u | ((uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id) : GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id)).x))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u))))))) / 1u))) >> 0u))) ^ 0u) * _GLF_IDENTITY(1u, (1u) - uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-8829.8723, -9186.7390)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), false, false))))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
