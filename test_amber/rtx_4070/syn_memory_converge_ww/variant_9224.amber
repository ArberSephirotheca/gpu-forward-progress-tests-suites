#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_51 {
 mat4x3 _f0;
} ;

struct _GLF_struct_50 {
 bvec3 _f0;
 mat4 _f1;
 bvec2 _f2;
 int _f3;
 mat2x3 _f4;
 mat2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_52 {
 _GLF_struct_50 _f0;
 _GLF_struct_51 _f1;
 bool _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_48 {
 mat4 _f0;
} ;

struct _GLF_struct_47 {
 bvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_46 {
 bvec4 _f0;
 bvec3 _f1;
 mat3 _f2;
 bvec4 _f3;
 ivec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_49 {
 _GLF_struct_46 _f0;
 uint _f1;
 bvec4 _f2;
 _GLF_struct_47 _f3;
 _GLF_struct_48 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_45 {
 mat2x4 _f0;
} ;

struct _GLF_struct_53 {
 _GLF_struct_45 _f0;
 uint read_val;
 _GLF_struct_49 _f1;
 bvec3 _f2;
 _GLF_struct_52 _f3;
} ;

struct _GLF_struct_42 {
 vec3 _f0;
} ;

struct _GLF_struct_41 {
 int _f0;
 vec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_40 {
 mat3x4 _f0;
} ;

struct _GLF_struct_39 {
 bvec2 _f0;
 bvec3 _f1;
 uvec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_43 {
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 uint workgroup_id;
 _GLF_struct_41 _f2;
 _GLF_struct_42 _f3;
 mat4 _f4;
 mat4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_44 {
 _GLF_struct_43 _f0;
} ;

struct _GLF_struct_37 {
 vec2 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_35 {
 uvec2 _f0;
 mat3x4 _f1;
 uint _f2;
} ;

struct _GLF_struct_36 {
 vec4 _f0;
 _GLF_struct_35 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_33 {
 ivec2 _f0;
 uint _f1;
 mat4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_32 {
 mat2x4 _f0;
 float _f1;
 vec3 _f2;
 ivec3 _f3;
 uvec3 _f4;
 bvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_34 {
 _GLF_struct_32 _f0;
 _GLF_struct_33 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_38 {
 _GLF_struct_34 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
 uint _f3;
 mat4x3 _f4;
 mat2x4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 mat4x3 _f1;
 vec3 _f2;
 mat4x2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_30 {
 mat2x3 _f0;
 uvec4 _f1;
 uvec4 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
} ;

struct _GLF_struct_25 {
 mat2 _f0;
 bvec2 _f1;
 uint subgroup_base;
 bvec2 _f2;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
} ;

struct _GLF_struct_21 {
 uint _f0;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 vec3 _f1;
 int _f2;
 bool _f3;
 bool _f4;
 vec2 _f5;
 float _f6;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 mat3x4 _f1;
 uint _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 mat2 _f1;
 vec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_21 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_31 {
 _GLF_struct_22 _f0;
 _GLF_struct_24 _f1;
 uvec3 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_27 _f4;
 _GLF_struct_30 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 uint _f3;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 mat3 _f1;
 mat2x3 _f2;
 mat4 _f3;
 mat3 _f4;
 bvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 mat4x3 _f3;
 uint _f4;
 mat2x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 uint workgroup_base;
 _GLF_struct_14 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 uvec2 _f3;
 mat2x4 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 _GLF_struct_9 _f1;
 uint virtual_gid;
 _GLF_struct_10 _f2;
 ivec4 _f3;
 vec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 uvec4 _f3;
 vec2 _f4;
 ivec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat3 _f1;
 vec3 _f2;
 uint num_workgroup;
 mat4x3 _f3;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 vec2 _f1;
 ivec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec4 _f2;
 _GLF_struct_2 _f3;
 uvec3 _f4;
 mat2x3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 _GLF_struct_4 _f1;
 float _f2;
 mat2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id;
 uvec4 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.z = _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-79097))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_34(_GLF_struct_32(mat2x4(1.0), 1.0, vec3(1.0), ivec3(1), uvec3(1u), bvec4(true), uvec3(1u)), _GLF_struct_33(ivec2(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(1u, 1u * (1u)), mat4(1.0), mat4(1.0)), mat2(1.0)), _GLF_struct_36(vec4(1.0), _GLF_struct_35(uvec2(1u), mat3x4(1.0), 1u), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))), _GLF_struct_37(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.8)), bool(false)))), gl_SubgroupSize));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), false || (! (_GLF_WRAPPED_IF_FALSE(false)))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false, true))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.8, 7.2)))), vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true && (true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)) && true))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) + 0) | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((+ 1.2))), _GLF_FUZZED((false ? -513.433 : 3290.0864))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), (false ? _GLF_FUZZED(vec3(-895.069, -5698.2437, 50.68)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))) : _GLF_FUZZED(vec3(-9190.0597, 9.0, 4.6))))))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), (false ? _GLF_FUZZED(vec3(-895.069, -5698.2437, 50.68)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))))))))), ((vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), (false ? _GLF_FUZZED(vec3(-895.069, -5698.2437, 50.68)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0)))))))))) / vec2(1.0, 1.0))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(11.77), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(5.0)), bool(false))))), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0)))))))))), mix(vec2((vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(5.0)), bool(false))))), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0)))))))))))[0], _GLF_FUZZED(714.890)), vec2(_GLF_FUZZED(379.850), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(5.0)), bool(false))))), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), min(_GLF_IDENTITY(vec3(-895.069, -5698.2437, 50.68), _GLF_IDENTITY(mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)), mix(vec3((mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[0], (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[1], _GLF_FUZZED(170.981)), vec3(_GLF_FUZZED(242.245), _GLF_FUZZED(8.3), (mat3(1.0) * (vec3(-895.069, -5698.2437, 50.68)))[2]), bvec3(false, false, true)))), vec3(-895.069, -5698.2437, 50.68)))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 1.0)))))))))))[1]), bvec2(false, true))))[1]), bvec2(false, true))))[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false))))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), true, false)), (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false)))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.6))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0), ! (! ((_injected_loop_counter > 0)))) || _GLF_IDENTITY(false, ! (! (false))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) >> 0))
          {
           GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z = GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.w;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)) && true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false), true))))))))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, bool(bool(true)))))))), false || (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), (true ? vec3(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec3(2.1, _GLF_IDENTITY(5.0, (5.0) - 0.0), -7.4), mix(vec3(_GLF_FUZZED(float((-64929))), (vec3(2.1, _GLF_IDENTITY(5.0, (5.0) - 0.0), -7.4))[1], _GLF_FUZZED(float(true))), vec3((vec3(_GLF_IDENTITY(2.1, (2.1) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(5.0, (5.0) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(5.0, (5.0) - 0.0), (_GLF_IDENTITY(5.0, (5.0) - 0.0)) * 1.0)) / 1.0), -7.4))[0], _GLF_FUZZED(-180.873), _GLF_IDENTITY((vec3(2.1, _GLF_IDENTITY(5.0, (5.0) - 0.0), -7.4)), min((vec3(2.1, _GLF_IDENTITY(5.0, (5.0) - 0.0), -7.4)), _GLF_IDENTITY((vec3(2.1, _GLF_IDENTITY(5.0, (5.0) - 0.0), -7.4)), vec3(mat3x4((vec3(2.1, _GLF_IDENTITY(5.0, (5.0) - 0.0), -7.4)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0)))))[2]), bvec3(true, false, true)))))), _GLF_struct_4(_GLF_struct_0(mat3(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.0) : 1.0))), clamp(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.0) : 1.0))), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-7.0) : 1.0))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-7.0) : 1.0), mix(float((false ? _GLF_FUZZED(-7.0) : 1.0)), float(_GLF_FUZZED(-4.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) / ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(2), _GLF_IDENTITY(ivec2(2), ivec2(1, 1) * (ivec2(2))))) >> _GLF_IDENTITY(ivec2(2), ivec2(2)))), mat4(1.0)), _GLF_struct_1(uvec2(1u), mat3(1.0), vec3(1.0), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(100530u, 82194u, 126458u)) : _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u), (true ? uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u) : _GLF_FUZZED(uvec3(181282u, 8904u, 158639u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u)))), _GLF_IDENTITY(1u, min(1u, 1u))))))), _GLF_IDENTITY(uvec3(uvec4((_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), 1u)), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), 1u), (uvec4((_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), 1u)) | uvec4(0u, 0u, 0u, 0u))), uvec3(uvec4((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), 1u))), uvec3(uvec3(min(uvec3(uvec4((_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), 1u)), uvec3(uvec4((_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), 1u))))))))), (false ? _GLF_FUZZED((uvec3(109230u, 4699u, 148622u) % uvec3(69310u, 52153u, _GLF_IDENTITY(183420u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(183420u, 0u + (_GLF_IDENTITY(183420u, (183420u) - 0u)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), max(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))) ^ (uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(usubBorrow(write_val, (70278u + 33881u), write_val)))), 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u), min(_GLF_IDENTITY((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u), ((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u), clamp((uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u)))))))))) / uvec3(1u, 1u, 1u)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_NumWorkGroups))))))))), (uvec3(uvec3(gl_NumWorkGroups))) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) * uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))))))).x, mat4x3(1.0)), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), _GLF_struct_2(uvec3(1u)), uvec3(_GLF_IDENTITY(1u, (1u) * 1u)), mat2x3(1.0), _GLF_struct_3(bvec3(true), _GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(144961u, 93879u)) : uvec2(1u))), mat4x3(1.0), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(1u))), uvec4(1u))), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.2, mix(float(1.2), _GLF_IDENTITY(float(_GLF_FUZZED(-817.529)), (false ? _GLF_FUZZED(atan(-5967.3056)) : float(_GLF_FUZZED(-817.529)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true))))))), ivec2(1), bvec2(true))), 1.0, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED((mat3x2(-2.9, -0.3, -17.44, -756.234, -7.7, 5.0) * mat2x3(26.86, 4240.3953, -3.8, -5.7, 4612.3120, 1845.4688))))))), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(15.92, 0.0 + (15.92)), _GLF_IDENTITY(_GLF_IDENTITY(18.35, 1.0 * (18.35)), clamp(18.35, _GLF_IDENTITY(18.35, (true ? 18.35 : _GLF_FUZZED(3.3))), 18.35)), -88.93, -2.1)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, sin(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 1.0, 1.0, exp(0.0)), (mat4(1.0, 0.0, sin(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), sin(0.0), 1.0, 1.0, exp(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mat2(mat2(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)))) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-33703 & 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).y) / 1.0)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), min(int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(_GLF_struct_43(_GLF_struct_39(bvec2(true), bvec3(true), uvec3(1u), uvec2(1u)), _GLF_struct_40(mat3x4(1.0)), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(uvec3(~ (gl_WorkGroupID.x), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u))))), _GLF_struct_41(1, vec3(1.0), mat4x2(1.0)), _GLF_struct_42(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(-8.0)), vec3(_GLF_FUZZED(-6.5), _GLF_FUZZED((- -5402.6038)), (vec3(1.0))[2]), bvec3(false, false, true))), min(vec3(1.0), vec3(1.0)))), mat4(1.0), mat4(1.0), vec2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), true, false)))))))
      barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sin(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w = _GLF_IDENTITY(_GLF_struct_replacement_44._f0.workgroup_id, clamp(_GLF_struct_replacement_44._f0.workgroup_id, _GLF_struct_replacement_44._f0.workgroup_id, _GLF_struct_replacement_44._f0.workgroup_id));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, sin(0.0), abs(1.0)))))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, sin(0.0), abs(1.0)))))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-154.054), _GLF_FUZZED(70.65)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter --)
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(_GLF_struct_12(uvec4(1u), bvec4(true), mat3x2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-236.408)), bool(false)))))), mat4x3(1.0), 1u, mat2x3(1.0), ivec2(1)), _GLF_struct_13(ivec3(1), mat3(1.0), mat2x3(1.0), mat4(1.0), mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), bvec2(bvec2(bvec2(true)))), mat4x2(1.0)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), uint(uvec2(uint(workgroup_size), 0u)))), (uint(_GLF_IDENTITY(uint(workgroup_size), uint(uvec2(uint(workgroup_size), 0u))))) | 0u), max(uint(_GLF_IDENTITY(uint(workgroup_size), uint(uvec2(uint(workgroup_size), 0u)))), uint(_GLF_IDENTITY(uint(workgroup_size), uint(uvec2(uint(workgroup_size), 0u))))))) * _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w), min((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w) - 0u)) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(write_val) : uint(2u))), uint(2u)) : _GLF_FUZZED((subgroup_local_id - write_val))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w) - (1u ^ 1u))))), uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w), min((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w) - 0u)) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(write_val) : uint(2u))), uint(2u)) : _GLF_FUZZED((subgroup_local_id - write_val))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.w) - (1u ^ 1u))))), 1u, 1u, _GLF_IDENTITY(0u, (0u) + 0u))))), _GLF_struct_14(mat3x4(1.0), ivec4(1), mat3x4(1.0), 1u), vec3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_22(mat4(1.0), _GLF_struct_17(mat4x2(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), mat2(1.0) * (mat3x2(mat2(1.0))))), (mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), mat2(1.0) * (mat3x2(mat2(1.0)))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(mat3x4(mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), mat2(1.0) * (mat3x2(mat2(1.0)))))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), mat2(1.0) * (mat3x2(mat2(1.0))))), mat2(mat3x4(mat2(_GLF_IDENTITY(mat3x2(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), mat2(1.0) * (mat3x2(mat2(1.0)))))))))))), _GLF_IDENTITY(vec3(1.0), vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-66.98)), bool(false))), 1.0) * (vec3(1.0))), ivec3(1)), _GLF_struct_18(vec2(1.0), mat3x4(1.0), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / (1u | 0u))), ivec3(1)), _GLF_struct_19(_GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, max(1, 1)))) - ivec2(0, 0)), vec4(1.0), mat4x2(1.0), mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(_GLF_IDENTITY(mat3x2(transpose(mat2(1.0))), (false ? _GLF_FUZZED(mat3x2(_GLF_IDENTITY(-279.921, max(-279.921, -279.921)), _GLF_IDENTITY(-535.495, (-535.495) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), -28.41, 1608.2730, 3.9, -5386.4746)) : mat3x2(transpose(mat2(1.0))))))), _GLF_IDENTITY(mat2(mat2x3(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), _GLF_IDENTITY(mat2(mat4(mat2(mat2x3(transpose(mat2(1.0)))))), mat2(mat4(mat2(mat4(mat2(mat2x3(transpose(mat2(1.0)))))))))))))), _GLF_struct_20(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(true), false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))))), vec3(1.0), 1, true, true, vec2(1.0), 1.0), _GLF_struct_21(1u), mat3x2(1.0)), _GLF_struct_24(_GLF_struct_23(mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), float(vec3(float(vec2(1.0, 0.0)), 1.0, 1.0))))) * 1.0)))), uvec3(1u), _GLF_struct_25(mat2(1.0), bvec2(true), GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_38._f2.subgroup_size, bvec2(true)), _GLF_struct_27(_GLF_struct_26(mat4(1.0))), _GLF_struct_30(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.0)), float(1.0), _GLF_IDENTITY(bool(true), false || (bool(true)))))), uvec4(1u), uvec4(1u), _GLF_struct_28(mat2(1.0), mat4x3(1.0), vec3(1.0), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_29(mat2x3(1.0), mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1u, mat4x3(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (true ? (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) * 1.0)))))) : _GLF_FUZZED(mat2(2.0, _GLF_IDENTITY(-891.255, max(-891.255, -891.255)), -4.5, 584.389)))) * mat2(1.0))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(46473u, 142140u, 94477u)) : uvec3(1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 + (_GLF_IDENTITY(1, max(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((0 | 0) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false)))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), true), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), true), false, false))), false, true)))))))), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0)))));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, length(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec4(int(4), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0) ^ (0)), 1)), (int(ivec4(int(4), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0, 1))) | 0)))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.y = _GLF_struct_replacement_31._f3.subgroup_base;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))) / 1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-527.189), _GLF_FUZZED(-3.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y = GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.y;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3874.8309) : 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (true ? _GLF_IDENTITY(float(0.0), float(mat4(float(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))) : _GLF_FUZZED(6.7))), float(_GLF_FUZZED(-4587.4393)), bool(false))))), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3874.8309) : 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (true ? _GLF_IDENTITY(float(0.0), float(mat4(float(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))) : _GLF_FUZZED(6.7))), float(_GLF_FUZZED(-4587.4393)), bool(false)))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, abs(1.0), 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x3(injectionSwitch.y, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, true)))))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, false))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || false)), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || false)))))), true, false)))) || false))))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), 0u | (_GLF_IDENTITY(1u, 0u + (1u))))))), _GLF_struct_9(mat3x4(1.0), _GLF_struct_6(uvec3(1u)), _GLF_struct_7(mat4(1.0), bvec4(true)), uvec2(1u), mat2x4(1.0), _GLF_struct_8(mat2x4(1.0), bvec3(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16._f0.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, _GLF_IDENTITY((GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y))) - 0u), clamp(_GLF_struct_replacement_16._f0.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y) - 0u), _GLF_struct_replacement_16._f0.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y) - 0u), _GLF_IDENTITY(_GLF_struct_replacement_16._f0.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y) - 0u), 0u ^ (_GLF_struct_replacement_16._f0.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, clamp(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y))) - 0u))))) + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z, min(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z, _GLF_IDENTITY((GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z) ^ 0u, ((GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z) ^ 0u) | (0u ^ 0u))), GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_16._f0.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, _GLF_IDENTITY((GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y), ((GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y)) >> 0u) - 0u), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_16._f0.workgroup_base, (_GLF_struct_replacement_16._f0.workgroup_base) | 0u) + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.y) - 0u), 0u))) + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.z, 1u))), _GLF_struct_10(uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(1, 1)))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(1), (int(1)) ^ 0), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(int(1), (int(1)) ^ 0), 0, 1))))))))))), vec2(1.0), mat2x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), false)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_struct_replacement_11.virtual_gid), min(uint(_GLF_struct_replacement_11.virtual_gid), _GLF_IDENTITY(uint(_GLF_struct_replacement_11.virtual_gid), (uint(_GLF_struct_replacement_11.virtual_gid)) - 0u))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (1 ^ 1))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_53 _GLF_struct_replacement_53 = _GLF_struct_53(_GLF_struct_45(mat2x4(1.0)), atomicLoad(write_val, 4, 64, 0), _GLF_struct_49(_GLF_struct_46(bvec4(true), bvec3(true), mat3(1.0), bvec4(true), ivec2(1), mat4x2(1.0)), 1u, bvec4(true), _GLF_struct_47(bvec2(true), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-3.8)), bool(false))))), _GLF_struct_48(mat4(1.0)), vec2(1.0)), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), _GLF_struct_52(_GLF_struct_50(bvec3(true), mat4(1.0), bvec2(true), 1, mat2x3(1.0), mat2(1.0), bvec2(true)), _GLF_struct_51(mat4x3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false)))))), mat2x3(1.0)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0), (mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))))))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))))))))))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x = _GLF_struct_replacement_53.read_val;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), true), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)))) || false))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(0, (0) | 0))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-28.30) : injectionSwitch[1])))).y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), _GLF_IDENTITY((clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u, (_GLF_IDENTITY((clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u, max(_GLF_IDENTITY((clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u, max((clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u, (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u)), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u))) << 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))))), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id)).x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), 1u))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)))), (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, ~ (~ (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x))), GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x))))))) ^ 0u), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id, max(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id)))))).x)))), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x))) >> 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x), (clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x)) >> 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(write_val))) : clamp(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_17read_valsubgroup_basesubgroup_idsubgroup_local_id.x))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   buf[_GLF_struct_replacement_11.virtual_gid] = uint(subgroupAllEqual(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_12read_valsubgroup_basesubgroup_local_idworkgroup_id.x));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), (bool(bvec2((false), false))) && true)), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(log(sign(injectionSwitch))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
