#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_70 {
 mat3x4 _f0;
 vec4 _f1;
 ivec4 _f2;
 int _f3;
 ivec3 _f4;
 bvec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_69 {
 bvec2 _f0;
 mat4 _f1;
 mat2x3 _f2;
 mat4 _f3;
 bvec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_68 {
 mat4x3 _f0;
} ;

struct _GLF_struct_71 {
 _GLF_struct_68 _f0;
 vec2 _f1;
 _GLF_struct_69 _f2;
 _GLF_struct_70 _f3;
 bool _f4;
} ;

struct _GLF_struct_66 {
 mat3x4 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_65 {
 mat2x3 _f0;
 ivec4 _f1;
 vec2 _f2;
 vec2 _f3;
 mat3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_64 {
 vec4 _f0;
 vec3 _f1;
 ivec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_63 {
 uint _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_62 {
 mat4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_67 {
 _GLF_struct_62 _f0;
 _GLF_struct_63 _f1;
 mat3x4 _f2;
 _GLF_struct_64 _f3;
 _GLF_struct_65 _f4;
 _GLF_struct_66 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_60 {
 ivec4 _f0;
 uvec2 _f1;
 uint _f2;
 ivec3 _f3;
 uint workgroup_id;
 mat2x4 _f4;
 uint _f5;
} ;

struct _GLF_struct_59 {
 bvec2 _f0;
} ;

struct _GLF_struct_61 {
 _GLF_struct_59 _f0;
 vec4 _f1;
 mat3x2 _f2;
 _GLF_struct_60 _f3;
 vec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_72 {
 bvec3 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 _GLF_struct_61 _f3;
 _GLF_struct_67 _f4;
 _GLF_struct_71 _f5;
} ;

struct _GLF_struct_56 {
 uint _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_57 {
 vec3 _f0;
 mat2 _f1;
 mat2 _f2;
 _GLF_struct_56 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_54 {
 uvec4 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 int _f3;
 int _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_53 {
 bvec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_55 {
 bvec3 _f0;
 uvec3 _f1;
 _GLF_struct_53 _f2;
 _GLF_struct_54 _f3;
 mat4 _f4;
 float _f5;
} ;

struct _GLF_struct_51 {
 bvec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_50 {
 bool _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_52 {
 mat3 _f0;
 _GLF_struct_50 _f1;
 uvec3 _f2;
 _GLF_struct_51 _f3;
} ;

struct _GLF_struct_48 {
 mat2 _f0;
} ;

struct _GLF_struct_47 {
 uvec2 _f0;
 bvec2 _f1;
 vec2 _f2;
 float _f3;
 uvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_46 {
 uvec3 _f0;
} ;

struct _GLF_struct_45 {
 ivec4 _f0;
} ;

struct _GLF_struct_49 {
 _GLF_struct_45 _f0;
 _GLF_struct_46 _f1;
 _GLF_struct_47 _f2;
 _GLF_struct_48 _f3;
 bvec4 _f4;
 vec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_58 {
 _GLF_struct_49 _f0;
 mat4x3 _f1;
 ivec3 _f2;
 _GLF_struct_52 _f3;
 _GLF_struct_55 _f4;
 _GLF_struct_57 _f5;
} ;

struct _GLF_struct_42 {
 mat2x3 _f0;
 uvec3 _f1;
 float _f2;
 uint _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_41 {
 mat4 _f0;
 mat3x2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_40 {
 mat2x3 _f0;
} ;

struct _GLF_struct_39 {
 vec3 _f0;
 mat4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_43 {
 ivec2 _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_40 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 _GLF_struct_41 _f5;
 _GLF_struct_42 _f6;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
 ivec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_38 {
 mat2 _f0;
 ivec3 _f1;
 _GLF_struct_37 _f2;
} ;

struct _GLF_struct_44 {
 uvec2 _f0;
 uvec4 _f1;
 _GLF_struct_38 _f2;
 _GLF_struct_43 _f3;
 uint num_workgroup;
 mat4 _f4;
 mat2x4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_34 {
 mat4x2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_33 {
 float _f0;
 bvec2 _f1;
 vec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_35 {
 uvec3 _f0;
 _GLF_struct_33 _f1;
 _GLF_struct_34 _f2;
} ;

struct _GLF_struct_31 {
 mat4x2 _f0;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
 mat4x2 _f1;
 vec3 _f2;
 mat4x3 _f3;
 ivec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
 int _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
 uvec4 _f4;
 bool _f5;
} ;

struct _GLF_struct_36 {
 bool _f0;
 uvec4 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_35 _f3;
 uint subgroup_size;
 bvec3 _f4;
} ;

struct _GLF_struct_27 {
 bool _f0;
 ivec4 _f1;
 float _f2;
 bool _f3;
 mat4x2 _f4;
 mat2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_26 {
 bvec4 _f0;
 ivec3 _f1;
 vec4 _f2;
 uvec2 _f3;
 mat4 _f4;
 bvec4 _f5;
 float _f6;
} ;

struct _GLF_struct_25 {
 int _f0;
 mat2x4 _f1;
 vec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_28 {
 vec4 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
} ;

struct _GLF_struct_23 {
 uvec2 _f0;
 mat2x3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_22 {
 mat2x3 _f0;
 mat3 _f1;
 ivec2 _f2;
 int _f3;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
} ;

struct _GLF_struct_20 {
 float _f0;
 mat4x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_24 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
} ;

struct _GLF_struct_17 {
 bool _f0;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 mat4 _f1;
 uvec3 _f2;
 vec3 _f3;
 uvec2 _f4;
 int _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_29 {
 vec3 _f0;
 _GLF_struct_18 _f1;
 uint subgroup_id;
 _GLF_struct_24 _f2;
 mat2x3 _f3;
 _GLF_struct_28 _f4;
 int _f5;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid;
 bvec2 _f1;
} ;

struct _GLF_struct_15 {
 int _f0;
 _GLF_struct_14 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 bvec2 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 bool _f1;
 bvec2 _f2;
 mat2x4 _f3;
 uvec4 _f4;
 mat2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 uvec4 _f1;
 mat3 _f2;
 mat2 _f3;
 ivec3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 mat2x4 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 ivec4 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat3 _f1;
 ivec4 _f2;
 uvec2 _f3;
 float _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat2x4 _f1;
 float _f2;
 mat2x4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 vec2 _f3;
 ivec3 _f4;
 ivec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_1 {
 bool _f0;
 vec3 _f1;
 bool _f2;
 uvec4 _f3;
 ivec2 _f4;
 uvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_2 {
 bool _f0;
 float _f1;
 _GLF_struct_1 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_2 _f2;
 uint subgroup_local_id;
 mat2x3 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 _GLF_struct_15 _GLF_struct_replacement_15;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(vec3(1.0), _GLF_struct_18(_GLF_struct_16(mat3x4(1.0), mat4(1.0), uvec3(1u), vec3(1.0), uvec2(1u), 1, ivec4(1)), _GLF_struct_17(true), uvec2(1u)), gl_SubgroupID, _GLF_struct_24(_GLF_struct_19(mat3x2(1.0), bvec2(true)), _GLF_struct_20(1.0, mat4x2(1.0), uvec3(1u)), _GLF_struct_21(bvec2(true)), _GLF_struct_22(mat2x3(1.0), mat3(1.0), ivec2(1), 1), _GLF_struct_23(uvec2(1u), mat2x3(1.0), vec3(1.0))), mat2x3(1.0), _GLF_struct_28(vec4(1.0), _GLF_struct_25(1, mat2x4(1.0), vec2(1.0), mat3(1.0)), _GLF_struct_26(bvec4(true), ivec3(1), vec4(1.0), uvec2(1u), mat4(1.0), bvec4(true), 1.0), _GLF_struct_27(true, ivec4(1), 1.0, true, mat4x2(1.0), mat2(1.0), uvec4(1u))), 1);
 _GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y = _GLF_struct_replacement_29.subgroup_id;
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(true, uvec4(1u), _GLF_struct_32(uvec4(1u), 1, _GLF_struct_30(bvec4(true), mat4x2(1.0), vec3(1.0), mat4x3(1.0), ivec4(1), uvec3(1u)), _GLF_struct_31(mat4x2(1.0)), uvec4(1u), true), _GLF_struct_35(uvec3(1u), _GLF_struct_33(1.0, bvec2(true), vec2(1.0), 1u), _GLF_struct_34(mat4x2(1.0), bvec3(true))), gl_SubgroupSize, bvec3(true));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(vec2(1.0), _GLF_struct_0(uvec2(1u)), _GLF_struct_2(true, 1.0, _GLF_struct_1(true, vec3(1.0), true, uvec4(1u), ivec2(1), uvec3(1u), mat4(1.0)), vec2(1.0)), gl_SubgroupInvocationID, mat2x3(1.0), _GLF_struct_6(_GLF_struct_3(mat4x2(1.0), uvec2(1u), ivec3(1), vec2(1.0), ivec3(1), ivec3(1), mat4x2(1.0)), _GLF_struct_4(vec4(1.0), mat2x4(1.0), 1.0, mat2x4(1.0), uvec3(1u)), _GLF_struct_5(uvec4(1u), mat3(1.0), ivec4(1), uvec2(1u), 1.0, bvec4(true))), _GLF_struct_12(_GLF_struct_7(bvec3(true), uvec4(1u), mat3(1.0), mat2(1.0), ivec3(1), mat2x3(1.0)), _GLF_struct_8(mat2x3(1.0), bvec2(true)), mat2x4(1.0), _GLF_struct_9(mat3x2(1.0), true, bvec2(true), mat2x4(1.0), uvec4(1u), mat2(1.0), bvec4(true)), _GLF_struct_10(mat4(1.0), bvec2(true), mat3x4(1.0), mat2x3(1.0), mat2x3(1.0), uvec2(1u)), ivec4(1), _GLF_struct_11(mat4x2(1.0), mat2x4(1.0), mat3x2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(uvec2(1u), uvec4(1u), _GLF_struct_38(mat2(1.0), ivec3(1), _GLF_struct_37(uvec4(1u), ivec3(1), ivec4(1))), _GLF_struct_43(ivec2(1), _GLF_struct_39(vec3(1.0), mat4(1.0), mat3x2(1.0)), _GLF_struct_40(mat2x3(1.0)), mat3x4(1.0), mat2x3(1.0), _GLF_struct_41(mat4(1.0), mat3x2(1.0), vec3(1.0)), _GLF_struct_42(mat2x3(1.0), uvec3(1u), 1.0, 1u, ivec4(1))), gl_NumWorkGroups.x, mat4(1.0), mat2x4(1.0), bvec4(true));
 _GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.x = _GLF_struct_replacement_44.num_workgroup;
 _GLF_struct_58 _GLF_struct_replacement_58 = _GLF_struct_58(_GLF_struct_49(_GLF_struct_45(ivec4(1)), _GLF_struct_46(uvec3(1u)), _GLF_struct_47(uvec2(1u), bvec2(true), vec2(1.0), 1.0, uvec2(1u), uvec3(1u)), _GLF_struct_48(mat2(1.0)), bvec4(true), vec3(1.0), uvec3(1u)), mat4x3(1.0), ivec3(1), _GLF_struct_52(mat3(1.0), _GLF_struct_50(true, bvec4(true)), uvec3(1u), _GLF_struct_51(bvec3(true), vec3(1.0))), _GLF_struct_55(bvec3(true), uvec3(1u), _GLF_struct_53(bvec3(true), mat4x3(1.0)), _GLF_struct_54(uvec4(1u), mat3x2(1.0), bvec4(true), 1, 1, vec3(1.0), 1.0), mat4(1.0), 1.0), _GLF_struct_57(vec3(1.0), mat2(1.0), mat2(1.0), _GLF_struct_56(1u, gl_WorkGroupSize.x), bvec4(true)));
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = _GLF_struct_replacement_58._f5._f3.workgroup_size;
 _GLF_struct_72 _GLF_struct_replacement_72 = _GLF_struct_72(bvec3(true), mat2x3(1.0), mat3x4(1.0), _GLF_struct_61(_GLF_struct_59(bvec2(true)), vec4(1.0), mat3x2(1.0), _GLF_struct_60(ivec4(1), uvec2(1u), 1u, ivec3(1), gl_WorkGroupID.x, mat2x4(1.0), 1u), vec4(1.0), vec3(1.0)), _GLF_struct_67(_GLF_struct_62(mat4(1.0), mat3(1.0)), _GLF_struct_63(1u, ivec3(1)), mat3x4(1.0), _GLF_struct_64(vec4(1.0), vec3(1.0), ivec3(1), mat3x4(1.0)), _GLF_struct_65(mat2x3(1.0), ivec4(1), vec2(1.0), vec2(1.0), mat3(1.0), ivec3(1)), _GLF_struct_66(mat3x4(1.0), mat2x4(1.0), mat3x2(1.0)), mat3x4(1.0)), _GLF_struct_71(_GLF_struct_68(mat4x3(1.0)), vec2(1.0), _GLF_struct_69(bvec2(true), mat4(1.0), mat2x3(1.0), mat4(1.0), bvec2(true), mat2x3(1.0)), _GLF_struct_70(mat3x4(1.0), vec4(1.0), ivec4(1), 1, ivec3(1), bvec4(true), ivec3(1)), true));
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * _GLF_struct_replacement_72._f3._f3.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y * _GLF_struct_replacement_36.subgroup_size + _GLF_struct_replacement_13.subgroup_local_id;
 _GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y * _GLF_struct_replacement_36.subgroup_size + ((_GLF_struct_replacement_13.subgroup_local_id + 1) % _GLF_struct_replacement_36.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z], 4, 64, 0);
 if(_GLF_struct_replacement_13.subgroup_local_id + 1 < _GLF_struct_replacement_36.subgroup_size)
  {
   int i = 0;
   atomicStore(checker[_GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_15._f1.GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z], read, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
