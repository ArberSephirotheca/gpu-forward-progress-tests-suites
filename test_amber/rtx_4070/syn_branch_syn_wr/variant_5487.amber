#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, true)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true))))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), max(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u))).x, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u))).x, 0u, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))))), true && (bool(bvec3(false, false, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(156.844)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / 1u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / 1u), (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u)), _GLF_IDENTITY((uint(uvec3(uint(6u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))), ((uint(uvec3(uint(6u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u)))) | ((uint(uvec3(uint(6u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))) | 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) / 1u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y))) + log(1.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_base))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) : _GLF_FUZZED(((workgroup_id ^ subgroup_id) / 176228u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - tan(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.5)), float(1.0), bool(true))), injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)))), 0u, 0u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))))) + uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + uvec2(0u, 0u)))), 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)))), 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u)) + uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 0.0, cos(log(1.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 0.0, cos(log(1.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))))) + uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u))), 0u))))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))))))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0), (mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0))), (true ? float(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(644.598) : 0.0)), 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) + 0.0))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0), (mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-961.189)))), 1.0, 1.0, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 0.0, length(sin(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0)))))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), min(uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (float(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) - 0.0)), injectionSwitch.y))))), uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(387.791)), bool(false)))), float(_GLF_FUZZED(376.335)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-789.199)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), max(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132267u, 71413u)) : uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4628.6417)), bool(false))), injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(_GLF_IDENTITY(1.0, 0.0 + (1.0))))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0), (mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0), (mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(743.803)))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-961.189)))), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), 1.0)), 0.0, length(sin(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)))))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))) + 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false))), 0.0)))))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0)))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), ~ (~ (subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0 + (1.0)), 1.0)), 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(7.4)), bool(false))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | _GLF_IDENTITY(0u, 0u | (0u)))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(max(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | uvec2(0u, 0u)))), max(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), 0.0, 1.0, exp(0.0), 0.0, 1.0, sin(0.0), 0.0), (false ? _GLF_FUZZED(mat2x4(mat3(-2.2, 75.73, -3833.8792, -7.2, 902.324, 88.94, -83.71, -307.090, 1.2))) : mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), 0.0, 1.0, exp(0.0), 0.0, 1.0, sin(0.0), 0.0))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u)), uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u)))) - uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u)))))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), min(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u)))), uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), uint(uvec4(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(2.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(2.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uvec2(0u, 0u))) - uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(2.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> (uvec2(0u, 0u) | uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u))))) << 0u))), uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1u, 0u, 0u))))) >> _GLF_IDENTITY(0u, (0u) | 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true))) || false))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, abs(1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch, abs(1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))).x, (false ? _GLF_FUZZED(63.28) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, abs(1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch, abs(1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))).x)) > injectionSwitch.y), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-94.95, 2222.1797, -5.2, 9952.5002, -5.0, -1401.0495, 7.2, 5580.6420)) : mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-94.95, 2222.1797, -5.2, 9952.5002, -5.0, -1401.0495, 7.2, 5580.6420)) : mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-94.95, 2222.1797, -5.2, 9952.5002, -5.0, -1401.0495, 7.2, 5580.6420)) : mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-94.95, 2222.1797, -5.2, 9952.5002, -5.0, -1401.0495, 7.2, 5580.6420)) : mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) - vec2(0.0, 0.0)).x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.6) : injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false, true, false)))))))))))))) && true)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.6) : injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true)))), false, false, true)))) || false))), ! (! (bool(false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(false))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(false))))))) && true)), ! (! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(false))))))) && true)))))) && true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.6) : injectionSwitch.y))))))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (4) << 0))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (0 & int(157500u)) ^ (4)), 1, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) * 1), (_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0)))), (ivec4(4, _GLF_IDENTITY(1, (1) << 0), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1)), int(ivec4((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1)), (0 >> _GLF_IDENTITY(int(4), int(4))), 0, 1)))))) | (ivec4(4, 1, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1)))), (_GLF_IDENTITY(ivec4(4, 1, 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1)))), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1))))))) ^ ivec4(0, 0, 0, 0)), (ivec4(4, 1, 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) * 1))))) | (ivec4(4, 1, 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) * 1, int(ivec4((int(6)) * 1, 0, 0, 1))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) * 1, int(ivec4((int(6)) * 1, 0, 0, 1)))))) / 1))))))) >> 0)), 4))), ((_GLF_IDENTITY(4, min(4, 4)))) - 0) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(53674) : 4)))), 0 ^ (4)), 4), clamp(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, 0 ^ (4)), 4), (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), max(int(4), int(4))))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(83186) : 0)) ^ (4)), 4)) ^ 0), clamp(4, _GLF_IDENTITY(4, 0 ^ (4)), 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, 0 ^ (4)), 4), 0 | (clamp(4, _GLF_IDENTITY(4, 0 ^ (4)), 4)))))), min(4, 4))) << _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))), 0, 0, 1))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), ~ (~ _GLF_IDENTITY((min(4, 4)), int(int((min(4, 4))))))))) << 0, 0, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(90006))), 1))), ivec3(0, 0, 0) | (ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((min(4, 4)), int(int((min(4, 4)))))), ~ (~ (~ (~ _GLF_IDENTITY((min(4, 4)), int(int((min(4, 4)))))))))))) << 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-68112))), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, (false ? _GLF_FUZZED(78371) : (_GLF_IDENTITY(4, min(4, 4))) << 0))) << 0), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, (0) << 0), 0, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(min(4, 4), (min(4, 4)) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(min(4, 4), (min(4, 4)) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0)))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), max((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 1 * (_GLF_IDENTITY(1, max(1, 1)))))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))))) ^ 0))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, (0) << 0), 0, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(1 * (1), (1 * (1)) << 0)) - 0)) ^ 0)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), max((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), clamp(_GLF_IDENTITY(min(4, 4), max(min(4, 4), min(4, 4))), min(4, 4), min(4, 4))))) << 0, 0, 1))))))) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, (0) << 0), 0, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4)), clamp(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4)))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1)))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) ^ 0), min(4, 4))) << 0, 0, 1))))) / 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))), min((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4)))))) | 0) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-76746))))), 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))))) ^ 0))), ((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, (0) << 0), 0, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0) | ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0))) ^ (0 | 0)), 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), max((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))))) ^ 0)))) * 1), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, (0) << 0), 0, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), max((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))))) ^ 0), 1 * (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, (0) << 0), 0, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1)))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))) - (0 >> _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 4))) << 0, 0, 1)), max(int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, 1 * (1)))), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))))) ^ 0)))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, _GLF_IDENTITY(1, min(1, 1))))))), (((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) - 0), 4))) << 0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, 0 ^ ((_GLF_IDENTITY(4, min(4, 4))) << 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, 0 ^ ((_GLF_IDENTITY(4, min(4, 4))) << 0))) ^ 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) << ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)) | (0), (_GLF_IDENTITY((0), ((0)) << ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)) | (0)) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) << ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)) | (0), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(((0)), (false ? _GLF_FUZZED(77035) : ((0)))) << ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)) | (0)) / 1)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) << ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)) | (0), (_GLF_IDENTITY((0), ((0)) << ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)) | (0)) / 1)))))))), 1))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1)))) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1)))))))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(((_GLF_IDENTITY(4, min(4, 4)))) ^ 0, (_GLF_IDENTITY(((_GLF_IDENTITY(4, min(4, 4)))) ^ 0, (_GLF_IDENTITY(((_GLF_IDENTITY(4, min(4, 4)))) ^ 0, int(ivec3(((_GLF_IDENTITY(4, min(4, 4)))) ^ 0, 1, 1)))) >> 0)) + (0 & 223)))) * 1))) << 0, 0, 1), clamp(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), clamp((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4)))))) ^ 0)) * 1))) << 0, 0, _GLF_IDENTITY(1, 0 ^ (1))), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | 0))), ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(59433) : 4)), 4)))) ^ 0)) * 1))) << 0, _GLF_IDENTITY(0, (0) ^ 0), 1), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(int(8), int(8))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), 4))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(int(4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), max((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4)))))) ^ 0)) * 1))) << 0, 0, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, (false ? _GLF_FUZZED(-54219) : (_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, clamp(0, 0, 0))))) - 0), int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1)))) - 0)), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4))))) << 0, 0, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) - 0))))), (false ? _GLF_FUZZED(85361) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << 0, 0, 1))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4)), max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0))) >> (0 & 18396))), ((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0)))) ^ (0 << _GLF_IDENTITY(int(7), int(7))))) / 1)), 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, max(0, 0)), 0, 1)))), ((_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4)), max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0))) >> (0 & 18396))), ((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, max(4, 4))))) << 0)))) ^ (0 << _GLF_IDENTITY(int(7), int(7))))) / 1)), 4))) << 0, int(ivec3((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, max(0, 0)), 0, 1))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) - _GLF_IDENTITY(0, (0) << 0)))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0)), (int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0))) >> 0)) << 0, 0, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0)), (int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0))) >> 0)) << 0, 0, 1)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0)), (int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0))) >> 0)) << 0, 0, 1))))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0)), (int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0))) >> 0)) << 0, 0, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0)), (int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0))) >> 0)) << 0, 0, 1)), int(ivec3(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0)), (int(ivec3((_GLF_IDENTITY(4, min(4, 4))), 0, 0))) >> 0)) << 0, 0, 1)), 0, 0)))) - 0))))))))) << (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6)))))))) >> (0 | _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0)), min(0, 0)))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), ((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0, min((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), (0 | 0) ^ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + 0) + 0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), _GLF_IDENTITY(64, int(ivec3(64, 1, 1))))), (0 | 0) ^ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + 0) + 0), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), (0 | 0) ^ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + 0) + 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(ivec3(64, 1, 1)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), (0 | 0) ^ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + 0) + 0), min(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), (0 | 0) ^ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + 0) + 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))), 0 | ((_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), (0 | 0) ^ (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))))) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) ^ 0)))) >> 0)) + 0)))))))), clamp(64, 64, 64)))) >> 0) | (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | 0))), _GLF_IDENTITY((_GLF_IDENTITY((64), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), (64) | (64))) | (64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), ~ (~ (int(ivec3(64, 1, 1))))))) + 0), clamp(64, 64, 64)))) >> 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(66662) : 0, min(false ? _GLF_FUZZED(66662) : 0, _GLF_IDENTITY(false ? _GLF_FUZZED(66662) : 0, max(false ? _GLF_FUZZED(66662) : 0, false ? _GLF_FUZZED(66662) : 0)))))) | 0)), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY((64), ((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0), _GLF_IDENTITY(clamp(64, 64, 64), int(ivec2(clamp(64, 64, 64), 0)))))) >> 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(66662) : 0)) | 0), (true ? _GLF_IDENTITY((64), ((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) * 1))), 1, 1)))) + 0), clamp(64, 64, 64)))) >> 0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(66662) : 0)) | 0) : _GLF_FUZZED(22450)))), 1, 0))) | (_GLF_IDENTITY((64), ((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 1, 1)))) + 0), clamp(_GLF_IDENTITY(64, (64) / 1), 64, 64)))) >> 0) | (0 | 0)))), 0);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | 0)) | (_GLF_IDENTITY((1), ((1)) ^ 0)))) / ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | 0)) | (_GLF_IDENTITY((1), ((1)) ^ 0)))) / ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))))), (true ? (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | 0)) | (_GLF_IDENTITY((1), ((1)) ^ 0)))) / ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))))) : _GLF_FUZZED(-3080))), (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | 0)) | (_GLF_IDENTITY((1), ((1)) ^ 0)))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-25931))), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))))))) < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | 0))), (1) | (1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), 0u ^ _GLF_IDENTITY((uint(uint(subgroup_size))), ((uint(uint(subgroup_size)))) | ((uint(uint(subgroup_size)))))), uint(uvec3(uint(uint(subgroup_size)), (1u ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uint(1u))), 1u))), 1u)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(680.680, -49.49, -570.075, -2.6, -0.2, -99.87, 3053.8940, -0.0, -2.5, _GLF_IDENTITY(-122.364, mix(float(_GLF_FUZZED(vec2(0.4, 94.04).g)), float(_GLF_IDENTITY(-122.364, max(-122.364, -122.364))), bool(true))), -66.04, -578.617)))))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(45.02, 762.553)))), (false ? _GLF_FUZZED(mix(vec2(-12.01, 7.4), vec2(35.74, -6818.8633), 3.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(45.02, 762.553)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(45.02, 762.553)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(45.02, 762.553)))), (false ? _GLF_FUZZED(mix(vec2(-12.01, 7.4), vec2(35.74, -6818.8633), 3.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(45.02, 762.553)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(45.02, 762.553)))))))).x) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ _GLF_IDENTITY(-903.482, clamp(-903.482, _GLF_IDENTITY(-903.482, (_GLF_IDENTITY(-903.482, (-903.482) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), -903.482))))), bvec2(true, false)))[0], injectionSwitch[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) ^ (1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) ^ (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) ^ (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) ^ (1))))) | 0)))])).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(false, ! (! (false))), true))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(bool(bool(bvec2(false, false))), true && (bool(bool(bvec2(false, false))))))))))), (bool(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (false) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))), true && (_GLF_IDENTITY(false, (false) && true))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y), true))) && true))), false))))))))))), false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))) && true)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)).y)))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4((vec4(injectionSwitch, 0.0, 1.0))[0], (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(mat2x3(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch, 0.0, 1.0))), 1.0, 1.0))))[1], (vec4(injectionSwitch, 0.0, 1.0))[2], (vec4(injectionSwitch, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-114.461), _GLF_FUZZED(-154.532), _GLF_FUZZED(-39.89), _GLF_FUZZED(-3.1)), bvec4(false, false, false, false))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (false), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
