#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) ^ (0 | 0)), 0))], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false)))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))))).x)) >> _GLF_IDENTITY(0u, 0u | (0u))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true))) && true), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, true))) && true)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.8)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(3.7)), bool(false))), _GLF_IDENTITY(exp(0.0), float(_GLF_IDENTITY(mat4x3(exp(0.0), 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0), (mat4x3(exp(0.0), 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))))), log(cos(0.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(injectionSwitch, _GLF_IDENTITY(log(1.0), float(mat2x4(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(9.1))), 1.0, 1.0, 1.0, exp(sqrt(0.0)), 0.0, 0.0, 0.0))), 1.0, 0.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0, 1.0, exp(0.0), log(cos(0.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat4(injectionSwitch, log(1.0), 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, exp(0.0), log(cos(0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)) || false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y)))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x) : _GLF_FUZZED(-6341.4749)))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y)) || false, false || (((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y)) || false)))) && true)), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y)) && true)))), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7939.7910) : injectionSwitch.x)) > injectionSwitch.y)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (! (bool(bvec3(true, false, false))))))) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) : _GLF_FUZZED(_GLF_IDENTITY(9366.4239, (_GLF_IDENTITY(9366.4239, max(9366.4239, _GLF_IDENTITY(9366.4239, (9366.4239) + 0.0)))) / 1.0)))))) > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), clamp((false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (false ? _GLF_FUZZED(mat3(9.4, -740.299, 97.19, 4539.3102, 9603.4727, 630.640, -970.737, -8699.9551, -47.92)) : mat3(_GLF_IDENTITY((false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), clamp((false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3157.1175) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))) && true))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) * 1u)), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))) ^ 0u)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(63217u)))) | (0u))))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))), max((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, 1u * (0u))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), (_GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), 1u, 1u), (uvec3(clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), 1u, 1u), (uvec3(clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), 1u, 1u)) | uvec3(0u, 0u, 0u)))))))) | (clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)), 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) | 0u)) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))))))), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) << 0u)))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | (clamp(0u, 0u, 0u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(0u, 0u, 0u)))))))))))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))), (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))) | (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | 0u))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), clamp((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | (clamp(0u, 0u, 0u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(0u, 0u, 0u)))))))))))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))), (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))) | (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | 0u))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), clamp((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | (clamp(0u, 0u, 0u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(0u, 0u, 0u)))))))))))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))), (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))) | (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | 0u))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), clamp((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | (clamp(0u, 0u, 0u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(0u, 0u, 0u)))))))))))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))), (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))) | (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | 0u))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), clamp((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | (clamp(0u, 0u, 0u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(0u, 0u, 0u)))))))))))) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))), (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))) | (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | 0u))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), clamp((~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u)))) << 0u))))))))))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 1u * (uint(1)))) | (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 652.099 : -2422.2727))), vec2(_GLF_FUZZED(-2.8), (injectionSwitch)[1]), bvec2(false, true))))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec2(bool(bvec3(true, true, false)), false))))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, (true) || false), false)))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(888.256) : injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-5.1, 5547.2639, 1.1).p)), float(injectionSwitch.y), bool(true)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-5.1, 5547.2639, 1.1).p)), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-5.1, 5547.2639, 1.1).p)), float(injectionSwitch.y), bool(true))))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), true)), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), (true) || false), true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false), false)))), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))) < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), true && (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), true && (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))))))))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(vec3(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(vec3(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(vec3(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, true)), true && (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(vec3(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(vec2(130.083, -1919.9729).x)), bool(false)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6856.6200) : injectionSwitch.y))))), ! _GLF_IDENTITY((! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7149.6092)), vec2(_GLF_FUZZED(-6.9), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) * mat2(1.0)))) : injectionSwitch)).y) - 0.0)))))), false || _GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))), bool(bvec4(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))), false, false, false)))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.y : _GLF_FUZZED(-0.5))))))), ! (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false, true && (((_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || false))))))), true && (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, false, true))))), (_GLF_IDENTITY(! ((bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY(! ((bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(! ((bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true, false, true)))))) || false)), true && (_GLF_IDENTITY(! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), ! (! (_GLF_IDENTITY(((! _GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((bool(bool((injectionSwitch.x > injectionSwitch.y)))), true))))))))))))), true && (_GLF_IDENTITY(((! _GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((bool(bool((injectionSwitch.x > injectionSwitch.y)))), true))))))))))))), (((! _GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((bool(bool((injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))) || false))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), false || ((false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) ^ 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | 0)) - 0))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-20815)))) | 0, ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-20815)))) | 0) | 0)));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
