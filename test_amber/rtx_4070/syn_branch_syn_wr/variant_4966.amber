#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))) >> 0))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || ((false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) && true))) || false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = _GLF_IDENTITY((-33487 & 0), (false ? _GLF_FUZZED(_injected_loop_counter) : (-33487 & 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec3(_injected_loop_counter != 1, false, false)), (bool(bvec3(_injected_loop_counter != 1, false, false))) && true))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0)))))))) && true); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (! (true && (_GLF_WRAPPED_IF_TRUE(true)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  {
   do
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 1)) & 1)); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, log(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))) - 0.0) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x)))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(22522) : int(0)))) | (int(0)))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            break;
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), (_GLF_IDENTITY(0u, (0u) << 0u)) >> 0u)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u & 86636u)) * subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), 1u, 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, 0u ^ ((uint(subgroup_id * subgroup_size)) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u, max(0u, 0u)) ^ ((uint(subgroup_id * subgroup_size)) << 0u)))) * 1u))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, 0u ^ ((uint(subgroup_id * subgroup_size)) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u, max(0u, 0u)) ^ ((uint(subgroup_id * subgroup_size)) << 0u)))) * 1u)))) | 0u), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, ~ (_GLF_IDENTITY(~ ((uint(subgroup_id * subgroup_size)) << 0u), max(~ ((uint(subgroup_id * subgroup_size)) << 0u), ~ ((uint(subgroup_id * subgroup_size)) << 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), ~ (~ (uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) * 1u) * subgroup_size)))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u, max(0u, 0u)) ^ ((uint(subgroup_id * subgroup_size)) << 0u)))) * 1u)))) | 0u))), _GLF_IDENTITY(min(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (subgroup_id) << 0u) * subgroup_size))), min(min(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (0u | 0u))))))), min(uint(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) | (subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) | (uint(subgroup_id)))) / 1u), (uint(subgroup_id)) - 0u)))) << 0u) * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, uint(uvec2((subgroup_id) * 1u, 1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) / 1u), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, 0u ^ ((uint(subgroup_id * subgroup_size)) << 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, 0u ^ ((uint(subgroup_id * subgroup_size)) << 0u)), min(_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, 0u ^ ((uint(subgroup_id * subgroup_size)) << 0u)), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, 0u ^ ((uint(subgroup_id * subgroup_size)) << 0u))))))))))), min(uint(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | ((1u & 1u) ^ _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) | (subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)))) + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), 0u)), (uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), 0u))) * 1u)) ^ 0u)), (subgroup_local_id + 1)), (clamp(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)))) + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) | ((subgroup_local_id + 1)), uint(uvec4(((subgroup_local_id + 1)) | ((subgroup_local_id + 1)), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 0u)))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))) | ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))), 0u)), (uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)) | ((subgroup_local_id + 1))), 0u))) * 1u)) ^ 0u)), (subgroup_local_id + 1))) / 1u)) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, ~ (~ ((uint(subgroup_id * subgroup_size)) << 0u)))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), (uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ _GLF_IDENTITY(((uint(subgroup_id * subgroup_size)) << 0u), (((uint(subgroup_id * subgroup_size)) << 0u)) >> 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1229.0165)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))))))))))), (true ? ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, ~ (~ ((uint(subgroup_id * subgroup_size)) << 0u)))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? (uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(uvec4(5861u, 170494u, 12664u, 126750u)))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ _GLF_IDENTITY(((uint(subgroup_id * subgroup_size)) << 0u), (((uint(subgroup_id * subgroup_size)) << 0u)) >> 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1229.0165)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))))))))))) : _GLF_FUZZED(20120u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) * 1u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u ^ ((uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << (1u ^ 1u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, ~ (~ ((uint(subgroup_id * subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - tan(abs(0.0)))), bool(true))))), (uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), min(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), 0u + (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ _GLF_IDENTITY(((uint(subgroup_id * subgroup_size)) << 0u), (((uint(subgroup_id * subgroup_size)) << 0u)) >> 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1229.0165), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(-1229.0165), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)), min(float(mat3(_GLF_FUZZED(-1229.0165), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)), float(mat3(_GLF_FUZZED(-1229.0165), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))))))))))), (_GLF_IDENTITY(true ? ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, ~ (_GLF_IDENTITY(~ ((uint(subgroup_id * subgroup_size)) << 0u), (true ? _GLF_IDENTITY(~ ((uint(subgroup_id * subgroup_size)) << 0u), max(~ ((uint(subgroup_id * subgroup_size)) << 0u), ~ ((uint(subgroup_id * subgroup_size)) << 0u))) : _GLF_FUZZED(workgroup_base)))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), max(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) - 0u)))) << 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.81), _GLF_FUZZED(3735.0729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.81), _GLF_FUZZED(3735.0729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.81), _GLF_FUZZED(3735.0729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 1.0, 1.0)), min(float(mat2(0.0, 0.0, 1.0, 1.0)), float(mat2(0.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, exp(0.0), 0.0, 1.0))), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? (uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) << 0u)))) ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7771.9059)), float(injectionSwitch.x), bool(true))))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(uvec4(5861u, 170494u, 12664u, 126750u)))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)) | 0u), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-41.62) : 0.0)))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)), uint(uint((uint(subgroup_id * subgroup_size))))) << 0u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ _GLF_IDENTITY(((uint(subgroup_id * subgroup_size)) << 0u), (((uint(subgroup_id * subgroup_size)) << 0u)) >> 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1229.0165)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))))))))))) : _GLF_FUZZED(20120u), (true ? ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, _GLF_IDENTITY(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) << 0u, ~ (_GLF_IDENTITY(~ ((uint(subgroup_id * subgroup_size)) << 0u), (true ? _GLF_IDENTITY(~ ((uint(subgroup_id * subgroup_size)) << 0u), max(~ ((uint(subgroup_id * subgroup_size)) << 0u), ~ ((uint(subgroup_id * subgroup_size)) << 0u))) : _GLF_FUZZED(workgroup_base)))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), max(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)) - 0u)))) << 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.81), _GLF_FUZZED(3735.0729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.81), _GLF_FUZZED(3735.0729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.81), _GLF_FUZZED(3735.0729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 1.0, 1.0)), min(float(mat2(0.0, 0.0, 1.0, 1.0)), float(mat2(0.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, exp(0.0), 0.0, 1.0))), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? (uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) << 0u)))) ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7771.9059)), float(injectionSwitch.x), bool(true))))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(uvec4(5861u, 170494u, 12664u, 126750u)))), _GLF_IDENTITY((uvec4(0u ^ ((uint(subgroup_id * subgroup_size)) << 0u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)) | 0u), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-41.62) : 0.0)))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((uvec4(0u ^ (_GLF_IDENTITY((uint(subgroup_id * subgroup_size)), uint(uint((uint(subgroup_id * subgroup_size))))) << 0u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)))) << 0u), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u ^ _GLF_IDENTITY(((uint(subgroup_id * subgroup_size)) << 0u), (((uint(subgroup_id * subgroup_size)) << 0u)) >> 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1229.0165)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))))))))))) : _GLF_FUZZED(20120u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u))), min(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8400.6879) : injectionSwitch.x))) + 0.0))), 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))), (_GLF_IDENTITY(uvec4(uint(subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (false ? _GLF_FUZZED(uvec4(194903u, 193405u, 53310u, 93285u)) : uvec4(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1u, _GLF_IDENTITY(0u, max(0u, 0u)))))) | (uvec4(uint(subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)))) / 1u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(ivec3(-57058, 47242, -34102)[0]))), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-12931))), (4) ^ _GLF_IDENTITY(0, ~ (~ (0))))), 0 + (1 * _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), ((_GLF_IDENTITY(4, (4) << 0))) | 0), (_GLF_IDENTITY(4, (4) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), (0 ^ 0) + ((_GLF_IDENTITY(4, (4) << 0)))))) ^ 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-53312) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) | (_GLF_IDENTITY(4, (4) << 0)))) ^ 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) ^ 0))))))), 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, true)))))
          break;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(vec4(-1611.3759, -5.8, -8.4, 3142.4922))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0)))))), (true ? float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-53.11)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x))), bool(true)))))), 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), max(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-3641.4704)))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-1.9) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-1.9) : injectionSwitch.y, false ? _GLF_FUZZED(-1.9) : injectionSwitch.y, false ? _GLF_FUZZED(-1.9) : injectionSwitch.y))), _GLF_IDENTITY(((false ? _GLF_FUZZED(-1.9) : injectionSwitch.y)), (_GLF_IDENTITY(((false ? _GLF_FUZZED(-1.9) : injectionSwitch.y)), (true ? ((false ? _GLF_FUZZED(-1.9) : injectionSwitch.y)) : _GLF_FUZZED(67.67)))) - 0.0) / determinant(mat2(1.0, 0.0, sin(0.0), 1.0)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.9) : injectionSwitch.y))))))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          break;
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))));
         for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0), _GLF_IDENTITY(0 + (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) | (int(ivec2(0, 0))))), 0)) | 0), ~ (~ ((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0))))), (0 + (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0))), ((~ ((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0)))) - 0)))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true), _GLF_IDENTITY((bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true && ((bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), (bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (false) || false)))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(true && (false), false || (true && (false))), false)))))), false || (_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(true && (false), false || (true && (false))), false)))))), bool(bvec2(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(true && (false), false || (true && (false))), false)))))), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))))) || false), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))))) || false), true, false))), (_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))), (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))))) || false), true, false)))) || false)))), _GLF_IDENTITY(bool(bool(! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), (true && (false)) || false)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(_GLF_IDENTITY(true && (false), true && (true && (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), false)))))))) || false))), (bool(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), false)))))))) || false))), (bool(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false))))))) && true), ! (! (_GLF_IDENTITY(bool(! _GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))), true)), false, false)))))), _GLF_IDENTITY(false, ! (! (false)))))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true, false))), true, true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false, false, true)))), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false, false, true))))))))))) && _GLF_IDENTITY((false), ((false)) || false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false)))))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(true, (true) || false), true))) && true)) || false)) && (false)))))))), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(true, (true) && true), true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, (true) && true))), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), false))), true, true))) && true)) || false)) && (false))))), bool(bool(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))) && true)) || false)) && (false))))), ((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))) && true)) || false)) && (false)))))) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && _GLF_IDENTITY(true, ! (! (true))))) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && _GLF_IDENTITY((false), false || ((false)))))))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), bool(bvec3(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), false, true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)))), false || (! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, _GLF_IDENTITY(true, (true) || false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, true)), false, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, true)), false, false))))), false, true)))))))))), false))), true, true))))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false))))), bool(bool((true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))), false, false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))), false, false))))), true && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))), false, false)))))))))), false))), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true)))), ((! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, false)))))), false))), true, true))))) || false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true))) && true)) || false)) && (false)))))))), _GLF_IDENTITY(false, (false) || false)), false)))))))) || false))), (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true))))))), true && (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true))))))), bool(bvec2(bool(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true))))))), true)))))) && true))))) && true)) && true))))))))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, false))));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))))) && true))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), true))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true))))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(7.4, 5745.6928, 8.1, -8348.1917)[3]) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true))))))), false), true)))))), true))) || false))))));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))) && true))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) || false))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-75.80)), bool(false)))), float(_GLF_FUZZED(-9.3)), bool(false))) < injectionSwitch.y))))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         else
          {
          }
        }
      }
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(40312)) : injectionSwitch.y))))))
    {
     do
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, false))))); _injected_loop_counter ++)
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))], _GLF_IDENTITY(read, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), max(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))))), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), max(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid)))))) * 1u))), 4, 64, 4);
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))) << 0)), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), 0 | ((1 << _GLF_IDENTITY(int(5), int(5)))))), 1 * (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), 0 | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5)))), max(((1 << _GLF_IDENTITY(int(5), int(5)))), ((1 << _GLF_IDENTITY(int(5), int(5))))))))))) >> _GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(3663))))) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), 0 | ((1 << _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))))) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (true ? ~ _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(86885)))))) * 1) > int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
