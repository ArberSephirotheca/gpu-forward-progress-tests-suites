#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-241.610) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0 : _GLF_FUZZED(807.197)))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-241.610) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-538.354 + -7.9))), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-32.15)), float(float(injectionSwitch.y)), bool(true))), bool(true))), injectionSwitch.y))) / 1.0, _GLF_IDENTITY((true ? (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0 : _GLF_FUZZED(807.197)), ((true ? (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) / 1.0 : _GLF_FUZZED(807.197))) - 0.0)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(92.37, 4.3)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), true && ((bool(true)))) || false))), injectionSwitch.y))) / 1.0)), true, true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), ! (! ((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true && (! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-886.124), clamp(_GLF_FUZZED(-886.124), _GLF_FUZZED(-886.124), _GLF_IDENTITY(_GLF_FUZZED(-886.124), (false ? _GLF_FUZZED(1.1) : _GLF_FUZZED(-886.124)))))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0, mix(float(_GLF_FUZZED((79.04 - -4.9))), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0) - 0.0)), bool(true))))))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-916.032)), bvec2(false, false))))))).y, injectionSwitch.y))))) / 1.0)), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true)))), ! (! ((! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true)))), ! (! ((! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, true), false)))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), float(_GLF_IDENTITY(mat4x3(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, cos(0.0), 1.0, 1.0)), min(float(mat3x2(_GLF_IDENTITY(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), float(_GLF_IDENTITY(mat4x3(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, cos(0.0), 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), float(_GLF_IDENTITY(mat4x3(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, cos(0.0), 1.0, 1.0)))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0, mix(float(_GLF_FUZZED(vec4(30.69, -1.5, 9227.7971, 9.0).q)), float((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0), bool(true))))), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0))))), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)))))))), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-7.6) : float(injectionSwitch.y))))), bool(_GLF_IDENTITY(true, bool(bool(true)))))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)), ! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))))))), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), false)))))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), bool(true))), injectionSwitch.y))), float(mat2x4((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(vec4(-8.0, -599.201, -0.7, 885.185).q)), float(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) : _GLF_FUZZED(-2.0))))), abs(0.0), 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), sqrt(0.0)))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0))) && true), true, true)), _GLF_IDENTITY(! (! (bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true)))), false || (! (! _GLF_IDENTITY((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((bool(bvec3(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), clamp(float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)), float(_GLF_FUZZED(-886.124)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)), true)))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) / 1.0))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-886.124)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(-886.124)) : _GLF_FUZZED(-103.948)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(-886.124)) : _GLF_FUZZED(-103.948))) - 0.0)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))), bool(true))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false)), (bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))) || false)))), injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false)), (bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))) || false)))), injectionSwitch.y))) / 1.0))) || false, _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false)), (bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))) || false)))), injectionSwitch.y))) / 1.0))) || false, true)), bool(bvec3(bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false)), (bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))) || false)))), injectionSwitch.y))) / 1.0))) || false, true)), false, true))))), true, true)), ! (! (bool(bvec3(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))))), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-886.124)), float(injectionSwitch.y), bool(true))))))), injectionSwitch.y))) / 1.0))))), true, true))))))), true, false))))))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.8))) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) * sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)), (1u) | (1u))) * 1u)) | 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)), (1u) | (1u))) * 1u)) | 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) / 1u), max(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u)) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u)) | 0u)))), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u)) | 0u)))), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u)) | 0u)))))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) / 1u), false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u)) | 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))))))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))))), false))))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (true ? max(subgroup_id * subgroup_size, subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), 0u))) + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)) | (workgroup_base + subgroup_base)) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 1u, 0u))) ^ 0u)) + subgroup_base + subgroup_local_id))) | (workgroup_base + subgroup_base + subgroup_local_id)), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), ~ (~ (uvec2(subgroup_base, 0u)))))) + subgroup_local_id))) ^ 0u), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (false ? _GLF_FUZZED(uint(false)) : workgroup_base)) + subgroup_base + subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size), ~ (~ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size)))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec2((0u) / 1u, (1u ^ 0u))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), (subgroup_local_id + 1))))) % subgroup_size), ~ (~ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size))))));
 uint read = _GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * 1)), ~ (~ (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << 0))))), min(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), int(4))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 0))))), _GLF_IDENTITY(int(4), (int(4)) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 0))))), _GLF_IDENTITY(int(4), (int(4)) | 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 0))))), _GLF_IDENTITY(int(4), (int(4)) | 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 0))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 0u, 1u, 1u)))) >> 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-56.77)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], abs(0.0) + ((injectionSwitch)[1]))), bvec2(true, true))).x)))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-56.77)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], abs(0.0) + ((injectionSwitch)[1]))), bvec2(true, true))).x)))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bool(false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true))))))))))), true), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true))))))))))), true), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, true))))))))))), true), false))))))))))), _GLF_IDENTITY(true, true && (true)), true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_IDENTITY((bool(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))))), injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((bool(false)) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) && true)), ! (! (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || ((bool(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) && true))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true), true))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), ((bool(false))) || false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, false || (false)) || (bool(false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! ((bool(false)) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (! ((bool(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-60.02)), bool(false))) > injectionSwitch.y)), false), false), bvec3(bvec3(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (injectionSwitch.y)))), false), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-60.02)), bool(false))) > injectionSwitch.y)), false), false), bvec3(bvec3(bvec3(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (injectionSwitch.y)))), false), false)))))))))))))))))))), true, true, true))), true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, false))), bool(bool(false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, false))), bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))), _GLF_IDENTITY(true, ! (! (true)))))))), true), false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true))), bool(bool(false))), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))))), true, true)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false)))))), true))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), true)))), true, _GLF_IDENTITY(true, bool(bool(true))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4861.4162), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(5842.9756)), mix(vec2(_GLF_FUZZED(7.2), _GLF_FUZZED(float(false))), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(5842.9756)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(5842.9756)))[1]), bvec2(true, true))), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), false))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || ((! (bool(bvec2(_GLF_DEAD(false), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))) << 0u)), min((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) ^ 0), (subgroup_local_id % 2) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), max(uvec2(subgroup_local_id, 0u), uvec2(subgroup_local_id, 0u)))) | (uvec2(subgroup_local_id, 0u)))) / uvec2(1u, 1u)))) % 2, (subgroup_local_id % 2) << 0u), min(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, 0 ^ (2)), 2)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, uint(_GLF_IDENTITY(uint((subgroup_local_id) * 1u), (uint((subgroup_local_id) * 1u)) + 0u)))) % 2) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), clamp(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u + (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2), 0u + (clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u + (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2)))), (subgroup_local_id % 2) << 0u)), max((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u)), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY(2, 1 * (2)))), (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, 1 * (2))))) << 0), _GLF_IDENTITY((subgroup_local_id % 2) << 0u, 1u * ((subgroup_local_id % 2) << 0u)))))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))), (subgroup_local_id % 2) << 0u)), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) | (2)), (subgroup_local_id % 2) << 0u)))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | 0)))) >> 0)) / 1), 64, 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) - 0u, min((_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) - 0u, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) - 0u))), virtual_gid))], max(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u)], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((true ? uvec3(65258u, 103897u, 29062u).p : subgroup_local_id)))), virtual_gid))])), 4, 64, 2)), _GLF_IDENTITY((_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), _GLF_IDENTITY((_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], 1u * (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], clamp(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])))), _GLF_IDENTITY(max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))]), (max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])) ^ 0u)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(908) : 4)), 64, 2)), min(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), clamp(~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))))])), 4, 64, 2))))) ^ 0u, ((_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), virtual_gid)), virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), min(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2))))) ^ 0u) >> 0u))) + 0u, 0u | ((_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), _GLF_IDENTITY((_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], 1u * (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], clamp(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])))), _GLF_IDENTITY(max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))]), (max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])) ^ 0u)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(908) : 4)), 64, 2)), min(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), clamp(~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))))])), 4, 64, 2))))) ^ 0u, ((_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), virtual_gid)), virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), min(uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2)), uint(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))])), 4, 64, 2))))) ^ 0u) >> 0u))) + 0u))), _GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 1 * (2))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), max(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), uint(uvec4(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), max(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), uint(uvec4(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))))) - 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) + (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), clamp(min(3u, 3u), _GLF_IDENTITY(min(3u, 3u), max(_GLF_IDENTITY(min(3u, 3u), min(min(3u, 3u), min(3u, 3u))), min(3u, 3u))), min(3u, 3u))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) + (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), clamp(min(3u, 3u), _GLF_IDENTITY(min(3u, 3u), max(_GLF_IDENTITY(min(3u, 3u), min(min(3u, 3u), min(3u, 3u))), min(3u, 3u))), min(3u, 3u))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) + (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), clamp(min(3u, 3u), _GLF_IDENTITY(min(3u, 3u), max(_GLF_IDENTITY(min(3u, 3u), min(min(3u, 3u), min(3u, 3u))), min(3u, 3u))), min(3u, 3u))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) + (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), clamp(min(3u, 3u), _GLF_IDENTITY(min(3u, 3u), max(_GLF_IDENTITY(min(3u, 3u), min(min(3u, 3u), min(3u, 3u))), min(3u, 3u))), min(3u, 3u))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u + (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u | (_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))) | 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u), ~ (~ (_GLF_IDENTITY((uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec3((uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u), 0u)), (uvec2(uvec3((uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u), 0u))) | (uvec2(uvec3((uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u), 0u))))))))), uvec2(_GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), 1u * (0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), (1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) / 1u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) / uvec2(1u, 1u))) | uvec2(0u, 0u))) << uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), clamp(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), _GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(uvec2(_GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))) | (0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), 0u))), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), ((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(0u | _GLF_IDENTITY((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (_GLF_IDENTITY((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))) >> 0u)) | ((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, int(ivec2(64, 0)))))), 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u))), min(_GLF_IDENTITY(uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u)))))), (1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) ^ 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u | ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec2(0u, 0u)), uvec2(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) >> 0)))), ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u | (3u))), uint(3u))) + (_GLF_IDENTITY(3u, min(3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> (uvec2(103042u, 9359u) & uvec2(0u, 0u))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))) | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))), 0u | (uint(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(ivec4(int(_GLF_IDENTITY(4, (4) | (4))), 1, 0, 0)))), 0 ^ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(ivec4(int(_GLF_IDENTITY(4, (4) | (4))), 1, 0, 0)))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(ivec4(int(_GLF_IDENTITY(4, (4) | (4))), 1, 0, 0)))), 0 ^ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(ivec4(int(_GLF_IDENTITY(4, (4) | (4))), 1, 0, 0))))))))))))) - 0), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) | (4)))), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) | (4)))), (int(int(_GLF_IDENTITY(4, (4) | (4))))) / 1) : _GLF_FUZZED(38352)))) | (int(int(_GLF_IDENTITY(4, (4) | (4)))))))) ^ (0 << _GLF_IDENTITY(int(0), int(0)))), 64, 2)))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) >> 0), 64, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), (~ (2)) << 0)) / 1))))), 0u | (_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_id))))), 4, _GLF_IDENTITY(64, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (64)), 2)), min(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))) * 1u), _GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) >> 0))), _GLF_IDENTITY((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << 0u)), uint(2u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | _GLF_IDENTITY((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), 1u * _GLF_IDENTITY((_GLF_IDENTITY((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), max((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))), ~ (~ ((_GLF_IDENTITY((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), max((uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))))))))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) * 1u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) * 1u))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) * 1u)))) / 1u))))), _GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))) | 0u)))), clamp((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, 2)))), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) + 0))), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) * 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), min(uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (0 | 0) | (64)), 2)))))), (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-20.16, -4.7, -9036.8498, 7.1))) : virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid))], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), min(uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), 4)))), 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))), uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), _GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (_GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), (0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))) >> 0u)) >> 0u)))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (0 | 0) | (64)), 2)))))) : _GLF_FUZZED(workgroup_base))), (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))))), 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64))))), 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))), clamp((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), atomicLoad(buf[virtual_gid], 4, 64, 2))), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), atomicLoad(buf[virtual_gid], 4, 64, 2)))))), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), 64, 2)))))), (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(29764) : _GLF_IDENTITY(2, (2) << 0))), 2, _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 1, 1)), min(int(ivec4(2, 1, 1, 1)), int(ivec4(2, 1, 1, 1))))))))))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))), (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0))))))) | (uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))))))))) | ((uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), _GLF_IDENTITY(0u, (0u) | (0u)) | (uint(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) | 0)))))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))), (1u ^ 1u) ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2)))))), 0u ^ ((uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), _GLF_IDENTITY(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(uint(0u | (uint(atomicLoad(buf[virtual_gid], 4, 64, 2))))))))))))))))), atomicLoad(buf[virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-76.13)), float(injectionSwitch[1]), bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))))).y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))) && true, true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), true, _GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) && true)) || false), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))), true, true, true))))))) || false)), true, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))) && true)) || false), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, tan(0.0), 1.0, sin(0.0), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)) || false), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(vec2(mat4x2(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), clamp(vec2(mat4x2(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat4x2(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat4x2(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat4x2(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))).x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false)), true, false))), true, true, false))), false))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false))), false, true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false))), false, true, true)))))), true, false)))))), ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))))) || false)), true, false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)), false)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))), false, false)))) || false)), true, false)))) || false)), true, false)))))), ! (! ((! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))))), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))))), true), bvec2(bvec4(bvec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))))), true), false, false))))) || false)), true, false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))) || false)))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, false)))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), ! (! (bool((bool(bvec3(false, false, false)))))))) || false), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bool(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bvec3((bool(bvec3(false, false, false))), true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), false || (bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))))), false || (bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))) && true))) || false))))), false)))))))))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), ! (! (bool((bool(bvec3(false, false, false)))))))) || false), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bool(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bvec3((bool(bvec3(false, false, false))), true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), false || (bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))))), false || (bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))) && true))) || false))))), false)))))))))))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool((bool(bvec3(false, false, false)))))))) || false), bool(bvec4(bool((_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))), true, false, false))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bool(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bvec3((bool(bvec3(false, false, false))), true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false))), (_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec3(false, false, false))), false || ((bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)), ! (! (bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)), ! (! (bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), false || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))), bool(bvec4(bool((bool(bvec3(false, false, false)))), true, false, false)))))), false || (bool(_GLF_IDENTITY(bool((bool(bvec3(false, false, false)))), bool(bvec4(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-66.48))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, false)), true, false, true))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), false, true)))) && true))) || false))))), false)))))))))))) && true))))) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(9908))), _GLF_IDENTITY(1, (1) / 1) * (4)), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
