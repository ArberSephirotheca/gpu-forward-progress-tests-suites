#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat2x3 _f0;
 vec3 _f1;
 vec2 _f2;
 bvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 vec3 _f1;
 uint next_virtual_gid;
 mat3 _f2;
 _GLF_struct_5 _f3;
 mat4x2 _f4;
 _GLF_struct_6 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 uvec4 _f1;
 bool _f2;
 bvec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat2x4 _f3;
 uint workgroup_id;
 ivec4 _f4;
 mat3x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 float _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_4 {
 uint _f0;
 _GLF_struct_3 _f1;
 uvec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))).x < injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1u, _GLF_struct_3(_GLF_struct_0(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(1.0)), 1.0, _GLF_struct_1(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(cos(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6.7))), 0.0)), vec2(mat4(cos(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6.7))), 0.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), determinant(mat4(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x))))) * (vec2(1.0))), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), vec2(1.0)))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (vec2(0.0, 0.0)))), ivec4(1), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))), mat2x4(1.0), gl_WorkGroupID.x, ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-85622, (_GLF_IDENTITY(-85622, ~ (~ (-85622)))) | (-85622)))))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(41209), clamp(_GLF_IDENTITY(_GLF_FUZZED(41209), 0 | (_GLF_FUZZED(41209))), _GLF_FUZZED(41209), _GLF_FUZZED(41209))))))), 1))))), mat3x2(1.0), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0))), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -3.9))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), 0.0)), 0.0, 0.0) + (mat4(1.0))))), _GLF_struct_2(ivec4(1), bvec2(true), mat3x2(1.0), uvec3(1u)), bvec4(true)), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(0.0), round(length(normalize(1.0))), sqrt(1.0), 1.0)))))), 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))))), (_GLF_IDENTITY(uvec4(1u), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) >> 0u))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(0.0), round(length(normalize(1.0))), sqrt(1.0), 1.0)))))), 1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uvec2(159175u, 186425u).x)))) * (_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u)))))) << uvec4(0u, 0u, 0u, 0u)))), uvec4(1u)))) - uvec4(0u, 0u, 0u, 0u)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4._f1._f2.workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(bvec3(true), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) - 0u), 0u))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) ? _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u ^ 1u) | (1u))) | (1u)) : _GLF_FUZZED(subgroup_size)))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(subgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) | 0u), 0u), (uvec3(subgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) | 0u), 0u)) | (uvec3(0u, 0u, 0u) & uvec3(71478u, 77629u, 134477u))))), uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ 0u)))))) : _GLF_FUZZED(virtual_gid))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size) << 0u), (_GLF_IDENTITY(1u, (1u) >> 0u) | 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (_GLF_IDENTITY(1u, max(1u, 1u)))))), (uint(uvec3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size) << 0u), uint(uvec2(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size) << 0u), 1u))), (_GLF_IDENTITY(1u, (1u) >> 0u) | 1u), 1u))) | (uint(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u), min(uvec3(subgroup_id, 1u, 0u), uvec3(subgroup_id, 1u, 0u))))) * subgroup_size) << 0u), (_GLF_IDENTITY(1u, (1u) >> 0u) | 1u), 1u)))), (uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) >> 0u)))))), min(uvec3(subgroup_id, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(142558u))), 1u, 0u))))) * subgroup_size, (1u | 1u), 1u))) | 0u)) + ((subgroup_local_id + 1) % subgroup_size), mat3(1.0), _GLF_struct_5(bvec3(true), _GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1)))) | _GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0)))), _GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED((87051 - 99481))))))))), ivec2(1)))), mat4x2(1.0), _GLF_struct_6(mat2x3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec3(1.0), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), bvec2(true), ivec4(1)), ivec3(1)), uvec4(1u), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec3(bool(bvec2(! (true), false)), false, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec3(bool(bvec2(! (true), false)), false, false))), false), false, true))))))), (bool(bool(bool(bvec2(! (true), false))))) && true))), true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (true)) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))), ! (! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))))))) && true))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true))), true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), false))))))), true)))))))) && true)) && true, false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), (_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true)), false)), true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (true)) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), _GLF_IDENTITY(false, (false) || false)), true, true))))))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))), ! (! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((true), ((true)) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))), false), true, true))))))))))))) && true))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), true)))), true)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true), false, false), true)))), true))))))) && true)))), true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), false))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true)), (_GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(_GLF_IDENTITY(bool(bvec2(! (true), false)), false || (bool(bvec2(! (true), false))))))) && true))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), _GLF_IDENTITY(false, ! (! (false)))))))) && true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false))) || false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), _GLF_IDENTITY(false, ! (! (false)))))))) && true))), true, false), false))))))), true)))))))) && true)) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), _GLF_IDENTITY(false, ! (! (false))))))), (bool(bool(bool(bvec2(! (true), false))))) && true))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (true)) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false)))))))), false, false, true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false)))))))), false, false, true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false)))))))), false, false, true))))))), true, false, false)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(! (true), false), true, true)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, true && (true))), false), bvec2(bvec4(bvec2(! (true), false), true, true))))), true && ((bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, true && (true))), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))), ! (! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))) && true))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true))), true)))), true && (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (true))), false))))) && _GLF_IDENTITY(true, false || (true))))), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(false, (false) && true)), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(false, (false) && true)), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, _GLF_IDENTITY(true, false || (true)))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (true), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), bool(bool(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))), false))))) && true, false || ((bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), false))))) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec4((true), false, false, true))), true, true, true))), true, false, true))), false))))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec4((true), false, false, true))), true, true, true))), true, false, true))), false))))) && true))), true, false), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), false))), bool(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), false))), ! (! (bool(bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), false)))))))))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), false))))))), true)))))))) && true)) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (true), false))))) && true))), true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (true)) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))), ! (! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))))))) && true))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true))), true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), false))))))), true)))))))) && true)) && true, bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), false, _GLF_IDENTITY(false, (false) || false)), true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (true)) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), ! (! (bool(bool(bool(bvec2(! (true), false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))), ! (! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true))))))))))))) && true))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), (bool(bool(bool(bvec2(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false))))) && true))), true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), false), false), bvec3(bvec3(bvec3(bvec2(! (true), false), false))))), true, true)), false, false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(bvec2(! (true), false)))), _GLF_IDENTITY((bool(bool(bool(bvec2(! (true), false))))) && true, false || ((bool(bool(bool(bvec2(! (true), false))))) && true))), true, false), false))))))), true)))))))) && true)) && true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), bvec4(true), _GLF_IDENTITY(ivec3(1), ivec3(ivec3(ivec3(1)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_8._f0.next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], _GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, (read) | (read)))), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(4, 0, 1, 1)))) * 1), _GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0, 0 + (0)) : _GLF_FUZZED(-51575)), (-47052 & 0) ^ ((true ? _GLF_IDENTITY(0, 0 + (0)) : _GLF_FUZZED(-51575)))))))))))));
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
