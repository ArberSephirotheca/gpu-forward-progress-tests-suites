#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : vec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), 1.0)))), float(mat4x2(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-1.4)), min((true ? injectionSwitch.x : _GLF_FUZZED(-1.4)), (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))))), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-1.4), mix(float(_GLF_FUZZED(-1.4)), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0)))), (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), 1.0))))) + 0.0), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.0)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true)))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) && true)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, min((0u) >> 0u, (0u) >> 0u)))) << 0u))), 0u, 0u) + (gl_WorkGroupSize), max(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) << 0u))), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u))), 0u, 0u) + (gl_WorkGroupSize)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, min((0u) >> 0u, (0u) >> 0u)))) << 0u))), 0u, 0u) + (gl_WorkGroupSize), max(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) << 0u))), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (0u)))), (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (0u) | (0u ^ 0u)))) << 0u))), 0u, 0u) + (gl_WorkGroupSize))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(false, ! (! (false))), true))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(false, ! (! (false))), true))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), true, true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) || false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))), false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false, false))))))))), true, true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false)), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))), ((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))) || false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], 0u | (gl_WorkGroupID[2])))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(injectionSwitch)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(780.060)), float(injectionSwitch.y), bool(true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, _GLF_IDENTITY(bool(bvec4((false) && true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false))))), (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec4((false) && true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec2((bool(bvec4((false) && true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)), ! (! (bool(bvec2((bool(bvec4((false) && true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - tan(0.0)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - tan(0.0)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (! (! ((! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, 0u + ((subgroup_size) >> 0u)))) / 1u) : _GLF_FUZZED((workgroup_id ++)))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, 0u + ((subgroup_size) >> 0u)))) / 1u) : _GLF_FUZZED((workgroup_id ++))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, false)))))))))), false, false, true)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(66737u))), 0u ^ (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) / 1), 0, 1))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u))), uint(8u))) + (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) || false), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-65097) : 1)), 1), (max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-65097) : 1)), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-53.42))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 + (64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true) && true))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true) ? _GLF_FUZZED(1.0) : injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : injectionSwitch.x) * 1.0))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : injectionSwitch.x)) > injectionSwitch.y), true))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.6), _GLF_IDENTITY(_GLF_FUZZED(6.8), max(_GLF_FUZZED(6.8), _GLF_IDENTITY(_GLF_FUZZED(6.8), min(_GLF_FUZZED(6.8), _GLF_IDENTITY(_GLF_FUZZED(6.8), min(_GLF_FUZZED(6.8), _GLF_FUZZED(6.8)))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).x > injectionSwitch.y))) || false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6568.5619)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))))), min(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0)))))))) > injectionSwitch.y))))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(max(-50839, -53697))))], _GLF_FUZZED(-3.5)), vec2(_GLF_FUZZED(-40.00), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -3.5 : _GLF_FUZZED(8.4))))), vec2(_GLF_FUZZED(-40.00), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -3.5 : _GLF_FUZZED(8.4))))), vec2(_GLF_FUZZED(-40.00), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -3.5 : _GLF_FUZZED(8.4))))), vec2(_GLF_FUZZED(-40.00), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((34.43)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(540.062)), bvec2(true, false))))).x < injectionSwitch.y)), false)), _GLF_IDENTITY(false, true && (false)), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_IDENTITY(true, (true) || false)))) ? _GLF_FUZZED(-6.7) : injectionSwitch.x, (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_IDENTITY(true, (true) || false)))) ? _GLF_FUZZED(-6.7) : injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_IDENTITY(true, (true) || false)))) ? _GLF_FUZZED(-6.7) : injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0, log(1.0)))))))) > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec4(bvec2(bvec2(true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec4(bvec2(bvec2(true, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4092.4932)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))), false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 0 | (0))))) >> 0) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1, min((_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1, (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1))), max(_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(28932) : (1)))), 0 ^ (~ (_GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(28932) : (1)))))))))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (0 & -77123))) | (_GLF_IDENTITY(1, (1) << 0))), (true ? 1 : _GLF_FUZZED(i))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(i, clamp(i, i, i))))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1)) - 0)), (~ (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2((1), 0)), max(_GLF_IDENTITY(int(ivec2((1), 0)), int(ivec4(int(ivec2((1), 0)), 1, 0, 1))), int(ivec2((1), 0))))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))) - 0))) | 0))), true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))), (1) + 0))))), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(i), min(_GLF_FUZZED(i), _GLF_FUZZED(i))))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1))))))), 4), ~ (~ (clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), max(0 | (0), 0 | (0))))))) >> 0) | _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0)) >> _GLF_IDENTITY(0, int(int(0))))), (1) + 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0)) >> _GLF_IDENTITY(0, int(int(0))))), (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0)) >> _GLF_IDENTITY(0, int(int(0))))), (1) + 0))))))), (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | 0))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1)))), max((_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, (_GLF_IDENTITY(66322, ~ (~ _GLF_IDENTITY((66322), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((66322)))))) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0)) >> 0)), _GLF_IDENTITY((1) + 0, (_GLF_IDENTITY((1) + 0, min((1) + 0, (1) + 0))) | ((1) + 0))))))), (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | 0), clamp(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | 0))))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1)))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(66322, _GLF_IDENTITY((_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0)) >> 0)), (1) + 0))))), (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | 0))))), 1 * ((_GLF_IDENTITY(66322, ~ (~ (66322)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), clamp(~ (_GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - 0)) - 0)) >> 0)), _GLF_IDENTITY((1) + 0, min((1) + 0, (1) + 0))))))), (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(i), (true ? 1 : _GLF_FUZZED(i)) | 0))))))))), (_GLF_IDENTITY(_GLF_FUZZED(66322), (_GLF_FUZZED(66322)) * 1)) * 1))))))), 4))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), min((int(4)), (int(4))))) << 0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), int(2))))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))))), _GLF_IDENTITY(min(int(int(4)), _GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(int(4)), (0 ^ _GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(int(int(4)), (int(int(4))) + 0)))))), (_GLF_IDENTITY(min(int(int(4)), int(int(4))), int(_GLF_IDENTITY(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), clamp(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), _GLF_IDENTITY(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), min(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)))), _GLF_IDENTITY(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), (ivec2(min(int(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(34102))))), int(int(4))), (0 ^ 0))) / (ivec2(1, 1) | ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(95320) : _GLF_IDENTITY(1, (1) | 0))))))))))) | 0)), _GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))), int(int(4)))))), clamp(_GLF_IDENTITY(int(int(4)), 1 * (int(int(4)))), int(int(4)), _GLF_IDENTITY(int(int(4)), int(ivec4(int(int(4)), 1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(1 * ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (0 << _GLF_IDENTITY(int(4), int(4))))), int(5)))), (1 * ((0 >> _GLF_IDENTITY(int(5), int(5))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(i))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))), (1 * ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec2(5, _GLF_IDENTITY(1, 0 | (1))), clamp(ivec2(5, 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(5, (5) ^ 0), 1), ~ _GLF_IDENTITY((~ (ivec2(5, 1))), ((~ (ivec2(5, 1)))) - (ivec2(0, 0) & ivec2(-77460, 72370)))), ivec2(5, 1)))))), int(5)), (false ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(int(5), int(5)))), 1, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-83.75)), bool(false)))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0))))), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) | 0)) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(int(5), int(5)))), 1, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.0) : 0.0)), 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.3)), bool(false))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))))), (_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(int(5), int(5)))), 1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(vec2(-39.82, -6.1), (injectionSwitch))))).x))))))))) / 1))))) - 0)))), 1))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), min((int(4)), (int(4))))) << 0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), int(2))))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))))), _GLF_IDENTITY(min(int(int(4)), _GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(int(4)), (0 ^ _GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(int(int(4)), (int(int(4))) + 0)))))), (_GLF_IDENTITY(min(int(int(4)), int(int(4))), int(_GLF_IDENTITY(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), clamp(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), _GLF_IDENTITY(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), min(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)))), _GLF_IDENTITY(ivec2(min(int(int(4)), int(int(4))), (0 ^ 0)), (ivec2(min(int(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(34102))))), int(int(4))), (0 ^ 0))) / (ivec2(1, 1) | ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(95320) : _GLF_IDENTITY(1, (1) | 0))))))))))) | 0)), _GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))), int(int(4)))))), clamp(_GLF_IDENTITY(int(int(4)), 1 * (int(int(4)))), int(int(4)), _GLF_IDENTITY(int(int(4)), int(ivec4(int(int(4)), 1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(1 * ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (0 << _GLF_IDENTITY(int(4), int(4))))), int(5)))), (1 * ((0 >> _GLF_IDENTITY(int(5), int(5))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(i))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))), (1 * ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec2(5, _GLF_IDENTITY(1, 0 | (1))), clamp(ivec2(5, 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(5, (5) ^ 0), 1), ~ _GLF_IDENTITY((~ (ivec2(5, 1))), ((~ (ivec2(5, 1)))) - (ivec2(0, 0) & ivec2(-77460, 72370)))), ivec2(5, 1)))))), int(5)), (false ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(int(5), int(5)))), 1, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-83.75)), bool(false)))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0))))), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) | 0)) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(int(5), int(5)))), 1, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.0) : 0.0)), 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.3)), bool(false))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))))), (_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(i) : 0 >> _GLF_IDENTITY(int(5), int(5)))), 1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(vec2(-39.82, -6.1), (injectionSwitch))))).x))))))))) / 1))))) - 0)))), 1))))), 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), _GLF_IDENTITY(int(int(4)), min(_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) | (int(int(4))))) - 0), int(int(4)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), clamp(_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(_GLF_IDENTITY(min(int(int(4)), int(int(4))), (_GLF_IDENTITY(min(int(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5)))), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, (_GLF_IDENTITY((int(5)) | 0, (_GLF_IDENTITY((int(5)) | 0, int(ivec3((_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) ^ 0)) | 0, 0, 0)))) >> 0)) + 0)))) >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec3(38298, -86174, 84030)) : ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | 0), (true ? _GLF_IDENTITY(int(5), (int(5)) | 0) : _GLF_FUZZED(99805))))) >> _GLF_IDENTITY(int(5), int(5))))))) - ivec3(0, 0, 0)))))), int(int(4))), int(ivec2(min(int(int(4)), int(_GLF_IDENTITY(int(4), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0 ^ 0))))) | 0), (true ? _GLF_IDENTITY(min(int(int(4)), int(int(4))), (_GLF_IDENTITY(min(int(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, _GLF_IDENTITY(((int(5)) | 0) / 1, max(((int(5)) | 0) / 1, ((int(5)) | 0) / 1)))))) >> _GLF_IDENTITY(int(5), int(5)))), min(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, _GLF_IDENTITY(((int(5)) | 0) / 1, max(((int(5)) | 0) / 1, ((int(5)) | 0) / 1)))))) >> _GLF_IDENTITY(int(5), int(5)))), ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, _GLF_IDENTITY(((int(5)) | 0) / 1, max(((int(5)) | 0) / 1, ((int(5)) | 0) / 1)))))) >> _GLF_IDENTITY(int(5), int(5)))))), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0)), ~ (~ (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))))), (false ? _GLF_FUZZED(ivec3(38298, -86174, 84030)) : ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 0 + (5))))))))) - ivec3(0, 0, 0)))))), int(int(4))), int(_GLF_IDENTITY(ivec2(min(int(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), (int(4)) / 1)))), int(_GLF_IDENTITY(int(4), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0 ^ 0)), (false ? _GLF_FUZZED(ivec2(_GLF_IDENTITY(96492, (_GLF_IDENTITY(96492, (true ? 96492 : _GLF_FUZZED(-28743)))) / 1), 84940)) : ivec2(min(int(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), (int(4)) / 1)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0 ^ 0))))))) | 0) : _GLF_FUZZED(-79861)))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), (int(int(4))) + 0), 0 ^ (int(int(4)))), int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(i) : int(4)))), (int(int(4))) * 1)))))))), clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), int(ivec4(int(int(4)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) / 1), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), 1 * (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(i) : int(5)))))), (((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(i) : int(_GLF_IDENTITY(5, max(5, 5))))))))) | (((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(i) : int(5)))))))) << 0))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(82691) : 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))))), (int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)))))) | (int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)))))))) | (int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))))))), clamp(_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(min(int(_GLF_IDENTITY(int(4), (int(4)) / 1)), int(int(4))), (_GLF_IDENTITY(min(int(int(4)), int(int(_GLF_IDENTITY(4, (4) << 0)))), int(ivec2(min(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), int(ivec2(int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) ^ 0)), 0)))) << 0) : _GLF_FUZZED(-19709))), int(int(4))), (0 ^ 0))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))), (_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4))))) ^ 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) / 1))))), (clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + _GLF_IDENTITY((int(2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(i, max(i, i))) : (int(2))))), int(2))))), clamp(_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(min(int(int(4)), int(int(4))), (_GLF_IDENTITY(min(int(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))))), int(int(_GLF_IDENTITY(4, (4) << 0)))), int(ivec2(min(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), int(int(4))), (0 ^ 0))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), 0 ^ (int(int(4)))), (_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(_GLF_IDENTITY(4, (4) - 0)))))) ^ 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))), (int(4)) / 1)))))) | (_GLF_IDENTITY(clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), 0 | (int(int(4)))), _GLF_IDENTITY(min(int(int(4)), _GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)), (_GLF_IDENTITY(min(int(int(4)), int(int(_GLF_IDENTITY(4, (4) << 0)))), int(ivec2(min(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), int(int(4))), (0 ^ 0))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4))))), ((_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(0, (0) | (0)) ^ (int(int(4)))))) << 0) ^ 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) / 1))))), ~ (~ (clamp(int(int(4)), int(int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))))), clamp(_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(min(int(int(4)), int(int(4))), (_GLF_IDENTITY(min(int(int(4)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), 0 | (_GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(4, (4) << 0)))) / 1)))), int(ivec2(min(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) ^ 0)), (int(_GLF_IDENTITY(int(4), (int(4)) ^ 0))) ^ 0), int(int(4))), (0 ^ 0))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))), min(_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), int(ivec3(int(4), 1, 0)))), 0 ^ (int(int(4)))))), (_GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4))))) ^ 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) / 1))), _GLF_IDENTITY(4, min(4, 4))))), (int(4)) / 1))))))))))), clamp(int(int(4)), int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4)))), _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(int(ivec4(int(int(4)), 1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (0 ^ 0) + (5))))), 1 * ((0 >> _GLF_IDENTITY(int(5), int(5))))), 1)), 0 | (int(ivec4(int(int(4)), 1, _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (0 ^ 0) + (5))))), 1 * ((0 >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (0 ^ 0) + (5))))), 1 * ((0 >> _GLF_IDENTITY(int(5), int(5)))))) | (0 >> _GLF_IDENTITY(int(2), int(2)))), 1))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(20501), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(_GLF_FUZZED(20501), max(_GLF_FUZZED(20501), _GLF_IDENTITY(_GLF_FUZZED(20501), (_GLF_FUZZED(20501)) * 1))))) : _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) - 0)), 0 ^ ((_GLF_IDENTITY(int(4), (int(4)) - 0)))), (_GLF_IDENTITY(int(4), (int(4)) - 0)))))), 1, 0, (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), (int(4)) + 0)))))), (_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, 0 ^ ((int(4)) - 0)))))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4)))), (ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, 0 ^ ((int(4)) - 0)))))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4))))) + ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (~ (int(4))) | (~ (int(4)))))), int(4)))), _GLF_IDENTITY((ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4))))) | (ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4))))), ((ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4))))) | (ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4)))))) / ivec4(1, 1, 1, 1))))) + _GLF_IDENTITY(0, 0 | (0)), ~ (~ ((int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4)))), (ivec4(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), clamp(_GLF_IDENTITY(int(4), (int(4)) - 0), _GLF_IDENTITY(int(4), (int(4)) - 0), _GLF_IDENTITY(int(4), (int(4)) - 0)))) << 0)))), 1, 0, (0 >> _GLF_IDENTITY(int(4), int(4))))) | (ivec4(int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)), clamp(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(i) : 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) - 0)))))), 1, 0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0)))) >> _GLF_IDENTITY(int(4), int(4)))))))) + 0))))))))) >> 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(false, true && (false)), false))), ! (! (false))), true, true), false)))))), bool(bvec4(_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), false))), ! (! (false))), true, true), false)))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), false))), ! (! (false))), true, true), false)))))), ! (! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), false))), ! (! (false))), true, true), false)))))))))))), false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))))))), false, true, false)))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false)))))))))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true))))), (true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))) || false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), true && ((true))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), (_GLF_IDENTITY((true), true && ((true)))) || false), true))))) && true)))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), true && ((true))), true)), false || (bool(bvec2(_GLF_IDENTITY((true), true && ((true))), true))))) && true))))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_DEAD(false)))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false), true, false, true)))))))))))) && true)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))))) && true, ! (! ((_GLF_DEAD(false)) && true)))))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))))) && true, ! (! ((_GLF_DEAD(false)) && true)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), true, false, true)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false)))))))))) && true)))))))), true, true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true))))) && true)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false)))))))))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && _GLF_IDENTITY(true, true && (true)), true && ((_GLF_IDENTITY(true, ! (! (true)))) && _GLF_IDENTITY(true, true && (true)))))) || false)))))))))) && true)))))))), true, true, false))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(329.392)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false || (false))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ (64))))))), 1 * ((64))) / 1), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((false), false || ((false)))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1746.8893))), injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
