#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec3 _f0;
 uint subgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.04)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1286.0171) : injectionSwitch.x)) > injectionSwitch.y)))))), float(_GLF_FUZZED(-6.9)), bool(false)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-32.04)), clamp(float(_GLF_FUZZED(-32.04)), _GLF_IDENTITY(float(_GLF_FUZZED(-32.04)), max(float(_GLF_FUZZED(-32.04)), float(_GLF_FUZZED(-32.04)))), float(_GLF_FUZZED(-32.04)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-32.04)), clamp(float(_GLF_FUZZED(-32.04)), _GLF_IDENTITY(float(_GLF_FUZZED(-32.04)), max(float(_GLF_FUZZED(-32.04)), float(_GLF_FUZZED(-32.04)))), float(_GLF_FUZZED(-32.04)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-32.04)), clamp(float(_GLF_FUZZED(-32.04)), _GLF_IDENTITY(float(_GLF_FUZZED(-32.04)), max(float(_GLF_FUZZED(-32.04)), float(_GLF_FUZZED(-32.04)))), float(_GLF_FUZZED(-32.04)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), float(_GLF_FUZZED(-954.277)), bool(false))) : _GLF_FUZZED(-185.148)))), float(_GLF_FUZZED(-6.9)), bool(false)))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(4723.0916)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6107.9925) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3941.9351)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.04)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)))))), float(_GLF_FUZZED(-6.9)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.04)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), mix(float(_GLF_FUZZED(-1.4)), float(_GLF_FUZZED(vec4(-3.0, 86.68, 99.54, -0.7).q)), bool(false))), _GLF_FUZZED(-6.6)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)))))), float(_GLF_FUZZED(-6.9)), bool(false))) + 0.0)))) - 0.0)))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), true)), false)))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), false, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), true)))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(false, false)))), true))))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))) && true))))))))))) && true))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(7416.1416)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)).p)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(43.38), ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[0], clamp(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0])), _GLF_FUZZED(-6.1)), bvec2(true, false))))) + vec2(0.0, 0.0)).y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(43.38), ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[0], clamp(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0])), _GLF_FUZZED(-6.1)), bvec2(true, false))))) + vec2(0.0, 0.0)).y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(43.38), ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[0], clamp(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0])), _GLF_FUZZED(-6.1)), bvec2(true, false))))) + vec2(0.0, 0.0)).y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(43.38), ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[0], clamp(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[0])), _GLF_FUZZED(-6.1)), bvec2(true, false))))) + vec2(0.0, 0.0)).y)), false)))), false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)).p)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), 0.0)).y)), false)))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)), vec3(mat2x4(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0))).p)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y)), false)))))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)).p)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), 0.0)).y)), false)))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)), vec3(mat2x4(vec3(vec4(7432.5695, 7830.1789, -3.1, -9.4)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0))).p)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y)), false)))))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))) : _GLF_FUZZED(bitfieldExtract(workgroup_size, 92355, -41662))))) / uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0) * (_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (_GLF_ONE(1.0, injectionSwitch.y))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0) * (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((-7157.8941 - 3.8)), _GLF_FUZZED(-6.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), float(mat3x2(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0) * (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((-7157.8941 - 3.8)), _GLF_FUZZED(-6.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(-39.95)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0) * (_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0) * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0) * (_GLF_ONE(1.0, injectionSwitch.y))))))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-813.488), _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))), max((vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))), _GLF_IDENTITY((vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))), ((vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(true, false || (true)) ? (vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(1.2, 7253.7564))))[1]), vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) / 1.0))) / 1.0)))) - sqrt(0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0)))[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(69.10)), bvec2(true, false)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-98636, -83942, 30645, 94581)), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((_GLF_FUZZED(ivec4(-98636, -83942, 30645, 94581))), (false ? _GLF_FUZZED(ivec4(97723, 62494, -58687, -95508)) : _GLF_IDENTITY((_GLF_FUZZED(ivec4(-98636, -83942, 30645, 94581))), (true ? (_GLF_FUZZED(ivec4(-98636, -83942, 30645, 94581))) : _GLF_FUZZED(ivec4(59478, -45150, 88066, 79628))))))) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec4(ivec3(1), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(3284.8967)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-9160.2806))), 0.0, 0.0)), injectionSwitch.x)))), bool(true))))), ivec4(ivec3(1), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.8) : 0.0)), injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(_GLF_IDENTITY(3596, (_GLF_IDENTITY(3596, ~ (~ (3596)))) | (1 ^ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3596)), _GLF_IDENTITY(92279, (_GLF_IDENTITY(_GLF_IDENTITY(92279, int(ivec2(_GLF_IDENTITY(92279, clamp(92279, 92279, 92279)), 0))), min(92279, 92279))) << 0))))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / _GLF_IDENTITY(1, max(1, 1)))) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))), max(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(_GLF_IDENTITY(3596, (_GLF_IDENTITY(3596, ~ (~ (3596)))) | (1 ^ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3596)), _GLF_IDENTITY(92279, (_GLF_IDENTITY(_GLF_IDENTITY(92279, int(ivec2(_GLF_IDENTITY(92279, clamp(92279, 92279, 92279)), 0))), min(92279, 92279))) << 0))))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / _GLF_IDENTITY(1, max(1, 1)))) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(_GLF_IDENTITY(3596, (_GLF_IDENTITY(3596, ~ (~ (3596)))) | (1 ^ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3596)), _GLF_IDENTITY(92279, (_GLF_IDENTITY(_GLF_IDENTITY(92279, int(ivec2(_GLF_IDENTITY(92279, clamp(92279, 92279, 92279)), 0))), min(92279, 92279))) << 0))))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / _GLF_IDENTITY(1, max(1, 1)))) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))))) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (ivec4(ivec3(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(~ (ivec4(ivec3(1), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.3) : 0.0)), injectionSwitch.x)))), ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 1))))), int(ivec2(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 1))))), 0))), 0, 0) | (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), clamp(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-98636, int(_GLF_IDENTITY(ivec3(-98636, 0, 0), (ivec3(-98636, 0, 0)) - _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(_GLF_IDENTITY(ivec3(ivec3(0, 0, 0)), (ivec3(ivec3(0, 0, 0))) ^ _GLF_IDENTITY(ivec3(0, _GLF_IDENTITY(0, min(0, 0)), 0), (ivec3(0, _GLF_IDENTITY(0, min(0, 0)), 0)) | ivec3(0, 0, 0)))))))), -83942, 30645, 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(5855.6197)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(648.362)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))), bool(true)))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(5855.6197)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(648.362)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))), bool(true))))), (~ (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(5855.6197)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(648.362)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))), bool(true)))))) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))), 3596)), _GLF_IDENTITY(92279, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) + 0))) + (92279))))), min(~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), 3596)), _GLF_IDENTITY(92279, 0 + (92279))))), ~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))), 3596)), _GLF_IDENTITY(92279, 0 + (92279)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3596, max(3596, _GLF_IDENTITY(3596, _GLF_IDENTITY((3596), (_GLF_IDENTITY((3596), ~ (~ ((3596))))) | ((3596))) | (_GLF_IDENTITY(3596, (false ? _GLF_FUZZED(18493) : 3596)))))), (3596) / 1), 3596, 3596)), 92279)), min(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3596, max(3596, _GLF_IDENTITY(3596, _GLF_IDENTITY((3596), (_GLF_IDENTITY((3596), ~ (~ ((3596))))) | ((3596))) | (_GLF_IDENTITY(3596, (false ? _GLF_FUZZED(18493) : 3596)))))), (3596) / 1), 3596, 3596)), 92279)), _GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3596, max(3596, _GLF_IDENTITY(3596, _GLF_IDENTITY((3596), (_GLF_IDENTITY((3596), ~ (~ ((3596))))) | ((3596))) | (_GLF_IDENTITY(3596, (false ? _GLF_FUZZED(18493) : 3596)))))), (3596) / 1), 3596, 3596)), 92279)))), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))))))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(ivec4(-98636, -83942, 30645, 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec4(_GLF_IDENTITY(ivec3(1), (ivec3(1)) - (ivec3(0, 0, 0) & ivec3(-10767, -49989, 71308))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0])), injectionSwitch[1])).x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, _GLF_IDENTITY(11229, ~ (~ (11229))), 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3596)), 92279)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, _GLF_IDENTITY((_GLF_IDENTITY(-59208, (-59208) / 1)) - 0, int(ivec2((_GLF_IDENTITY(-59208, (-59208) / 1)) - 0, 0)))), -90401, _GLF_IDENTITY(-71745, max(_GLF_IDENTITY(-71745, (-71745) ^ 0), -71745)), 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-4562, 11229, 3596, 92279), (ivec4(-4562, 11229, 3596, 92279)) | (ivec4(-4562, 11229, 3596, 92279)))))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))))) : _GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(1, min(1, 1))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(vec2(4.7, -49.61).t))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(-98636, -83942, 30645, 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.0)), bool(false))), injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), injectionSwitch.x))), (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, _GLF_IDENTITY(92279, (92279) | 0))), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(_GLF_IDENTITY(-4562, 0 + (-4562)), 11229, 3596, 92279)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(3596, (3596) / (0 ^ 1)), int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 3596)), 92279)), (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(3596, (3596) / (0 ^ 1)), int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 3596)), 92279))) ^ ivec4(0, 0, 0, 0)))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(ivec4(ivec3(1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> (0 | (0 ^ 0)))), ~ (~ (ivec4(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1))), ivec3(1))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))) | ivec3(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-98636, (_GLF_IDENTITY(-98636, max(_GLF_IDENTITY(-98636, clamp(-98636, -98636, -98636)), -98636))) << 0), -83942, 30645, 94581)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x2(mat2(injectionSwitch, 0.0, 1.0))))), mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(526.281)), vec2((vec2(mat2(injectionSwitch, 0.0, 1.0)))[0], (vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true)))), 1.0, 1.0, 1.0, 0.0))).x))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(526.281)), vec2((vec2(mat2(injectionSwitch, 0.0, 1.0)))[0], (vec2(mat2(injectionSwitch, 0.0, 1.0)))[1]), bvec2(true, true))), (false ? _GLF_FUZZED(_GLF_IDENTITY(exp2(vec2(8.3, 6.7)), mix(vec2(_GLF_FUZZED(-4893.1137), _GLF_FUZZED(-8063.9570)), vec2((exp2(vec2(8.3, 6.7)))[0], (exp2(vec2(8.3, 6.7)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) : _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(526.281)), mix(vec2((vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(526.281)))[0], (vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(526.281)))[1]), vec2(_GLF_FUZZED(((136.622) * (-8744.2708))), _GLF_FUZZED(-10.10)), bvec2(false, false))), vec2((vec2(mat2(injectionSwitch, 0.0, 1.0)))[0], (vec2(mat2(injectionSwitch, 0.0, 1.0)))[1]), bvec2(true, true)))))), 1.0, 1.0, 1.0, 0.0))).x)))))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, log(1.0), 1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, log(1.0), 1.0), mix(vec4(_GLF_FUZZED(-8.4), (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[1], (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[2], _GLF_FUZZED(9.4)), vec4((vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[0], _GLF_FUZZED(8868.0016), _GLF_FUZZED(9.5), (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[3]), bvec4(true, false, false, true))) : _GLF_FUZZED(vec4(90.55, 1570.5262, 2383.5336, 5.5))), max((true ? _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, log(1.0), 1.0), mix(vec4(_GLF_FUZZED(-8.4), (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[1], (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[2], _GLF_FUZZED(9.4)), vec4((vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[0], _GLF_FUZZED(8868.0016), _GLF_FUZZED(9.5), (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[3]), bvec4(true, false, false, true))) : _GLF_FUZZED(vec4(90.55, 1570.5262, 2383.5336, 5.5))), (true ? _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, log(1.0), 1.0), mix(vec4(_GLF_FUZZED(-8.4), (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[1], (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[2], _GLF_FUZZED(9.4)), vec4((vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[0], _GLF_FUZZED(8868.0016), _GLF_FUZZED(9.5), (vec4(injectionSwitch.x, 0.0, log(1.0), 1.0))[3]), bvec4(true, false, false, true))) : _GLF_FUZZED(vec4(90.55, 1570.5262, 2383.5336, 5.5)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-6.1)))))), ivec4(_GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (ivec3(1)), (~ (ivec3(1))) / ivec3(1, 1, 1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(3596, int(ivec3(3596, 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 3596)), 92279)))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), -90401, _GLF_IDENTITY(-71745, clamp(-71745, -71745, -71745)), 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(-98636, -83942, _GLF_IDENTITY(30645, (30645) ^ 0), 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, _GLF_IDENTITY(11229, (11229) << 0), 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-4562, clamp(-4562, -4562, -4562)), 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec3(-36325, -15986, -8132)[0]))), 3596)), 92279)))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, (3596) | (1 ^ 1)), 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), min(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), _GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0))), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 0) & ivec4(84290, -94922, -7573, -66846)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(-98636, -83942, _GLF_IDENTITY(30645, (30645) ^ 0), 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, _GLF_IDENTITY(11229, (11229) << 0), 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-4562, clamp(-4562, -4562, -4562)), 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec3(-36325, -15986, -8132)[0]))), 3596)), 92279)))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, (3596) | (1 ^ 1)), 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), min(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), _GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0))), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 0) & ivec4(84290, -94922, -7573, -66846)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(-98636, -83942, _GLF_IDENTITY(30645, (30645) ^ 0), 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, _GLF_IDENTITY(11229, (11229) << 0), 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-4562, clamp(-4562, -4562, -4562)), 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec3(-36325, -15986, -8132)[0]))), 3596)), 92279)))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, (3596) | (1 ^ 1)), 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), min(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), _GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0))), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 0) & ivec4(84290, -94922, -7573, -66846)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(-98636, -83942, _GLF_IDENTITY(30645, (30645) ^ 0), 94581)) : _GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, _GLF_IDENTITY(11229, (11229) << 0), 3596, 92279)), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-4562, clamp(-4562, -4562, -4562)), 11229, _GLF_IDENTITY(3596, min(_GLF_IDENTITY(_GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY(3596, int(ivec3(3596, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec3(-36325, -15986, -8132)[0]))), 3596)), 92279)))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-4562, 11229, _GLF_IDENTITY(3596, (3596) | (1 ^ 1)), 92279)), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), min(_GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0), _GLF_IDENTITY(-59208, (_GLF_IDENTITY(-59208, (-59208) / 1)) - 0))), -90401, -71745, 66567)) : _GLF_FUZZED(ivec4(-4562, 11229, 3596, 92279)))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))), ~ (~ (ivec4(ivec3(1), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 0) & ivec4(84290, -94922, -7573, -66846))))))))) - ivec4(0, 0, 0, 0))))))) << ivec3(0, 0, 0))))), subgroup_id * subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_0.subgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_0.subgroup_base, 0u | (workgroup_base + _GLF_struct_replacement_0.subgroup_base))))), (workgroup_base + _GLF_struct_replacement_0.subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))), workgroup_base)) + _GLF_struct_replacement_0.subgroup_base, (workgroup_base + _GLF_struct_replacement_0.subgroup_base) >> 0u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_0.subgroup_base, (workgroup_base + _GLF_struct_replacement_0.subgroup_base) >> 0u) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_id)) : subgroup_size))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(-373.833, 9.0, -392.735, 243.085))) : ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_id)) : subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_id)) : subgroup_size))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 1.0))), (true ? injectionSwitch[1] : _GLF_FUZZED(83.18))))).y, (injectionSwitch.y) + 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 + (0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(((false)), (((false))) && true) && true)) || false))), true && (! (_GLF_IDENTITY(false, (false) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)))) && true)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)))) && true)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)))) && true)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y)), false)))) && true)))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / 1.0))), false)))) && true)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.1) : injectionSwitch.y, min(false ? _GLF_FUZZED(-0.1) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.1) : injectionSwitch.y, 1.0 * (false ? _GLF_FUZZED(-0.1) : injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (0 & 48901) ^ (4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) || false)) && true))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), ! (_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), ! (! (! (! ((subgroup_local_id % 2) == 0))))))))))
  {
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u))), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u)) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, _GLF_IDENTITY(2, (2) << 0)), 0u | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(28068))))), 64, 2)) << 0u)) ^ 0u);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))), true && (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat2(1.0)))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-739.445), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
