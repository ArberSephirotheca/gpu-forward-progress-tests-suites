#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 uvec3 _f0;
 ivec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 bvec2 _f1;
 mat2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 int _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 vec2 _f1;
 uvec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 uvec3 _f1;
 uint workgroup_size;
} ;

struct _GLF_struct_0 {
 float _f0;
 ivec4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(1.0, ivec4(1), vec4(1.0)), _GLF_struct_1(mat3x4(1.0), uvec3(1u), gl_WorkGroupSize.x)), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) & uvec3(_GLF_IDENTITY(189813u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? 189813u : _GLF_FUZZED(subgroup_size))), 71752u, 103736u)) ^ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) ? uvec3(1u) : _GLF_FUZZED(uvec3(24457u, 125490u, 75459u))))))))), mat4x3(1.0), _GLF_struct_6(_GLF_struct_3(mat3(1.0), 1, ivec3(1)), vec2(1.0), uvec4(1u), _GLF_struct_4(mat2(1.0), bvec2(true), mat2(1.0), mat2x4(1.0)), _GLF_struct_5(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))))))), ivec4(1), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false)))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((_GLF_IDENTITY(true, bool(bool(true))))))))))))))))))) || false))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))) || (_GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(false || (! (true)), true && (false || (! (true))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(false || (! (true)), _GLF_IDENTITY(true && (false || (! (true))), bool(bvec2(true && (false || (! (true))), true))))))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))))))), bool(bvec3(_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))))))), false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))))))), bool(bvec3(_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))))))), false, false))), true), false, false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(false || (! (true)), true && (false || (! (true))))))), ((! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(false || (! (true)), true && (false || (! (true)))))))) && true) || false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true))))))), true && (! ((true)))))))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(false || (! (true)), true && (_GLF_IDENTITY(false, false || (false)) || (! (true))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true))))))), true && (! ((true)))))))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(false || (! (true)), true && (_GLF_IDENTITY(false, false || (false)) || (! (true))))))) || false))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (true)), true && (false || (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (! (true)), bool(_GLF_IDENTITY(bool(false || (! (true))), (bool(false || (! (true)))) && true))), true && (false || (! (true))))) && true)))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((true)), true && (! ((true))))), false || (! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bool(bool((true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (true)), true && (false || (! (true)))), true && (_GLF_IDENTITY(false || (! (true)), true && (false || (! (true))))))))) || false)), false))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), true && (false || (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (! (true)), bool(_GLF_IDENTITY(bool(false || (! (true))), (bool(false || (! (true)))) && true))), true && (false || (! (true))))) && true))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), true && (false || (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (! (true)), bool(_GLF_IDENTITY(bool(false || (! (true))), (bool(false || (! (true)))) && true))), true && (false || (! (true))))) && true))), false, false)), bool(bvec3(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), ! (! (bool(bool((true))))))))), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), true && (false || (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (! (true)), bool(_GLF_IDENTITY(bool(false || (! (true))), (bool(false || (! (true)))) && true))), true && (false || (! (true))))) && true))), false, false)), false, false))))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(((true)), _GLF_IDENTITY(bool(bvec2(((true)), true)), false || (bool(bvec2(((true)), true))))), true && (! ((true))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), true && (! ((true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), true && (! ((true)))), ! (! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), true && (! ((true)))), ! (! (_GLF_IDENTITY(! ((true)), true && (! ((true))))))), true, false, true))))))))))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bool(bool((true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (true)), _GLF_IDENTITY(true, (true) || false) && (false || (! (true)))), true && (_GLF_IDENTITY(false || _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ((! (true))) || false)))), true && (false || (! (true))))))))) || false)), _GLF_IDENTITY(false, ! (! (false))))))))) && true)))))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 0u)), min(uint(uvec4(1u, 0u, 0u, 0u)), uint(uvec4(1u, 0u, 0u, 0u))))))), 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (true ? (1u) >> 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(1u, (1u) >> 0u)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, min(_GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) / 1u), (1u) >> 0u))), max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, min(_GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) / 1u), (1u) >> 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, min(_GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) / 1u), (1u) >> 0u))))), _GLF_IDENTITY(1u, (1u) >> 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), uvec3(uvec4((gl_WorkGroupID) << uvec3(0u, 0u, 0u), 0u)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), uvec3(uvec4((gl_WorkGroupID) << uvec3(0u, 0u, 0u), 0u))))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), uvec3(uvec4((gl_WorkGroupID) << uvec3(0u, 0u, 0u), 0u)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), uvec3(uvec4((gl_WorkGroupID) << uvec3(0u, 0u, 0u), 0u))))) << uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), min(gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), min((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))) >> uvec3(0u, 0u, 0u))), (min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))) >> uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (124871u & 0u))))), uvec3(uvec3(min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u)))))))))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(5452u, 60879u, 89276u)) : (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(5452u, 60879u, 89276u)), (_GLF_FUZZED(uvec3(5452u, 60879u, 89276u))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec3(0u, 0u, 0u))) : (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(138535u, 91355u, 172115u)) : gl_WorkGroupID))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), min(gl_WorkGroupID, gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_7._f0._f1.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)), ~ (~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))))))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), clamp(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)), ~ (~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))))))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)), ~ (~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))))))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)), ~ (~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))))))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), min(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)), ~ (~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))))))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)), ~ (~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))))))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))))))), 1u))) * 1u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(uint(3u), uint(3u)))))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(_GLF_IDENTITY(uint(7u), (uint(7u)) | 0u), 0u))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) / 1u))), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(uint(3u), uint(3u))))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), workgroup_base + subgroup_id * subgroup_size), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u), (true ? _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u) : _GLF_FUZZED(subgroup_size))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) | (3u))))))), uint(uint(_GLF_IDENTITY(uint(3u), uint(3u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u)), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u))) / 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))))), uint(uvec2(uint(7u), 0u))))), 1u)), (uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))), 1u))) * 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(uint(3u), uint(3u))))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), workgroup_base + subgroup_id * subgroup_size)))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) - (1u ^ 1u));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) + 0u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), clamp(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), clamp(true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u) : _GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), uint(uvec3(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), (0u ^ 0u), 1u))), max(_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), uint(uvec3(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), (0u ^ 0u), 1u))), _GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), uint(uvec3(true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid), (0u ^ 0u), 1u))))), true ? next_virtual_gid : _GLF_FUZZED(next_virtual_gid))))), next_virtual_gid))) * ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_size) : uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))], uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(21044)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))), clamp((_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))), (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))), (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u))) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, (0u | 0u) << (186023u & 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) >> 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), clamp(_GLF_IDENTITY(clamp(1, 1, 1), (1 & 1) * (clamp(1, 1, 1))), clamp(1, 1, 1), clamp(1, 1, 1)))), 1), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))) * (min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) ^ 0), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u | 0u, (0u | 0u) << (186023u & 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) >> 0u)), max(max(_GLF_IDENTITY(0u | 0u, (0u | 0u) << (186023u & 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) >> 0u)), max(_GLF_IDENTITY(0u | 0u, (0u | 0u) << (186023u & 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) >> 0u)))))), ((subgroup_local_id) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, (0u | 0u) << (186023u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (0u | 0u) >> 0u), ~ (~ (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u, (0u) << 0u) | 0u) >> 0u)))))))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) >> (_GLF_IDENTITY(1, (1) - 0) ^ 1))))) ^ 0)) ^ 0u) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), ! (! (bool(bvec4((false), true, false, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, (false) && true), false))), false, true)), false, false))))))))), _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false))) && true)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true)) && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) / 1));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), min(int(int(4)), _GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? int(int(4)) : _GLF_FUZZED(-23759), ~ (~ (_GLF_IDENTITY(true, ! (! (true))) ? int(int(4)) : _GLF_FUZZED(-23759)))))), (_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? int(int(4)) : _GLF_FUZZED(-23759), ~ (~ (_GLF_IDENTITY(true, ! (! (true))) ? int(int(4)) : _GLF_FUZZED(-23759))))))) ^ 0)) / 1)))), 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(28368) : 4)), 4, _GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(28368) : 4)), _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, max(4, 4)))), ((clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(28368) : 4)), _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, max(4, 4))))) << 0) ^ 0)), _GLF_IDENTITY((4), ~ (~ ((4)))) + 0)) | (4)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((bvec4(false, false, false, true) != bvec4(true, true, false, true)) ? vec4(-43.44, 4.7, 3003.1833, 288.022).t : -1.5))), bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
