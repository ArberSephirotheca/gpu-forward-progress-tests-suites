#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0))[1], _GLF_FUZZED(-20.66), (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0))[3]), vec4(_GLF_FUZZED(3.5), _GLF_FUZZED(4.1), (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0))[2], _GLF_FUZZED(5.7)), bvec4(false, false, true, false))))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), bool(bvec3((false), true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.3)), bool(false))), injectionSwitch[1])).y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4073.5001)), float(injectionSwitch.y), bool(true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) && true)))), bool(bvec4(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))))), _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)) && true, true && ((bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(abs(0.0), min(abs(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 0.0, sqrt(1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((workgroup_size) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(82.72)), (vec2((injectionSwitch)[0], _GLF_FUZZED(82.72))) * mat2(1.0)), vec2(_GLF_FUZZED(-543.620), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch))))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(905.248, -926.985)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))) ? workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_FUZZED(workgroup_size)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), min(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size)))));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), (((subgroup_local_id + 1) % subgroup_size)) / _GLF_IDENTITY(1u, (((1u | 1u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u)));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % _GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (2))) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), mix(float(_GLF_FUZZED(vec4(91.66, 84.31, -767.723, 54.39).b)), float(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), uint(uint(virtual_gid)))])), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(64, 64)))), 2), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), min(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), 2), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2)) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2))), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (64) | (64)), 2)) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2)) | (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(64, (64) | (64)), 2))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2)) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2))))), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-77711)))) | (64)))), 2), ~ (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2)) ^ 0u)))), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), 0 + (1 * (64))))) << (0 << _GLF_IDENTITY(int(7), int(7))))) | (_GLF_IDENTITY(64, max(64, 64)))), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), ((64)) ^ 0)), 2), 0u, 0u)))) ^ 0u)) - (0u | 0u)))))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << 0), _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u + ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ 0u)) - (0u | 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << 0), _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u + ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ 0u)) - (0u | 0u))))))), (((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << 0), _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u + ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ 0u)) - (0u | 0u)))))))) | (((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) << 0), _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u + ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ 0u)) - (0u | 0u)))))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) ? (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) + _GLF_IDENTITY(0, (0) | (0))) | (64)), 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(57119u, 1730u, 987u)), (_GLF_FUZZED(uvec3(57119u, 1730u, 987u))) / uvec3(1u, 1u, 1u)) : _GLF_IDENTITY(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u), max(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(67752))))), 2), 0u, 0u), uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), min(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2))), 0u, 0u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (0 | 0) ^ (64)))), 2), 0u, 0u)), (uint(uvec3(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), ~ (virtual_gid)))))) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))), ~ (~ (max(uint(_GLF_IDENTITY(6u, (6u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(6u)))))))))], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))) | (uint(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2))), 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), 1u), (uvec2(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), 1u)) | (uvec2(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), 1u))))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) ^ _GLF_IDENTITY(0u, (0u) / 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), uint(_GLF_IDENTITY(uvec2(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), 1u), (uvec2(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), 1u)) | (uvec2(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), 1u))))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) ^ _GLF_IDENTITY(0u, (0u) / 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u | 0u), ((_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), _GLF_IDENTITY((~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))) ^ _GLF_IDENTITY(0u, (0u) / 1u), ((~ (uint(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2), ~ (_GLF_IDENTITY(~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2)), clamp(_GLF_IDENTITY(~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2)), (false ? _GLF_FUZZED(subgroup_id) : ~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2)))), _GLF_IDENTITY(~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2)), uint(uvec3(~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2)), 1u, 1u))), ~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2)))))), 0u, 0u)))) ^ 0u) / 1u))) - (0u | 0u)) / 1u))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (0 | 0) ^ (64)))), 2), 0u, 0u)), (uint(uvec3(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), ~ (virtual_gid)))))) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(uint(6u), uint(6u)), ~ (~ (max(uint(_GLF_IDENTITY(6u, (6u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(6u)))))))))], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | 0u) ^ 0u)))) | (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), 0u | ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) ^ _GLF_IDENTITY(0u, (0u) / 1u))) - (0u | 0u), ((_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), clamp(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), ~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), ~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))))) ^ _GLF_IDENTITY(0u, (0u) / 1u), ((~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) | (64), ((64) | (64)) * 1), int(int(_GLF_IDENTITY((64) | (64), (false ? _GLF_FUZZED(-92708) : (64) | (64))))))), 2), 0u, 0u)))) ^ 0u) / 1u))) - (0u | 0u)) / 1u)))) | 0u)))) : _GLF_FUZZED(workgroup_size))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ((64) | (64)) | 0)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), max(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2))))), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) - 0) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))) ^ 0u)) - (0u | 0u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u), max(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u), uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))), 0u)))) ^ 0u)) - (_GLF_IDENTITY(0u | 0u, (false ? _GLF_IDENTITY(_GLF_FUZZED((~ packSnorm2x16(vec2(7.2, 12.47)))), (true ? _GLF_FUZZED((~ packSnorm2x16(vec2(7.2, 12.47)))) : _GLF_FUZZED(170647u))) : 0u | 0u))))), 0u | (~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) ^ 0))), 2), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))) ^ 0u)), ((_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) ^ 0))), 2), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))) ^ 0u))) >> (10885u & 0u)) - (_GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED((~ packSnorm2x16(vec2(7.2, 12.47)))) : 0u | 0u)))))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | (_GLF_IDENTITY(64, (64) ^ 0))), 1))))), ~ (~ (64)))) | _GLF_IDENTITY((64), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(64, max(64, 64)))))), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(64, (64) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(64, (64) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))) >> 0u)), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, (0u) << 0u)))), 0u | (~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, (0u) << 0u))))))), virtual_gid))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (64) | (64)), 2), 0u, 0u))), (~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) - 0u)))))), 0u))), ~ (~ ((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) - 0u)))))), 0u))))))) ^ 0u)) - (0u | 0u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, 0 | (64)))), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), 2), 0u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (64) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))) ^ 0u)) - (0u | 0u)))))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), min(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64))))) << 0), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), min((uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))))), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))) ^ 0u)) - (0u | 0u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)), (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))) >> 0u)), (_GLF_IDENTITY(~ (uint(uvec3(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u))), (~ (uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 0u, 0u)))) ^ 0u)) - (0u | 0u)))))) : _GLF_FUZZED(workgroup_size)))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! ((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! ((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))))), ! (! (true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), clamp(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY(((injectionSwitch) * cos(vec2(0.0, 0.0))), clamp(((injectionSwitch) * cos(vec2(0.0, 0.0))), ((injectionSwitch) * cos(vec2(0.0, 0.0))), ((injectionSwitch) * cos(vec2(0.0, 0.0))))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), (int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) - vec2(0.0, 0.0))))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0)))) + 0), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch))) * cos(vec2(0.0, 0.0))))), injectionSwitch)) - vec2(0.0, 0.0))).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), (false ? _GLF_FUZZED(74009) : int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(16286, clamp(16286, _GLF_IDENTITY(16286, ~ (~ (16286))), 16286))) : int(ivec3(4, _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), max(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) - 0), 1)))), int(ivec4(int(ivec3(4, int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.3)), bool(false))))), 1)), 1, 0, 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), max(_GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * cos(vec2(0.0, 0.0)))), (injectionSwitch) * cos(vec2(0.0, 0.0))))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), clamp(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY(((injectionSwitch) * cos(vec2(0.0, 0.0))), clamp(((injectionSwitch) * cos(vec2(0.0, 0.0))), ((injectionSwitch) * cos(vec2(0.0, 0.0))), ((injectionSwitch) * cos(vec2(0.0, 0.0))))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))), (int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) - vec2(0.0, 0.0))))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0)))) | 0)))) + 0), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, 0.0)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch))) * cos(vec2(0.0, 0.0))))), injectionSwitch)) - vec2(0.0, 0.0))).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, 0 ^ (0)))) | 0))), (false ? _GLF_FUZZED(74009) : int(ivec3(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(-2051.0857)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * cos(vec2(0.0, 0.0))))), injectionSwitch)).x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(16286, clamp(16286, _GLF_IDENTITY(16286, ~ (~ (16286))), 16286))) : int(ivec3(4, _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), max(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0)), (true ? mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0)) : _GLF_FUZZED(mat3x4(-0.3, 931.659, 46.84, 3.3, -8.6, 97.03, -0.9, -6.9, 3.1, -51.81, 3.9, -4.3))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) - 0), 1)))), int(ivec4(int(ivec3(4, int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.3)), bool(false))))), 1)), 1, 0, 1))) : _GLF_FUZZED(clamp(-41708, (5495 >> -92724), -79951))))), 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
