#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6143.5264)), bool(false))), injectionSwitch.y)), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], abs(0.0) + (injectionSwitch[0])), injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(381.140)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) && true), true)))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], abs(0.0) + (injectionSwitch[0])), injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).x), float(_GLF_FUZZED(_GLF_IDENTITY(381.140, clamp(381.140, 381.140, 381.140)))), bool(false))) > injectionSwitch.y), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))) + (injectionSwitch[0]), max(abs(0.0) + (injectionSwitch[0]), abs(0.0) + (injectionSwitch[0])))), injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], cos(0.0)))))).x), float(_GLF_FUZZED(381.140)), bool(false))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(uvec4(56048u, 66391u, 165246u, 64138u).t)), _GLF_FUZZED(7781.2341)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), true), false, false)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false)))), true), false, false)), true, true)))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) || false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) || false))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((42.74 * 418.315))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), injectionSwitch.x)) > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(1.0))), _GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(278.820)), bool(false))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2881.3671), _GLF_FUZZED(-9.9)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (false))) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))), ! (! (! (! (! (false))))))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), ((_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) || false, true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)))), ! (! (! (! (! (false))))))) || false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) || false), true && (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))), ! (! (! (! (! (false))))))) || false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(564.906))))) > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), max(vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), true, false, true)))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false) && true))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false, true)), (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false, true))) && true)), false, true)))))))))))))))) && true))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u + (num_workgroup)))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(num_workgroup)), min(_GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(num_workgroup)), max((true ? workgroup_id : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(num_workgroup)), ((true ? workgroup_id : _GLF_FUZZED(num_workgroup))) + 0u)))) / 1u), (true ? workgroup_id : _GLF_FUZZED(num_workgroup)))), min((_GLF_IDENTITY(true, false || (true)) ? workgroup_id : _GLF_FUZZED(num_workgroup)), (true ? _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), workgroup_id)) : _GLF_FUZZED(num_workgroup)))), (true ? workgroup_id : _GLF_FUZZED(num_workgroup))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ (1u ^ 1u)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size)))) / _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)) ^ (subgroup_size)), subgroup_size))))) : _GLF_FUZZED((num_workgroup & bitfieldReverse(workgroup_base)))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), max(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0u, 0u), uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u))))) ^ 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) / 1u)), (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u))))) ^ 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) / 1u))) | (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(subgroup_id * subgroup_size, 0u, 1u))))) ^ 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) / 1u))))))))))), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id)))) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), uint(uvec3(subgroup_local_id + 1, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)))))) >> 0u), (subgroup_local_id + 1) | (subgroup_local_id + 1))), 0u + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), uint(uvec3(subgroup_local_id + 1, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)))))) >> _GLF_IDENTITY(0u, min(0u, 0u))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))), (93383u & 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), clamp(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)) - uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)) - uvec3(0u, 0u, 0u)))), 0u ^ (~ (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)) - uvec3(0u, 0u, 0u))))))))), 1u, 0u)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))))))))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), clamp(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)) - uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)) - uvec3(0u, 0u, 0u)))), 0u ^ (~ (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u)) - uvec3(0u, 0u, 0u))))))))), 1u, 0u)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u)))))))))), 1u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - (1 ^ 1)), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (1 ^ 1)), clamp(_GLF_IDENTITY(1, (1) - (1 ^ 1)), _GLF_IDENTITY(1, (1) - (1 ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (1 ^ 1)), (_GLF_IDENTITY(1, (1) - (1 ^ 1))) / 1))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) - (1 ^ 1)))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))) % subgroup_size);
 do
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(uint(uint(next_virtual_gid)), (true ? uint(uint(next_virtual_gid)) : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(clamp(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid)), (clamp(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (0u))))))))) / 1u))) - 0u)), (0u ^ 0u) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(uint(uint(next_virtual_gid)), (true ? uint(uint(next_virtual_gid)) : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(clamp(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(clamp(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid)), (clamp(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid))) | (clamp(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid)))))))) - 0u))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | (uint(1)), min((uint(1)) | (uint(1)), (uint(1)) | (uint(1))))))), min(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))))), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-70.76))), injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-70.76))), injectionSwitch.y))))))), ((((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-70.76))), injectionSwitch.y)))))))) || false)))))))))))))) && _GLF_IDENTITY(true, true && (true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6006.8869) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)), mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-6006.8869) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)), clamp(false ? _GLF_FUZZED(-6006.8869) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)), false ? _GLF_IDENTITY(_GLF_FUZZED(-6006.8869), clamp(_GLF_FUZZED(-6006.8869), _GLF_IDENTITY(_GLF_FUZZED(-6006.8869), min(_GLF_FUZZED(-6006.8869), _GLF_FUZZED(-6006.8869))), _GLF_FUZZED(-6006.8869))) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)), false ? _GLF_FUZZED(-6006.8869) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y))))), float(_GLF_FUZZED(float(true))), bool(false))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)) || false)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)) || false)))), false, false))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, 6.2).g, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(vec4(_GLF_IDENTITY(-23.15, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -23.15 : _GLF_FUZZED(-7.1))), 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_IDENTITY(_GLF_FUZZED(7032.4872), min(_GLF_FUZZED(7032.4872), _GLF_FUZZED(7032.4872)))), bool(false)))).g, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0))), min(vec3(vec4(_GLF_IDENTITY(-23.15, 1.0 * (_GLF_IDENTITY(-23.15, float(_GLF_IDENTITY(mat4x2(-23.15, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(-23.15, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) * mat4(1.0)))))), 7.5, -5639.6174, 6.2).g, 0.0, 0.0), vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, 6.2).g, mix(float(_GLF_FUZZED(5.1)), float(vec4(-23.15, 7.5, -5639.6174, 6.2).g), bool(_GLF_IDENTITY(true, (true) || false)))), 0.0, 0.0)))), _GLF_IDENTITY((float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(vec4(-23.15, 7.5, -5639.6174, 6.2).g, 0.0, 0.0), min(vec3(vec4(-23.15, 7.5, -5639.6174, 6.2).g, 0.0, 0.0), vec3(vec4(-23.15, 7.5, -5639.6174, 6.2).g, 0.0, 0.0))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, 6.2).g, (true ? vec4(-23.15, 7.5, -5639.6174, 6.2).g : _GLF_FUZZED(3102.9607))), 0.0, 0.0), min(vec3(vec4(-23.15, 7.5, -5639.6174, _GLF_IDENTITY(6.2, (_GLF_IDENTITY(6.2, (false ? _GLF_FUZZED(1.2) : 6.2))) / 1.0)).g, 0.0, 0.0), vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-23.15, clamp(-23.15, _GLF_IDENTITY(-23.15, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), min((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15)))), -23.15)), 7.5, -5639.6174, 6.2).g, clamp(vec4(_GLF_IDENTITY(-23.15, clamp(-23.15, _GLF_IDENTITY(-23.15, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), min((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15)))), -23.15)), 7.5, -5639.6174, 6.2).g, vec4(_GLF_IDENTITY(-23.15, clamp(-23.15, _GLF_IDENTITY(-23.15, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), min((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15)))), -23.15)), 7.5, -5639.6174, 6.2).g, vec4(_GLF_IDENTITY(-23.15, clamp(-23.15, _GLF_IDENTITY(-23.15, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), min((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-14.32) : -23.15)))), -23.15)), 7.5, -5639.6174, 6.2).g)), 0.0, 0.0)))) + vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, -3.8), (false ? _GLF_FUZZED(vec2(630.365, 1293.6943)) : vec2(-9.7, -3.8))))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x))))), float(mat3x2((float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(vec4(-23.15, 7.5, -5639.6174, 6.2).g, 0.0, 0.0), _GLF_IDENTITY(min(vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, 6.2), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(-23.15, 7.5, -5639.6174, 6.2))).g, 0.0, 0.0), vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED((-9135.8193 - -350.780))), float(6.2), bool(true)))), min(vec4(-23.15, 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED((-9135.8193 - -350.780))), float(6.2), bool(true)))), vec4(-23.15, 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED((-9135.8193 - -350.780))), float(6.2), bool(true)))))).g, 0.0, 0.0)), vec3(0.0, 0.0, 0.0) + (min(vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, 6.2), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec3(9029.2255, 9.5, 320.326), vec3(533.746, 424.782, 246.704))) : 0.0)), 0.0) + (vec4(-23.15, 7.5, -5639.6174, 6.2))).g, 0.0, 0.0), vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED((-9135.8193 - -350.780))), float(6.2), bool(true)))), min(vec4(_GLF_IDENTITY(-23.15, (false ? _GLF_FUZZED((+ -533.667)) : _GLF_IDENTITY(-23.15, clamp(-23.15, -23.15, -23.15)))), 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED((-9135.8193 - -350.780))), float(6.2), bool(true)))), vec4(-23.15, 7.5, -5639.6174, _GLF_IDENTITY(6.2, mix(_GLF_IDENTITY(float(_GLF_FUZZED((-9135.8193 - -350.780))), 0.0 + (float(_GLF_FUZZED((-9135.8193 - -350.780))))), float(6.2), bool(true)))))).g, 0.0, 0.0))))), (_GLF_IDENTITY(vec3(vec4(-23.15, 7.5, -5639.6174, 6.2).g, 0.0, 0.0), min(vec3(_GLF_IDENTITY(vec4(-23.15, 7.5, -5639.6174, 6.2), mix(vec4((vec4(-23.15, 7.5, -5639.6174, 6.2))[0], (vec4(-23.15, 7.5, -5639.6174, 6.2))[1], _GLF_FUZZED(62.60), _GLF_FUZZED((21.58 * 6777.5648))), vec4(_GLF_FUZZED(2.7), _GLF_FUZZED(382.951), (vec4(-23.15, 7.5, -5639.6174, 6.2))[2], (vec4(-23.15, 7.5, -5639.6174, 6.2))[3]), bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).g, 0.0, 0.0), vec3(vec4(-23.15, 7.5, -5639.6174, 6.2).g, 0.0, 0.0)))) + vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, length(0.0), 0.0, 1.0), transpose(transpose(mat2(1.0, length(0.0), 0.0, 1.0))))), min(determinant(_GLF_IDENTITY(mat2(1.0, length(0.0), 0.0, 1.0), transpose(transpose(mat2(1.0, length(0.0), 0.0, 1.0))))), determinant(_GLF_IDENTITY(mat2(1.0, length(0.0), 0.0, 1.0), transpose(transpose(mat2(1.0, length(0.0), 0.0, 1.0))))))), 0.0, 1.0, 1.0))) / 1.0))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-2.3, (-2.3) - 0.0), (true ? -2.3 : _GLF_FUZZED(-383.892))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, min((0) << 0, _GLF_IDENTITY((0) << 0, max(_GLF_IDENTITY((0) << 0, ((0) << 0) * 1), (0) << 0)))))), (~ (_GLF_IDENTITY(0, (0) << 0))) | (~ (_GLF_IDENTITY(0, (0) << 0))))))], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-23.15, 7.5, -5639.6174, 6.2).g), _GLF_FUZZED(-2.3)), vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))) && _GLF_IDENTITY(true, (true) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size)))), false || (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uint(~ (subgroup_size)))))))))) | (subgroup_size))), 0u | (1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uint(~ (subgroup_size)))))))))) | (subgroup_size)))))))))
  {
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
