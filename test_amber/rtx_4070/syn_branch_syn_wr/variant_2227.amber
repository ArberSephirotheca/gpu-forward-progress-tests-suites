#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), false || ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))) || false)) && true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            return;
          }
         return;
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))), (workgroup_id))))) << 0u)) << (0u ^ 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))) << 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(-2412, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2412 : _GLF_FUZZED(9851))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-9992.8495 + 35.48))), bvec2(true, false))).y))) && true))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || _GLF_IDENTITY((((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || ((((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || _GLF_IDENTITY((((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || ((((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false), true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) || false)))) || false), true, false, false)))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      break;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_size, 1u, 1u, 0u)), (uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_size, 1u, 1u, 0u))) * uvec4(1u, 1u, 1u, 1u)))), min(uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) << 0u)))), 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))))) ^ (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 1u, 0u), uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))) * (uvec4(subgroup_size, 1u, 1u, 0u)))))))) + _GLF_IDENTITY(0u, (0u) << 0u)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec2(bool(bvec3(true, false, true)), true)))) ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) : _GLF_FUZZED(workgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1), min(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (0 | 0) | ((1))) ^ 0), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (0 | 0) | ((1))) ^ 0))))) * 1), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (0 | 0) | ((1))) ^ 0)) * 1), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (0 | 0) | ((1))) ^ 0)) * 1), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (0 | 0) | ((1))) ^ 0)) * 1))))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (0 | 0) | ((1))) ^ 0)) * 1), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((0 | 0) | ((1)), (_GLF_IDENTITY((0 | 0) | ((1)), ((0 | 0) | ((1))) - 0)) + 0)) ^ 0)) * 1), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1)))))) >> 0u)))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u ^ (subgroup_size)))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 & (-12985 | 33603), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(13228) : _GLF_IDENTITY(0 & (-12985 | 33603), (0 & (-12985 | 33603)) << 0))), clamp(0 & (-12985 | 33603), 0 & (-12985 | 33603), _GLF_IDENTITY(0 & (-12985 | 33603), (0 & (-12985 | 33603)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))), min(_GLF_IDENTITY(0 & (_GLF_IDENTITY(-12985, (-12985) | (-12985)) | 33603), clamp(0 & (-12985 | 33603), 0 & (-12985 | 33603), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & (-12985 | 33603), (_GLF_IDENTITY(0 & (-12985 | 33603), clamp(0 & (-12985 | 33603), 0 & (-12985 | 33603), 0 & (-12985 | 33603)))) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(int(int(5))), (int(int(int(5)))) >> 0)), int(5)))))), _GLF_IDENTITY(0 & (-12985 | 33603), clamp(0 & (-12985 | 33603), 0 & (-12985 | 33603), _GLF_IDENTITY(0 & (-12985 | 33603), _GLF_IDENTITY((0 & (-12985 | 33603)) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), int(5))), (_GLF_IDENTITY((0 & (-12985 | 33603)) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), int(5))), ((0 & (-12985 | 33603)) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), int(5)))) + 0)) | (_GLF_IDENTITY((0 & (-12985 | 33603)) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), int(5))), (true ? (0 & (-12985 | 33603)) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), int(5))) : _GLF_FUZZED(63334))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED((- -71318)) : 1)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) / 1u), 4, 64, _GLF_IDENTITY(4, int(ivec3(4, 0, 1))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), true, true))))))), (! ((_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(false, false || (false))))))), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) || false, ((_GLF_IDENTITY(true, false || (true))) || false) && true)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))))))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0))))))))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))) >> 0) : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) - 0), 2, 2))), _GLF_IDENTITY(int(2), (int(2)) << 0))), _GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))), (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))), (max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))) << 0)) << (0 << _GLF_IDENTITY(int(3), int(3)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (true ? (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) : _GLF_FUZZED(findLSB(workgroup_size)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), (int(2)) << 0)), 0 ^ (~ (_GLF_IDENTITY(int(2), (int(2)) << 0))))))))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))) ^ 0))) >> _GLF_IDENTITY(int(2), int(2))), (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) >> 0) << 0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, 1 * (0)) + (1)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, max(2, 2)))) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : _GLF_IDENTITY(0, ~ (~ (0))))))))))), clamp(int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, max(2, 2)))) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : _GLF_IDENTITY(0, ~ (~ (0))))))))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, max(2, 2)))) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : _GLF_IDENTITY(0, ~ (~ (0))))))))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, max(2, 2)))) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : _GLF_IDENTITY(0, ~ (~ (0)))))))))))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (0 | 0) + ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), (_GLF_IDENTITY(int(2), (int(2)) << 0)) + 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, (0) | 0)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(-53602)))), (int(2)) << 0))), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), clamp((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), 0 | ((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))) >> 0) : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)), _GLF_IDENTITY(int(int(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (0 | 0) + ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), (_GLF_IDENTITY(int(2), (int(2)) << 0)) + 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, (0) | 0)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(-53602)))), (int(2)) << 0))), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), clamp((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), 0 | ((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))) >> 0) : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)))), min(int(int(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (0 | 0) + ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), (_GLF_IDENTITY(int(2), (int(2)) << 0)) + 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, (0) | 0)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(-53602)))), (int(2)) << 0))), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), clamp((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), 0 | ((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))) >> 0) : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)))), int(int(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (0 | 0) + ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), (_GLF_IDENTITY(int(2), (int(2)) << 0)) + 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, (0) | 0)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(-53602)))), (int(2)) << 0))), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), clamp((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))), 0 | ((int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (int(2)) << 0)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))) + 0), (int(2)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54503) : 0)))))))))))))) >> 0) : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) - 0), 2, 2))), _GLF_IDENTITY(int(2), (int(2)) << 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)) : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))), (max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2))), _GLF_IDENTITY(int(2), (int(2)) << 0))))) << 0)) << (0 << _GLF_IDENTITY(int(3), int(3)))))), clamp(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 2 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 0))), _GLF_IDENTITY(int(2), (int(2)) << 0)))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (true ? (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), ~ (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))))) : _GLF_FUZZED(findLSB(workgroup_size)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), (int(2)) << 0)), 0 ^ (~ (_GLF_IDENTITY(int(2), (int(2)) << 0))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), (int(2)) << 0)), 0 ^ (~ (_GLF_IDENTITY(int(2), (int(2)) << 0))))), 1 * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), (int(2)) << 0)), 0 ^ (~ (_GLF_IDENTITY(int(2), (int(2)) << 0))))))) : _GLF_FUZZED(28371))))))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, ~ (~ (0))))))))))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))) ^ 0))) >> _GLF_IDENTITY(int(2), int(2)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.8)), bool(false))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.8)), bool(false))))) > injectionSwitch.y))))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false)))))
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.0)), bool(false))) > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false)))))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(896.469), _GLF_FUZZED(1.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))), 0);
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false))))), true && (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false, false)))))))))) && true))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     int i = 0;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
    }
   else
    {
     atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) | (0 ^ 0)), 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x < injectionSwitch.y), true)))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
