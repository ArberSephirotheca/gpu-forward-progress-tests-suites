#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 vec3 _f0;
 uvec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 ivec3 _f1;
 uvec4 _f2;
 float _f3;
 mat2x4 _f4;
 bool _f5;
 int _f6;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 bvec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 float _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 uvec4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 uvec2 _f1;
 uvec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 vec2 _f1;
 bvec3 _f2;
 vec3 _f3;
 ivec3 _f4;
 vec2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_14 {
 uint workgroup_id;
 vec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_9 _f3;
 mat4 _f4;
 _GLF_struct_13 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false))))))
  return;
 uvec4 GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z = _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.8, 2274.8555)) : injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u)))) | (gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), clamp(((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(uint(3u), 1u, 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(uint(3u), 1u, 1u)), clamp(uint(uvec3(uint(3u), 1u, 1u)), uint(uvec3(uint(3u), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(uint(3u), 1u, 1u)), clamp(uint(uvec3(uint(3u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(uint(3u), (uint(3u)) - 0u), 1u, 1u)), uint(uvec3(uint(3u), 1u, 1u))))))))), (uint(uvec3(uint(3u), 1u, 1u))) / 1u))) | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED((num_workgroup + num_workgroup)) : gl_WorkGroupSize.x))), ((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), ((_GLF_IDENTITY(1u, (1u) | uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0), (mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0)) * mat2(1.0)))), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uvec3(3u, (1u & 1u), 1u), (_GLF_IDENTITY(uvec3(3u, (1u & 1u), 1u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(3u, (3u) | 0u), (1u & 1u), 1u)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(24117u, 164765u, 112490u)) : uvec3(0u, 0u, 0u))))))), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))) * (gl_WorkGroupSize.x))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))) | (uint(3u))), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(163802u) : (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) / 1u) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) * (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))) | (uint(3u))), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(163802u) : (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) / 1u) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) * (gl_WorkGroupSize.x))), (~ ((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))) | (uint(3u))), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (1u ^ 1u) ^ (_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))), uint(3u))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(163802u) : (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) / 1u) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) * (gl_WorkGroupSize.x)))) | (~ ((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))) | (uint(3u))), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, true, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, true, false))))))))) && true) ? _GLF_FUZZED(163802u) : (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) / 1u) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) * (gl_WorkGroupSize.x)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), clamp(((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) >> 0u), (3u) >> 0u))))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (gl_WorkGroupSize.x), _GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, 3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), (false ? _GLF_FUZZED(bitfieldReverse(subgroup_size)) : _GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, 3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), uint(uvec3(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, 3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), 0u, 0u))))), ((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), 1u * (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), clamp(((_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (gl_WorkGroupSize.x), ((_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(1u, (1u) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED((-6.4 - -0.2))), bool(false))))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) * (gl_WorkGroupSize.x))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) | (uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))))) : _GLF_FUZZED(subgroup_size)))) : ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, min(3u, 3u))))))))) * (gl_WorkGroupSize.x)))) ^ 0u)) - 0u))));
 GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_4_1_1_14readworkgroup_size.y = GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.w;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! ((true) && true), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (_GLF_IDENTITY(! (true), true && (! (true)))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) + (sqrt(1.0))), 1.0, log(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, sqrt(1.0), 1.0, log(1.0)), vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8514.3442))), 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)))))))))), true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)), float(mat4((true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), 1.0 * (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), float(vec4(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), 0.0, 0.0, 1.0)))))))))))))), true, true, true)))), (_GLF_IDENTITY((! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)), float(mat4((true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), 1.0 * (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), float(vec4(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), 0.0, 0.0, 1.0)))))))))))))), true, true, true)))), ((! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)), float(mat4((true ? injectionSwitch.y : _GLF_FUZZED(-4897.3699)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), 1.0 * (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), float(vec4(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.6))) : _GLF_FUZZED(-4897.3699), 0.0, 0.0, 1.0)))))))))))))), true, true, true))))) && true)) && true)))) || false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch[1]), bool(true))))))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-7.4, 166.043)), clamp(_GLF_FUZZED(vec2(-7.4, 166.043)), _GLF_FUZZED(vec2(-7.4, 166.043)), _GLF_FUZZED(vec2(-7.4, 166.043)))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), _GLF_IDENTITY(true, true && (true)) && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(gl_WorkGroupID.x, vec3(1.0), _GLF_struct_2(true, _GLF_struct_0(ivec4(_GLF_IDENTITY(1, 0 ^ (1))), bvec4(true), mat3x2(1.0), mat4x3(1.0), mat4x3(1.0)), _GLF_struct_1(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), mat2x4(1.0)), _GLF_struct_4(uvec4(1u), vec2(1.0), bvec3(true), vec3(1.0), ivec3(1), vec2(1.0), _GLF_struct_3(uvec4(1u), uvec2(1u), uvec4(1u), uvec3(1u))), _GLF_struct_9(_GLF_struct_5(mat2(1.0), 1.0), uvec4(1u), _GLF_struct_6(true), _GLF_struct_7(mat2(1.0), bvec4(true), mat4(1.0)), _GLF_struct_8(ivec4(1))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), transpose(transpose(mat4(1.0)))), _GLF_struct_13(_GLF_struct_10(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(116.854)), bool(false)))), mat3x2(1.0)), _GLF_struct_11(bvec2(true), ivec3(1), uvec4(1u), 1.0, mat2x4(1.0), true, 1), _GLF_struct_12(vec3(1.0), uvec4(1u), ivec3(1)), vec3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   return;
  }
 uint workgroup_base = GLF_merged2_0_1_4_1_1_14readworkgroup_size.y * _GLF_IDENTITY(_GLF_struct_replacement_14.workgroup_id, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_14.workgroup_id, min(_GLF_struct_replacement_14.workgroup_id, _GLF_struct_replacement_14.workgroup_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((false))))))), bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y + subgroup_id * GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z + GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, clamp(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base), clamp(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base), ~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base), ~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base))))), min(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, 0u), max(uvec3(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, 0u), _GLF_IDENTITY(uvec3(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, 0u), (true ? uvec3(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, 0u) : _GLF_FUZZED(uvec3(139368u, 163246u, 194576u))))))) >> uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u)))), GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base)), clamp(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base, ~ (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base))))))).y + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size) >> (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))).z + (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, min((GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size) << uvec4(0u, 0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size) << uvec4(0u, 0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size) << uvec4(0u, 0u, 0u, 0u)).y + _GLF_IDENTITY(1, (1) | (1))) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z))), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size) << uvec4(0u, 0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z)))), max(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, min((GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z)), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.z, min((GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size) | (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size)) : _GLF_FUZZED(uvec4(187371u, 15035u, 78035u, 129982u)))).z, (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, max(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size)).z)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x, _GLF_IDENTITY(uint(uvec2(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x, (1u ^ 1u))), _GLF_IDENTITY((uint(uvec2(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x, (1u ^ 1u)))), ((uint(uvec2(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x, (1u ^ 1u))))) >> 0u) * 1u))], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_FUZZED(num_workgroup) : uint(1)))), (true ? (uint(1)) | (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(num_workgroup) : uint(1)))) : _GLF_FUZZED(virtual_gid)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))), false, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), false))))))), false, true)), false))))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)), false, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false)))))), false || (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false)))))), false || (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))) && true))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false)))))), false || (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))) && true))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), true && ((false))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((false), true && ((false))))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY((false), true && ((false))))), true, false), false)))))) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && _GLF_IDENTITY((bool(! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((bool(! (_GLF_IDENTITY(false, (false) || false))))))))), (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && _GLF_IDENTITY((bool(! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((bool(! (_GLF_IDENTITY(false, (false) || false)))))))))) || false)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), true && ((false))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((false), true && ((false))))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY((false), true && ((false))))), true, false), false)))))) || false))), true && (bool(! (_GLF_IDENTITY(false, (false) || false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && _GLF_IDENTITY((bool(! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((bool(! (_GLF_IDENTITY(false, (false) || false))))))))), (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), true && _GLF_IDENTITY((bool(! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((bool(! (_GLF_IDENTITY(false, (false) || false)))))))))) || false)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))) && true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false))))))))), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec3(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))))).y)), false, true)), false, false))))), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) : _GLF_FUZZED(-5623.2241))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.x = _GLF_IDENTITY(read, (read) / 1u), (GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.x = read) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_4_1_1_14readworkgroup_size.x = GLF_merged4_0_1_4_1_1_17_2_1_13_3_1_14readsubgroup_local_idsubgroup_sizeworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_14readworkgroup_size.x, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4, 4)), max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4, 4)))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 4, 4)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(4234.6048), _GLF_FUZZED(6.2)), max(vec2(_GLF_FUZZED(4234.6048), _GLF_FUZZED(6.2)), vec2(_GLF_FUZZED(4234.6048), _GLF_FUZZED(6.2)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
