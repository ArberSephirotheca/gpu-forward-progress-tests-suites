#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-45.87)), vec2(_GLF_FUZZED((float(190556u))), (injectionSwitch)[1]), bvec2(false, true))).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-45.87)), vec2(_GLF_FUZZED((float(190556u))), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec4(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), true, true, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u), gl_WorkGroupID.x))) / 1u);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size))) - 0u)) | (workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_size) | (workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(94.44)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0, (false ? _GLF_FUZZED(4.7) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(94.44, (94.44) * 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))))))) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.5)), bool(false))), injectionSwitch.y)), float(mat2x3(injectionSwitch.y, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), 1.0)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, 1u, 0u))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), clamp(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))))), _GLF_IDENTITY((true ? clamp(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, 1u, 0u))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, 0u ^ (0u)))) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY(((true ? clamp(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, 1u, 0u))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, 0u ^ (0u)))) : _GLF_FUZZED(workgroup_size))) >> 0u, (((true ? clamp(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, 1u, 0u))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, 0u ^ (0u)))) : _GLF_FUZZED(workgroup_size))) >> 0u) | 0u)))) * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (true ? (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) : _GLF_FUZZED(subgroup_base))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), min(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), ~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), min(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), ~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u)))))))))), 0u ^ ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), min(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), ~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u)))))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), min(~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))), ~ _GLF_IDENTITY((uint(8u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(8u)), ((uint(8u))) | ((uint(8u))))), clamp(((uint(_GLF_IDENTITY(8u, max(8u, 8u))))), ((uint(8u))), ((uint(_GLF_IDENTITY(8u, (8u) | 0u))))))))))))), uint(8u)))) + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) >> 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) >> 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 0u)) << uvec3(0u, 0u, 0u)))))))), ((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) >> 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 0u)) << uvec3(0u, 0u, 0u))))))))) << 0u))) >> 0u)))), subgroup_local_id)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))) - 0u)), subgroup_local_id)) : _GLF_FUZZED((num_workgroup | num_workgroup)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), min(subgroup_local_id, subgroup_local_id)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), min(subgroup_local_id, subgroup_local_id))))), subgroup_local_id)) : _GLF_FUZZED((num_workgroup | num_workgroup)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), false || (false)) ? _GLF_FUZZED((workgroup_size & num_workgroup)) : false ? _GLF_FUZZED(num_workgroup) : _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))), true, true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), min(subgroup_local_id, subgroup_local_id)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), min(subgroup_local_id, subgroup_local_id))))), subgroup_local_id)) : _GLF_FUZZED((num_workgroup | num_workgroup))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(mat4(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4((vec4(injectionSwitch, 0.0, 1.0))[0], (vec4(injectionSwitch, 0.0, 1.0))[1], _GLF_FUZZED(5.3), (vec4(injectionSwitch, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-7.0), _GLF_FUZZED(-6.4), (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_FUZZED(-2.8)), bvec4(false, false, true, false))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))), 0.0))))), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), clamp(_GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) / 1u), ((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))))))), (~ ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) | (~ _GLF_IDENTITY(((workgroup_base)), 0u | (((workgroup_base))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), clamp(_GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) / 1u), ((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))))))), (~ ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) | (~ _GLF_IDENTITY(((workgroup_base)), 0u | (((workgroup_base))))))))), (true ? (_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), clamp(_GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) / 1u), ((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))))))), (~ ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) | (~ _GLF_IDENTITY(((workgroup_base)), 0u | (((workgroup_base))))))))) : _GLF_FUZZED(subgroup_id)))) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base)), ~ (~ (~ ((workgroup_base))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))), (min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))) | (min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))))), clamp(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), min(~ (workgroup_base), ~ (workgroup_base))))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), uint(uvec4(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base))), 1u, 1u, 1u))), min(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u), ~ (workgroup_base))))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))), (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))))) | (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))))))))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), min(~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), min(~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))), (((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), min(~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))))))))) << 0u), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), min(~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))), ~ (~ (((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), min(~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))))))))))) | (~ ((workgroup_base)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec2((workgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2((workgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2((workgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base)), (~ ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (~ ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)))))))), (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((workgroup_base)), _GLF_IDENTITY((~ ((workgroup_base))) | (~ ((workgroup_base))), max(_GLF_IDENTITY((~ ((workgroup_base))) | (~ ((workgroup_base))), (129374u & 0u) | _GLF_IDENTITY(((~ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | _GLF_IDENTITY((~ ((workgroup_base))), max((~ ((workgroup_base))), (~ ((workgroup_base)))))), 0u ^ (((~ ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | _GLF_IDENTITY((~ ((workgroup_base))), max((~ ((workgroup_base))), (~ ((workgroup_base))))))))), (~ ((workgroup_base))) | (~ ((workgroup_base))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((workgroup_base)), _GLF_IDENTITY((~ ((workgroup_base))) | (~ ((workgroup_base))), max(_GLF_IDENTITY((~ ((workgroup_base))) | (~ ((workgroup_base))), (129374u & 0u) | ((~ ((workgroup_base))) | (~ ((workgroup_base))))), (~ ((workgroup_base))) | (~ ((workgroup_base))))))), ((_GLF_IDENTITY(~ ((workgroup_base)), _GLF_IDENTITY((~ ((workgroup_base))) | (~ ((workgroup_base))), max(_GLF_IDENTITY((~ ((workgroup_base))) | (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u | 0u))))), (129374u & 0u) | ((~ ((workgroup_base))) | (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u)))))))), (~ ((workgroup_base))) | (~ ((workgroup_base)))))))) ^ 0u)) | ((_GLF_IDENTITY(~ ((workgroup_base)), _GLF_IDENTITY((~ ((workgroup_base))) | (~ ((workgroup_base))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) >> 0u)) | (~ ((workgroup_base))), (129374u & 0u) | ((~ ((workgroup_base))) | (~ ((workgroup_base))))), (~ ((workgroup_base))) | (~ ((workgroup_base)))))))))), (_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), 1u, 0u, 1u)))), (false ? _GLF_FUZZED(bitfieldReverse(165000u)) : (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), 1u, 0u, 1u))))))))))))) / 1u), _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), (~ ((workgroup_base))) | (~ ((workgroup_base))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), (_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))) << 0u)))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) - (26367u & 0u))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))) | _GLF_IDENTITY(0u, (0u) << 0u)), min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | 0u, 0u ^ (_GLF_IDENTITY((subgroup_base) | 0u, ~ (~ ((subgroup_base) | 0u))))))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), uint(uvec4(((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), 1u, 0u, 0u))))) * 1u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 0u + (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))))), (0u) ^ 0u))) ^ (subgroup_size))), 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id)))) << 0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u))), ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))) | ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 0u + (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))))), (0u) ^ 0u))) ^ (subgroup_size))), 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id)))) << 0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u))), ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))) | ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 0u + (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))))), (0u) ^ 0u))) ^ (subgroup_size))), 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id)))) << 0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u))), ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))) | ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))))))), 0u + (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 0u + (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))))), (0u) ^ 0u))) ^ (subgroup_size))), 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id)))) << 0u))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u))), ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))) | ((false ? _GLF_FUZZED(uvec2(185885u, 187292u)) : uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) | (0u)), (0u) ^ 0u))) ^ (subgroup_size), 1u), 1u)))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))) << 0u))))))], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) | (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(4.9)), vec2((mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], (mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1]), bvec2(true, true)))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(-7.7) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) + 0.0)), float(_GLF_FUZZED(-8.6)), bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), true && (! (false)))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true), true)), ! (! (bool(bvec2(! (true), true))))), false || (bool(bvec2(! (true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), true)), false || (bool(bvec2(! (true), true)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), ! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), ! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))))))))))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))), false, false)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))), false, false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))), false, false)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))), false, false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))), false, false)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))))), false, false))))))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec2(! (true), true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true)))))), true)), false || (bool(bvec2(! (true), true)))))))), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, true)))))))), bool(bvec2(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || (bool(bvec2(! (true), true)))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), false || _GLF_IDENTITY((bool(bvec2(! (true), true))), _GLF_IDENTITY(bool(bvec4((bool(bvec2(! (true), true))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true)), ! (! (bool(bvec4((bool(bvec2(! (true), true))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true))))))))))), false, false))))), false)))) || false))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), (! ((true))) && true)) || false))), true), bvec2(bvec4(bvec2(! (true), true), _GLF_IDENTITY(true, (true) && true), false))), true)))), false || _GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), ! (! (bool(! (true))))))), true))), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), _GLF_IDENTITY(false, false || (false)) || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), _GLF_IDENTITY(true, (true) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), bvec2(bvec3(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) && true), bool(bool(true))))))), true))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-99.47) : injectionSwitch.x)) > injectionSwitch.y))))) || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, false, true, false))))) && true)))), true)))))), ((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bool(bool(bvec4(true, false, true, false))))))))))))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bool(bool(bvec4(true, false, true, false))))))))))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bool(bool(bvec4(true, false, true, false))))))))))))))), true)), false, false)))) && true), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(true, false, true, false))))))))))))), _GLF_IDENTITY(true, (true) || false))))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), true && (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), (! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) && true))))))), true)))))), true, false)))))))) && true)), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), bvec2(bvec3(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) && true), bool(bool(true))))))), true))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-99.47) : injectionSwitch.x)) > injectionSwitch.y))))) || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, false, true, false))))) && true)))), true)))))), ((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bool(bool(bvec4(true, false, true, false))))))))))))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bool(bool(bvec4(true, false, true, false))))))))))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bool(bool(bvec4(true, false, true, false))))))))))))))), true)), false, false)))) && true), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(true, false, true, false))))))))))))), _GLF_IDENTITY(true, (true) || false))))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), true && (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), (! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) && true))))))), true)))))), true, false)))))))) && true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1720.2440) : injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, 9.8)))).y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, true, true)))), true && (! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, true, true))))))))) && true)) || false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (true), true), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (true), true), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true))), false)), bvec2(bvec4(bvec2(bvec4(bvec2(! (true), true), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true))), false)), false, true))), false, true)))), true)))), false || _GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bvec3(_GLF_IDENTITY((! (true)), false || ((! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY((bool(bvec2(! (true), true))), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))), _GLF_IDENTITY(true, (true) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), bvec2(bvec3(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), true))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))) || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), true)))))), ((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, false || (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, false || (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), ! (! (((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true, false)))))))) && true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, 9.8)))).y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), (! ((true))) && true)) || false))), true), bvec2(bvec4(bvec2(! (true), true), _GLF_IDENTITY(true, (true) && true), false))), true)))), false || _GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY((bool(bvec2(! (true), true))), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), _GLF_IDENTITY(true, (true) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), bvec2(bvec3(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), true))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), true)))))), ((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true, false)))))))) && true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, 9.8)))).y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false)))))))), (true && ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (true), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), true), false), bvec3(bvec3(bvec3(bvec2(! (true), true), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY((_GLF_IDENTITY(! ((true)), (! ((true))) && true)) || false, true && ((_GLF_IDENTITY(! ((true)), (! ((true))) && true)) || false))))), true), bvec2(bvec4(bvec2(! (true), true), _GLF_IDENTITY(true, (true) && true), false))), true)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(! (true), _GLF_IDENTITY(true, ! (! (true)))), false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(! (true), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(! (true), true)), true), bvec2(bvec2(bvec2(bool(bvec2(! (true), true)), true))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), false || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), _GLF_IDENTITY(true, (true) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))))))), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), true))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || ((bool(bvec2(_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), _GLF_IDENTITY(true, false || (true)))))))), ((_GLF_IDENTITY((bool(bvec2(! (true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), _GLF_IDENTITY(false || _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true, false))))), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true, false)))))), ! (! (bool(false || _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), bool(bvec3(((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))), true)))))), true, false)))))))))))))) && true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, 9.8)), mix(vec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, 9.8)))[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-2907.0009), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.3, 9.8)))[1]), bvec2(false, true))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) && true)) || false))))))))) && true))))), true, false))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
