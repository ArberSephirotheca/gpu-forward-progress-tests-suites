#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 mat2x4 _f0;
 uvec3 _f1;
 vec4 _f2;
 uvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 _GLF_struct_16 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 uvec4 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_13 {
 int _f0;
 ivec4 _f1;
 ivec2 _f2;
 vec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 int _f1;
 mat2 _f2;
 _GLF_struct_13 _f3;
 uvec4 _f4;
 _GLF_struct_14 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 uvec4 _f1;
 vec2 _f2;
 bvec2 _f3;
 mat3x2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 uint _f3;
 float _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 bool _f1;
 bvec3 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_18 {
 uint _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_7 {
 uint _f0;
 mat3x4 _f1;
 int _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_6 {
 uint subgroup_local_id;
 mat2x3 _f0;
 vec2 _f1;
 uint _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_5 {
 int _f0;
 bool _f1;
 bvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 uvec3 _f2;
 _GLF_struct_6 _f3;
 vec4 _f4;
 bvec2 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 ivec4 _f1;
 uvec2 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 float _f0;
 mat2x4 _f1;
 vec2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bool _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_1(_GLF_struct_0(1.0, mat2x4(1.0), vec2(1.0), ivec4(1)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), gl_SubgroupID), _GLF_struct_2(ivec4(1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(1u, _GLF_struct_12(bvec3(true), true, bvec3(true), _GLF_struct_10(mat2x4(1.0), mat4x2(1.0), uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), 1u, 1.0, gl_SubgroupSize), _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true)))), false, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false))), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), true, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), true, true))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true)), true, true))))))))), false, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, bool(bool(true))), false)))))), false))), false, true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false))))), _GLF_IDENTITY(false, (false) || false))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true, false))), false))), true, true))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false))))), _GLF_IDENTITY(false, (false) || false))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_IDENTITY(false, true && (false))))), false))), true, true))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false))))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) << uvec4(0u, 0u, 0u, 0u))) / (uvec4(0u, 0u, 0u, 0u) ^ uvec4(1u, 1u, 1u, 1u))), vec2(1.0), bvec2(true), mat3x2(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))), _GLF_struct_15(uvec3(1u), 1, mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(71.91))))), _GLF_struct_13(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(51010)))) ^ 0), ivec4(1), ivec2(1), vec4(1.0), mat2(1.0)), uvec4(1u), _GLF_struct_14(mat4x2(1.0), uvec4(1u), uvec4(1u), mat4x3(1.0), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true)))), true)))), ((_GLF_IDENTITY(true, (true) && true))) || false), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), true, true)), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY((true), false || ((true)))) || false) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), (_GLF_IDENTITY((true), false || ((true)))) || false) && true))) && true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)), true, true), false)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY((true), false || ((true)))) || false) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), (_GLF_IDENTITY((true), false || ((true)))) || false) && true))) && true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)), true, true), false)))))), true)))))))))))))), true), ivec3(1)), _GLF_struct_17(vec2(1.0), _GLF_struct_16(mat2x4(1.0), uvec3(1u), vec4(1.0), uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u)))), uvec4(1u)), mat3x2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_DEAD(false), true, true, true))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) > injectionSwitch.y, false, false)))) && true), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false)), bool(bool(bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false)), bool(bool(bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))), ivec4(1), uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u))), _GLF_struct_8(_GLF_struct_4(ivec3(1), true), _GLF_struct_5(1, true, bvec2(true), vec4(1.0)), uvec3(1u), _GLF_struct_6(gl_SubgroupInvocationID, mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(1.0), 1u, mat2x4(1.0)), vec4(1.0), bvec2(true), _GLF_struct_7(1u, mat3x4(1.0), 1, bvec4(true))));
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (true ? (0u << _GLF_IDENTITY(uint(8u), uint(8u))) : _GLF_FUZZED(585u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), 1u, 1u))), min(max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), 1u, 1u))), min(max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u))))), clamp(_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u)), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), (~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u)))) * 1u)))), 1u, 1u))), min(max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), clamp((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(156028u, 190812u, 47829u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))))), _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, 0u | (1u)), 1u))) / uvec3(1u, 1u, 1u))), min(max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), 1u, 1u))), min(max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) : _GLF_FUZZED(uvec3(68704u, 102400u, 90857u)))))))))))), _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(76957u) : 0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + (_GLF_IDENTITY(1u, (1u) | 0u))), 1u, 1u))), min(max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | (0u | 0u)))) | (gl_NumWorkGroups)))) / ((_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) * uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(1u, (1u) | 0u))), 1u, 1u))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(147026u, 175147u, 21962u) % uvec3(78622u, 6851u, 95817u))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) | (gl_NumWorkGroups)))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << 0u), 0u)))))) * uvec3(1u, 1u, 1u)))))))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(93547u))), 1u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3514.0727), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(76.00)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, cos(0.0), 0.0, tan(0.0), 1.0, 1.0))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, cos(0.0), 0.0, tan(0.0), 1.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, cos(0.0), 0.0, tan(0.0), 1.0, 1.0))), injectionSwitch.x)))) > injectionSwitch.y)), false, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, abs(abs(0.0)), 1.0, exp(0.0)))).y)), false, _GLF_IDENTITY(true, bool(bool(true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 1.0), vec4(0.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), dot(vec4(0.0, 0.0, tan(0.0), 1.0), vec4(0.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), true && (bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))))))))), false || (_GLF_IDENTITY((false), false || ((false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(112445u, 59097u, 63642u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(112445u, 59097u, 63642u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupID[2])))).x : _GLF_FUZZED(_GLF_struct_replacement_18._f1._f3.subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : workgroup_size)))))) * workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_18._f1._f3.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true), true, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))), (0u | 0u) | (_GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base))))))), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_9._f3._f3.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), min((workgroup_base + subgroup_base), (workgroup_base + subgroup_base))), uint(uvec3(_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))) ? ~ (workgroup_base + subgroup_base) : _GLF_FUZZED((+ workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) + ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), 1 * (_GLF_IDENTITY((1), clamp((1), (1), (1))))) >> 0)) % _GLF_struct_replacement_18._f1._f3.subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))) >> 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : workgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : false ? _GLF_FUZZED(workgroup_id) : workgroup_base))) | (false ? _GLF_FUZZED(workgroup_id) : workgroup_base))))) ^ 0u), workgroup_base)) + subgroup_base + (_GLF_IDENTITY((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) % _GLF_struct_replacement_18._f1._f3.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(packUnorm2x16(vec2(223.249, 799.190)))))), clamp((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(packUnorm2x16(vec2(223.249, 799.190)), _GLF_IDENTITY(min(packUnorm2x16(vec2(223.249, 799.190)), packUnorm2x16(vec2(223.249, 799.190))), 1u * (min(packUnorm2x16(vec2(223.249, 799.190)), packUnorm2x16(vec2(223.249, 799.190)))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(packUnorm2x16(vec2(223.249, 799.190)))))), (_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(packUnorm2x16(vec2(223.249, 799.190)))))))) % _GLF_struct_replacement_18._f1._f3.subgroup_size, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(packUnorm2x16(vec2(223.249, 799.190)))))), clamp((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(packUnorm2x16(vec2(223.249, 799.190)), (true ? _GLF_IDENTITY(packUnorm2x16(vec2(223.249, 799.190)), 0u | (packUnorm2x16(vec2(223.249, 799.190)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - (56871u & 0u)))))))), (_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(packUnorm2x16(vec2(223.249, 799.190)))))), (_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1 : _GLF_FUZZED(packUnorm2x16(vec2(223.249, 799.190)))))))) % _GLF_struct_replacement_18._f1._f3.subgroup_size))) * 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))) + ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) << 0), (false ? _GLF_FUZZED(33808) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) << 0), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) << 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) << 0)))) << 0)))) % _GLF_IDENTITY(_GLF_struct_replacement_18._f1._f3.subgroup_size, min(_GLF_struct_replacement_18._f1._f3.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_18._f1._f3.subgroup_size, (_GLF_struct_replacement_18._f1._f3.subgroup_size) - (0u | 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1), ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size) / 1u)), max(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size)))) / 1u)) ^ 0u, min((_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1), ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size) / 1u)), max(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size)))) / 1u)) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1), ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size) / 1u)), max(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size)))) / 1u)) ^ 0u, uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1), ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size) / 1u)), max(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size)))) / 1u)) ^ 0u), (uint((_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1), ((_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size) / 1u)), max(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1, (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1) | (_GLF_struct_replacement_9._f3._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_18._f1._f3.subgroup_size)))) / 1u)) ^ 0u)) / 1u)))))))))) >> (0u | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
