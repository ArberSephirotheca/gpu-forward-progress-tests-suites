#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (false)))) || false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! _GLF_IDENTITY((false), false || ((false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(~ (~ (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))), _GLF_IDENTITY(max(~ (~ (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), _GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u, 0u | (_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u, min((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u, (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u)))))))) ^ 0u), _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) << 0u), uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x)))) : _GLF_FUZZED(subgroup_local_id))), 1u, 1u, 0u))))), _GLF_IDENTITY((max(~ (~ (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), min(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))), _GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)) | (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u)))) ^ 0u), _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) << 0u), uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, 1u, 1u, 0u)))))), ((max(~ (~ (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), min(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))), _GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)) | (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u)))) ^ 0u), _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) << 0u), uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, 1u, 1u, 0u))))))) | ((max(~ (~ (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), min(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))), _GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)) | (uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) ^ 0u)))) ^ 0u), _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)), (uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) << 0u), uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), clamp(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, 1u, 1u, 0u)))))))) << 0u))), _GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)) / 1u))), 1u, 1u, 0u))), ~ (~ (_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (1u)), 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u))), 1u, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u) | (gl_WorkGroupSize.x)), 1u, 1u, 0u))), (true ? (uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(0u, (0u) | (0u)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) | 0u))) | (gl_WorkGroupSize.x)), 1u, 1u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ ((0u | 0u) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))), 1u)), 0u))), (true ? (uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))), _GLF_IDENTITY(0u, (0u) | 0u)))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, 1u, 0u))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u)))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u)), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) / 1u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> _GLF_IDENTITY(0u, 1u * (0u))), 1u, 1u, 0u), (false ? _GLF_FUZZED(uvec4(188935u, 127522u, 32199u, 105640u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, 1u, 0u)))) << uvec4(0u, 0u, 0u, 0u)))), (true ? (uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u)), _GLF_IDENTITY(1u, 0u + (1u)), 1u, 0u))) : _GLF_FUZZED(num_workgroup)))) ^ 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 1u, 0u))), (true ? _GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), ((false ? _GLF_FUZZED(subgroup_size) : 1u)) / (1u & 1u)))))))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), ((false ? _GLF_FUZZED(subgroup_size) : 1u)) / (1u & 1u)))))))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))), ~ (~ ((uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), ((false ? _GLF_FUZZED(subgroup_size) : 1u)) / (1u & 1u)))))))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))))))) | 0u) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), (true ? (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u))) : _GLF_FUZZED(num_workgroup)))), ((_GLF_IDENTITY((uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, (1u) / (1u & 1u)), 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, 1u, 0u))), (true ? (uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))) : _GLF_FUZZED(num_workgroup))))) | ((_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u), (false ? _GLF_FUZZED(uvec4(164271u, 51078u, 166178u, 135435u)) : uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, 1u, 0u))), (true ? (uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), 0u ^ (_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 0u)))), 1u, _GLF_IDENTITY(0u, (0u) | 0u)))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), (true ? (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x) : _GLF_FUZZED(uvec2(156843u, 191474u)[1])))), 1u, 1u, 0u))) : _GLF_FUZZED(num_workgroup)))))))) / 1u))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (true ? injectionSwitch.y : _GLF_FUZZED(exp2(7.0)))))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-726.530, (_GLF_IDENTITY(-726.530, (-726.530) + 0.0)) + determinant(mat2(0.0, 0.0, 1.0, 0.0))), -63.44)) : vec2(1.0, 1.0))), max(_GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))), min((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-726.530, -63.44)), vec2(mat3x4(_GLF_FUZZED(vec2(-726.530, -63.44)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))) : vec2(1.0, 1.0)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0)), clamp((false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-726.530, -63.44), (vec2(-726.530, -63.44)) / vec2(1.0, 1.0))) : vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))))), _GLF_IDENTITY(mix(vec2(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[0], _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(48.96), ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1]), bvec2(false, true)), clamp(mix(vec2(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[0], _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(48.96), ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1]), bvec2(false, true)), mix(vec2(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[0], _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(48.96), _GLF_IDENTITY(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1], max(_GLF_IDENTITY(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1], max(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1], ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1])), ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1]))), bvec2(false, true)), mix(vec2(((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[0], _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(48.96), ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-726.530, -63.44)) : vec2(1.0, 1.0))))[1]), bvec2(false, true)))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5348.9596))), abs(0.0) + (1.0)), 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0), vec2(mat2x3(vec2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0), 1.0, sqrt(0.0), 0.0, determinant(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), mix(vec2(_GLF_FUZZED(-3.2), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0))))[1]), _GLF_IDENTITY(vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0))))[0], _GLF_FUZZED(8661.2735)), mix(vec2((vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0))))[0], _GLF_FUZZED(8661.2735)))[0], (vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0))))[0], _GLF_FUZZED(8661.2735)))[1]), vec2(_GLF_FUZZED(4293.6960), _GLF_FUZZED(3.1)), bvec2(false, false))), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), false))))) || false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), false)), true))))), bool(bool(! (false)))), true))) && true))), _GLF_IDENTITY(false || ((! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || ((! (false)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))), workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))), workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u), ((subgroup_local_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u)) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) | 0u)))) + 1)), uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) + 1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 0u, (1u | 1u), 1u)))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, 0u, 1u, 1u))))) + 1), _GLF_IDENTITY((clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) | 0u)) + 1)) ^ 0u, 0u + ((clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) + 1)) ^ 0u))), 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(_GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) + 1), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))) - 0u))) + 1)) ^ 0u), 1u))), (uvec2(uvec2(uvec2(_GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), _GLF_IDENTITY(0u, max(0u, 0u)))), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), _GLF_IDENTITY(0u, max(0u, 0u)))))))) * 1u)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u)))))) | 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) + 1), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) + 1)) ^ 0u), 1u)))) + uvec2(0u, 0u)))))))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-50921) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))), (min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))) / 1)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((-65676 >> -72571)))) | (1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(mat2x3(0.9, -2.7, 25.75, 7.1, 7699.8386, -885.907) * vec2(-7.8, _GLF_IDENTITY(3.7, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) * (3.7))), mix(vec3(_GLF_FUZZED(-9.3), (mat2x3(0.9, -2.7, 25.75, 7.1, 7699.8386, -885.907) * vec2(-7.8, 3.7))[1], _GLF_FUZZED(-1.9)), vec3((mat2x3(0.9, -2.7, 25.75, 7.1, 7699.8386, -885.907) * vec2(-7.8, 3.7))[0], _GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_FUZZED(-3.7)) - tan(0.0)), (mat2x3(0.9, -2.7, 25.75, 7.1, 7699.8386, -885.907) * vec2(-7.8, 3.7))[2]), bvec3(true, false, true)))).p)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))), true)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), _GLF_IDENTITY((false), ((false)) && true) && true)) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(read, uint(_GLF_IDENTITY(uvec4(read, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uvec4(92584u, 18438u, 91985u, 62461u)))), max(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- -2148.7594)) : 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), min(uvec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(49.01)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / determinant(mat3(round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(7.4))))))))))) | (uvec4(read, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), (_GLF_IDENTITY(read, uint(_GLF_IDENTITY(uvec4(read, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(98.05) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) : _GLF_FUZZED(-841.573)))), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat3x2(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 0.0, 1.0))))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), transpose(transpose(mat3(0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 1.0, 1.0)))))), injectionSwitch.x)), min(_GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)), max(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sin(sin(0.0)), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, sin(sin(0.0)), 1.0, 0.0, 1.0)))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) / 1.0)), min(clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) / 1.0)), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.86)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) / 1.0)))))))))) | (uvec4(read, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) >> 0u), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
