#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat4x3 _f0;
 mat4 _f1;
 ivec4 _f2;
 ivec2 _f3;
 bvec4 _f4;
 float _f5;
 mat4 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uvec2 _f1;
 float _f2;
 int _f3;
 vec4 _f4;
 uvec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 _GLF_struct_5 _f1;
 bool _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 int _f1;
 uint _f2;
 mat3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 vec2 _f3;
 float _f4;
 mat2x3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 vec3 _f1;
 float _f2;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat4x2 _f1;
 ivec4 _f2;
 uvec3 _f3;
 float _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
 mat4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 uint subgroup_base;
 mat2x4 _f1;
 mat2x4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0))) - 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0)), min(vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0))) - 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec4(-8.5, -4459.6238, 9120.9575, -5.3)) : vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))))), 1.0), vec4(1.0, 1.0, 1.0, 0.0))) - 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0))))) - vec2(0.0, 0.0))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) * mat2(1.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))), false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat2x4(1.0), subgroup_id * subgroup_size, mat2x4(1.0), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), (false ? _GLF_FUZZED(929.227) : min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, min((1.0) * 1.0, (1.0) * 1.0))), 1.0))))), _GLF_struct_4(_GLF_struct_0(uvec3(1u), mat4x2(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) + 0)), uvec3(1u), 1.0), vec3(1.0), _GLF_struct_1(mat3x2(1.0), vec3(1.0), 1.0), mat4(1.0), _GLF_struct_2(ivec4(1), mat3x2(1.0), mat3x2(1.0), vec2(1.0), 1.0, mat2x3(1.0), bvec2(true)), _GLF_struct_3(vec3(1.0), 1, 1u, mat3(1.0), mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(98.65, max(_GLF_IDENTITY(98.65, mix(float(_GLF_FUZZED(4941.7826)), float(_GLF_IDENTITY(98.65, clamp(98.65, 98.65, 98.65))), bool(true))), 98.65)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.0), clamp(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1.0), mix(float(_GLF_FUZZED(-1.0)), float(_GLF_FUZZED(227.036)), bool(false))), min(_GLF_IDENTITY(_GLF_FUZZED(-1.0), mix(float(_GLF_FUZZED(-1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(227.036, min(227.036, _GLF_IDENTITY(227.036, mix(float(_GLF_IDENTITY(227.036, (227.036) - 0.0)), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-1.0), mix(float(_GLF_FUZZED(-1.0)), float(_GLF_FUZZED(227.036)), bool(false)))))))), float(98.65), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-356.086), _GLF_FUZZED(54.00)), bvec2(false, false))).x > injectionSwitch.y)), false))))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))))))), mat2x3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, log(1.0), 1.0, 0.0))))), _GLF_struct_7(bvec4(true), _GLF_struct_5(bvec2(true)), true, _GLF_struct_6(mat4x3(1.0), uvec2(1u), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec4(2.9, -9.5, -9665.1763, 96.31).p))), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x3(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - log(1.0), _GLF_IDENTITY(float(mat2x4((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-4487.1550))))), 0.0)), clamp(float(mat2x4((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 1.0, 1.0, 1.0)))), 1, vec4(1.0), uvec4(1u), bvec4(true))), _GLF_struct_9(_GLF_struct_8(mat4x3(1.0), mat4(1.0), ivec4(1), ivec2(1), bvec4(true), 1.0, mat4(1.0)), bvec2(true), bvec2(true)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + _GLF_struct_replacement_10.subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (true ? ~ (~ (workgroup_base)) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | (uint(~ (~ (~ (workgroup_base)))))), _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))), ~ (~ ((uint(~ (~ (~ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base)))) | (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base)))))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ _GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) | 0u), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(usubBorrow(num_workgroup, 43981u, workgroup_base)))) + _GLF_struct_replacement_10.subgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) | 0u), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(usubBorrow(num_workgroup, 43981u, workgroup_base)))) + _GLF_struct_replacement_10.subgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base))))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) | 0u), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(usubBorrow(num_workgroup, 43981u, workgroup_base)))) + _GLF_struct_replacement_10.subgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base))))) | 0u) / 1u)) ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), 0u ^ (_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | (uint(~ (~ (~ (workgroup_base)))))))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base))))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | 0u)) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), 1u * (~ (~ (workgroup_base))))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u)), (uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u))) / 1u))))))), uint(uvec3((_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u)), (uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u))) / 1u))))))), 0u, 1u))), ~ (~ (~ (workgroup_base)))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u)))), clamp((_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u)))), (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u)))), (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))))), ~ (~ (~ (workgroup_base)))))))), 0u + (((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))))) + _GLF_struct_replacement_10.subgroup_base) / _GLF_IDENTITY(1u, (1u) << 0u)), workgroup_base + _GLF_struct_replacement_10.subgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ _GLF_IDENTITY((~ (~ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (~ (workgroup_base))), max((~ (~ (workgroup_base))), (~ (~ (workgroup_base))))), min((~ (~ (workgroup_base))), (~ (~ (workgroup_base)))))) | ((~ (~ (workgroup_base)))))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(~ (~ (~ (workgroup_base)))), 1u), (uvec2(uint(~ (~ (~ (workgroup_base)))), 1u)) - uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(uint(~ (~ (~ (workgroup_base)))), 1u), (uvec2(uint(~ (~ (~ (workgroup_base)))), 1u)) - uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(uint(~ (~ (~ (workgroup_base)))), 1u), (uvec2(uint(~ (~ (~ (workgroup_base)))), 1u)) - uvec2(0u, 0u)))))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (_GLF_IDENTITY(~ (workgroup_base), uint(uvec4(~ (workgroup_base), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ _GLF_IDENTITY((~ ((workgroup_base))), ((~ ((workgroup_base)))) + 0u))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base))))) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), 0u ^ (_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | (uint(~ (~ (~ (workgroup_base)))))))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base))))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | 0u)) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u))))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), (uint(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), 1u * (~ (~ (workgroup_base))))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u)), (uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u))) / 1u))))))), uint(uvec3((_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u)), (uint(uvec4(workgroup_base, (0u | 0u), 1u, 0u))) / 1u))))))), 0u, 1u))), ~ (~ (~ (workgroup_base)))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u)))), clamp((_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u)))), (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u)))), (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))))), ~ (~ (~ (workgroup_base)))))))), 0u + (((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))))) + _GLF_struct_replacement_10.subgroup_base) / _GLF_IDENTITY(1u, (1u) << 0u)), workgroup_base + _GLF_struct_replacement_10.subgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10.subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ~ (~ (~ (workgroup_base))))))))) + _GLF_struct_replacement_10.subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ _GLF_IDENTITY((~ (~ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (~ (workgroup_base))), max((~ (~ (workgroup_base))), (~ (~ (workgroup_base))))), min((~ (~ (workgroup_base))), (~ (~ (workgroup_base)))))) | ((~ (~ (workgroup_base)))))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (~ (~ (workgroup_base))))), max((uint(~ (~ (~ (workgroup_base))))), (uint(~ (~ (~ (workgroup_base))))))))), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (~ (~ (workgroup_base)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(~ (~ (~ (workgroup_base)))), 1u), (uvec2(uint(~ (~ (~ (workgroup_base)))), 1u)) - uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(uint(~ (~ (~ (workgroup_base)))), 1u), (uvec2(uint(~ (~ (~ (workgroup_base)))), 1u)) - uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(uint(~ (~ (~ (workgroup_base)))), 1u), (uvec2(uint(~ (~ (~ (workgroup_base)))), 1u)) - uvec2(0u, 0u)))))), (uint(~ (~ (~ (workgroup_base))))) | _GLF_IDENTITY((uint(~ (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (_GLF_IDENTITY(~ (workgroup_base), uint(uvec4(~ (workgroup_base), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (true ? (uint(~ (~ (~ (workgroup_base))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, workgroup_base)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (~ (workgroup_base)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY((workgroup_base), ~ _GLF_IDENTITY((~ ((workgroup_base))), ((~ ((workgroup_base)))) + 0u))) | 0u))))), ~ (~ (~ (workgroup_base))))))))))) + _GLF_struct_replacement_10.subgroup_base) / 1u), workgroup_base + _GLF_struct_replacement_10.subgroup_base))))) | 0u))) >> 0u)) * 1u) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) ^ 0))), 0 | (~ (_GLF_IDENTITY(1, 0 | (1))))))) * (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(94074) : _GLF_IDENTITY(4, min(4, 4)))))), 0 | ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(94074) : _GLF_IDENTITY(4, min(4, 4))))))))))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(40476) : 64)), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false) || false, ((false) || false) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
