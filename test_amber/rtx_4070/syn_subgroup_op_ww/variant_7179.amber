#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupID, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))) - uvec3(0u, 0u, 0u))))) - _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u))))))))), uint(uint(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY((0u), ((0u)) ^ 0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)))))))))) | (0u | 0u))), 0u), _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - 0u)))), 1u)))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), (true ? _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), (true ? ((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))) : _GLF_FUZZED(uvec3(44335u, 20894u, 144070u)))) : _GLF_FUZZED(uvec3(61934u, 28123u, 174070u)))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(((uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true))), injectionSwitch.x)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (((uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true))), injectionSwitch.x)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | uvec3(0u, 0u, 0u)) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))) >> 0u)))))), uint(uint(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))) | _GLF_IDENTITY((0u | 0u), min((0u | 0u), _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u)))))))), 0u), _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), 1u, 1u, 1u)))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), clamp(((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))))) | uvec3(0u, 0u, 0u), (((uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u))) | uvec3(0u, 0u, 0u)) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (uvec3(2u)) / uvec3(1u, 1u, 1u)))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) * (_GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))))))))).x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))).x) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))))), (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)) ^ 0u)) << 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)) ^ 0u)) << 0u)) + 0u)))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupID, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))) - uvec3(0u, 0u, 0u))))) - _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u))))))))), uint(uint(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY((0u), ((0u)) ^ 0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)))))))))) | (0u | 0u))), 0u), _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - 0u)))), 1u)))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), (true ? _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), (true ? ((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))) : _GLF_FUZZED(uvec3(44335u, 20894u, 144070u)))) : _GLF_FUZZED(uvec3(61934u, 28123u, 174070u)))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(((uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true))), injectionSwitch.x)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (((uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true))), injectionSwitch.x)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | uvec3(0u, 0u, 0u)) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))) >> 0u)))))), uint(uint(_GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(((0u) - _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(((0u) - 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x)), ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))) | _GLF_IDENTITY((0u | 0u), min((0u | 0u), _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u)))))))), 0u), _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), 1u, 1u, 1u)))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), clamp(((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) | 0u), _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u))))) | uvec3(0u, 0u, 0u), (((uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (((0u) - 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u))) | uvec3(0u, 0u, 0u)) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (uvec3(2u)) / uvec3(1u, 1u, 1u)))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) * (_GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))))))))).x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))).x) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) - 0u))), gl_WorkGroupID.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))))), (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)) ^ 0u)) << 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), (max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)) ^ 0u)) << 0u)) + 0u)))))) >> 0u))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).y, false, false)))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false, false)))))))))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), ! (_GLF_IDENTITY(! (true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))), (! (true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, true)))))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (workgroup_base))) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) && true)))), true, true))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, true, true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), bool(bvec4(false, false, true, true)))), true, true, true))), true))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), (! (bool(bvec4(false, false, true, true)))) && true))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), (! (bool(bvec4(false, false, true, true)))) && true))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true))))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))) && _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), (injectionSwitch.x < injectionSwitch.y)) && (true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))))))), true, true, true))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), false, false, false))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), false, false, false))), true)))))))), true, true, true))), true))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))))))), true, true, true))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), false, false, false))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), false, false, false))), true)))))))), true, true, true))), true))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))))))), true, true, true))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), false, false, false))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), false, false, false))), true)))))))), true, true, true))), true))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), true, false, false)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)), bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)), bool(bvec4(false, false, true, true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)), bool(bvec4(false, false, true, true))))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true, true))), true))) && _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7864.9481)), bool(false))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7864.9481)), bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7864.9481)), bool(false))) < injectionSwitch.y))))))) && (true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(bool(bvec4(false, false, true, true))))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(bool(bvec4(false, false, true, true))))))), false, false), false)))))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true)), (bool(bvec4(false, false, true, true))) && true))))))), ! (! ((! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true)), (bool(bvec4(false, false, true, true))) && true))))))))))), (! (bool(bvec4(false, false, true, true)))) && true))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(true, (true) && true), true, true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (true))) && true)) && true)))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), false), false))))), false, true, true)))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), true))), true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), bool(bool(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, _GLF_IDENTITY(true, (true) && true), true)))), true, true, true))))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, true, true))), true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) && true)) && true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 1u, 1u, 0u)))))), _GLF_IDENTITY((true ? (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) : _GLF_FUZZED(virtual_gid)), 0u ^ ((true ? (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) : _GLF_FUZZED(virtual_gid))))) ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))), (_GLF_IDENTITY((subgroup_local_id + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -67027, int(8779.9060))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, _GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)))), min((subgroup_size) / 1u, (subgroup_size) / 1u))), ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) << 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(subgroup_id)))), (subgroup_size) / 1u)))) / 1u), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - _GLF_IDENTITY(0, max(0, 0))), 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))) : _GLF_FUZZED(189928u))))) - 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1)) : _GLF_FUZZED(virtual_gid)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) * 1u)))))), ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)), (subgroup_size) / 1u)))) / 1u), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) - 0u))) - 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4((1), 0, 0, 0)))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - _GLF_IDENTITY(0, max(0, 0))), 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / _GLF_IDENTITY(1u, max(1u, 1u)), (subgroup_size) / 1u))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))) : _GLF_FUZZED(189928u))), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))) : _GLF_FUZZED(189928u)))) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))) : _GLF_FUZZED(189928u))))))) - 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, int(ivec2(0, (0 >> _GLF_IDENTITY(int(0), int(0)))))))) - 0), 1)) : _GLF_FUZZED(virtual_gid)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) * 1u)))))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / _GLF_IDENTITY(1u, min(1u, 1u)), (subgroup_size) / 1u)))) / 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) - 0u))) - 0u))))) : _GLF_FUZZED(46959u))));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 | (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED((~ 13896)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))))) << 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), (_GLF_IDENTITY((1), 0 | ((1)))) + 0)) + 0))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), (_GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), 0 | ((1)))) + 0)) + 0)))))) >> 0), (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) + (-67072 & 0)))))) : _GLF_FUZZED((-78953 * 48592))))), 4, 64, 4);
 if(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, 0 ^ (1)), 0, 0, 1))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) + 0)))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
