#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(bitfieldInsert(38760, 37789, 77266, (-84762 >> -24789))) : _GLF_IDENTITY(int(0), int(ivec2(int(0), 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))), ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-58399) : int(5)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), (_GLF_WRAPPED_LOOP(false)) && true), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0) | 0) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))), max((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))), 0 ^ ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))))))))))); _injected_loop_counter --)
    {
     GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.w = num_workgroup;
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) + int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), false || (_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))))))))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), false || (_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))))))))))))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -51564)); _injected_loop_counter --)
    {
     GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.xy.x = GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.w;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))))))))); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_GLF_IDENTITY(_injected_loop_counter --, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (_GLF_IDENTITY(2, min(2, 2))) >> 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2))))), min(0 | (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2))))), _GLF_IDENTITY(0, (0) - 0) | (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2)))))))))))))) ^ (_injected_loop_counter --)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.xy.y = workgroup_size;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))).y)) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))) * (gl_WorkGroupID)).x, _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 1u * (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, 0u ^ (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(0u, 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(0u, 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y, 0u + (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(0u, 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (0u) | (0u)), 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (0u) | (0u)), 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u, 0u) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy)).y) >> 0u)), (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)) | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y))) | (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, min(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).xy.y)) * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)), min((uvec2(subgroup_size, 0u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) * 1u), _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))), (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u)))) ^ 0u))) >> 0u))))) | uvec2(0u, 0u))))) + 0u), (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) & _GLF_IDENTITY(124119u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | (124119u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) & _GLF_IDENTITY(124119u, 0u | (124119u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 124119u) : _GLF_FUZZED(workgroup_base)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), max(1u * (subgroup_local_id + 1), 1u * (subgroup_local_id + 1))))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size)))), ((((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) ^ 0u))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), uint(uint(1u * (subgroup_local_id + 1)))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))))) % subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))
  {
   GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.z = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), uint(uint(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))))) >> 0u), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))));
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
  {
   atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(66889) : (1))) | (1)), 1)), (_GLF_IDENTITY(1, max(1, 1))) - _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 1)), (int(ivec2(4, 1))) | (int(ivec2(4, 1)))))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1, clamp((_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1, _GLF_IDENTITY((_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1, clamp((_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1, (_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1, (_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1)), (_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1)))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)) / 1))))), 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (true ? 4 : _GLF_FUZZED((65608 | 15981)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (true ? 4 : _GLF_FUZZED((65608 | 15981))))) >> 0));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size))))))), false, false, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size))))))), false, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size))))))), false, false, false)))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size))))))), false, false, false))))))) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ((_GLF_WRAPPED_IF_FALSE(false)) || false) || false)))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) * 1)), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (int(5)), ~ (~ (~ (int(5))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY(~ (int(5)), ~ (~ (~ (int(5))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) - 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY(~ (int(5)), ~ (~ (~ (int(5))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -63077)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true)))))) && true)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)) || (! (! (true))))))), (! (bool(bool(_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true)))))))) || false))))))))) && true)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), 0.0, 0.0, exp(0.0), sqrt(1.0)), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0), 1.0, tan(sqrt(0.0)), exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 6003.0516))), float(0.0), bool(true)))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))), 0.0, 0.0, exp(0.0), sqrt(1.0)) : _GLF_FUZZED(mat2x3(-60.10, -25.76, 6.8, 9.5, 1.8, -58.49))))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9755.7766, -191.516)) : injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), bvec2(true, false))), (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), sqrt(1.0)), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), sqrt(1.0)) : _GLF_FUZZED(mat2x3(-60.10, -25.76, 6.8, 9.5, 1.8, -58.49)))))) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (0.0) + 0.0))), exp(0.0), sqrt(1.0)), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(6.7 * float(false), (_GLF_IDENTITY(6.7 * float(false), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), (true ? mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)) : _GLF_FUZZED(-6.6))), mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)))))) - 0.0)))), (true ? _GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(6.7 * float(false), (_GLF_IDENTITY(6.7 * float(false), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), (true ? mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)) : _GLF_FUZZED(-6.6))), mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)))))) - 0.0)))), mix(float(float(_GLF_FUZZED((_GLF_IDENTITY(6.7 * float(false), (_GLF_IDENTITY(6.7 * float(false), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), (true ? mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)) : _GLF_FUZZED(-6.6))), mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)), mix(float(_GLF_IDENTITY(6.7 * float(false), mix(float(6.7 * float(false)), float(_GLF_FUZZED(-45.45)), bool(false)))), float(_GLF_FUZZED(-391.181)), bool(false)))))) - 0.0))))), float(_GLF_FUZZED(664.117)), bool(false))) : _GLF_FUZZED(4.8))), float(0.0), bool(true))), exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.0)), bool(false))), 0.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0)), _GLF_IDENTITY(float(mat3(float(mat3x4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.1))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)), (float(mat3(float(mat3x4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0))) * 1.0))), 0.0, 0.0)), 0.0))), sqrt(1.0)) : _GLF_FUZZED(mat2x3(-60.10, -25.76, 6.8, 9.5, _GLF_IDENTITY(1.8, mix(float(_GLF_IDENTITY(1.8, (1.8) + length(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED((vec2(-824.017, 7023.9253) - vec2(-6.3, 70.48)).g)), min(float(_GLF_FUZZED((vec2(-824.017, 7023.9253) - vec2(-6.3, 70.48)).g)), float(_GLF_FUZZED((vec2(-824.017, 7023.9253) - vec2(-6.3, 70.48)).g)))), bool(false))), -58.49))))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.1)), float(1.0), bool(true)))), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(clamp(step(-2476.9386, 9.0), -453.033, -26.33)) : injectionSwitch.x))), 1.0, 1.0, 1.0)), 1.0, sqrt(1.0), determinant(mat2(1.0, exp(0.0), length(0.0), 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0))), sqrt(1.0)), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0.0, 0.0, exp(0.0), sqrt(1.0)) : _GLF_FUZZED(mat2x3(-60.10, -25.76, 6.8, 9.5, 1.8, -58.49)))))) * vec2(1.0, 1.0))) - tan(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch.tt) : (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, min((0.0) + 0.0, (0.0) + 0.0))))), exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), sqrt(1.0)), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6.7 * float(false)))), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6.7 * float(false)))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6.7 * float(false)))), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), sqrt(1.0)) : _GLF_FUZZED(mat2x3(-60.10, -25.76, 6.8, 9.5, 1.8, -58.49))))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-79.93, 4.8)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(97.62)), bool(false)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), determinant(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)), 1.0, sqrt(1.0), determinant(mat2(1.0, exp(0.0), length(0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1867.6542))))), 0.0, 0.0, 0.0))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-695.108)), float(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0)), bool(true)))), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), 0.0, 0.0, exp(0.0), sqrt(1.0)) : _GLF_FUZZED(mat2x3(-60.10, -25.76, 6.8, 9.5, 1.8, -58.49)))))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(float(52544u)), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-56.31)), bvec2(true, false))))))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))))))).y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.z, 0u | (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.z))], uint(2), 4, 64, 4);
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       subgroupAll(false);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), true && (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))), false || (_GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))), ! (! ((! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(bvec4(! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))), ! (! ((! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_sizenext_virtual_gidnum_workgroup.z], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), ~ (~ (64))), _GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) | 0)))), int(ivec4((_GLF_IDENTITY(4, 0 ^ (4))), 0, 0, 1))), (_GLF_IDENTITY(4, 0 ^ (4))), (_GLF_IDENTITY(4, 0 ^ (4))))))), ~ (4))), min(_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), int(ivec4((_GLF_IDENTITY(4, 0 ^ (4))), 0, 0, 1))), (_GLF_IDENTITY(4, 0 ^ (4))), (_GLF_IDENTITY(4, 0 ^ (4))))))), ~ (4))), _GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), min((_GLF_IDENTITY(4, 0 ^ (4))), (_GLF_IDENTITY(4, 0 ^ (4))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), int(ivec4((_GLF_IDENTITY(4, 0 ^ (4))), 0, 0, 1))), (_GLF_IDENTITY(4, 0 ^ (4))), (_GLF_IDENTITY(4, 0 ^ (4))))))), ~ (4)))))), (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))), int(int(~ (~ (4)))))));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || false)))
          barrier();
        }
       else
        {
        }
       subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0)))) * 1), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
