#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_44 {
 bvec3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_43 {
 vec2 _f0;
 vec3 _f1;
 float _f2;
 mat3x4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_42 {
 uvec3 _f0;
} ;

struct _GLF_struct_41 {
 mat4x3 _f0;
} ;

struct _GLF_struct_45 {
 ivec3 _f0;
 uvec2 _f1;
 _GLF_struct_41 _f2;
 _GLF_struct_42 _f3;
 _GLF_struct_43 _f4;
 bvec3 _f5;
 _GLF_struct_44 _f6;
} ;

struct _GLF_struct_39 {
 bvec3 _f0;
 float _f1;
 float _f2;
} ;

struct _GLF_struct_40 {
 uvec2 _f0;
 bvec4 _f1;
 _GLF_struct_39 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_46 {
 ivec4 _f0;
 vec2 _f1;
 ivec2 _f2;
 _GLF_struct_40 _f3;
 mat4x2 _f4;
 uint subgroup_local_id;
 _GLF_struct_45 _f5;
} ;

struct _GLF_struct_36 {
 bvec3 _f0;
 vec2 _f1;
 bool _f2;
 ivec2 _f3;
 vec4 _f4;
 vec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_35 {
 ivec3 _f0;
 float _f1;
 mat3x2 _f2;
 float _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_37 {
 uint subgroup_size;
 bvec3 _f0;
 int _f1;
 _GLF_struct_35 _f2;
 _GLF_struct_36 _f3;
} ;

struct _GLF_struct_33 {
 uvec3 _f0;
 uvec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_34 {
 uint _f0;
 ivec2 _f1;
 bvec3 _f2;
 _GLF_struct_33 _f3;
 mat4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_38 {
 _GLF_struct_34 _f0;
 _GLF_struct_37 _f1;
} ;

struct _GLF_struct_30 {
 bool _f0;
} ;

struct _GLF_struct_29 {
 uvec3 _f0;
 ivec4 _f1;
 uint workgroup_size;
 bvec3 _f2;
 bvec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_31 {
 _GLF_struct_29 _f0;
 bvec2 _f1;
 _GLF_struct_30 _f2;
} ;

struct _GLF_struct_32 {
 uvec3 _f0;
 float _f1;
 _GLF_struct_31 _f2;
 uvec2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_26 {
 uvec3 _f0;
 uint _f1;
 uvec2 _f2;
 float _f3;
 mat4x2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_25 {
 mat4x2 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 float _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
 uvec3 _f1;
 vec3 _f2;
 bvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 mat4 _f2;
 _GLF_struct_25 _f3;
 mat2x3 _f4;
 _GLF_struct_26 _f5;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 bool _f1;
 vec4 _f2;
 uvec2 _f3;
 float _f4;
 bvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 bvec2 _f1;
 int _f2;
 mat3 _f3;
 ivec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 float _f1;
 mat3 _f2;
 ivec2 _f3;
 uvec2 _f4;
 uint _f5;
 float _f6;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 bvec4 _f1;
 vec4 _f2;
 _GLF_struct_15 _f3;
 mat3x2 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 bvec3 _f1;
 mat4 _f2;
 mat3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 int _f1;
 mat3 _f2;
 int _f3;
 mat4 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 uint _f2;
 mat4 _f3;
 bool _f4;
} ;

struct _GLF_struct_28 {
 _GLF_struct_14 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 ivec2 _f4;
 _GLF_struct_27 _f5;
 uint next_virtual_gid;
} ;

struct _GLF_struct_9 {
 uint _f0;
 mat4x3 _f1;
 uint _f2;
 float _f3;
 bvec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 bool _f1;
 ivec4 _f2;
 ivec3 _f3;
 int _f4;
 vec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 mat3x2 _f1;
 float _f2;
} ;

struct _GLF_struct_8 {
 int _f0;
 mat4 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 uvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 bvec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec2 _f1;
 ivec3 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_34(1u, ivec2(1), bvec3(true), _GLF_struct_33(uvec3(1u), uvec2(1u), mat2x4(1.0)), mat4(1.0), bvec4(true)), _GLF_struct_37(gl_SubgroupSize, bvec3(true), 1, _GLF_struct_35(ivec3(1), 1.0, mat3x2(1.0), 1.0, mat2x3(1.0)), _GLF_struct_36(bvec3(true), vec2(1.0), true, ivec2(1), vec4(1.0), vec3(1.0), ivec3(1))));
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(ivec4(1), vec2(1.0), ivec2(1), _GLF_struct_40(uvec2(1u), bvec4(true), _GLF_struct_39(bvec3(true), 1.0, 1.0), ivec2(1)), mat4x2(1.0), gl_SubgroupInvocationID, _GLF_struct_45(ivec3(1), uvec2(1u), _GLF_struct_41(mat4x3(1.0)), _GLF_struct_42(uvec3(1u)), _GLF_struct_43(vec2(1.0), vec3(1.0), 1.0, mat3x4(1.0), uvec2(1u)), bvec3(true), _GLF_struct_44(bvec3(true), bvec2(true))));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(_GLF_struct_0(uvec4(1u), ivec2(1), ivec3(1), bvec2(true), mat3x4(1.0), vec2(1.0)), _GLF_struct_1(mat4(1.0)), _GLF_struct_2(mat4x2(1.0), bvec2(true), uvec4(1u)), mat2x4(1.0)), _GLF_struct_5(uvec4(1u), _GLF_struct_4(ivec4(1)), bvec4(true)), _GLF_struct_8(1, mat4(1.0), mat4x3(1.0), _GLF_struct_6(mat2(1.0), mat3x2(1.0), 1.0), _GLF_struct_7(mat4x2(1.0), true, ivec4(1), ivec3(1), 1, vec4(1.0), mat3x4(1.0)), uvec2(1u), 1.0), _GLF_struct_10(_GLF_struct_9(1u, mat4x3(1.0), 1u, 1.0, bvec4(true), mat4(1.0)), gl_NumWorkGroups.x));
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(uvec3(1u), 1.0, _GLF_struct_31(_GLF_struct_29(uvec3(1u), ivec4(1), gl_WorkGroupSize.x, bvec3(true), bvec2(true), mat4(1.0)), bvec2(true), _GLF_struct_30(true)), uvec2(1u), mat3x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_32._f2._f0.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_38._f1.subgroup_size + _GLF_struct_replacement_46.subgroup_local_id;
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_14(_GLF_struct_12(mat3(1.0), 1, mat3(1.0), 1, mat4(1.0)), _GLF_struct_13(ivec3(1), bvec3(true), mat4(1.0), mat3(1.0), mat2x3(1.0)), 1u, mat4(1.0), true), _GLF_struct_18(mat4x2(1.0), bvec4(true), vec4(1.0), _GLF_struct_15(mat4(1.0), vec4(1.0)), mat3x2(1.0), _GLF_struct_16(mat2(1.0), 1.0, mat3(1.0), ivec2(1), uvec2(1u), 1u, 1.0), _GLF_struct_17(mat4x2(1.0), bvec2(true), 1, mat3(1.0), ivec4(1), mat4(1.0))), _GLF_struct_21(mat4x2(1.0), _GLF_struct_19(uvec2(1u), true, vec4(1.0), uvec2(1u), 1.0, bvec4(true), vec3(1.0)), _GLF_struct_20(mat2x3(1.0))), _GLF_struct_22(mat3x2(1.0)), ivec2(1), _GLF_struct_27(_GLF_struct_23(vec4(1.0), bvec2(true)), _GLF_struct_24(uvec2(1u), uvec3(1u), vec3(1.0), bvec3(true), uvec4(1u)), mat4(1.0), _GLF_struct_25(mat4x2(1.0), bvec4(true), mat2x4(1.0), mat4x2(1.0), 1.0, mat4x2(1.0)), mat2x3(1.0), _GLF_struct_26(uvec3(1u), 1u, uvec2(1u), 1.0, mat4x2(1.0), bvec2(true))), workgroup_base + subgroup_id * _GLF_struct_replacement_38._f1.subgroup_size + ((_GLF_struct_replacement_46.subgroup_local_id + 1) % _GLF_struct_replacement_38._f1.subgroup_size));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_struct_replacement_46.subgroup_local_id + 1 < _GLF_struct_replacement_38._f1.subgroup_size)
  {
   atomicStore(buf[_GLF_struct_replacement_28.next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_28.next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
