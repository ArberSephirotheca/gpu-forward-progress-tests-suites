#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 vec4 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 mat3 _f1;
 mat2 _f2;
 mat3x4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 mat3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 bvec2 _f1;
 uvec3 _f2;
 bvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat2 _f1;
 ivec3 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 mat4x3 _f1;
 vec4 _f2;
 ivec4 _f3;
 uvec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec4 _f1;
 vec4 _f2;
 float _f3;
 bool _f4;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat2 _f1;
 ivec4 _f2;
 uvec3 _f3;
 mat4x2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 ivec4 _f1;
 vec3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
 bool _f1;
 _GLF_struct_3 _f2;
 uint subgroup_local_id;
 _GLF_struct_7 _f3;
 _GLF_struct_10 _f4;
 mat4x3 _f5;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(1.0), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(uvec2(1u), true, _GLF_struct_3(_GLF_struct_0(mat2x4(1.0), ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), 0, 0, 0))), (~ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) / 1) : _GLF_FUZZED(-64691)))) >> 0), ~ _GLF_IDENTITY((~ (~ (1))), ~ (~ ((~ (~ (1)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), max(~ (~ (~ (1))), ~ (~ (~ (1)))))), (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0, 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))), ~ (~ (1)))))))), (((_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))), ~ (~ (1))))))))) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))) - 0))))), vec3(1.0), vec3(1.0)), _GLF_struct_1(uvec4(1u), ivec3(1)), _GLF_struct_2(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) | (_GLF_IDENTITY(1, max(1, 1))))), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED((208.664 / -943.394))), bool(false)))), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ 0)), uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u))), mat4x2(1.0), vec4(1.0)), bvec2(true)), gl_SubgroupInvocationID, _GLF_struct_7(mat2(1.0), ivec3(1), _GLF_struct_4(mat2x3(1.0)), _GLF_struct_5(true, uvec4(_GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), vec4(1.0), 1.0, true), _GLF_struct_6(bvec4(true), mat4x3(1.0), vec4(1.0), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(1, 1, 1))) | 0), 1)))) >> ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 1 * (2))), (int(_GLF_IDENTITY(2, 1 * (2)))) - 0))) << _GLF_IDENTITY(int(2), int(2))))), uvec4(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))))))), mat2x3(1.0))), _GLF_struct_10(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true))), true)))), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(1.0, log(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-290.299)), bool(false))))), sin(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? (1.0) : _GLF_FUZZED(normalize(-476.190))))))), min(float(mat4x3(1.0, log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) / 1.0), (false ? _GLF_FUZZED(-2216.1790) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) / 1.0)) - 0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, abs(1.0)))), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), 1.0 * (1.0)), mix(float(_GLF_FUZZED(81.03)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), 1.0 * (1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), 1.0 * (1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(mat4x3(1.0, log(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / abs(1.0)), 0.0, 1.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (_GLF_IDENTITY(1.0 * (1.0), (false ? _GLF_FUZZED(degrees(-3.9)) : 1.0 * (1.0)))) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0 * (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))))))), min(float(mat4x3(1.0, log(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))), float(_GLF_FUZZED(6.1)), bool(_GLF_IDENTITY(false, (false) && true)))) - 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(9326.2424))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0)), 1.0 * (float(float(1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), log(cos(vec4(0.0, 0.0, 0.0, 0.0))) + (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-7.4, 9.9, 70.61, -369.069)) : _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(933.878)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.7)), bool(false))), 1.0, sqrt(1.0), 1.0, 1.0, determinant(mat3(abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat4x2(-80.91, -284.858, -7946.9870, -462.919, -5448.3793, -2.3, -12.18, 8042.7798)) : mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.9) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(mat4(1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, cos(0.0), exp(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / round(length(normalize(1.0))))) - sqrt(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, determinant(mat3(abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))))), injectionSwitch.y), 1.0, 1.0))), 0.0, 0.0))), 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x3(1.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / cos(0.0), (false ? _GLF_FUZZED(roundEven(-3.0)) : _GLF_IDENTITY((1.0) / cos(0.0), clamp((1.0) / cos(0.0), (1.0) / cos(0.0), (1.0) / cos(0.0))))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(39.13)), bool(false))), 1.0 * (0.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)))), sin(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(1.0, log(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), float(_GLF_IDENTITY(mat3x4(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), 0.0, 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), 1.0, 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(mat3x2(2678.9202, -3.6, -233.815, -1971.7208, -64.28, -374.542))) : mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), 1.0, 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), 1.0, 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(mat3x2(2678.9202, -3.6, -233.815, -1971.7208, -64.28, -374.542))) : mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), 1.0, 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0))))), float(_GLF_FUZZED(-0.0)), bool(false)))))), 0.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))) - 0.0), 0.0)))), (false ? _GLF_FUZZED(-7.0) : dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0)))), min(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0)))), determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0)))))))))), mat3x4(mat4(mat3x4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), max(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), float(_GLF_IDENTITY(mat3x4(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0), (true ? mat3x4(mix(float(_GLF_FUZZED(-4.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x4(-7.0, -2.1, -5926.0773, -0.1, 2.8, -7120.9272, -2.7, -94.44, 2344.8558, 8624.8566, -6.4, -2.3)))))))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, sin(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(-0.1)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-892.053))))), (true ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-9993.8436))))))))))))))))), 1.0))) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), float(vec2(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0)))) + determinant(mat4(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(1.7))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (1.0)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)))), mix(float(_GLF_FUZZED(-2.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)))), mix(float(_GLF_FUZZED(6028.3462)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))))) + 0.0)), bool(true)))), bool(true)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, float(mat3(-3.3, determinant(mat2(0.0, 0.0, log(1.0), 0.0)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, exp(0.0)))))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-66.40, clamp(-66.40, _GLF_IDENTITY(-66.40, max(-66.40, -66.40)), -66.40)))), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1, 1, 1) ^ ivec3(1, 1, 1))), ivec3(0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1), (ivec4(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)) | ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1), (ivec4(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)) | ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1), (ivec4(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)) | ivec4(0, 0, 0, 0))))))))) ^ (ivec3(1))), _GLF_struct_8(uvec4(1u), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, false, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, false, true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, false, true)))))), false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))) | ((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))), max(((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))) | ((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))) | ((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))), (((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))) | ((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (1u))))))) / 1u))))) * 1u) * 1u)), bvec3(true), uvec4(1u)), _GLF_struct_9(mat2x3(1.0), mat3(1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) - 0.0)))), mat4x3(1.0), _GLF_struct_13(bvec3(true), _GLF_struct_11(ivec3(1), mat3(1.0), mat2(1.0), mat3x4(1.0), mat4x3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 0.0))))), _GLF_struct_12(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))), min(vec4(1.0), vec4(1.0))), ivec4(_GLF_IDENTITY(1, 0 ^ (1))), mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mat2x3(1.0))));
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 | (0))], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) - 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) << 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], _GLF_IDENTITY(0u | (gl_NumWorkGroups[0]), min(_GLF_IDENTITY(0u | (gl_NumWorkGroups[0]), min(0u | (gl_NumWorkGroups[0]), 0u | (gl_NumWorkGroups[0]))), 0u | (gl_NumWorkGroups[0])))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(0u, 0u, 0u) & uvec3(126302u, uvec2(89280u, 59464u))) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[0], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, _GLF_IDENTITY(87043u, max(87043u, 87043u)), 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(_GLF_IDENTITY(164267u, (164267u) + 0u), 87043u, 31328u))))), _GLF_IDENTITY(max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u)))))), max(max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u)))))), _GLF_IDENTITY(max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u)))))), (max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))))) | (max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(175782u, 52072u, 171474u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(175782u, 52072u, 171474u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0]) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(175782u, 52072u, 171474u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(175782u, 52072u, 171474u)))), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0] : _GLF_FUZZED(5426u))))), 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u), ~ (~ (uvec3(0u, 0u, 0u) & uvec3(164267u, 87043u, 31328u))))))))))), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (1u))) / 1u))), (true ? uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (1u))) / 1u))) : _GLF_FUZZED(uvec3(133469u, 68072u, 47979u)))))[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))]))))) | 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))]))))) | 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[0], _GLF_IDENTITY(0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))]), (0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])) / 1u)))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), clamp((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), max((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-80228)))], 0u | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])), _GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))])), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))]))))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) << 0u), 1u)), 1u))[0])), max(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0])), max(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0])), _GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (true ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(43532))))])))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))), clamp((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))[0]))))))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))), (_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[0]))))), max((_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))[0], 0u | (gl_NumWorkGroups[0]))))), 1u)))), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[2])))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false))))))), true, false, true))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)), min(uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)))))), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 1u, 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)))))) + _GLF_struct_replacement_14.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), uint(uvec2(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))), (max(subgroup_id, subgroup_id)) | 0u))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)), 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))), 1u)))) / 1u))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u))))), ((~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))) | 0u), (~ _GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (max(subgroup_id, subgroup_id)) | 0u))))), (false ? _GLF_FUZZED(subgroup_size) : (~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (max(subgroup_id, subgroup_id)) | 0u))))))), ((~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))) | 0u)) + 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), max((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))))))))) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ~ (~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), max((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), max((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))))))))) >> 0u)) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | 0u), subgroup_id))))))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), ~ (~ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, min((0u) - 0u, (0u) - 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) | (uint(6u))), uint(_GLF_IDENTITY(6u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(6u, (6u) | (6u))))))))))) * subgroup_size, uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (clamp(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) | 0u))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), max(0u + (subgroup_id), 0u + (subgroup_id))))) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) * (1u | 0u)), min(subgroup_id, subgroup_id)))))))) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))) * subgroup_size, 0u, 0u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(152306u, (_GLF_IDENTITY(152306u, (152306u) + 0u)) << (1u ^ 1u)), 92497u, 139810u)) : uvec3(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | (_GLF_IDENTITY(max(subgroup_id, subgroup_id), ~ (~ (max(subgroup_id, subgroup_id))))))))))) * subgroup_size, 0u, 0u)))), ((_GLF_IDENTITY(0u | 0u, uint(uvec2(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (0u) << 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u)))), 0u)))) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))) + (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size, 0u, 0u), (false ? _GLF_FUZZED(uvec3(152306u, 92497u, _GLF_IDENTITY(139810u, _GLF_IDENTITY(uint(uint(139810u)), (uint(uint(139810u))) / 1u)))) : uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u)) * subgroup_size, 0u, 0u)))))))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) | (_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED(workgroup_size)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, 0u))))) + _GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u | 0u) ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))), max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) >> 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) >> 0u))) - 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), uint(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 1u, 1u, 1u)))))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(uint(0u), uint(0u)))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), max(subgroup_id, subgroup_id))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), max(subgroup_id, subgroup_id))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))))))) * subgroup_size))))) + _GLF_IDENTITY(((_GLF_struct_replacement_14.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, int(ivec4((1) - 0, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY((9477 & 0), ((9477 & 0)) / 1))))))), 1, 1))) % subgroup_size), 1u * (((_GLF_struct_replacement_14.subgroup_local_id + 1) % subgroup_size)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) - 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))))))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))))))) || false))))) && true))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (4) / (1 ^ 0)), 0, 1))), 64, 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)))), true), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), true)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y)), true), true)))))))))))))))), true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))))))), true))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), _GLF_IDENTITY(true, (true) && true))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true), true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(488.130) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(488.130) : injectionSwitch.y)) : _GLF_FUZZED(621.446)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(488.130) : injectionSwitch.y)))) || false))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) && true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y))), false, false))))))), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)), min(vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true)))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, (_GLF_IDENTITY((2) * 1, min(_GLF_IDENTITY((2) * 1, _GLF_IDENTITY(((2) * 1) << 0, ~ (~ (((2) * 1) << 0)))), (2) * 1))) | ((2) * 1)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
