#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8521.3314, -3.9)) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(vec2(-8521.3314, _GLF_IDENTITY(-3.9, mix(float(_GLF_FUZZED(float(134505u))), float(_GLF_IDENTITY(-3.9, min(-3.9, -3.9))), bool(true))))) : injectionSwitch, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   return;
  }
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz = GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.y = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w = subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w = subgroup_size, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w = subgroup_size, 1u * _GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w = subgroup_size), (true ? (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w = subgroup_size) : _GLF_FUZZED(76788u))))))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-82.32), _GLF_FUZZED(3.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), false, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 1u))) + 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), false)))), false, true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(false, false, false, true))), bool(_GLF_IDENTITY(bvec3((bool(bvec4(false, false, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(bvec4(false, false, false, true))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3((bool(bvec4(false, false, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec4(false, false, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), true && (! (bool(bvec4(false, false, false, true)))))) || false)))), ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), true && (! (bool(bvec4(false, false, false, true)))))) || false))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), true && (! (bool(bvec4(false, false, false, true)))))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), true && (! (bool(bvec4(false, false, false, true)))))) || false)))), false || ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), true && (! (bool(bvec4(false, false, false, true)))))) || false)))))))))))) || false))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ 0.9)), _GLF_FUZZED((vec4(-85.25, -574.598, 0.1, -992.093) + -511.008).r)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, true)))), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(85.46)), bool(false))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(93.75)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], tan(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(false, false || (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(6.2)), float(cos(0.0)), bool(true))), abs(_GLF_IDENTITY(1.0, float(mat2x3(1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(7.0) : float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.3) : 0.0)), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), cos(0.0), cos(0.0))), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(7.0) : float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) + 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))))), clamp((false ? _GLF_FUZZED(7.0) : float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) + 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), (false ? _GLF_FUZZED(7.0) : float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) + 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, cos(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), (false ? _GLF_FUZZED(7.0) : float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, cos(0.0), abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED(-1.0)), float((1.0) - 0.0), bool(true))))) + 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((1.9 + -754.443))), bool(false))), 1.0, 0.0, 1.0))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, false, false)))) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, false, false)))) && true))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.x = num_workgroup, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)), (num_workgroup) | 0u)) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.x = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) | (workgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) - 0u)) | (workgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) << 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))))))), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 1u, 0u))), _GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) | ((workgroup_size) | (workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), workgroup_size)), (workgroup_size) | (workgroup_size)))), 0u)), uvec2(1u, 1u) * ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 1u, 0u))), _GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) | ((workgroup_size) | (workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), workgroup_size)), (workgroup_size) | (workgroup_size)))), 0u)))) << uvec2(0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max(_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))), (workgroup_size)))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), uint(_GLF_IDENTITY(uvec4((workgroup_size) | (workgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(uvec4((workgroup_size) | (workgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uvec4((workgroup_size) | (workgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), ~ (~ (uvec4((workgroup_size) | (workgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u, ((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u) << 0u)), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), (true ? _GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), min((workgroup_size) | (workgroup_size), (workgroup_size) | (workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), _GLF_IDENTITY(0u, (0u) | (0u)))) << uvec2(0u, 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size))) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u, min((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_size)))))), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u, _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u, clamp((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u, (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u, (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u)), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), 0u)) << uvec2(0u, 0u)))) | 0u)))))) * 1u)), workgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, false)))))))), false, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-16.95, 1077.8542)) : injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-28.23 / _GLF_IDENTITY(573.179, (573.179) - sin(0.0))))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.y = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0), (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sin(937.949)) : 0.0)))) / 1.0))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, false)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false)))), _GLF_IDENTITY(false, (false) && true), false, false))))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), false), bvec2(bvec3(bvec2(true && (false), false), false)))))))), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))) || false)))), _GLF_IDENTITY(false, (false) && true), false, false))))), false, false, true)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && true)))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false || (bool(bool(false))), false || (false || (bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))))))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))))))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))))))))))), _GLF_IDENTITY(false, ! (! (false))))))), true)))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) * uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)))))))[0], _GLF_IDENTITY(gl_WorkGroupID[1], (_GLF_IDENTITY(gl_WorkGroupID[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[_GLF_IDENTITY(1, (1) >> 0)], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_base[2]) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[_GLF_IDENTITY(1, (1) >> 0)])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupID[1])), 0u ^ (~ (~ (gl_WorkGroupID[1]))))), gl_WorkGroupID[1]))) ^ 0u), gl_WorkGroupID[2])).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), true))), false))))), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(880.667) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])).y))))), true, false), false))), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat3x2(5.3, 7.1, -994.913, -64.69, -2249.2060, -98.77) * vec3(-781.392, -63.19, 8.3))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x2(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat4x2(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0), (mat4x2(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), 1.0, 1.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false), false))), false))))), false)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false)))) && true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.y * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.z = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), ~ (~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.z = workgroup_base)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.z + _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, clamp(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).xyz.y * GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w + GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.z = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))), (_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.z + GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.xyz.y * _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (false ? _GLF_FUZZED((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id) << uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id) << uvec4(_GLF_IDENTITY(0u, (0u | 0u) | (0u)), 0u, 0u, 0u)), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) ^ (_GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id) << uvec4(0u, 0u, 0u, 0u)), (((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id) << uvec4(0u, 0u, 0u, 0u))) | (((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id) << uvec4(0u, 0u, 0u, 0u)))))) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) * 1u)))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size)) & subgroup_local_id, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id), min(max(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id), _GLF_IDENTITY(max(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id), (max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id))))), GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size & subgroup_local_id)) << uvec4(0u, 0u, 0u, 0u))))))))) : GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).w + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y), uint(_GLF_IDENTITY(uvec2((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y), 0u), max(uvec2((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y), 0u), uvec2((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y), 0u))))) >> 0u)) << uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.3))))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.3))))), float(mat3x4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.3))))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))), injectionSwitch.x))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) ^ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) ^ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).w, (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) ^ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).w) + 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) ^ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).w)))), 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) ^ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size)).w)))), 0u, (1u | 0u))), (uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), (1u | 0u)))) + 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y) >> 0u)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y) >> 0u)) / 1u), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y) >> 0u)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0)))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y) >> 0u)) / 1u), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y) >> 0u)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0)))))))) ^ 0u) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size[3]))), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size[3]))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size[3]))), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size[3])))) | (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size[3]))))), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size[3]))))), uint(1u))) + 0u)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, uint(uvec3(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))))), 0u, (1u | 0u))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) << 0u), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))))), 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w)), 0u, (1u | 0u)))) + 0u, ((uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) << 0u), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) << 0u), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))), ((_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) << 0u), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))))) | ((_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) << 0u), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ~ (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w)), 0u, (1u | 0u)))) + 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), 0u, (1u | 0u))), (uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, _GLF_IDENTITY(0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(false, ! (! (false)))))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, clamp(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))))).w), (0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(false, ! (! (false)))))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, clamp(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))))).w)) ^ (0u | 0u))), 0u, (1u | 0u)))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + _GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) << 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), 0u, (1u | 0u))), (uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, _GLF_IDENTITY(0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w), clamp(0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w), 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w), 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w)))), 0u, (1u | 0u)))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), 0u, (1u | 0u))), (uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size : _GLF_FUZZED(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size))).w)), 0u, (1u | 0u)))) + 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, clamp(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y), uint(uint((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y)))) >> 0u)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), 0u ^ (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u | (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u)))) + _GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), uint(uint(_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp(_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), clamp((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))) - 0u), _GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), uint(uvec4((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))))))), 0u, (1u | _GLF_IDENTITY(0u, (0u) | (0u))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + _GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), uint(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))))), 0u, (1u | 0u))), clamp(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + _GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), uint(uint((_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size, uvec4(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size[0], GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size[1], GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size[2], GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size[3])).w))))), 0u, (1u | 0u))), uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), clamp(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))))))), uint(uvec4(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), clamp(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))))))), 1u, 1u, 1u)))), uint(uvec2(_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), clamp(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))))))), uint(uvec4(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint(uint(_GLF_IDENTITY(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), clamp(uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), uint((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))))))), 1u, 1u, 1u)))), (0u | 1u))))), 0u, (1u | 0u))), uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), (_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) >> 0u)) - 0u), uint(uint(_GLF_IDENTITY((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w), ((GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)) | 0u))))), 0u, (1u | _GLF_IDENTITY(0u, (0u) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))) - 0u), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)), (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w))) | (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, 0u + (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))), 0u, (1u | 0u)))) + 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && true), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size)))) << (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))).z], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) + 0));
 if(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, clamp(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size) / uvec4(1u, 1u, 1u, 1u)).y) | (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y) | 0u), GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_size.y)) + 1 < _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, max(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_basesubgroup_size.w)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true, false)))) || false)) || false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(71604))), vec2(_GLF_IDENTITY(_GLF_FUZZED(98.12), min(_GLF_FUZZED(98.12), _GLF_FUZZED(98.12))), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.7)), min(float(_GLF_FUZZED(-0.7)), _GLF_IDENTITY(float(_GLF_FUZZED(-0.7)), 0.0 + (float(_GLF_FUZZED(-0.7)))))), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY((bool(bvec4(false, false, true, false))), bool(bvec4(_GLF_IDENTITY((bool(bvec4(false, false, true, false))), ((bool(bvec4(false, false, true, false)))) && true), false, false, false))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))))), ((_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0))), (float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0)))) / 1.0)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0))), (float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0)))) / 1.0)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0))), (float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0)))) / 1.0)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0))), (float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(1.0)))) / 1.0)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), false)))))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, 1.0)))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) && true))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))) && true))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))) && true))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(log(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), min(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), (_GLF_IDENTITY(log(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ vec2(2.2, 470.708).s))), bool(false))), 1.0, 1.0)))), 0.0, abs(0.0))), 0.0 + (float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0)))))), 1.0)), min(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0))))) - vec2(0.0, 0.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -7710.2581))), float(0.0), bool(_GLF_IDENTITY(true, false || (true))))), injectionSwitch.x)) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY((false ? _GLF_FUZZED(6.5) : injectionSwitch.y), ((false ? _GLF_FUZZED(6.5) : injectionSwitch.y)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-0.7 * -603.612))), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(6.5) : injectionSwitch.y), ((false ? _GLF_IDENTITY(_GLF_FUZZED(6.5), float(mat4(_GLF_FUZZED(6.5), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(sqrt(1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))) : injectionSwitch.y)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-0.7 * -603.612))), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(injectionSwitch)) : injectionSwitch)).y)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y)), 0.0, sqrt(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(6.5) : injectionSwitch.y, (true ? false ? _GLF_FUZZED(6.5) : injectionSwitch.y : _GLF_FUZZED(65.70))))), 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y)), 0.0, sqrt(0.0), 0.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9532.2328)), float(injectionSwitch.y), bool(true))), (false ? _GLF_IDENTITY(_GLF_FUZZED(6.5), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-57.19)), (false ? _GLF_FUZZED(919.044) : float(_GLF_FUZZED(-57.19)))), float(_GLF_FUZZED(6.5)), bool(true))) : injectionSwitch.y))))), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(6.5), max(_GLF_FUZZED(6.5), _GLF_FUZZED(6.5))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-623.329, clamp(_GLF_IDENTITY(-623.329, (true ? -623.329 : _GLF_FUZZED(-2331.0649))), _GLF_IDENTITY(-623.329, (_GLF_IDENTITY(-623.329, (true ? -623.329 : _GLF_FUZZED(9262.6136)))) - 0.0), -623.329)))), bool(false))) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y), true && (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))))))), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))))))).y))))), true), true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(0.0, 0.0) + (vec2(injectionSwitch))))).x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / abs(1.0)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y)), injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1) / 1, clamp(_GLF_IDENTITY((2), ((2)) / 1) / 1, _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1) / 1, 0 | (_GLF_IDENTITY((2), ((2)) / 1) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1) / 1, 0 | (_GLF_IDENTITY((2), ((2)) / 1) / 1))))), 2)), (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1) / 1, clamp(_GLF_IDENTITY((2), ((2)) / 1) / 1, _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1) / 1, 0 | (_GLF_IDENTITY((2), ((_GLF_IDENTITY(2, max(2, 2)))) / 1) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1) / 1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))), ((2)) / 1) / 1))))), 2))) - 0)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, sqrt(1.0)))))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), false)))), (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), vec2(_GLF_FUZZED(float(-26206)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false), false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false), false))), _GLF_IDENTITY(false, ! (! (false))), false))))))))), true, false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (! (bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), true))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
