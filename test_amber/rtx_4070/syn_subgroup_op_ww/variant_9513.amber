#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1373.3490)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1373.3490)), float(injectionSwitch.y), bool(true)))))), false, true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1373.3490)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1373.3490)), float(injectionSwitch.y), bool(true)))))), false, true, true)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true, false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((true), true && ((true)))))))) || false)))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))) || false)))) || (false)), true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))) || false)))) || (false)), true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))))) || false), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))), true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u | 0u) ^ (0u), min((0u | 0u) ^ (0u), (0u | 0u) ^ (0u)))), 0u, 0u)).x, (gl_NumWorkGroups.x) - 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u | 0u) ^ (0u)), 0u, 0u)).x, (gl_NumWorkGroups.x) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) + 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(_GLF_IDENTITY(0u, (0u) + 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5323.5804)), float(injectionSwitch.x), bool(true)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]), (false ? _GLF_FUZZED(fma(-64.49, 39.45, -4.2)) : _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]))) : injectionSwitch.x))))), clamp(_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED((-3448.6634 - -1.9)) : abs(1.0))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x))))), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]), mix(float(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0])), float(_GLF_FUZZED(5713.2503)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]), mix(float(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0])), float(_GLF_FUZZED(5713.2503)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]), mix(float(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0])), float(_GLF_FUZZED(5713.2503)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]), mix(float(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0])), float(_GLF_FUZZED(5713.2503)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]), mix(float(_GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0])), float(_GLF_FUZZED(5713.2503)), bool(false))))) : _GLF_FUZZED(-9.7))) : injectionSwitch.x))) - 0.0)))), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x)))))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x))))), clamp(abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-14.71)), bool(false))), (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x))))), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))))), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-5495.3031, 614.846)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(vec2(-74.20, 2.4))) : injectionSwitch)).x)))))))) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))) && true)), false, false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(4.3, min(4.3, _GLF_IDENTITY(4.3, min(_GLF_IDENTITY(4.3, min(4.3, 4.3)), 4.3)))), -4.8, 463.091, -4.7)) : mat2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.8))))) : _GLF_FUZZED(faceforward(-15.47, -47.98, 4.9))))))))), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(895.105, 62.66, _GLF_IDENTITY(9.4, clamp(9.4, 9.4, 9.4)))[0], float(_GLF_IDENTITY(mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), abs(0.0), 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(895.105, 62.66, _GLF_IDENTITY(9.4, clamp(9.4, 9.4, 9.4)))[0], float(_GLF_IDENTITY(mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), abs(0.0), 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(895.105, 62.66, _GLF_IDENTITY(9.4, clamp(9.4, 9.4, 9.4)))[0], float(_GLF_IDENTITY(mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), abs(0.0), 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : injectionSwitch.x), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(895.105, 62.66, _GLF_IDENTITY(9.4, clamp(9.4, 9.4, 9.4)))[0], float(_GLF_IDENTITY(mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), abs(0.0), 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : injectionSwitch.x) : _GLF_FUZZED(-8311.1490))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(895.105, 62.66, _GLF_IDENTITY(9.4, clamp(9.4, 9.4, 9.4)))[0], float(_GLF_IDENTITY(mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), abs(0.0), 1.0, 1.0), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (_GLF_IDENTITY(true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06)), (true ? mat3(vec3(895.105, 62.66, 9.4)[0], 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3(-439.917, 4675.9558, 11.16, -75.63, 1.5, -885.260, -54.04, 1194.4604, -32.06))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(895.105, 62.66, 9.4)[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(895.105, 62.66, 9.4)[0] : _GLF_FUZZED(36.14)))) : injectionSwitch.x))))))), clamp(abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(895.105, 62.66, 9.4)[0]) : injectionSwitch.x))))), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8394.0978) : 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(895.105, mix(float(_GLF_FUZZED(10.99)), float(895.105), bool(true))), 62.66, 9.4), vec3(mat4x2(vec3(_GLF_IDENTITY(895.105, mix(float(_GLF_FUZZED(10.99)), float(895.105), bool(true))), 62.66, 9.4), 0.0, 1.0, 1.0, abs(1.0), 0.0)))[0]) : injectionSwitch.x))))), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(895.105, _GLF_IDENTITY(62.66, min(62.66, 62.66)), 9.4)[0]), clamp(_GLF_FUZZED(vec3(895.105, _GLF_IDENTITY(62.66, min(62.66, 62.66)), 9.4)[0]), _GLF_FUZZED(vec3(895.105, _GLF_IDENTITY(62.66, min(62.66, 62.66)), 9.4)[0]), _GLF_FUZZED(vec3(895.105, _GLF_IDENTITY(62.66, min(62.66, 62.66)), 9.4)[0]))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)))))))) > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, tan(0.0)))) > injectionSwitch.y))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(247.796, -905.873)) : injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(247.796, -905.873)) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(247.796, -905.873)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(247.796, -905.873)) : injectionSwitch)))), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), 0.0, 0.0, 1.0))).y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(33.66), _GLF_FUZZED(-2370.4599)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((false ? -35.35 : -1.8))), float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), bool(true))), (injectionSwitch)[1]), bvec2(true, true))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(33.66), _GLF_FUZZED(-2370.4599)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((false ? -35.35 : -1.8))), float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), bool(true))), (injectionSwitch)[1]), bvec2(true, true))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(33.66), _GLF_FUZZED(-2370.4599)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((false ? -35.35 : -1.8))), float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), bool(true))), (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(33.66), _GLF_FUZZED(-2370.4599)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((false ? -35.35 : -1.8))), float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), bool(true))), (injectionSwitch)[1]), bvec2(true, true))).y)))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((workgroup_base)))))) + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((workgroup_base)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((workgroup_base)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((workgroup_base)))))) + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) - 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) * int(_GLF_ONE(1.0, injectionSwitch.y))), 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0), int(4)))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, true)), true, true), bvec3(bvec4(bvec3(bool(bvec3(false, false, true)), true, true), true))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(bvec3(_GLF_DEAD(false), false, true)))) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u, 1u, (1u | 1u))), (uint(uvec4(subgroup_local_id + 1, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(167928u))), (1u | 1u)))) + 0u), _GLF_IDENTITY((uint(uvec4(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u))), 1u, (1u | 1u)))) ^ 0u, (_GLF_IDENTITY((uint(uvec4(subgroup_local_id + 1, 0u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u + ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(1u, uint(uint(1u))) * (1u)) | 1u), 0u + ((_GLF_IDENTITY(1u, 1u * (1u)) | 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), ((_GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u ^ ((1u)))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | 1u)) * 1u)))) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), 0u + ((_GLF_IDENTITY(1u, 1u * (1u)) | 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), ((_GLF_IDENTITY(1u, 1u * (1u)) | 1u)) * 1u)))) / 1u)) | 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))), ((_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))) / 1u), (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))))))), 0u | ((uint(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) * 1u), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))) | 1u, 0u | (1u | 1u)))))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | _GLF_IDENTITY((0u), 0u + (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))), _GLF_IDENTITY(0u, (0u) | (0u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) | ((_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))))), 0u | ((_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) * 1u), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))) | 1u, 0u | (1u | 1u))))))), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) * 1u), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))) | 1u, 0u | (1u | 1u))))))), (uint(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) * 1u), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))) | 1u, 0u | (1u | 1u)))))))) | (uint(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) * 1u), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))) | 1u, 0u | (1u | 1u)))))))))) | (uint(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) * 1u), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, max(1u, 1u)))) | 1u, 0u | (1u | 1u)))))))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), uint(uvec4((0u), 1u, 1u, 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))))) | 0u)) - 0u))) < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(fract(-78.14)) : _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0)))), sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(0.0), 0.0, 0.0)))) | _GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ ((int(1))), 0 | (~ ((int(1)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, 0u))))) : _GLF_FUZZED(subgroup_size))), 0u, 1u, (1u | 1u))), (uint(uvec4(subgroup_local_id + 1, 0u, 1u, (1u | 1u)))) + 0u), _GLF_IDENTITY((uint(uvec4(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) << (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u)))))))))), 1u, (1u | 1u)))) ^ 0u, (_GLF_IDENTITY((uint(uvec4(subgroup_local_id + 1, 0u, _GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), (false ? _GLF_FUZZED(atomicMax(subgroup_local_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))) : (_GLF_IDENTITY(1u, 1u * (1u)) | 1u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) | 1u), 0u + ((_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)))) | 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(1u * _GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(workgroup_size))), clamp(1u * (1u), _GLF_IDENTITY(1u * (1u), (true ? _GLF_IDENTITY(1u, (1u) / 1u) * (1u) : _GLF_FUZZED(subgroup_local_id))), 1u * (1u)))) | 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u * (1u)) | 1u)) * 1u)))) / 1u)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)), _GLF_IDENTITY(0u, (0u) | 0u) | (0u)), (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))), ~ (~ (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))))))))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), max(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))))))), max((uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), max(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))))))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), max(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))))))))))))), (true ? 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) - 0u))) | 1u, 0u | (1u | 1u)))))), max(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))), (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))))) | (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))))))))), max((uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), max(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) + 0u), 1u)) | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)) | 1u)))))), uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, (1u | 1u) >> 0u))))))))))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))), (0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))) | (0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))))), max(uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u)))))), uvec4(subgroup_local_id + 1, 0u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 0u)), (uint(uvec4(1u, 0u, 1u, 0u))) + 0u)) | 1u, 0u | (_GLF_IDENTITY(1u | 1u, 0u | (1u | 1u))))))))))))) : _GLF_FUZZED(num_workgroup)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((0u), ((0u)) | 0u), 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY((0u), ((0u)) | 0u), 0u, 0u), 0u))))) | (_GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (0u) | (0u))) | 0u, max((_GLF_IDENTITY(0u, (0u) | (0u))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), max(~ (_GLF_IDENTITY(0u, min(0u, 0u))), ~ (_GLF_IDENTITY(0u, min(0u, 0u))))))), 0u, 0u)))) | (0u))) | 0u)))) | 0u)) - 0u))) < subgroup_size)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), bool(bvec4(bool(bool((! (false)))), true, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-30.37), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-67.05)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))).y, injectionSwitch.y))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, true), bvec3(bvec3(bvec3((! (false)), true, true))))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, true), bvec3(bvec3(bvec3((! (false)), true, true))))))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, true), bvec3(bvec3(bvec3((! (false)), true, true))))))))))))), (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, true), bvec3(bvec3(bvec3((! (false)), true, true))))))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, true), bvec3(bvec3(bvec3((! (false)), true, true))))))))))))), (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch)).x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch)).x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))), (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)) : injectionSwitch.y))))), true && (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), exp(0.0))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.1) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(203.951)), bvec2(true, false))).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0))))), clamp(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0))))), float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0))))), float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)))))))) < injectionSwitch.y)))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, sqrt(1.0)), vec4(1.0, 0.0, 0.0, 0.0)))) - 0.0)))))) < injectionSwitch.y)))))))) && true)))))), true, true)))) && true))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), true)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), false)))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), false), false)))), false, true))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-20110)))), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       subgroupAll(false);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))) && true)) && true))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.1), clamp(_GLF_FUZZED(0.1), _GLF_FUZZED(0.1), _GLF_FUZZED(0.1)))), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(86340) : int(_GLF_ONE(1.0, injectionSwitch.y)))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-3955.8769), _GLF_FUZZED(-408.835), (vec3(injectionSwitch, 1.0))[2]), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_IDENTITY((vec3(injectionSwitch, 1.0)), min((vec3(injectionSwitch, 1.0)), (vec3(injectionSwitch, 1.0))))[1], _GLF_FUZZED(2.2)), bvec3(true, true, false))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) || false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, false)), true, false))))) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false))) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, false)))) || false)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), ! (! ((false)))))) || false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(smoothstep(-3.7, 26.21, vec2(-3775.5895, 9845.3681))) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))).y, injectionSwitch.y, injectionSwitch.y)), false, false)))) || false)))), false, false, true))), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) + vec2(0.0, 0.0)).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), min(float(vec2(injectionSwitch.x, 0.0)), float(vec2(injectionSwitch.x, 0.0))))))), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), min(float(vec2(injectionSwitch.x, 0.0)), float(vec2(injectionSwitch.x, 0.0))))))), injectionSwitch.x)) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), min(float(vec2(injectionSwitch.x, 0.0)), float(vec2(injectionSwitch.x, 0.0))))))), injectionSwitch.x)) > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), min(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))))))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))) && true))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false))))))))))))))) && true), _GLF_IDENTITY(true, ! (! (true))), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
    {
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
