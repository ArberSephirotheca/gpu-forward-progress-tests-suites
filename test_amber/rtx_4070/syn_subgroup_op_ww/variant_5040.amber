#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size;
 uvec4 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uvec4 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7497.8648))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy = GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.w = subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y = subgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))), false, true, false))) && true))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x) ^ 0u);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))));
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.3)), bool(_GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + 0.0)))) / 1.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.w = num_workgroup;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), (_GLF_IDENTITY(_injected_loop_counter < (1 & 1), true && (_injected_loop_counter < (1 & 1)))) && true)); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), min(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, int(int(1)))])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(14276u, 77046u, 165143u) & uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) && true)))), bool(bvec4(true, false, false, false)))) || false) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), 1, 0, 1)))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), 1, 0, 1)))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), 1, 0, 1)))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), 1, 0, 1)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), 1, 0, 1)))))) : _GLF_FUZZED(ivec2(-609, -53879)[0]))) >> _GLF_IDENTITY(int(2), int(2))) / 1))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false || (_GLF_DEAD(false))), true, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w = _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u);
 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy.y = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z * GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy.y, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z * GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z * GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy.y));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy.x = workgroup_base;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy.x + GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.w * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.y = virtual_gid;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), false)))), false, true, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.y) - _GLF_IDENTITY(0u, min(0u, 0u)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.49)), bool(false)))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), clamp(0 >> _GLF_IDENTITY(int(6), int(6)), 0 >> _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), (0 >> _GLF_IDENTITY(int(6), int(6))) | (0 >> _GLF_IDENTITY(int(6), int(6)))), 0 ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), min(0 >> _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), 0 ^ (0 >> _GLF_IDENTITY(int(6), int(6))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy) / uvec2(1u, 1u)) : _GLF_FUZZED(uvec2(22721u, 76029u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy) / uvec2(1u, 1u)) : _GLF_FUZZED(uvec2(22721u, 76029u)), max(true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy) / uvec2(1u, 1u)) : _GLF_FUZZED(uvec2(22721u, 76029u)), true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy) / uvec2(1u, 1u)) : _GLF_FUZZED(uvec2(22721u, 76029u))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))))).x, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.xy) / uvec2(1u, 1u)) : _GLF_FUZZED(uvec2(22721u, 76029u)))).x) * 1u) + GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.w * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), min((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), min((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), min((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, 0u, 0u)), 0u | (uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.z = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.z = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.z, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.z, (GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidsubgroup_id.z) ^ 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), (true ? ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))) : _GLF_FUZZED(next_virtual_gid))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1))))) - 0u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), (true ? ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))) : _GLF_FUZZED(next_virtual_gid))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1))))) - 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), (true ? ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))) : _GLF_FUZZED(next_virtual_gid))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * (1 | 1)), 1, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / 1)) >> 0), 1, 0, 0)) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0))) + _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-1278, 94209, -7464, -41034)) : ((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0)))))), (1) | (1)), 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1))))) - 0u))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, (true ? _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z, clamp(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z) / 1u), GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z, 0u | (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z))))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))).x, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, ~ (~ (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, max(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, uint(uvec3((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, 0u, 0u))), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u)))))) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z)))) ^ (0u | 0u), ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))).x, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, _GLF_IDENTITY(uint(uint((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u)), clamp(uint(uint((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u)), uint(uint((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u)), uint(uint((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u)))))) | 0u), ~ (~ (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, max(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, uint(uvec3((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u, 0u, 0u))), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x) - 0u)))))) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z)))) ^ (0u | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 1 < GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         atomicStore(buf[GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.z], uint(2), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(clamp(-91485, 78974, _injected_loop_counter)))), 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3837.0275)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.z, min(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.z, GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnext_virtual_gidnum_workgroup.z))], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | 0)))), 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-5.6)), bool(_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
