#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), true))), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true))), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))))))))) && true), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), false || (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))), true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, true)), false, false)))))), true))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))) && true))))), bool(bvec4(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))) && true))))), false, false, false))))))))))))) && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-519.993), _GLF_FUZZED(-124.268)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-519.993), _GLF_FUZZED(-124.268)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(-3624.4234), 1.0 * (_GLF_FUZZED(-3624.4234))) : (injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-16696))), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))])))), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true, false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0)))) - sqrt(0.0)))))) / vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.2)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-247.927)), bool(false))), mix(float(_GLF_FUZZED(-0.2)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))) && true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || (! (false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(174871u)), _GLF_FUZZED(834.186)), bvec2(false, false))).x > injectionSwitch.y)) || _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! ((! _GLF_IDENTITY((false), ! (! ((false))))))), ((! ((! _GLF_IDENTITY((false), ! (! ((false)))))))) && true))))) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]), (clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])) - tan(0.0)))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-4.3)), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), false))).x > injectionSwitch.y)), (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9667.7134))) > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 0.0)), (true ? float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 0.0)) : _GLF_FUZZED(1.7))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))) || false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(transpose(mat2(injectionSwitch, 0.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 0.0, 1.0)) : _GLF_FUZZED(mat2(-663.431, _GLF_IDENTITY(-403.339, min(-403.339, -403.339)), 389.703, -5.7)))) : _GLF_FUZZED(mat2(274.382, -3822.9834, 5.8, -16.76)))) : _GLF_FUZZED(mat2(367.541, -3.5, -5.0, -45.10))), ((true ? _GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(transpose(mat2(injectionSwitch, 0.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 0.0, 1.0)) : _GLF_FUZZED(mat2(-663.431, _GLF_IDENTITY(-403.339, min(-403.339, -403.339)), 389.703, -5.7)))) : _GLF_FUZZED(mat2(274.382, -3822.9834, 5.8, -16.76)))) : _GLF_FUZZED(mat2(367.541, -3.5, -5.0, -45.10)))) - mat2(0.0, 0.0, 0.0, 0.0))))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), injectionSwitch)).y)), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), injectionSwitch)).y)), true, false, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), injectionSwitch)).y)), true, false, true))))) || false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))), true, false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) * mat2(1.0))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y)))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) ^ 0u), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) ^ 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(pow(_GLF_IDENTITY(vec4(4.8, -4.8, -12.47, 915.046), (_GLF_IDENTITY(vec4(4.8, -4.8, -12.47, 915.046), max(vec4(4.8, -4.8, -12.47, 915.046), vec4(4.8, -4.8, -12.47, 915.046)))) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)))), mix(float(_GLF_FUZZED((1694.8536 + -7675.3246))), float(_GLF_FUZZED(length(pow(vec4(4.8, -4.8, -12.47, 915.046), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675))))), bool(true))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(418.369) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false || (bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))) && true)) && true)))) ? injectionSwitch.x : _GLF_FUZZED(length(pow(vec4(4.8, _GLF_IDENTITY(-4.8, max(-4.8, -4.8)), -12.47, 915.046), vec4(-5.7, -5.3, _GLF_IDENTITY(_GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), float(mat2(_GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0))), 7257.1675)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) / exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), true && (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(length(pow(vec4(4.8, -4.8, -12.47, _GLF_IDENTITY(915.046, max(915.046, 915.046))), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(length(pow(vec4(4.8, -4.8, -12.47, _GLF_IDENTITY(915.046, max(915.046, 915.046))), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true, false)))))), (! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))) || false) ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(pow(vec4(4.8, -4.8, -12.47, 915.046), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)), clamp(pow(vec4(4.8, -4.8, -12.47, 915.046), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)), pow(vec4(4.8, -4.8, -12.47, 915.046), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)), pow(vec4(4.8, -4.8, -12.47, 915.046), vec4(-5.7, -5.3, _GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-48.97))), 7257.1675)))))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true), false, false)))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((uint(1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((uint(1u)), ((uint(1u))) - 0u)))), (~ (~ (uint(1u)))) | (~ (~ (uint(1u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))) * (1u & uint(_GLF_ONE(1.0, injectionSwitch.y)))), (max(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) + (0u ^ 0u))), _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u + _GLF_IDENTITY((uint(1u)), ((uint(1u))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u + _GLF_IDENTITY((uint(1u)), ((uint(1u))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u + (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u + _GLF_IDENTITY((uint(1u)), ((uint(1u))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u + _GLF_IDENTITY((uint(1u)), ((uint(1u))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), (_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), ((1u)) | ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))))) << 0u)) << (0u | 0u))) * (subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) | (_GLF_IDENTITY((1u), ((1u)) << 0u))))), _GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), uint(uint((1u) | (1u))))))), clamp(_GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), max(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), max(0u + ((1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))))))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 1u * (uint(2u))), uint(2u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) | (_GLF_IDENTITY((1u), ((1u)) << 0u))))), _GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), uint(uint((1u) | (1u))))))), clamp(_GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), max(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), max(0u + ((1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))))))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 1u * (uint(2u))), uint(2u))))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), uint(uint(((1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) << 0u), (_GLF_IDENTITY((1u), ((1u)) << 0u)) | 0u))))), _GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), 0u ^ ((_GLF_IDENTITY(1u, (1u) >> 0u))))) - 0u) | (1u), uint(uint((1u) | (1u))))))), clamp(_GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), max(0u + ((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), min(_GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u) | (1u), max((1u) | (1u), _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) ^ 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), 1u * (0u + _GLF_IDENTITY(((1u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(((1u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1u ^ _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(0u + ((1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))))))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (1u)))), 0u + ((1u ^ _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 1u * (uint(2u))), uint(2u)))))))))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(190330u)))), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid))))), ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(190330u)))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), 1u, 0u), max(uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(190330u)))), 1u, 1u, 0u), uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u | (0u & 198793u)), 1u, 0u)))))) : _GLF_FUZZED(190330u)))), 1u, 1u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size)))))), (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(packUnorm4x8(vec4(78.33, -407.128, -6.8, 79.47))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((subgroup_size) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), clamp((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) * 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) - 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(5u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(5u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(5u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))), 0u | ((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(5u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))))))))))) - 0u, ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u, _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))))) - 0u)) : _GLF_FUZZED(workgroup_size))))))) << 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))) | (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(num_workgroup) : uint(5u))))))))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) - uvec3(0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec3((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) - uvec3(0u, 0u, 0u))))))))))) | (subgroup_size)), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), 0u, 1u, 1u))), (_GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), 0u, 1u, 1u)))) >> 0u) : _GLF_FUZZED(workgroup_size))) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, 1u, 1u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))))), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, uint(uint(1u)))))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u), (uvec4(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u)) | (uvec4(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), 0u, 1u, 1u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), clamp(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))))) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((subgroup_size), 1u, (0u ^ 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((subgroup_size), 1u, (0u ^ 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), 0u | (uint(_GLF_IDENTITY(uvec4((subgroup_size), 1u, (0u ^ 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((subgroup_size), 1u, (0u ^ 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))), 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, 1u, 1u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u + (_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) ^ 0u))))), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), 0u, 1u, 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, ~ (~ (1u))))))))))) : _GLF_FUZZED(workgroup_size))) | 0u, 1u, 1u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))), ~ (~ (_GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << 0u) >> 0u), 1u, 1u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))) | 0u)))))) | 0u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u), min(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u), uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) | ((0u) >> 0u))) : _GLF_FUZZED(uvec3(110292u, 57796u, 102003u).p))), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), 0u, 1u, 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, 1u, 1u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u), (true ? uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u) : _GLF_FUZZED(uvec4(4435u, 170810u, 137018u, 185322u)))))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u), (true ? uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u) : _GLF_FUZZED(uvec4(4435u, 170810u, 137018u, 185322u)))))) : _GLF_FUZZED(workgroup_size)) ^ 0u), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) ^ 0u), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), 0u + (uint(uvec2(0u, 1u)))))), 1u, 1u))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (workgroup_size))), _GLF_IDENTITY((true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)), (true ? (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 0u | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_FUZZED(workgroup_size)))) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) : _GLF_FUZZED((subgroup_size))))))) | 0u, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))), uint(uvec4(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), ((subgroup_size)), ((subgroup_size)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (0u) >> _GLF_IDENTITY(0u, (0u) * (1u | 1u))), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), 0u, 1u, 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), uint(uint(_GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (clamp(1u, 1u, 1u)))))))) ^ 0u)), 1u))) : _GLF_FUZZED(workgroup_size))) | 0u, 1u, 1u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, (true ? _GLF_IDENTITY((0u) >> 0u, (_GLF_IDENTITY((0u) >> 0u, 0u + (_GLF_IDENTITY((0u), ~ (~ ((0u)))) >> 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_size)))), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u)) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))))) : _GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, _GLF_IDENTITY(uint(uvec4((0u) >> 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(uvec4((0u) >> 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4((0u) >> 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) - 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u))))) | (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))) | (subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (false ? _GLF_FUZZED((num_workgroup --)) : _GLF_IDENTITY(0u, (0u) >> 0u))), 1u, 1u))) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))))) | 0u, 1u, 1u, 0u)))))))))) ^ 0u)))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - sqrt(0.0))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), (1) | (1)))) | (~ (_GLF_IDENTITY(1, (1) | (1))))))), 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))) | (~ (_GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))) | (~ (_GLF_IDENTITY(1, (1) | (1)))), max((~ (_GLF_IDENTITY(1, (1) | (1)))) | (~ (_GLF_IDENTITY(1, (1) | (1)))), (~ (_GLF_IDENTITY(1, (1) | (1)))) | (~ (_GLF_IDENTITY(1, (1) | (1))))))) >> _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))))))), 1))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))))), max(subgroup_local_id, subgroup_local_id))) | 0u) + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) + 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), workgroup_id, workgroup_id))) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) / 1u))) | 0u) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), subgroup_local_id + 1))) | (subgroup_local_id + 1))))))) + 0u, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | 0u) + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) + 0u) ^ 0u), 1u, 1u))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << 0u)) + 0u, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) + 0)) + 0u, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) + 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | 0u) + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) + 0u, clamp((subgroup_local_id + 1) + 0u, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) | 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(39197) : int(8))))) ^ ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) | 0)))) + 0)) + 0u, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) + 0u))) / 1u)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), false, true, false))) || false))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED(vec2(-30.26, 5.5).x)), float((1.0) - 0.0), bool(true))))) * (vec2(injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec2(injectionSwitch))), mat2(1.0) * (mat2(1.0) * (vec2(vec2(injectionSwitch)))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (vec2(injectionSwitch))) / vec2(1.0, 1.0), max((mat2(1.0) * (vec2(injectionSwitch))) / vec2(1.0, 1.0), (mat2(1.0) * (vec2(injectionSwitch))) / vec2(1.0, 1.0)))))), vec2(vec2(injectionSwitch))))).y))))
    return;
   subgroupAll(_GLF_IDENTITY(true, bool(bvec2(true, true))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(tan(8.8)))) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))))))), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7432.0291, -684.369)))).x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bvec2(bool(bvec2(false, true)), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, false))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
