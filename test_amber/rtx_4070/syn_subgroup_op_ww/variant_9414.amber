#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec4 GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id;
 uvec4 GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id.xy = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy = GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id.xy;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).y, 0u | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.z = num_workgroup;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y = GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.z;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id.w;
 GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.w = workgroup_base;
 GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.y = GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.w;
 uint subgroup_base = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z * GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.x;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.y, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.y, ~ (~ (GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.y)))) | (GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.y)) + subgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, min(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x));
 GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id.z = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base, min(GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base, GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base))) << uvec4(0u, 0u, 0u, 0u)).xy.y + subgroup_base + (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(11587) : 1))), max((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1), (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1))) % GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.xy.x);
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid)))))) + 0u), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basenum_workgroupworkgroup_base.z) : GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid)))));
 atomicStore(buf[GLF_merged3_0_2_52_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_basevirtual_gidworkgroup_id.z], uint(1), 4, 64, 4);
 if((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x % 2) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x, ~ (~ (GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x)))], uint(2), _GLF_IDENTITY(4, (4) << 0), 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
