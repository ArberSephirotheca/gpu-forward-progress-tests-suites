#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + 0u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u)))))))) >> 0u), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size)))))) + 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)), (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + 0u)))) >> 0u), 0u)))))) - 0u) + subgroup_local_id) - 0u)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x4(float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(842.487)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.5) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true))), 1.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(842.487)), float(0.0), bool(true))), 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(vec4(vec3(1.0, 1.0, 0.0), 0.0))), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(842.487)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-2.4 * -1.3))))), bool(true))), 1.0))))))), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0))))), injectionSwitch)))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x4(float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.3)), float(1.0), bool(true))), 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(1456.6945))))))), 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9.1)), bool(false)), max(mix(float(0.0), float(_GLF_FUZZED(9.1)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(9.1)), bool(false))))), 0.0, 1.0)))))) * mat3(1.0))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), false))) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) * subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u) * 1u)) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) << 0));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec3(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, (true) || false)))))), true))))))), bool(bool(false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(368.422, -3.1)))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), max(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) - 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) - 0))));
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY((! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, ! (! ((! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), (bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))) || false)))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), (_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)) && true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), false, true))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false, false)), false, false, true))))))), bool(bvec4(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false, true, false))), (! (false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false))))))))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))), ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), true, false), bvec3(bvec3(bvec3(true, true, false))))))))), false))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(false, false || (false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(false, false || (false))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(false, false || (false))))))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), false))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), false))), false)))))))))))), false, false)))))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), true))) && true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true))))), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true))))), true, false), true))))))), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, 1u ^ 1u, 1u ^ 1u)))), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u))), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : min(next_virtual_gid, next_virtual_gid))))), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : next_virtual_gid)), next_virtual_gid))), 0u ^ (0u + (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), 0u + (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) ^ 0u), next_virtual_gid)))))))) << 0u)))) | (next_virtual_gid)))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), (max(uint(2), uint(2))) ^ 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-64371)))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))), _GLF_IDENTITY(uint(2), max(uint(2), uint(2))))), _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-50071))), ((4)) | ((4))), _GLF_IDENTITY((4), ((4)) + 0))), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(-60245)))), min(int(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-50071))), ((4)) | ((4))), _GLF_IDENTITY((4), ((4)) + 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(-60245)))), int(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-50071))), ((4)) | ((4))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) << 0)) + 0))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(-60245)))))))))), 64, _GLF_IDENTITY(4, (4) + 0));
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, cos(0.0)))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.0, 3164.5709)) : injectionSwitch)), injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))), false))), bool(bool(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))), false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false, true && ((_GLF_DEAD(false)) || false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(16.94), (vec2(injectionSwitch.y, 0.0))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155))))), mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_FUZZED(-9.0)), bool(true))), _GLF_FUZZED(-9.0)))), clamp(_GLF_IDENTITY(vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, _GLF_IDENTITY(84.34, (84.34) + 0.0), 29.57, 240.155))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6544.8444, mix(float(_GLF_FUZZED(-160.945)), float(-6544.8444), bool(true))))), float(_GLF_FUZZED(-9.0)), bool(true)), max(mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_FUZZED(-9.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_FUZZED(-9.0)), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6544.8444), (_GLF_FUZZED(-6544.8444)) - 0.0)), float(_GLF_FUZZED(-9.0)), bool(true))) - 0.0)))), _GLF_FUZZED(-9.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(7909.3666, 1.0 * (_GLF_IDENTITY(7909.3666, (7909.3666) - log(1.0)))))), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.7)))), float(_GLF_FUZZED(-552.695)), bool(false))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(7909.3666), mix(float(_GLF_FUZZED(-733.609)), float(_GLF_IDENTITY(_GLF_FUZZED(7909.3666), max(_GLF_FUZZED(7909.3666), _GLF_FUZZED(7909.3666)))), bool(true)))), float((vec2(injectionSwitch.y, 0.0))[0]), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))))), true, true, false))))))))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-360.279)), bool(false)))))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), clamp(clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true)), (true ? mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true)) : _GLF_FUZZED(-9949.8784)))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(81.34) : dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), bool(bvec2(bool(bool(bool(true))), false)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(1.0), bool(true))))), max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), float(vec2(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0), 0.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | (0))], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), (float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0))) * 1.0), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true)), mix(float(mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), float(_GLF_FUZZED(-20.15)), bool(false)))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2026.5810))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))) / 1.0)), 0.0))), _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-3.2)), float(sqrt(0.0)), bool(true))), 0.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), (_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), ((vec2(injectionSwitch.y, 0.0))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(7909.3666)), (float(_GLF_FUZZED(7909.3666))) / abs(1.0)), float(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], ((vec2(injectionSwitch.y, 0.0))[0]) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), max(dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))))), _GLF_IDENTITY(bool(true), (bool(true)) || false))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0))]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], mix(float(_GLF_FUZZED(7909.3666)), float((vec2(injectionSwitch.y, 0.0))[0]), bool(true))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))))) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (_GLF_IDENTITY(true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, _GLF_IDENTITY(3.3, (3.3) + 0.0)), vec4(-1202.2958, 84.34, 29.57, 240.155))), (false ? _GLF_FUZZED(-54.30) : true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6544.8444), max(_GLF_IDENTITY(_GLF_FUZZED(-6544.8444), min(_GLF_FUZZED(-6544.8444), _GLF_FUZZED(-6544.8444))), _GLF_FUZZED(-6544.8444)))), float(_GLF_FUZZED(-9.0)), bool(true))), _GLF_FUZZED(-9.0)))), vec2(mat2x4(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), 0.0))[0], (false ? _GLF_FUZZED(-552.705) : (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), 0.0))[0])), _GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, _GLF_IDENTITY(2.1, max(2.1, 2.1)), 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155))))), min(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, _GLF_IDENTITY(29.57, mix(float(_GLF_FUZZED(-24.65)), float(_GLF_IDENTITY(29.57, max(29.57, 29.57))), bool(true))), 240.155))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_FUZZED(-9.0), (_GLF_FUZZED(-9.0)) / 1.0), _GLF_FUZZED(-9.0))), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(_GLF_IDENTITY(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155)), clamp(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155)), dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155)), dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155))))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_FUZZED(-9.0)), bool(true)), (mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_FUZZED(-9.0)), bool(true))) - length(vec2(0.0, 0.0)))), _GLF_FUZZED(-9.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), vec2((vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-44.84 * 95.17))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, exp(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), injectionSwitch.y)), 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, 3.3), _GLF_IDENTITY(vec4(-1202.2958, 84.34, 29.57, 240.155), max(vec4(-1202.2958, 84.34, 29.57, 240.155), vec4(-1202.2958, 84.34, 29.57, 240.155))))))), mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.0), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_FUZZED(7.0)), bool(false)))), bool(true))), _GLF_FUZZED(-9.0)))), vec2(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY(float(mat3((vec2(injectionSwitch.y, 0.0))[0], 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, exp(sin(0.0)), 1.0)), clamp(float(mat3((vec2(injectionSwitch.y, 0.0))[0], 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, exp(sin(0.0)), 1.0)), float(mat3((vec2(injectionSwitch.y, 0.0))[0], 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, exp(sin(0.0)), 1.0)), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), min(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))))))[0], 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, exp(sin(0.0)), 1.0)), float(mat4x2(float(mat3((vec2(injectionSwitch.y, 0.0))[0], 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, exp(sin(0.0)), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_FUZZED(-9.0), clamp(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(dot(vec4(-6.7, 24.44, 2.1, 3.3), vec4(-1202.2958, 84.34, 29.57, 240.155))))), mix(float(_GLF_FUZZED(-6544.8444)), float(_GLF_FUZZED(-9.0)), bool(true))), _GLF_FUZZED(-9.0)))))), bvec2(true, _GLF_IDENTITY(false, (false) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(bvec2(! ((false) || false), true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(28.01)), vec2((max(injectionSwitch, injectionSwitch))[0], (max(injectionSwitch, injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
