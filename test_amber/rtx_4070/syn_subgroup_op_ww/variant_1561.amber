#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) && ((_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, false))))))))), _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))), true && (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))), true && (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))))))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))), true && (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))), true && (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) && true)) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)) && true), true, true, false))), true && (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false))), true && (bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, true, false)))))))))))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) | (0))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), ~ (~ (uvec3(gl_NumWorkGroups[2], 0u, 0u))))) | uvec3(0u, 0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << (36166u & _GLF_IDENTITY(0u, (0u) / 1u))))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), min(uvec3(gl_NumWorkGroups[2], 0u, 0u), uvec3(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) | (2))], 0u, 0u)))))))))) << uvec3(0u, 0u, 0u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), max(uvec3(gl_NumWorkGroups[2], 0u, 0u), uvec3(gl_NumWorkGroups[2], 0u, 0u))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), ~ (~ (uvec3(gl_NumWorkGroups[2], 0u, 0u))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, 0 ^ (2))], uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))) | (gl_NumWorkGroups))[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2])), 1u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2])), 1u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2])), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2])), 1u, 1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2])), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups))[2])), 1u, 1u))))), uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)))))))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))]) << 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2])), gl_NumWorkGroups[2])), 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), int(ivec2((_GLF_IDENTITY(2, 0 ^ (2))), 1))), (_GLF_IDENTITY(2, 0 ^ (2))))) - 0)], 0u, 0u)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))]) << 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2])), gl_NumWorkGroups[2])), 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), int(ivec2((_GLF_IDENTITY(2, 0 ^ (2))), 1))), (_GLF_IDENTITY(2, 0 ^ (2))))) - 0)], 0u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))]) << 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2])), gl_NumWorkGroups[2])), 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), int(ivec2((_GLF_IDENTITY(2, 0 ^ (2))), 1))), (_GLF_IDENTITY(2, 0 ^ (2))))) - 0)], 0u, 0u)))))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))]) << 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2])), gl_NumWorkGroups[2])), 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), int(ivec2((_GLF_IDENTITY(2, 0 ^ (2))), 1))), (_GLF_IDENTITY(2, 0 ^ (2))))) - 0)], 0u, 0u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, uint(uint(0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2])))))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uint(gl_NumWorkGroups[2]), 0u | (uint(gl_NumWorkGroups[2]))))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))]) << 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2])), gl_NumWorkGroups[2])), 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (uvec3(gl_NumWorkGroups[2], 0u, 0u)) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))[2], uint(uvec3(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), int(ivec2((_GLF_IDENTITY(2, 0 ^ (2))), 1))), (_GLF_IDENTITY(2, 0 ^ (2))))) - 0)], 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups[2], ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - 0)]))))), 0u, 0u))))) | uvec3(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), clamp(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))))))), uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u)), 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], clamp(gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u | (gl_NumWorkGroups[1])), gl_NumWorkGroups[1])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))[2], _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), min(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec4((gl_NumWorkGroups), 1u)), max(uvec3(uvec4((gl_NumWorkGroups), 1u)), uvec3(uvec4((gl_NumWorkGroups), 1u))))) ^ uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))))[2], uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))), (false ? _GLF_FUZZED(min(uvec3(58207u, 93773u, 194664u), (128781u + subgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4((gl_NumWorkGroups), 1u)), max(uvec3(uvec4((gl_NumWorkGroups), 1u)), uvec3(uvec4((gl_NumWorkGroups), 1u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4((gl_NumWorkGroups), 1u)), (uvec3(uvec4((gl_NumWorkGroups), 1u))) | (uvec3(uvec4((gl_NumWorkGroups), 1u)))), max(uvec3(uvec4((gl_NumWorkGroups), 1u)), _GLF_IDENTITY(uvec3(uvec4((gl_NumWorkGroups), 1u)), min(_GLF_IDENTITY(uvec3(uvec4((gl_NumWorkGroups), 1u)), ~ (~ (_GLF_IDENTITY(uvec3(uvec4((gl_NumWorkGroups), 1u)), max(uvec3(uvec4((gl_NumWorkGroups), 1u)), uvec3(uvec4((gl_NumWorkGroups), 1u))))))), uvec3(uvec4((gl_NumWorkGroups), 1u))))))))) ^ uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u)), uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-21697)))], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))))[2], _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), max(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)), 0u | (uint(uvec3(gl_NumWorkGroups[2], 0u, 0u))))) | (uint(uvec3(gl_NumWorkGroups[2], 0u, 0u)))))))))))))) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((bvec2(true, true) , uvec3(130153u, 189788u, 70915u))) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], 0u | (gl_WorkGroupSize[1]))) / 1u), gl_WorkGroupSize[2]))))) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u)))) - 0u), (workgroup_base) / 1u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) << _GLF_IDENTITY(0u, (0u) | (0u)))) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))), 1u), (false ? _GLF_FUZZED(uvec3(180699u, 30896u, 91654u)) : uvec3(1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))), 1u))))) * (workgroup_base)) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) + 0u)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.2))) > injectionSwitch.y)), false, false, false)))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))), 0 ^ ((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0)))))))))))), (false ? _GLF_FUZZED(-70774) : int(_GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))), 0 ^ ((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))), 0 ^ ((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0)))))))))))), (false ? _GLF_FUZZED(-70774) : int(_GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))), 0 ^ ((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(65155, -62701)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0)))))))))))))))) << 0)) >> 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.5, -1.5)) : injectionSwitch)).y)) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-5.1))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (1u) << 0u), 0u, 1u), (uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)))), subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true, false)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), max(uint(2), uint(2))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) | (2)), 2)))) ^ 0u, ((uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) | (2)), 2)))) ^ 0u) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (2)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(2)), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) << 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(2, 2)), 2)), 2)))), min((uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(2, 2)), 2)), 2)))), (uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(2, 2)), 2)), 2)))))), ((uint(2))) << 0u) : _GLF_FUZZED(max(116473u, next_virtual_gid)))), (uint(2)))), (~ _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), ~ (~ (max(uint(2), uint(2))))))), clamp((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), ~ (~ (max(uint(2), uint(2))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), ~ (~ (max(uint(2), uint(2))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), ~ (~ (max(uint(2), uint(2))))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), ~ (~ (max(uint(2), uint(2))))))), ((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), ~ (~ (max(uint(2), uint(2)))))))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - 0u)) | (~ (uint(2)))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(4, 4)), int(int(4))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
