#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(4.9, -0.0).t)), bool(false))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.5))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(76.53)), ((true ? injectionSwitch[0] : _GLF_FUZZED(76.53))) * 1.0)), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(76.53)), ((true ? injectionSwitch[0] : _GLF_FUZZED(76.53))) * 1.0)), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch[0] : _GLF_FUZZED(76.53), (false ? _GLF_FUZZED(-44.00) : true ? injectionSwitch[0] : _GLF_FUZZED(76.53)))), ((true ? injectionSwitch[0] : _GLF_FUZZED(76.53))) * 1.0)), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).y) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)) : _GLF_FUZZED(-635.245)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)) : _GLF_FUZZED(-635.245)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, true, true)), ! (! (bool(bvec4(bool(bool(false)), false, true, true)))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uint(gl_WorkGroupSize[1]))), gl_WorkGroupSize[2])).x, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1u)))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), ~ (_GLF_IDENTITY(~ (uint(gl_WorkGroupSize[1])), (~ (uint(gl_WorkGroupSize[1]))) + 0u))))), gl_WorkGroupSize[2])).x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) : _GLF_FUZZED(num_workgroup)), clamp((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), ~ (_GLF_IDENTITY(~ (uint(gl_WorkGroupSize[1])), (~ (uint(gl_WorkGroupSize[1]))) + 0u))))), gl_WorkGroupSize[2])).x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) : _GLF_FUZZED(num_workgroup)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), ~ (_GLF_IDENTITY(~ (uint(gl_WorkGroupSize[1])), (~ (uint(gl_WorkGroupSize[1]))) + 0u))))), gl_WorkGroupSize[2])).x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) : _GLF_FUZZED(num_workgroup)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec4(gl_WorkGroupSize.x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), ~ (_GLF_IDENTITY(~ (uint(gl_WorkGroupSize[1])), (~ (uint(gl_WorkGroupSize[1]))) + 0u))))), gl_WorkGroupSize[2])).x, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) : _GLF_FUZZED(num_workgroup))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(51.84, (false ? _GLF_FUZZED(8.9) : 51.84))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(51.84))) > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))), workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec2(1296.8921, 0.4).s), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(7718.3809)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(vec2(1296.8921, 0.4).s), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(7718.3809)), bvec2(true, false))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), mix(float(dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-651.875)), _GLF_ONE(1.0, injectionSwitch.y) * (float(_GLF_FUZZED(-651.875)))), bool(false)))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((98.15 + 3.6))), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u | (0u))) ^ 0u)) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) | 0u) / 1u) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), _GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u)))))))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u))), clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u))))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) * 1u)) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u))), 0u ^ (uint(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u))))))) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) ^ (0u | 0u)))) << 0u) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + (0u)))))) | _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))))), (_GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + (0u)))))) | (workgroup_base)))) - 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))))))))))) + subgroup_base + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base))))))))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_id)), max(_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_id)), (false ? _GLF_FUZZED(37679u) : ~ (_GLF_FUZZED(subgroup_id))))) >> 0u), _GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_id)), uint(uvec3(~ (_GLF_FUZZED(subgroup_id)), 1u, 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)), (clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))))))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), min(_GLF_IDENTITY((~ (1u)), max((~ (1u)), _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u))), (~ (1u)))))) | 0u), 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(1u, min(1u, 1u)))) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + (0u)))))) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))), 0u ^ (max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))))))))))))) + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), (_GLF_IDENTITY(((workgroup_base)), (true ? ((workgroup_base)) : _GLF_FUZZED(subgroup_local_id)))) + 0u) / 1u) | (workgroup_base), min((_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base))))))))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(workgroup_id))))), clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u), min(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u), true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u))))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), _GLF_IDENTITY((~ ((workgroup_base))) | 0u, uint(uint(_GLF_IDENTITY((~ ((workgroup_base))) | 0u, clamp(_GLF_IDENTITY((~ ((workgroup_base))) | 0u, ((~ ((workgroup_base))) | 0u) * 1u), (~ ((workgroup_base))) | 0u, (~ ((workgroup_base))) | 0u)))))))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base))))), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))))) | (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))))))) - 0u))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base))))) | ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), min((0u), (0u))), 0u, 0u)))))))) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base))))) | ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), min((0u), (0u))), 0u, 0u)))))))) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base))))) | ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), min((0u), (0u))), 0u, 0u)))))))) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id)))))))))))))))) + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u))), uint(uint(_GLF_IDENTITY((workgroup_base), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ ((workgroup_base))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ ((workgroup_base))))))))))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))))) | (workgroup_base)))) | (_GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base))))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((workgroup_base))), clamp(_GLF_IDENTITY(uint(uint((workgroup_base))), (_GLF_IDENTITY(uint(uint((workgroup_base))), 0u + (uint(uint((workgroup_base)))))) >> 0u), uint(uint((workgroup_base))), uint(uint((workgroup_base)))))), (workgroup_base) | (workgroup_base)))))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) + 0u))))))) | _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))))))))))) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), min(((workgroup_base)), ((workgroup_base)))) / 1u) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base)))))))), 0u ^ (uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base))))))))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base))))))))))), (workgroup_base) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), min(((workgroup_base)), ((workgroup_base)))) / 1u) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ ((workgroup_base)), ~ ((workgroup_base)), ~ ((workgroup_base))))))))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))) - 0u)), clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uint((workgroup_base)), max(uint((workgroup_base)), uint((workgroup_base)))))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - 0u))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + (0u)))))) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))))))))))) + subgroup_base + subgroup_local_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base))), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) * 1u)))))), ~ (_GLF_IDENTITY(~ ((workgroup_base)), clamp(~ _GLF_IDENTITY(((workgroup_base)), (_GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base))))) - 0u), ~ ((workgroup_base)), ~ ((workgroup_base))))))))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size)))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(subgroup_id)))) / 1u)) + 0u), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) + _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_FUZZED(subgroup_id)))) - 0u))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), (~ (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u))))) / 1u))) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(subgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (workgroup_base) | (workgroup_base)))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u)) & (1u & 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))))))))) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u))))))), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(subgroup_id))), 0u ^ ((~ (_GLF_FUZZED(subgroup_id)))))))))))))) + subgroup_base + subgroup_local_id))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) >> 0u)) | (_GLF_IDENTITY(~ (~ (workgroup_base)), 0u | (~ (~ (workgroup_base)))))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) >> 0u)) | (_GLF_IDENTITY(~ (~ (workgroup_base)), 0u | (~ (~ (workgroup_base)))))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) >> 0u)) | (_GLF_IDENTITY(~ (~ (workgroup_base)), 0u | (~ (~ (workgroup_base)))))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))))) : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec3(154738u, 117068u, 189502u)) : uvec3((workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((workgroup_base) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) >> 0u)) | (_GLF_IDENTITY(~ (~ (workgroup_base)), 0u | (~ (~ (workgroup_base)))))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))))) : _GLF_FUZZED(subgroup_id)))))) / 1u) + subgroup_base + subgroup_local_id), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))))))))), clamp(uint(uint((workgroup_base))), uint(uint((workgroup_base))), uint(uint((workgroup_base)))))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), clamp(_GLF_IDENTITY((workgroup_base) | (workgroup_base), 0u | ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))))))) | (workgroup_base))), _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) - 0u), (workgroup_base) | (workgroup_base)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) / 1u))) + subgroup_base + subgroup_local_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)))) || false)))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false)))))), true, true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, true), true))))), true && ((bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))))))), true, true))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.1) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! _GLF_IDENTITY((! (bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bool((! (bool(bvec3(false, false, false))))), (bool((! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)))))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6310.4018)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((true ? 589.839 : 7029.1900))), vec2(_GLF_FUZZED(97.90), (injectionSwitch)[1]), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((true ? 589.839 : 7029.1900))), vec2(_GLF_FUZZED(97.90), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((true ? 589.839 : 7029.1900))), vec2(_GLF_FUZZED(97.90), (injectionSwitch)[1]), bvec2(false, true))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((true ? 589.839 : 7029.1900))), vec2(_GLF_FUZZED(97.90), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch)))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(17.38), _GLF_FUZZED(72.21)), vec2((vec2(vec4(injectionSwitch, 1.0, 0.0)))[0], (vec2(vec4(injectionSwitch, 1.0, 0.0)))[1]), bvec2(true, true))), (false ? _GLF_FUZZED(vec2(4.9, -7.5)) : _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(17.38), _GLF_FUZZED(72.21)), vec2((vec2(vec4(injectionSwitch, 1.0, 0.0)))[0], (vec2(vec4(injectionSwitch, 1.0, 0.0)))[1]), bvec2(true, true)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(70225) : _GLF_IDENTITY(0, 0 ^ (0))))) + 0))
  {
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.6) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) && true)), bool(bvec3((_GLF_IDENTITY((false) || false, ((false) || false) && true)), false, false))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(cos(vec2(0.0, 0.0)))).y, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(cos(vec2(0.0, 0.0)))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (0 | 0) | (64))) | 0), max(64, 64))))), min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)) + 0, max((64) + 0, _GLF_IDENTITY((64) + 0, (false ? _GLF_FUZZED(-45531) : _GLF_IDENTITY((64) + 0, max((64) + 0, (64) + 0))))))), 64, 64)), 64)), _GLF_IDENTITY(4, (4) / 1));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-821.869)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.48) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.48) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.48) : injectionSwitch.x)) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, true, true))) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.48) : injectionSwitch.x)) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, true, true))) && true))))), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.48) : injectionSwitch.x)) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true)))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) - log(1.0)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(632.528)), float((injectionSwitch.y) - 0.0), bool(true)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, true, true))) && true))))), false, false, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), true)), ! _GLF_IDENTITY((! (bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), ! (! ((! (bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(533.281), float(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(533.281), min(_GLF_FUZZED(533.281), _GLF_FUZZED(533.281))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-4.5)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), _GLF_IDENTITY(! (! (bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(48.90)), vec2(_GLF_FUZZED(-7.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)), true)))), bool(bool(! (! (bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(48.90)), vec2(_GLF_FUZZED(-7.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(557.707) : injectionSwitch.y)))), true))).x > injectionSwitch.y)), true))))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 8327.9148))), float(0.0), bool(true))), sin(0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0)))))) > injectionSwitch.y)), true))), (bool(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))) && true))), ! (! (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(46.15)), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, sin(0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(89.38)), float(sin(0.0)), bool(true))), 1.0, 0.0)))))) > injectionSwitch.y)), true))), (bool(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(46.15)), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-8.3 - -675.396))), bool(_GLF_IDENTITY(false, (false) || false)))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), 0.0, sin(0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0)))))) > injectionSwitch.y)), true)))) && true), (bool(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))) && true))), ! (! (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0)))))) > injectionSwitch.y)), true))), (bool(bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), true)))) && true))), ! (! (bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(vec2(-94.21, -9.7), vec2(-30.70, -45.88), vec2(2.9, 5.1))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-216.345)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0)))))), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(vec2(-94.21, -9.7), vec2(-30.70, -45.88), vec2(2.9, 5.1))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-216.345)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3528.4137)))), float(_GLF_FUZZED(-6.1)), bool(false))), sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(7.3)))), 1.0, 0.0))))), (float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3528.4137)))), float(_GLF_FUZZED(-6.1)), bool(false))), sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(7.3)))), 1.0, 0.0)))))) * 1.0)) > injectionSwitch.y)), true))), (bool(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))) && true))), ! (! (_GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))) || false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))), mix(vec3((_GLF_IDENTITY(_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0), _GLF_IDENTITY(mat3(1.0) * (vec3(6430.2480, -3.6, -6.0)), vec3(1.0, 1.0, 1.0) * (mat3(1.0) * (vec3(6430.2480, -3.6, -6.0))))).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[0], _GLF_FUZZED(5.4), _GLF_FUZZED((87.85 - -5562.2018))), vec3(_GLF_FUZZED(845.684), _GLF_IDENTITY((_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[1], max((_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[1], _GLF_IDENTITY((_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[1], mix(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY((_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[1], ((_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[1]) * 1.0)), bool(true))))), (_GLF_IDENTITY(vec3(6430.2480, -3.6, -6.0).zyy, _GLF_IDENTITY(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), vec3(vec3(vec3(mat3x4(vec3(6430.2480, -3.6, -6.0).zyy, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))[2]), bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), sqrt(0.0), log(1.0), 1.0, 1.0))) < injectionSwitch.y)), true))).p)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(68.05)), bool(false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), (((! (false)))) && true) && true)))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) - 0), 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
