#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(uvec4(gl_NumWorkGroups, 0u))))), gl_NumWorkGroups, gl_NumWorkGroups), uvec3(uvec4(clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(uvec4(gl_NumWorkGroups, 0u))))), gl_NumWorkGroups, gl_NumWorkGroups), 1u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, sqrt(0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(fma(59.82, -4415.5603, -0.1)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0))) < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(4960.8227)), bool(false))))))) : _GLF_FUZZED(-7963.9129)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))))), true, true)), ! (! (bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))))), true, true))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), true))), false)))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), true && ((! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))).x, (false ? _GLF_FUZZED(fma(59.82, -4415.5603, -0.1)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.59), _GLF_FUZZED(9532.8623)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (injectionSwitch.x) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false)))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-7.4)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-46.21), _GLF_FUZZED(9.3)), bvec2(false, false))))[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[0])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)) / 1.0), (injectionSwitch.x), (injectionSwitch.x))) * 1.0)))))) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))))))), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))))))), 1u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))))))), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))))))), 1u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))))), uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))))))), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u))), 0u, 0u)) * uvec3(1u, 1u, 1u))))))), 1u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))))), 1u, 1u, 1u)))) / 1u), workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, 0u + (0u)))) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))) | ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))))) | ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))))))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))) | ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))))) | ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))) | ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))))) | ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))))) ? subgroup_size : _GLF_FUZZED((workgroup_base + workgroup_base)))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) * 1u)) / 1u)), uint(4u))) + (max(min(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))) | 0u), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1))))))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), ~ (~ (uint(uint(subgroup_size))))))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1)))), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u))))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (subgroup_local_id)), subgroup_local_id)) + 1), (subgroup_local_id + 1))))))) % subgroup_size)))) / 1u), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size))))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), min((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))))) + 1), (subgroup_local_id + 1))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))))) + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)))), (subgroup_local_id + 1))))))) % subgroup_size))))), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) | (subgroup_local_id + 1))), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) << 0u))) | 0u)), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)))), clamp(min((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)))), min((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)))), min((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))))))))))) % subgroup_size)))) / 1u), ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) / 1u))));
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(56521)))))) | ((_GLF_IDENTITY(1, (1) | (1))))), (0 ^ 1), 1))) | 0)), (uint(1)) / 1u)), (~ (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))) << 0u))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, (_GLF_IDENTITY(-60952, (_GLF_IDENTITY(-60952, int(ivec2(-60952, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (-60952))) << (0 >> _GLF_IDENTITY(int(4), int(4))))) : 4, max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, _GLF_IDENTITY((-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((-60952) << (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(71233))) >> _GLF_IDENTITY(int(4), int(4))), clamp(_GLF_IDENTITY((-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), clamp((-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), (-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), (-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))))), (-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY((-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), clamp((-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), (-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), (-60952) << (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0)))) >> _GLF_IDENTITY(int(4), int(4)))))))) - 0))) : 4, max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, (-60952) << (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), int(ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - 0))))))) : 4, int(ivec4(false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, _GLF_IDENTITY((_GLF_IDENTITY(-60952, ~ (_GLF_IDENTITY(~ (-60952), (~ (-60952)) - 0)))) << (0 >> _GLF_IDENTITY(int(4), int(4))), max((-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(-60952, (-60952) >> 0)) << (0 >> _GLF_IDENTITY(int(4), int(4))))))) : 4, 1, 1, 0))), false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, (-60952) << _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(clamp((0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(clamp((0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(int(clamp((0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4)))))), (int(int(clamp((0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4))))))) * 1))) | (0 & -1602))))) : 4)), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, (_GLF_IDENTITY(-60952, 0 + (-60952))) << (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) - 0) >> _GLF_IDENTITY(int(4), int(4))))) : _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-60952, (-60952) << (0 >> _GLF_IDENTITY(int(4), int(4))))) : 4) >> 0))))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), 0 | ((~ (4))))), (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), 0 | ((~ (4)))))) << 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(42083) : 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), 0u, 1u), min(uvec3(uint(2), 0u, 1u), uvec3(uint(2), 0u, 1u))))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))) && true, bool(bvec4((false) && true, true, true, false))))) && true));
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, _GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), clamp(clamp(2, 2, 2), clamp(2, 2, 2), clamp(2, 2, 2))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))), max(ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))))))), min(int(_GLF_IDENTITY(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))), max(ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))))))), int(_GLF_IDENTITY(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))), max(ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0), ~ (~ (ivec4(ivec2(clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))), 0), (1 ^ 1), 0)))))))))))))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, (true) && true));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
