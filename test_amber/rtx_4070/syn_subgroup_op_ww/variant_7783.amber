#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 | (min(4, 4)))), 64, 4);
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(((- (~ 17452)) & 0)))
        {
         case 55:
         uvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
         case 0:
         case 16:
         case 33:
         case 4:
         do
          {
           if(subgroup_local_id + 1 < subgroup_size)
            {
             switch(_GLF_SWITCH((41855 & 0)))
              {
               case 0:
               case 30:
               case 59:
               case 47:
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
               case 58:
               case 7:
               subgroupAll(false);
               break;
               case 68:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 25:
                   uvec4(194966u, 32344u, 123462u, 1386u);
                   case 0:
                   case 65:
                   case 18:
                   case 13:
                   case 87:
                   case 54:
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       do
                        {
                         trunc((vec3(1.5, 13.31, -94.39) + -2717.2190));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                   break;
                   case 32:
                   equal(bvec3(true, false, false), bvec3(false, false, true));
                   case 30:
                   ivec4(78349, -67646, -68673, 65727);
                   default:
                   1;
                  }
                }
               else
                {
                }
               case 79:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(                 (-3691.8831 - mat4x2(51.82, 2929.4256, 15.80, -7219.4933, -6987.0428, 14.49, _GLF_IDENTITY(-596.672, 1.0 * (-596.672)), 89.88));
 true; 71371)
                  {
                   ivec4 _GLF_SWITCH_0_0v;
                   uvec2 _GLF_SWITCH_0_1v[64], _GLF_SWITCH_0_2v;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false)))
                    {
                    }
                   else
                    {
                     bvec3(false, true, true);
                    }
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
                    {
                     for(                     notEqual(uvec3(194285u, 55837u, 131000u), uvec3(92897u, 99465u, 165510u));
 true; bvec3(false, true, true).rbrg)
                      {
                       if((uvec3(199489u, 97462u, 128638u) != uvec3(93408u, 94400u, 106876u)))
                        {
                         uvec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                         (mat3x2(-24.50, -8985.8536, 2261.1659, 71.08, -4163.7543, 29.52) / mat3x2(3.1, -80.98, 583.076, _GLF_IDENTITY(-8774.3941, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(-8774.3941, (false ? _GLF_FUZZED(-8539.5487) : -8774.3941)))), 3.5, 59.07));
                         uvec3 _GLF_SWITCH_0_6v;
                        }
                       else
                        {
                         sinh(acosh(-92.05));
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 0:
                               case 80:
                               case 93:
                               case 24:
                               case 13:
                               case 67:
                               case 51:
                               case 21:
                               case 30:
                               case 84:
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 67:
                                   case 44:
                                   case 89:
                                   case 12:
                                   case 21:
                                   case 77:
                                   case 45:
                                   case 39:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     abs(vec3(-512.907, -2018.7833, -2731.9788));
                                    }
                                   else
                                    {
                                    }
                                   break;
                                   case 96:
                                   mat2x3(mat4(9662.2548, 7.4, -8060.1356, -35.46, 1.6, 368.875, 858.204, -37.68, 7.7, -9.0, -61.32, 59.26, -3852.5422, 1.8, 454.008, -5.8));
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 77:
                               bitfieldInsert(_GLF_IDENTITY(ivec2(-15194, -69925), max(ivec2(-15194, -69925), ivec2(-15194, -69925))), ivec2(62326, 2100), -73603, 2412);
                               case 85:
                               min(bitfieldExtract(virtual_gid, 20012, -58777), subgroup_id);
                               default:
                               1;
                              }
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)))) && true)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)) && true))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(270.528, 967.879)) : (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)) && true)))) || false)))))
                            {
                            }
                           else
                            {
                             inverse(mat4(-5559.9897, 2147.9762, 3.3, _GLF_IDENTITY(3.3, (3.3) - 0.0), 4.0, 3.9, -3.8, _GLF_IDENTITY(5.6, (false ? _GLF_FUZZED(-4159.4890) : 5.6)), -48.80, -365.446, -4642.3875, 1.4, 380.169, -80.61, 145.699, 389.826));
                            }
                          }
                         do
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, _GLF_IDENTITY(313.666, (313.666) - 0.0), -5.4, 7.6))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6)))))))).y)) ? _injected_loop_counter -- : _GLF_FUZZED(-77142)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(25.71)))) - 0.0)))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, _GLF_IDENTITY(313.666, (313.666) - 0.0), -5.4, 7.6))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6)))))))).y)) ? _injected_loop_counter -- : _GLF_FUZZED(-77142)), 0 | ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, _GLF_IDENTITY(313.666, (313.666) - 0.0), -5.4, 7.6))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6)))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, _GLF_IDENTITY(313.666, (313.666) - 0.0), -5.4, 7.6))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6)))))))))[0], _GLF_FUZZED(5.6)), vec2(_GLF_FUZZED(809.627), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, _GLF_IDENTITY(313.666, (313.666) - 0.0), -5.4, 7.6))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6)))))))))[1], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, _GLF_IDENTITY(313.666, (313.666) - 0.0), -5.4, 7.6))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-70.00, -6.6, 2.9, 313.666, -5.4, 7.6)))))))))[1]) * 1.0)), bvec2(false, true))).y)) ? _injected_loop_counter -- : _GLF_FUZZED(-77142))))) | 0)))
                            {
                             ;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         bvec4 _GLF_SWITCH_0_7v;
                        }
                       mat3(8.3, _GLF_IDENTITY(-6.8, clamp(_GLF_IDENTITY(-6.8, max(-6.8, -6.8)), -6.8, _GLF_IDENTITY(-6.8, min(_GLF_IDENTITY(-6.8, float(mat2(-6.8, 0.0, 0.0, 0.0))), -6.8)))), 1213.0923, -445.534, -9.8, -28.79, -4.3, -35.75, _GLF_IDENTITY(94.86, max(_GLF_IDENTITY(94.86, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), float(94.86), bool(true))), _GLF_IDENTITY(94.86, (94.86) * 1.0))));
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         do
                          {
                           (182747u == 154531u);
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) : _GLF_FUZZED(_injected_loop_counter))) != (0 & -227), (_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) : _GLF_FUZZED(_injected_loop_counter))) != (0 & -227)) && true)); _injected_loop_counter --)
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 13:
                               mat2x4(4913.6923, 7606.1819, 3.4, 1.4, 5.8, -3.9, 19.47, -65.44);
                               case 0:
                               case 61:
                               case 38:
                               case 49:
                               if((_GLF_IDENTITY(findLSB(ivec3(57804, -36297, 45873)), ivec3(0, 0, 0) ^ (findLSB(ivec3(57804, -36297, 45873)))) != ivec3(37543, -4294, -4841)))
                                {
                                 findLSB((subgroup_size / _GLF_SWITCH_0_2v));
                                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                                  {
                                   (vec4(325.317, -0.1, 7.6, 7.1)[_GLF_IDENTITY(_GLF_IDENTITY(3, _GLF_IDENTITY((3) >> 0, _GLF_IDENTITY(int(int((3) >> 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY((3), (_GLF_IDENTITY((3), ((3)) | ((3)))) - 0) >> 0))), (~ (int(int((3) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0))) | (0)))))) / 1)), 1 * (~ (_GLF_IDENTITY(~ (int(int((3) >> 0))), (~ (int(int((3) >> 0)))) / 1))))))), (3) << 0)] - mat4x3(_GLF_IDENTITY(-3.6, mix(float(_GLF_FUZZED(-4144.5346)), float(-3.6), _GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_IDENTITY(-8567.9227, clamp(_GLF_IDENTITY(-8567.9227, float(mat3x2(-8567.9227, 0.0, 0.0, 1.0, 0.0, 1.0))), -8567.9227, -8567.9227)), 75.14, 4.4, 4669.5577, 9.8, 245.895, -86.23, _GLF_IDENTITY(-9710.0249, _GLF_IDENTITY(float(vec3(-9710.0249, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(826.654), _GLF_FUZZED(vec2(-632.177, 9.2).t), _GLF_FUZZED((+ 117.018)), _GLF_FUZZED(float(156753u))), vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], (vec4(1.0, 0.0, 0.0, 0.0))[2], (vec4(1.0, 0.0, 0.0, 0.0))[3]), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), clamp(float(vec3(-9710.0249, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, tan(0.0))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(vec3(-9710.0249, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), min(float(vec3(-9710.0249, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), float(vec3(-9710.0249, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))), float(vec3(-9710.0249, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false)))))) - 0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))))), -847.369, _GLF_IDENTITY(-3.4, mix(float(-3.4), float(_GLF_FUZZED(3.9)), bool(false))), _GLF_IDENTITY(757.605, max(757.605, 757.605))));
                                  }
                                 uvec4 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                                 for(int _injected_loop_counter = (_GLF_IDENTITY(-88319, clamp(_GLF_IDENTITY(-88319, clamp(-88319, -88319, -88319)), -88319, _GLF_IDENTITY(-88319, clamp(-88319, _GLF_IDENTITY(-88319, (-88319) | 0), -88319)))) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     vec3(83.83, 5.7, 62.27);
                                    }
                                   else
                                    {
                                    }
                                  }
                                 ivec3(32042, bitfieldInsert(48432, bitfieldInsert(-52633, 63112, -45694, -93732), 48927, 78410), _GLF_IDENTITY(_GLF_SWITCH_0_0v, min(_GLF_SWITCH_0_0v, _GLF_IDENTITY(_GLF_SWITCH_0_0v, ~ (~ (_GLF_SWITCH_0_0v))))).x);
                                 uvec2 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     ;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               break;
                               case 81:
                               ivec3 _GLF_SWITCH_4_0v;
                               default:
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(false)
                          {
                           vec3 _GLF_SWITCH_0_13v[19], _GLF_SWITCH_0_14v;
                           153267u;
                           ;
                           min(_GLF_IDENTITY(((uvec2(133450u, 135852u) * uvec2(10556u, 158340u)) + uvec2(128439u, _GLF_IDENTITY(151944u, (151944u) / 1u))), uvec2(uvec2(((uvec2(133450u, 135852u) * uvec2(10556u, 158340u)) + uvec2(128439u, 151944u))))), next_virtual_gid);
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 & 90353))); _injected_loop_counter --)
                              {
                               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                {
                                 case 0:
                                 case 68:
                                 case 81:
                                 case 20:
                                 case 80:
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((injectionSwitch.x > injectionSwitch.y))))))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
                                    {
                                     (-3.3 - mat3x2(-13.50, 8108.4438, 1802.9398, 12.14, -50.82, 5.0));
                                    }
                                  }
                                 break;
                                 default:
                                 1;
                                }
                              }
                            }
                           greaterThan(ivec2(-34789, -37062), min(_GLF_IDENTITY(ivec2(-22639, -36934), (ivec2(-22639, -36934)) | (ivec2(-22639, -36934))), ivec2(60549, 97354)));
                           mat3x2 _GLF_SWITCH_0_15v[24], _GLF_SWITCH_0_16v;
                          }
                         else
                          {
                           bvec3(true, false, true);
                           uvec2 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                           uint _GLF_SWITCH_0_20v[11];
                           mat3x2(-7.2, -15.50, 6137.8901, 838.494, -29.98, _GLF_IDENTITY(-4993.9541, mix(float(-4993.9541), float(_GLF_FUZZED(7.3)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))));
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             ivec3(28097, -78134, -67109);
                            }
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               equal(bvec4(true, true, true, false), (bvec4(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) || false))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))))))) || false)))))), true)));
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   uvec2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v[59];
                   mat4x3(3091.7893, _GLF_IDENTITY(5563.8019, max(5563.8019, _GLF_IDENTITY(5563.8019, (false ? _GLF_FUZZED(96.54) : 5563.8019)))), -371.483, 1335.8750, -241.940, -4250.8028, _GLF_IDENTITY(-2.3, max(-2.3, -2.3)), 59.30, _GLF_IDENTITY(-3.6, (-3.6) - 0.0), -2.9, 79.97, 0.6);
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                        {
                        }
                       else
                        {
                         while(true)
                          {
                           64092;
                           if(false)
                            {
                             vec2 _GLF_SWITCH_0_23v[79], _GLF_SWITCH_0_24v;
                             mat3 _GLF_SWITCH_0_25v;
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               ;
                              }
                             else
                              {
                              }
                            }
                           _GLF_IDENTITY(mat4(1891.2739, 22.20, -2686.9815, 745.039, -2327.4991, -55.75, 8.0, -87.69, 372.204, -1.0, 5.2, -2240.2134, -1631.0936, 459.948, 7.7, 7002.4980), _GLF_IDENTITY((_GLF_IDENTITY(mat4(1891.2739, 22.20, -2686.9815, 745.039, -2327.4991, -55.75, 8.0, -87.69, 372.204, -1.0, 5.2, _GLF_IDENTITY(-2240.2134, mix(float(_GLF_FUZZED(-160.426)), float(-2240.2134), bool(_GLF_IDENTITY(true, ! (! (true)))))), -1631.0936, 459.948, 7.7, 7002.4980), (true ? mat4(1891.2739, 22.20, -2686.9815, 745.039, -2327.4991, -55.75, 8.0, -87.69, 372.204, -1.0, 5.2, -2240.2134, -1631.0936, 459.948, 7.7, 7002.4980) : _GLF_FUZZED(mat4(-1.9, -6.1, 756.244, -4441.3373, 1.8, 2276.3574, 122.040, 50.15, 5713.6850, -2329.2745, -7.4, _GLF_IDENTITY(156.038, (156.038) + 0.0), 620.836, -6.0, -21.16, -248.996))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), transpose(transpose((_GLF_IDENTITY(mat4(1891.2739, 22.20, -2686.9815, 745.039, -2327.4991, -55.75, 8.0, -87.69, 372.204, -1.0, 5.2, _GLF_IDENTITY(-2240.2134, mix(float(_GLF_FUZZED(-160.426)), float(-2240.2134), bool(_GLF_IDENTITY(true, ! (! (true)))))), -1631.0936, 459.948, 7.7, 7002.4980), (true ? mat4(1891.2739, 22.20, -2686.9815, 745.039, -2327.4991, -55.75, 8.0, -87.69, 372.204, -1.0, 5.2, -2240.2134, -1631.0936, 459.948, 7.7, 7002.4980) : _GLF_FUZZED(mat4(-1.9, -6.1, 756.244, -4441.3373, 1.8, 2276.3574, 122.040, 50.15, 5713.6850, -2329.2745, -7.4, _GLF_IDENTITY(156.038, (156.038) + 0.0), 620.836, -6.0, -21.16, -248.996))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))));
                           do
                            {
                             mat3x2(vec2(-293.220, -4.8)[0], -2.9, 4.2, -6645.8614, -8985.1260, 5585.7149);
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           bvec3 _GLF_SWITCH_0_26v;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             do
                              {
                               if(true)
                                {
                                 do
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 0:
                                     case 14:
                                     case 98:
                                     case 76:
                                     case 47:
                                     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) && true))); _injected_loop_counter ++)
                                      {
                                       ;
                                      }
                                     break;
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 mat3x2 _GLF_SWITCH_0_27v[71], _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                    {
                                     _GLF_SWITCH_0_26v;
                                    }
                                  }
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false), false, true)))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                    {
                                     _GLF_IDENTITY(vec4(8.1, 8835.4571, -26.38, -7.1), (vec4(8.1, 8835.4571, -26.38, -7.1)) * vec4(1.0, 1.0, 1.0, 1.0));
                                    }
                                  }
                                 else
                                  {
                                  }
                                 mat2x3(709.854, 93.57, 5.2, -630.910, -6847.7487, 2.8);
                                 mat3x2 _GLF_SWITCH_0_30v;
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                            }
                           do
                            {
                             switch(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), int(3)))), (ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), int(3))))) + (_GLF_IDENTITY(ivec3(0, 0, 0), (true ? ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(-55586, 76631, -36611)))) & ivec3(-8308, 47161, -37615)))), min(int(ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), int(3))))), int(_GLF_IDENTITY(ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (true ? ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))) : _GLF_FUZZED(ivec3(-76957, 69456, -83728)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) / _GLF_IDENTITY(1, (1) >> 0))))), min(int(ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), int(3))))), int(ivec3(0, 0, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))) * 1)))
                              {
                               case 98:
                               mat2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[75], _GLF_SWITCH_1_2v;
                               case 0:
                               case 48:
                               case 69:
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)), 1))) != 1); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))
                                        {
                                         mat4x2(-6.6, 181.245, 5.9, 2653.9458, -3.8, 9214.7994, -44.99, 6538.2994);
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               case 19:
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 do
                                  {
                                   equal(uvec2(15999u, 173437u), _GLF_SWITCH_0_2v);
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 99:
                                   case 42:
                                   case 14:
                                   case 93:
                                   _GLF_IDENTITY(transpose(mat4(-8.6, _GLF_IDENTITY(-89.68, max(-89.68, -89.68)), -11.87, 7.1, 7303.4991, -7.6, -601.692, _GLF_IDENTITY(-6.2, (true ? _GLF_IDENTITY(-6.2, mix(float(_GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2))), float(_GLF_FUZZED(-74.56)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(-7518.3270))), 30.67, 6.3, _GLF_IDENTITY(745.583, 1.0 * (_GLF_IDENTITY(745.583, min(745.583, 745.583)))), 23.54, 2387.9791, 2.0, 6984.9785, 4.1)), (_GLF_IDENTITY(transpose(mat4(-8.6, _GLF_IDENTITY(-89.68, max(-89.68, -89.68)), -11.87, 7.1, 7303.4991, -7.6, -601.692, _GLF_IDENTITY(-6.2, (_GLF_IDENTITY(true ? -6.2 : _GLF_FUZZED(_GLF_IDENTITY(-7518.3270, mix(float(_GLF_FUZZED((+ -538.266))), float(_GLF_IDENTITY(-7518.3270, max(-7518.3270, -7518.3270))), bool(true)))), (true ? true ? -6.2 : _GLF_FUZZED(_GLF_IDENTITY(-7518.3270, mix(float(_GLF_FUZZED((+ -538.266))), float(_GLF_IDENTITY(-7518.3270, max(-7518.3270, -7518.3270))), bool(true)))) : _GLF_FUZZED(-68.34))))), 30.67, 6.3, _GLF_IDENTITY(745.583, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (745.583)), 23.54, 2387.9791, 2.0, 6984.9785, 4.1)), mat4(1.0) * (transpose(mat4(-8.6, _GLF_IDENTITY(-89.68, max(-89.68, -89.68)), -11.87, 7.1, 7303.4991, -7.6, -601.692, _GLF_IDENTITY(-6.2, (true ? -6.2 : _GLF_FUZZED(_GLF_IDENTITY(-7518.3270, min(-7518.3270, _GLF_IDENTITY(-7518.3270, min(-7518.3270, _GLF_IDENTITY(-7518.3270, clamp(-7518.3270, -7518.3270, -7518.3270))))))))), 30.67, 6.3, _GLF_IDENTITY(_GLF_IDENTITY(745.583, mix(float(745.583), float(_GLF_FUZZED(-93.13)), bool(false))), 1.0 * (745.583)), 23.54, 2387.9791, 2.0, 6984.9785, 4.1))))) / mat4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0));
                                   break;
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 47:
                                       mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                                       case 4:
                                       (mat2x4(-8.0, -506.214, -934.799, 72.10, 75.88, -32.54, -1390.7051, 4609.7549) * mat4x2(5.7, -2.2, -6.7, 188.187, -7.9, -2.4, -0.7, 0.7));
                                       case 0:
                                       case 93:
                                       case 10:
                                       case 63:
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             1;
                                            }
                                          }
                                        }
                                       break;
                                       case 49:
                                       injectionSwitch;
                                       default:
                                       1;
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                               case 78:
                               case 88:
                               vec3 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
                               uvec2 _GLF_SWITCH_0_33v[35], _GLF_SWITCH_0_34v[78];
                               case 35:
                               mat4(-3198.2934, 8.6, -4996.3950, -364.634, 740.774, -2.6, 7791.3779, 524.494, -53.42, 2200.9441, 9825.1908, _GLF_IDENTITY(_GLF_IDENTITY(-5.7, max(_GLF_IDENTITY(-5.7, float(mat2x3(-5.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))), _GLF_IDENTITY(-5.7, (-5.7) - 0.0))), (-5.7) + 0.0), -0.9, 5.3, -8657.6277, 27.84);
                               do
                                {
                                 do
                                  {
                                   (_GLF_IDENTITY(ivec4(-77683, 21030, 48491, 63764), ivec4(0, 0, 0, 0) | (ivec4(-77683, 21030, 48491, 63764))) << 43940);
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                               break;
                               case 83:
                               bool _GLF_SWITCH_1_3v;
                               case 87:
                               int _GLF_SWITCH_1_4v[89], _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
                               default:
                               for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 1;
                                }
                              }
                            }
                           while(false);
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   for(uvec3 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v; false; ((mat2x4(-55.26, 56.68, -4.9, -5.6, -2.2, -321.824, -0.9, 7.6) + inversesqrt(-9.1)) * mat3x2(mat4(_GLF_IDENTITY(4.5, 0.0 + (4.5)), -5354.1675, -6.9, 372.062, 586.213, -1.2, 87.51, -6.5, -3.7, 429.921, -2.9, 62.32, 0.8, _GLF_IDENTITY(-23.62, max(-23.62, _GLF_IDENTITY(-23.62, (-23.62) + 0.0))), 0.4, _GLF_IDENTITY(7.5, max(_GLF_IDENTITY(7.5, mix(float(7.5), float(_GLF_FUZZED(-2213.6616)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), 7.5))))))
                    {
                     mat4 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                      {
                      }
                     else
                      {
                       for(uint _GLF_SWITCH_0_41v; true; lessThanEqual(vec4(-2140.2383, 12.98, 59.36, -6693.4777), vec4(_GLF_IDENTITY(-2339.9955, max(-2339.9955, -2339.9955)), 1.3, -359.520, -576.736)))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 27:
                           case 50:
                           case 10:
                           case 98:
                           case 74:
                           case 21:
                           case 48:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH((_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), clamp((0 >> _GLF_IDENTITY(int(7), int(7))), (0 >> _GLF_IDENTITY(int(7), int(7))), (0 >> _GLF_IDENTITY(int(7), int(7))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1))))
                              {
                               case 3:
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 88:
                                   _GLF_SWITCH_0_37v;
                                   case 74:
                                   ;
                                   case 0:
                                   case 1:
                                   case 62:
                                   case 11:
                                   case 69:
                                   case 26:
                                   case 22:
                                   case 32:
                                   case 51:
                                   case 59:
                                   ;
                                   break;
                                   case 3:
                                   ivec4 _GLF_SWITCH_5_0v[59];
                                   case 97:
                                   equal((true ? _GLF_SWITCH_0_21v : _GLF_SWITCH_0_2v), _GLF_SWITCH_2_0v);
                                   default:
                                   1;
                                  }
                                }
                               case 0:
                               case 99:
                               case 74:
                               2.9;
                               do
                                {
                                 switch(_GLF_SWITCH((0 | 0)))
                                  {
                                   case 0:
                                   case 20:
                                   case 37:
                                   case 30:
                                   case 59:
                                   switch(_GLF_SWITCH((1 ^ (((1 ^ 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))
                                    {
                                     case 0:
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       mat3x2(_GLF_IDENTITY(-6.6, min(-6.6, -6.6)), 30.64, 5.2, -366.808, 911.422, 7.0);
                                      }
                                     break;
                                     case 77:
                                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       mat2x3(-0.5, -18.08, 5.0, -28.26, 9.9, -0.4);
                                      }
                                     default:
                                     1;
                                    }
                                   break;
                                   case 84:
                                   vec2 _GLF_SWITCH_5_0v[58];
                                   case 40:
                                   uvec2 _GLF_SWITCH_5_1v;
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               tan(vec3(-63.38, _GLF_IDENTITY(-97.17, clamp(_GLF_IDENTITY(-97.17, clamp(-97.17, _GLF_IDENTITY(-97.17, (-97.17) / 1.0), -97.17)), -97.17, -97.17)), 2206.8405));
                               bvec4 _GLF_SWITCH_0_42v;
                               case 5:
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   (mat2x3(6.7, -7.0, _GLF_IDENTITY(7.8, float(mat2x3(_GLF_IDENTITY(7.8, float(_GLF_IDENTITY(vec4(7.8, 1.0, 1.0, 1.0), (vec4(7.8, 1.0, 1.0, 1.0)) * mat4(1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0))), -2959.7503, 5.9, -65.29) + mat2x3(-9.4, -7.3, 205.339, -406.234, -943.364, _GLF_IDENTITY(61.60, float(mat3x4(61.60, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(7380.9453)), bool(false))), 1.0)))));
                                  }
                                }
                               case 60:
                               case 7:
                               vec4 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[28];
                               case 16:
                               int _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
                               case 88:
                               case 15:
                               bool _GLF_SWITCH_0_47v;
                               case 38:
                               vec4 _GLF_SWITCH_0_48v[54], _GLF_SWITCH_0_49v;
                               break;
                               default:
                               1;
                              }
                            }
                           break;
                           case 96:
                           ;
                           case 65:
                           ;
                           default:
                           1;
                          }
                        }
                      }
                     for(uvec3 _GLF_SWITCH_0_50v[45]; any(bvec3(true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))) || false))); bvec2(bvec4(true, bvec2(true, true).tss)))
                      {
                      }
                     while(false)
                      {
                       equal(lessThan(vec4(-8.0, -5.3, -2.6, 888.974), vec4(-734.983, 199.046, 501.642, 3.7)), bvec4(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))), (bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) || false)), true, true));
                       ;
                       uvec4 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v;
                       roundEven(vec4(-96.02, 2910.9493, 8897.6772, -3.7));
                       for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(3))))), min(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(3))))), 0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(3)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           _GLF_IDENTITY(bvec2(bvec4(true, true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false))))))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false)))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)), true, false), true)))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (true))), false), true)))), false, false)), true, true, false)), false || (bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (true))), false), true)))), false, false)), true, true, false))))))))))))) || false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (true))), false), true)))), false, false)), true, true, false))))))))))) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false)))), true)))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), ! (! (true && (true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (! (true))), bool(bvec3(_GLF_IDENTITY(! (! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (true))), bool(bvec2(! (! (! (true))), true)))), true && (! (_GLF_IDENTITY(! (! (! (true))), bool(bvec2(! (! (! (true))), true)))))))), true, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (true))), false), true)))), false, false)), true, true, false))))))))))) || false)) || false)))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))), false)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, (true) || false), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true)))))))))), true, false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false)))))))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true))), false)))))))))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (true))), false), true)))), false, false)), true, true, false))))))))))) || false)) || false), true, false, true))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-1.4)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY(_GLF_FUZZED(-1.4), 0.0 + (_GLF_FUZZED(-1.4)))), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-351.469), _GLF_FUZZED(-137.963)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-1.4)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-1.4)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-1.4)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY(_GLF_FUZZED(-1.4), (true ? _GLF_FUZZED(-1.4) : _GLF_FUZZED(46.86)))), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(-1.4)), bvec2(false, false))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0)), (mat3x2(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0))) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x)) < injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec4(true, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false)))))))))))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))), false, false)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false)))))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false), true)))), false, false))))), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false))))))))), ! (! ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false)))))))))))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))), false, false)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), false)))))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false), true)))), false, false))))), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false))))))))))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(vec3(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), abs(1.0)), vec3(mat2x3(vec3(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), abs(1.0)), 0.0, 0.0, 0.0)))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false)))))))))), (bool((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), true)))), false, false)), true, true, false))))))))))) && true)))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))))).x < injectionSwitch.y))))), false)))));
                          }
                        }
                       uvec2 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v;
                      }
                     bvec2 _GLF_SWITCH_0_55v[41], _GLF_SWITCH_0_56v[73];
                    }
                  }
                }
               default:
               do
                {
                 1;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             for(int _injected_loop_counter = (0 | (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / 1)), 4, 64, 4);
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   subgroupAll(true);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         case 3:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             (vec4(-276.932, -160.549, 183.374, _GLF_IDENTITY(-9.8, mix(float(_GLF_FUZZED(-24.98)), float(_GLF_IDENTITY(-9.8, 1.0 * (-9.8))), bool(true)))) , uvec2(159203u, 60392u));
            }
          }
         case 18:
         (vec3(-8.5, 2.7, -4963.8989).g / mat2x4(182.562, _GLF_IDENTITY(1.6, (1.6) / sqrt(1.0)), -48.70, 7.2, _GLF_IDENTITY(-6746.5354, 0.0 + (-6746.5354)), 5413.1558, -12.06, 61.22));
         default:
         1;
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
