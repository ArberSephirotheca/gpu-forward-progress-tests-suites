#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4x2 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 mat3 _f3;
 mat3x2 _f4;
 mat4x3 _f5;
 bvec4 _f6;
 uint workgroup_id;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat4 _f1;
 _GLF_struct_0 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat3 _f1;
 mat3x4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u))))), (true ? uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u))))) : _GLF_FUZZED(subgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) << 0u)), (max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)) * 1u));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(mat3(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), _GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), uvec4(1u), mat3x2(1.0), mat3(1.0), mat3x2(1.0), mat4x3(1.0), bvec4(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))).x), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(vec3(vec3(1.0))), (vec3(vec3(vec3(1.0)))) / vec3(1.0, 1.0, 1.0)))), mat3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat3(2418.0309, -59.80, -64.73, _GLF_IDENTITY(-5.5, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-5.5, min(-5.5, _GLF_IDENTITY(-5.5, (true ? -5.5 : _GLF_FUZZED(_GLF_IDENTITY(-75.13, (true ? -75.13 : _GLF_FUZZED(-1.1)))))))), float(vec4(_GLF_IDENTITY(-5.5, min(-5.5, _GLF_IDENTITY(-5.5, (true ? -5.5 : _GLF_FUZZED(_GLF_IDENTITY(-75.13, (true ? -75.13 : _GLF_FUZZED(-1.1)))))))), 0.0, 1.0, 0.0))), -5.5, -5.5)), -6.5, _GLF_IDENTITY(1.3, float(mat3(_GLF_IDENTITY(1.3, min(1.3, _GLF_IDENTITY(1.3, float(float(1.3))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (vec3(1.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(7377.8045)), bool(false)))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0))), 3610.6204, -7.0, -9872.3135))), (false ? _GLF_FUZZED(5723.8408) : _GLF_FUZZED(determinant(mat3(2418.0309, -59.80, -64.73, _GLF_IDENTITY(_GLF_IDENTITY(-5.5, clamp(_GLF_IDENTITY(-5.5, min(-5.5, _GLF_IDENTITY(-5.5, (true ? -5.5 : _GLF_FUZZED(-75.13))))), -5.5, -5.5)), (false ? _GLF_FUZZED(mix(7.5, 3.6, -40.17)) : _GLF_IDENTITY(-5.5, clamp(_GLF_IDENTITY(-5.5, min(-5.5, _GLF_IDENTITY(-5.5, (true ? -5.5 : _GLF_FUZZED(-75.13))))), -5.5, -5.5)))), -6.5, 1.3, 3610.6204, -7.0, -9872.3135))))) : 1.0))), mat3x4(1.0));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f2.workgroup_id, ~ (~ (_GLF_struct_replacement_2._f0._f2.workgroup_id)));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) | 0u, ((min(subgroup_size, subgroup_size)) | 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) + (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), uint(7u)), (1u | 1u) * _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), (false ? _GLF_FUZZED(104504u) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), uint(7u))))))) + (subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (41981u & 0u) + (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((41981u & 0u), min((41981u & 0u), _GLF_IDENTITY((41981u & 0u), ~ (~ ((41981u & 0u)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((41981u & 0u), ((41981u & 0u)) | ((41981u & 0u)))), uint(uvec4(((41981u & 0u)), _GLF_IDENTITY((56925u & 0u), max((56925u & 0u), (56925u & 0u))), 0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, (1u) + 0u)))))))))), ~ (~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(41981u & 0u, clamp(41981u & 0u, _GLF_IDENTITY(41981u & 0u, (41981u & 0u) | _GLF_IDENTITY((41981u & 0u), min((41981u & 0u), (41981u & 0u)))), _GLF_IDENTITY(41981u & 0u, ~ (~ _GLF_IDENTITY((41981u & _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(mix(subgroup_id, subgroup_size, false))))), min((41981u & _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(mix(subgroup_id, subgroup_size, false))))), _GLF_IDENTITY((41981u & _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(mix(subgroup_id, subgroup_size, false))))), max((41981u & _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(mix(subgroup_id, subgroup_size, false))))), (41981u & _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(mix(subgroup_id, subgroup_size, false)))))))))))))), ((_GLF_IDENTITY(41981u & 0u, (41981u & 0u) | 0u))) | _GLF_IDENTITY(((_GLF_IDENTITY(41981u, (41981u) << 0u) & 0u)), (_GLF_IDENTITY(((41981u & 0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(((41981u & 0u)), uint(uvec4(((41981u & 0u)), 1u, 0u, 0u)))))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(41981u, min(41981u, 41981u)) & _GLF_IDENTITY(0u, ~ (~ (0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(41981u, min(41981u, 41981u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(41981u, min(41981u, 41981u)), 1u * (_GLF_IDENTITY(41981u, min(41981u, 41981u)))))) & 0u), (_GLF_IDENTITY(41981u, min(41981u, 41981u)) & 0u), (_GLF_IDENTITY(41981u, min(41981u, 41981u)) & 0u)))), _GLF_IDENTITY((56925u & 0u), max((56925u & 0u), (56925u & 0u))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))))))))) + (subgroup_local_id)) + 1) + uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(87.60) : 0.0)), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(87.60) : 0.0)) : _GLF_FUZZED(525.431))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)))))) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(14328))) - 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(14328))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(14328))) - 0, ~ (~ (_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(14328))) - 0)))) - 0))))), int(_GLF_IDENTITY(ivec2(min(0, _GLF_IDENTITY(0, (0) - 0)), 1), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(min(0, _GLF_IDENTITY(0, (0) - 0)), 1), (ivec2(min(0, _GLF_IDENTITY(0, (0) - 0)), 1)) << ivec2(0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) + 0), _GLF_IDENTITY(0, (0) / 1) ^ (_GLF_IDENTITY(0, (0) + 0)))))), max(ivec3(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) - 0))), 1, 0), ivec3(4, 1, 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0)))))))), max((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), ivec3(4, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)), _GLF_IDENTITY(0, ~ (~ (0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY(max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0))))), min(max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0))))), max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0))))))))) + ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0)))))))))), (int(_GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), ivec3(4, 1, _GLF_IDENTITY(0, ~ (~ (0)))))))))) >> 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0 | 0) ^ (0)), 0 | (0)))), (~ (0)))))), max(_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) >> 0), 4)), 1, 0), max(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(0, 0, 0) + (ivec3(4, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0)), clamp(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0)), _GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0)), _GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0))))))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) >> 0), 1, 0), (ivec3(_GLF_IDENTITY(4, (4) >> 0), 1, 0)) / ivec3(1, 1, 1)), ivec3(0, 0, 0) + (ivec3(4, 1, 0))), _GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED((-23143 & 42373)) : _GLF_IDENTITY(1, (1) >> 0))))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 ^ (0))) << 0), 0)))))) >> ivec3(0, 0, 0)) - ivec3(0, 0, 0)), ivec3(4, 1, _GLF_IDENTITY(0, (0) - 0))))), (int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, max(1, 1)))), 0), max(ivec3(4, 1, 0), ivec3(4, 1, 0))))) >> 0), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), 1 * ((0)))))), (~ (0)))))), max(_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), max(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(0, 0, 0) + (ivec3(4, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), ivec3(_GLF_IDENTITY(ivec4(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), 1), (ivec4(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), 1)) << ivec4(0, 0, 0, 0)))), (ivec3(4, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) >> 0)), max(min(1, _GLF_IDENTITY(1, (1) >> 0)), min(1, _GLF_IDENTITY(1, (1) >> 0))))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0))))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(int(4))), 1, 0), ivec3(0, 0, 0) + (ivec3(4, 1, 0))), _GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, (0) / 1))))) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0)))))) >> ivec3(0, 0, 0)) - ivec3(0, 0, 0)), ivec3(4, 1, _GLF_IDENTITY(0, (0) - 0))))), (int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), 0), max(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 0), ivec3(4, 1, 0))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (_GLF_IDENTITY(0, 0 | (0)))), (~ (0)))))), max(_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), max(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(0, 0, 0) + (ivec3(4, 1, 0))), _GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), clamp(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))))), 0)) << ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0))))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), max(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(0, 0, 0) + (ivec3(4, 1, 0))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 1))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0), (ivec3(4, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> 0))), 0)) << ivec3(0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))), ((_GLF_IDENTITY(0, 0 ^ (0)))) << 0) << 0), 0)))))) >> ivec3(0, _GLF_IDENTITY(0, 0 | (0)), 0)) - ivec3(0, 0, 0)), ivec3(4, 1, _GLF_IDENTITY(0, (0) - 0))))), (int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, max(1, 1)), 0), max(ivec3(4, 1, 0), ivec3(4, 1, 0))))) >> 0))))) + 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))), true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))), true, true))))))) && true))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))) || false)))) && true), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), true)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(((! (false))), bool(bvec2(((! (false))), false))) || false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))))))), _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))))))), _GLF_IDENTITY(false, ! (! (false)))))), (! (bool(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))))))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, true && (false)), false)))), true && (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0), (mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0), (mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0), (mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0), (mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED((-9.9 / 35.67))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), true))), true)))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec3(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true)))), true)))), false))), true))), false))))))))))));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (uint(2))), uint(uint(uint(2)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), false || (((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.07)), bool(false)))), bool(true)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.07)), bool(false)))), bool(true)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))))), true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.07)), bool(false)))), bool(true)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))))))).x))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.07)), bool(false)))), bool(true)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, length(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))))), true, true))))) && true))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
