#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) ^ 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (_GLF_IDENTITY(64, int(ivec3(64, 1, 0))))) >> 0)))))), int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), min(_GLF_IDENTITY(int(ivec3(64, 1, 1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), max((1 << _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) / 1))))) | ((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))) * (int(ivec3(64, 1, 1)))), _GLF_IDENTITY(int(ivec3(64, 1, 1)), clamp(int(ivec3(64, 1, 1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / 1), 1, 1)), (int(ivec3(64, 1, 1))) | 0), int(ivec3(64, 1, 1)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(((_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(int(ivec3(((_GLF_IDENTITY(4, clamp(4, 4, 4)))), 0, _GLF_IDENTITY(0, (0) | (0)))), (int(ivec3(((_GLF_IDENTITY(4, clamp(4, 4, 4)))), 0, _GLF_IDENTITY(0, (0) | (0))))) | 0)) | ((_GLF_IDENTITY(4, clamp(4, 4, 4))))) / 1));
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(54903))) : _GLF_FUZZED(-46912))), max(subgroup_local_id + 1, subgroup_local_id + 1)))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) >> 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(65556))), max(subgroup_local_id + 1, subgroup_local_id + 1)))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) >> 0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + 1)))) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) >> 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (subgroup_local_id)))) + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) >> 0u) - 0u))) | _GLF_IDENTITY(0u, (0u) | (0u)))) < subgroup_size)
  {
   do
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) ^ 0)), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(false);
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, 0 + (3))), int(3))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-31190) : 3))))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), min(int(3), int(3))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | (int(3)))))), min(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) * 1) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) + 0), min(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(3)))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) + 0), min(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(3)))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) + 0), min(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) + 0), min(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(3)))))), 0, 1))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY(3, 1 * (3)), _GLF_IDENTITY(3, ~ (~ (3)))))), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), max(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) - 0)))))), true && (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, _GLF_IDENTITY(max(_GLF_IDENTITY(3, (3) | (3)), 3), int(ivec4(max(_GLF_IDENTITY(3, (3) | (3)), 3), 0, 1, 0))))), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))), max(0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(0, 0 | (0)) + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-58640, (_GLF_IDENTITY(-58640, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -58640 : _GLF_FUZZED(_injected_loop_counter)))) | (-58640))) : _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(_GLF_IDENTITY(3, (3) + 0)), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, int(ivec2(3, 1)))), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), _GLF_IDENTITY(int(3), (int(3)) ^ 0))))) >> _GLF_IDENTITY(int(3), int(3)), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), min(int(3), int(3))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) | (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))))), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, 0 + (3)))))), min(int(3), int(3))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), max(_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) | (3))))))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, ~ (~ (3))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), max(_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) | (3))))))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, ~ (~ (3))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), max(_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) | (3))))))))), (false ? _GLF_FUZZED(-58640) : _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, ~ (~ (3))))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), 0 + (int(3))), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))))), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3)))))), ((_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))))) * 1)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(3, 3))))) - 0))))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 0 | (64)), 4);
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! _GLF_IDENTITY((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))) && true))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), ((bool(false))) && true)))))) || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), false || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))), false || (! (! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y)))))))))))), bool(bvec3(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))), true, false)))))))))) || false)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))), false || (! (_GLF_IDENTITY(! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(56.93)), bool(false)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)))))))))))))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))) && true))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0)))), injectionSwitch.x)), 0.0, 0.0, 0.0))))) < injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ((_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7)))))) - sin(0.0)) < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7)))))) - sin(0.0)) < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7)))))) - _GLF_IDENTITY(sin(0.0), mix(float(_GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-8586.8014)), bool(false)))), float(_GLF_FUZZED(-9.2)), bool(false)))) < injectionSwitch.y)))))) && true)) || false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true)))), true && (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(264.329, -52.79)))).x < injectionSwitch.y))))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), ! (! (! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, cos(0.0), 0.0)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, sin(0.0), 1.0, 0.0)))))))))), bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))))))))) || false, false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), ! (! (true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))))))) || false)))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))), (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false)))) || false)))), true, true, false))))), false || (! (_GLF_IDENTITY(! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-552.359)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true)))))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))))))) || false)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(normalize(vec2(-275.643, 4.4))))).x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(normalize(vec2(-275.643, 4.4))))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(normalize(vec2(-275.643, 4.4))))).x < injectionSwitch.y)))) && true))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! _GLF_IDENTITY((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || ((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x < injectionSwitch.y)), false)))) && true)), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), sqrt(1.0), 1.0, 0.0, 1.0))).x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)), true && (bool(bvec4(bool(bool(_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true)))))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))), false || (! (! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(vec2(349.027, -3844.0330), ivec2(90447, -65708))))).x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))))), false), false, false)), true))))))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))), false || (! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))) < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), false, true, false))))), true, false)))), bool(bool((_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))))))))))))))) || false)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(130.952)), bool(false)))) < injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), ! (! (bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))) || (! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), false, false, true))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))), false || (! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))))))))), true && (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), true, false, false))))), false || (! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / sqrt(1.0)))))), true && (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))))))), true), false)))))) || false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))
      {
       subgroupAll(true);
      }
     else
      {
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
