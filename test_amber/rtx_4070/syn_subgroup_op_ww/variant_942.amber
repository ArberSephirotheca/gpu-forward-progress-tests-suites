#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)) || false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(40.95)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(175933u, 5824u, 80076u)) : gl_NumWorkGroups)))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 1u)))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, true && (false)), true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true)))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec3(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), false))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, true && (false)), true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true)))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), bvec2(bvec3(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-93155) : _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(113273u)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), clamp(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false), true)))), vec2(0.0, 0.0) + (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(113273u)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), clamp(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), mix(vec2((vec2((2.4 + 5.0), 0.0))[0], (vec2((2.4 + 5.0), 0.0))[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(1.8)), bvec2(false, false))), vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (vec2((2.4 + 5.0), 0.0))))))))), clamp(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED((+ vec2(1.2, -864.939).r))), bool(false))) + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0))), (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), true))))))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(113273u)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec2((2.4 + 5.0), 0.0))))), mix(float(_GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), clamp(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), mix(float(_GLF_FUZZED(-6567.5142)), float(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2(_GLF_IDENTITY((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), clamp((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), _GLF_IDENTITY((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), mix(float(_GLF_FUZZED(0.5)), float((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0)))), bool(true))), (_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))))), (_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))))), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))))), bool(true))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))))))), float(_GLF_FUZZED((-45.95))), bool(false))))), clamp(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))), min(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))), _GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4 + 5.0, max(2.4 + 5.0, 2.4 + 5.0))), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) || false)), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) || false))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false), true))))).y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))))) + 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(113273u)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), (min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((_GLF_IDENTITY(2.4, 1.0 * (2.4)) + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))))) / 1.0))), clamp(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), clamp(_GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), clamp(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), min(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), (min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))))) + 0.0), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), max(_GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), max(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)), (min(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(vec2(1691.3850, 8894.3370).x)), vec2((vec2((2.4 + 5.0), 0.0))[0], _GLF_IDENTITY((vec2((2.4 + 5.0), 0.0))[1], ((vec2((2.4 + 5.0), 0.0))[1]) + 0.0)), bvec2(true, true))), vec2((2.4 + 5.0), 0.0))) * vec2(1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((2.4 + _GLF_IDENTITY(5.0, (5.0) / 1.0)), (_GLF_IDENTITY((2.4 + _GLF_IDENTITY(5.0, (5.0) / 1.0)), float(mat3x4((2.4 + _GLF_IDENTITY(5.0, (5.0) / 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), vec2(mat4(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), mix(vec2(_GLF_FUZZED(vec2(-0.0, -478.182).s), (vec2((2.4 + 5.0), 0.0))[1]), vec2((vec2((2.4 + 5.0), 0.0))[0], _GLF_FUZZED(-65.40)), bvec2(true, false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0)), 1.0)))))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false), true)))), vec2(0.0, 0.0) + (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(113273u)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4 + 5.0, min(2.4 + 5.0, 2.4 + 5.0))), 0.0), clamp(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), mix(vec2((vec2((2.4 + 5.0), 0.0))[0], (vec2((2.4 + 5.0), 0.0))[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(1.8)), bvec2(false, false))), vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (vec2((2.4 + 5.0), 0.0))))))))), clamp(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED((+ vec2(1.2, -864.939).r))), bool(false))) + 5.0), 0.0), min(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), (false ? _GLF_FUZZED((pow(-127.840, 8.2) / exp(injectionSwitch))) : vec2((2.4 + 5.0), 0.0))), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)), (min(vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, cos(abs(0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, cos(abs(0.0)))), clamp(float(mat4x2(0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, cos(abs(0.0)))), float(mat4x2(0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, cos(abs(0.0)))), float(mat4x2(0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, cos(abs(0.0)))))) : _GLF_FUZZED(95.99))))), vec2((2.4 + 5.0), 0.0))) - tan(vec2(0.0, 0.0))))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(2.4, min(2.4, 2.4)) + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))))))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(vec4((injectionSwitch.x), 0.0, abs(1.0), 0.0))) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0))), (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), true))))))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), true, false)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED((+ vec4(-6113.2487, 799.495, 2285.1758, -52.75).w))), bool(false))))) + 0.0) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(113273u)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec2((2.4 + 5.0), 0.0))))), mix(float(_GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2((2.4 + _GLF_IDENTITY(5.0, (5.0) / 1.0)), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((_GLF_IDENTITY(2.4 + 5.0, max(2.4 + 5.0, _GLF_IDENTITY(2.4 + 5.0, (2.4 + 5.0) - 0.0)))), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), clamp(min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2(_GLF_IDENTITY((2.4 + 5.0), ((2.4 + 5.0)) / 1.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY((2.4 + 5.0), ((2.4 + 5.0)) / 1.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))), mix(float(_GLF_FUZZED(-6567.5142)), float(min(float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4, (2.4) / 1.0) + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2(_GLF_IDENTITY((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), clamp((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), _GLF_IDENTITY((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))), mix(float(_GLF_FUZZED(0.5)), float((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0)))), bool(true))), (_GLF_IDENTITY(2.4 + 5.0, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))))), (_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(2858.4220) : 2.4 + 5.0))))), 0.0)))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((_GLF_IDENTITY(2.4 + 5.0, (false ? _GLF_FUZZED(-367.758) : 2.4 + 5.0))), 0.0), vec2((2.4 + 5.0), 0.0)))))), bool(true))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), (_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), vec2(vec2(vec2((2.4 + 5.0), 0.0))))) + vec2(0.0, 0.0)), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + _GLF_IDENTITY(5.0, (_GLF_IDENTITY(5.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5.0, 1.0 * (5.0)) : _GLF_FUZZED(3677.9542)))) / _GLF_IDENTITY(dot(vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))))), 0.0)))))))), float(_GLF_FUZZED((-45.95))), bool(false))))), clamp(_GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))), min(_GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4 + 5.0, _GLF_IDENTITY(float(mat2x4(2.4 + 5.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(2.4 + 5.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat2x4(2.4 + 5.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), float(mat2x4(2.4 + 5.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4 + 5.0, float(_GLF_IDENTITY(mat4x3(2.4 + 5.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4x3(2.4 + 5.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(-6.1, 21.70, 5707.8146, 34.59, -5.2, -8075.3436, -7.1, 130.223, -204.488, 4.2, 484.065, 289.776))))))), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))))), float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)), (min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))) - vec2(0.0, 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(2.4 + 5.0, max(2.4 + 5.0, 2.4 + 5.0))), 0.0), min(vec2((2.4 + 5.0), 0.0), _GLF_IDENTITY(vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0)))))))), _GLF_IDENTITY((2.4 + 5.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), min(float(_GLF_IDENTITY(vec2((2.4 + 5.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(true))), 0.0))), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))), mix(vec2((_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(-3784.1795), (_GLF_IDENTITY(vec2((2.4 + 5.0), 0.0), min(vec2((2.4 + 5.0), 0.0), vec2((2.4 + 5.0), 0.0))))[1]), bvec2(false, true))))))))))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) || false)), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) || false))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-67.04)))) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7486.1671)), bool(false)))) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))) > injectionSwitch.y)), false), true))))).y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) || false))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) << (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uint((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uint((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)) + subgroup_local_id));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(95868, -97550)) : 1))) % subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / (0u ^ 1u)), 0u, 1u, ((1u & 1u) ^ 1u))), 0u | (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / (0u ^ 1u)), 0u, 1u, ((1u & 1u) ^ 1u)))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-4.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), 0 ^ (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (1))), clamp((false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (1)), (false ? _GLF_FUZZED(ivec2(-92764, 20130).g) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) | (int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ (1))))), _GLF_IDENTITY((false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (1))), ((false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (1)))) | ((false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (1))))), (false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (1))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), 0 ^ (1)), (false ? _GLF_FUZZED(6251) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) | ((1))) : _GLF_FUZZED(43741)))))))) * 1u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   do
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true, true, true))))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y)), (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 1.0 * (mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true))))))))))))))))) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))), true && (bool(bool((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))))))))) || false)))) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))), true && (bool(bool((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))))))))) || false)))) && true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true))))))))))))))))) || false, ((! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))))))))))))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), determinant(mat4(1.0, sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))).x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))) || false)))) && true))))))), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.44)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(439.583)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), true, false), true))))))))))))))))))) || false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))))))) || false)))) && true))))))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)))) - 0))) != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 87089)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 87089)), true))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((int(4)), _GLF_IDENTITY((_GLF_IDENTITY((int(4)), max((int(4)), (int(4))))), ~ (~ ((_GLF_IDENTITY((int(4)), max((int(4)), (int(4)))))))) / 1)), ((~ _GLF_IDENTITY((int(4)), _GLF_IDENTITY((_GLF_IDENTITY((int(4)), max((int(4)), (int(4))))), ~ (~ ((_GLF_IDENTITY((int(4)), max((int(4)), (int(4)))))))) / 1))) >> 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), (int(4)) >> 0)) | (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(int(4), 1, (0 & 85715))), (int(ivec3(int(4), 1, (0 & 85715)))) << 0)), int(4), int(4))))), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, abs(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))))
                        barrier();
                       barrier();
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.y), bool(true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.y), bool(true))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.y), bool(true)))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           subgroupAll(false);
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true))))))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(sqrt(0.0)))) && true)))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true))))) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true))))) && true), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true), true, true, true))))) && true), true)), false)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false, false))))), _GLF_IDENTITY(true, (true) || false), false))), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec3(bool(bvec4(true, true, false, false)), false, false))), bool(bvec4(bool(bvec4(true, true, false, false)), true, _GLF_IDENTITY(true, false || (true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), false || (! (bool(bvec4(true, true, false, false))))))), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false)), false, true, false)))), false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, true && (false)), false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)))))), true))))), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), false)))))), false)))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), false, false)), true, true, true))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) || false), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))))), true, false), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec3(bool(bvec4(true, true, false, false)), false, false))), bool(bvec4(bool(bvec4(true, true, false, false)), true, _GLF_IDENTITY(true, false || (true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), false || (! (bool(bvec4(true, true, false, false))))))), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false)), false, true, false)))), false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, true && (false)), false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)))))), true))))), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), false)))))), false)))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), false, false)), true, true, true))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) || false), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))))), true, false), false)))), true, false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec3(bool(bvec4(true, true, false, false)), false, false))), bool(bvec4(bool(bvec4(true, true, false, false)), true, _GLF_IDENTITY(true, false || (true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), false || (! (bool(bvec4(true, true, false, false))))))), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true, false)), false, true, false)))), false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, true && (false)), false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)))))), true))))), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))), true, true, true))))))), false)))))), false)))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), false, false)), true, true, true))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) || false), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec4(bool(bvec4(true, true, false, false)), true, true, true)))))), true))))), true)))))), true, false), false)))), true, false, false))))))))))));
                }
              }
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (int(5)) | 0) : _GLF_FUZZED(56467))), max(int(5), int(5))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 | (5))), (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, 5, 5))) | (5)))) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
      {
       do
        {
         subgroupAll(true);
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)));
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
