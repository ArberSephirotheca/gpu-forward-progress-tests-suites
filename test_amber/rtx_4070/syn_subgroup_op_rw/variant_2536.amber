#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_41 {
 mat3x4 _f0;
 mat4 _f1;
 uint _f2;
 ivec3 _f3;
 int _f4;
} ;

struct _GLF_struct_42 {
 _GLF_struct_41 _f0;
} ;

struct _GLF_struct_39 {
 ivec3 _f0;
 mat3 _f1;
 uvec4 _f2;
 vec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_38 {
 mat3 _f0;
 bvec3 _f1;
 float _f2;
 uvec4 _f3;
 ivec3 _f4;
 bvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_37 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_36 {
 mat3x4 _f0;
 uint _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 uint _f4;
} ;

struct _GLF_struct_40 {
 _GLF_struct_36 _f0;
 _GLF_struct_37 _f1;
 _GLF_struct_38 _f2;
 _GLF_struct_39 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_43 {
 bool _f0;
 _GLF_struct_40 _f1;
 vec4 _f2;
 bvec3 _f3;
 _GLF_struct_42 _f4;
 uint num_workgroup;
 mat2 _f5;
} ;

struct _GLF_struct_34 {
 uint read;
 vec4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
} ;

struct _GLF_struct_32 {
 mat2x3 _f0;
 uint _f1;
} ;

struct _GLF_struct_30 {
 mat2 _f0;
 bool _f1;
 vec3 _f2;
} ;

struct _GLF_struct_29 {
 ivec3 _f0;
 mat2 _f1;
 bvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_28 {
 mat3x4 _f0;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 ivec4 _f1;
 bvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 float _f1;
 _GLF_struct_28 _f2;
 vec4 _f3;
 mat3 _f4;
 _GLF_struct_29 _f5;
 _GLF_struct_30 _f6;
} ;

struct _GLF_struct_26 {
 uint _f0;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 mat2 _f3;
 mat4x3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
 _GLF_struct_24 _f1;
} ;

struct _GLF_struct_23 {
 mat3x4 _f0;
} ;

struct _GLF_struct_33 {
 bool _f0;
 uint subgroup_id;
 _GLF_struct_23 _f1;
 vec4 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_31 _f5;
 _GLF_struct_32 _f6;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 vec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_19 {
 mat3 _f0;
 uvec3 _f1;
 float _f2;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 ivec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 uvec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 mat3 _f1;
 mat4x3 _f2;
 bvec2 _f3;
 vec4 _f4;
 uint workgroup_id;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 uvec4 _f1;
 bool _f2;
 mat4x2 _f3;
 ivec4 _f4;
 float _f5;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 mat3x2 _f1;
 uint _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 mat2x4 _f1;
 vec4 _f2;
 bvec2 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 bvec4 _f1;
 bool _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 mat4x3 _f1;
 int _f2;
 uvec3 _f3;
 ivec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 uvec2 _f1;
 _GLF_struct_8 _f2;
 int _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat2x3 _f1;
 ivec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 uvec3 _f1;
 ivec4 _f2;
 uvec3 _f3;
 vec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 float _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 mat3x4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat2 _f1;
 vec4 _f2;
 bvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 vec2 _f1;
 bool _f2;
 mat3 _f3;
 bool _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
 uint _f1;
 mat3 _f2;
 mat4x3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_21 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(true, gl_SubgroupID, _GLF_struct_23(mat3x4(1.0)), vec4(1.0), _GLF_struct_25(ivec3(1), _GLF_struct_24(ivec4(1), mat2x3(1.0), ivec3(1), mat2(1.0), mat4x3(1.0), ivec4(1))), _GLF_struct_26(1u), _GLF_struct_31(_GLF_struct_27(uvec4(1u), ivec4(1), bvec3(true), vec2(1.0)), 1.0, _GLF_struct_28(mat3x4(1.0)), vec4(1.0), mat3(1.0), _GLF_struct_29(ivec3(1), mat2(1.0), bvec2(true), ivec3(1)), _GLF_struct_30(mat2(1.0), true, vec3(1.0))), _GLF_struct_32(mat2x3(1.0), 1u));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_43 _GLF_struct_replacement_43 = _GLF_struct_43(true, _GLF_struct_40(_GLF_struct_36(mat3x4(1.0), 1u, mat2x3(1.0), mat3x4(1.0), 1u), _GLF_struct_37(uvec3(1u), uvec2(1u)), _GLF_struct_38(mat3(1.0), bvec3(true), 1.0, uvec4(1u), ivec3(1), bvec4(true), mat3(1.0)), _GLF_struct_39(ivec3(1), mat3(1.0), uvec4(1u), vec4(1.0), vec4(1.0)), mat2x4(1.0)), vec4(1.0), bvec3(true), _GLF_struct_42(_GLF_struct_41(mat3x4(1.0), mat4(1.0), 1u, ivec3(1), 1)), gl_NumWorkGroups.x, mat2(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_7(_GLF_struct_0(true, 1u, mat3(1.0), mat4x3(1.0), bvec4(true)), _GLF_struct_1(mat2(1.0), vec2(1.0), true, mat3(1.0), true, ivec3(1)), _GLF_struct_2(ivec2(1), mat2(1.0), vec4(1.0), bvec2(true), 1u), _GLF_struct_3(mat3x4(1.0), mat3x4(1.0), mat3(1.0)), _GLF_struct_4(vec3(1.0), ivec4(1), mat4x3(1.0), 1.0, uvec4(1u)), _GLF_struct_5(bvec2(true), uvec3(1u), ivec4(1), uvec3(1u), vec2(1.0), mat4(1.0)), _GLF_struct_6(1, mat2x3(1.0), ivec3(1), mat2x4(1.0))), _GLF_struct_10(vec2(1.0), uvec2(1u), _GLF_struct_8(vec3(1.0), ivec3(1), mat4x2(1.0)), 1, _GLF_struct_9(bvec2(true), mat4x3(1.0), 1, uvec3(1u), ivec2(1), bvec2(true))), _GLF_struct_13(_GLF_struct_11(mat4x2(1.0), bvec4(true), true), _GLF_struct_12(vec2(1.0), ivec3(1))), _GLF_struct_17(_GLF_struct_14(bvec2(true), mat3x2(1.0), 1u, bvec2(true)), mat2x4(1.0), vec4(1.0), bvec2(true), _GLF_struct_15(ivec4(1), uvec4(1u), true, mat4x2(1.0), ivec4(1), 1.0), _GLF_struct_16(mat3(1.0), mat3(1.0), mat4x3(1.0), bvec2(true), vec4(1.0), gl_WorkGroupID.x)), _GLF_struct_21(_GLF_struct_18(mat3(1.0), ivec2(1), mat3(1.0)), _GLF_struct_19(mat3(1.0), uvec3(1u), 1.0), _GLF_struct_20(bvec3(true), vec3(1.0), bvec2(true)), uvec3(1u), mat4x2(1.0)));
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * _GLF_struct_replacement_22._f3._f5.workgroup_id;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 uint subgroup_base = _GLF_struct_replacement_33.subgroup_id * subgroup_size;
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_35 _GLF_struct_replacement_35 = _GLF_struct_35(_GLF_struct_34(atomicLoad(buf[virtual_gid], 4, 64, 2), vec4(1.0), mat4(1.0)));
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], _GLF_struct_replacement_35._f0.read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
