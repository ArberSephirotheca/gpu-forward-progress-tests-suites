#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(5.0) : (injectionSwitch)[0])), _GLF_FUZZED((+ -6.3))), vec2(_GLF_FUZZED(-3.0), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))) && true))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat3x4(max(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) / 1.0)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(81.30), _GLF_FUZZED(3510.8197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(81.30), _GLF_FUZZED(3510.8197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(81.30), _GLF_FUZZED(3510.8197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y : _GLF_FUZZED(14.79))) : _GLF_FUZZED(25.61)))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(-2.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat4(984.259, -8.4, -6.1, -5.8, -7.9, -0.2, -6.3, 16.15, -6991.2212, 8.7, 330.133, -6455.1744, -3.8, -9.4, -257.260, 8.5))))) > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (false) || false)))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u | (~ (gl_NumWorkGroups.x))))), 0u | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | (uvec4(gl_WorkGroupSize, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) / uvec3(1u, 1u, 1u)))).x, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)), 0u + (_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u))))))) + 0u);
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 1u, 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), ~ (~ (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))) | (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))))), ~ (~ (uvec3(gl_WorkGroupID.x, 1u, 1u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 1u, 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), ~ (~ (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))) | (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))))), ~ (~ (uvec3(gl_WorkGroupID.x, 1u, 1u))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 1u, 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), ~ (~ (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))) | (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))))), ~ (~ (uvec3(gl_WorkGroupID.x, 1u, 1u))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 1u, 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)), ~ (~ (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))) | (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_WorkGroupID.x, 1u, 1u)))))))), ~ (~ (uvec3(gl_WorkGroupID.x, 1u, 1u)))))) << uvec3(0u, 0u, 0u)), 1u))))))), min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), min(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), max(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)) | (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))), 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), uvec3(uvec4(uvec3(gl_WorkGroupID.x, 1u, 1u), 1u)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))))))))), uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(num_workgroup) : 1u))))), ~ (~ (uvec3(gl_WorkGroupID.x, 1u, 1u)))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(gl_WorkGroupID.x, 1u, 1u), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), (uvec3(gl_WorkGroupID.x, 1u, 1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) : _GLF_IDENTITY((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), min((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 1u), min(uvec3(gl_WorkGroupID.x, 1u, 1u), uvec3(gl_WorkGroupID.x, 1u, 1u))))), ~ (~ (uvec3(gl_WorkGroupID.x, 1u, 1u))))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u ^ (workgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_size)), (~ (0u ^ _GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(15559u) : (workgroup_size))))) ^ 0u)))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z = workgroup_base;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))), true)), true)))), bvec3(bvec4(bvec3(false, false, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)) || false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))), false)))), true, false, false))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)))), true))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) + uvec3(0u, 0u, 0u)).y + subgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) + uvec3(0u, 0u, 0u)).y + subgroup_local_id), clamp(~ (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) + uvec3(0u, 0u, 0u)).y + subgroup_local_id), ~ (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) + uvec3(0u, 0u, 0u)).y + subgroup_local_id), ~ (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) + uvec3(0u, 0u, 0u)).y + subgroup_local_id)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), float(_GLF_FUZZED(-1.9)), bool(false)))), false || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), float(_GLF_FUZZED(-1.9)), bool(false)))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))) + 0.0)))), float(_GLF_FUZZED(-1.9)), bool(false))))) && true)))))))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.1)), bool(false))))), mix(float(_GLF_FUZZED(-371.727)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED(-371.727)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), max(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.1)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))), mix(float(_GLF_FUZZED(-371.727)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), ! (! (true)))) && true)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)) - 0.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-371.727, (-371.727) / 1.0))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))) && true))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-27.90)), vec2(_GLF_FUZZED(9878.3387), (injectionSwitch)[1]), bvec2(false, true))).y))))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-371.727, clamp(-371.727, _GLF_IDENTITY(-371.727, (false ? _GLF_FUZZED(89.12) : -371.727)), _GLF_IDENTITY(-371.727, mix(float(_GLF_IDENTITY(-371.727, (true ? -371.727 : _GLF_FUZZED(3.3)))), float(_GLF_FUZZED(7204.8995)), bool(false))))))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(151762u)), _GLF_FUZZED(-5.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))))))) || false))))), true))))), bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.1)), bool(false))))), mix(float(_GLF_FUZZED(-371.727)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.2) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), clamp(mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-330.977)), float(injectionSwitch.y), bool(true)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y : _GLF_FUZZED(5.5)))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-371.727)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), true))))), true, false, true)))) && true) && true), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(0.3, 496.381)) : _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(0.3, _GLF_IDENTITY(496.381, (496.381) - 0.0))) : _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  return;
 uint next_virtual_gid = GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) >> 0u) * GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(8505)))) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(8505)))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))) ? 1 : _GLF_FUZZED(8505))))), min(~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(8505))))), ~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))) || false))))) ? 1 : _GLF_FUZZED(8505))))), min(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))) || false))))) ? 1 : _GLF_FUZZED(8505))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))) || false))))) ? 1 : _GLF_FUZZED(8505))))))))))) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y, 0u | _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(8505)))) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y), max(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(8505)))) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(8505)))) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) | 0));
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.x = _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (~ (read)))) << 0u)) | _GLF_IDENTITY((read), min((read), (read))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), 0.0 + (_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) / 1.0)))), float(_GLF_FUZZED(-7914.0626)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, sqrt(0.0)))), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-943.490)), float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))) : _GLF_FUZZED(0.4))), 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2257.5660, 56.76, 2.0, -39.52)) : mat2(1.0))) * (injectionSwitch)))))))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(round(length(normalize(1.0))), _GLF_IDENTITY(float(vec2(round(length(normalize(1.0))), 0.0)), mix(float(float(vec2(round(length(normalize(1.0))), 0.0))), float(_GLF_FUZZED(44.20)), bool(false)))), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.7)), bool(false))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, length(vec2(0.0, 0.0))), transpose(transpose(mat4(_GLF_IDENTITY(round(length(normalize(1.0))), _GLF_IDENTITY(float(vec2(round(length(normalize(1.0))), 0.0)), mix(float(float(vec2(round(length(normalize(1.0))), 0.0))), float(_GLF_FUZZED(44.20)), bool(false)))), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.7)), bool(false))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, length(vec2(0.0, 0.0)))))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(253.007)), bool(false)))), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0))))))), 0.0, 0.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-3.2)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), bool(true))), 0.0, 0.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(542.155) : 0.0)), 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(71.71) : 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-483.184)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), float(vec4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.77) : float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(2.0) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(1.0))) : _GLF_FUZZED(vec4(847.209, -707.719, -188.295, 249.685).y))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), (float(float(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), 1.0))))))))) || false))))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))), ~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))), (false ? _GLF_FUZZED(next_virtual_gid) : ~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1)))))))), max(~ (_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))), (false ? _GLF_FUZZED(next_virtual_gid) : ~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))), (false ? _GLF_FUZZED(next_virtual_gid) : ~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1)))))))), (~ (_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))), (false ? _GLF_FUZZED(next_virtual_gid) : ~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))))))) | (~ (_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))), (false ? _GLF_FUZZED(next_virtual_gid) : ~ (~ (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1)))))))))))))))) - 0u), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))), _GLF_IDENTITY(true, true && (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false, true)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false, true)), true, true)), false))))), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))), true))))))), true))))), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, max(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, max(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) << uvec3(0u, 0u, 0u)))).y, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, max(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) << uvec3(0u, 0u, 0u)))).y) | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, max(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))).y))) * 1u), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) | (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(1, 1 * (1)) < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y), ! (! (bool(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-98854))) < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), _GLF_IDENTITY((max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), 0u | ((max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) | (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(1, 1 * (1)) < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y), ! (! (bool(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-98854))) < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), true, true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(589.612) : injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))) && true), _GLF_IDENTITY(true, (true) && true)), false, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(589.612) : injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))) && true), _GLF_IDENTITY(true, (true) && true)), false, false))), true)), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) < injectionSwitch.y))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x < injectionSwitch.y))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), false, false))), true))))))), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((1866.6506 - 6.9))), vec2(_GLF_FUZZED(1906.2702), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-77.19, -31.89, -583.434, 582.823, 5.4, -684.802, 4.5, -9835.5315, -263.153, -67.50, -3.2, -2678.6019)) : mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((1866.6506 - 6.9))), vec2(_GLF_FUZZED(1906.2702), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), true), false, false))), true)))))))))), true, true, true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0)))))))), vec2(_GLF_FUZZED((-6.2 / -4.9)), (injectionSwitch)[_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))]), bvec2(false, true))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0), mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g), min(_GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g), _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)))), sqrt(0.0), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-43.79)), bool(false))), _GLF_FUZZED((_GLF_IDENTITY(vec2(89.55, -9.0) + vec2(-277.964, -1.8), mix(vec2((vec2(89.55, -9.0) + vec2(-277.964, -1.8))[0], _GLF_FUZZED(-81.47)), vec2(_GLF_FUZZED((+ 8.6)), (vec2(89.55, -9.0) + vec2(-277.964, -1.8))[1]), bvec2(false, true)))).g)))), sqrt(0.0), 1.0), transpose(transpose(mat2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(89.55, -9.0) + vec2(-277.964, -1.8)).g)), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-43.79)), bool(false))), _GLF_FUZZED((_GLF_IDENTITY(vec2(89.55, -9.0) + vec2(-277.964, -1.8), mix(vec2((vec2(89.55, -9.0) + vec2(-277.964, -1.8))[0], _GLF_FUZZED(-81.47)), vec2(_GLF_FUZZED((+ 8.6)), (vec2(89.55, -9.0) + vec2(-277.964, -1.8))[1]), bvec2(false, true)))).g)))), sqrt(0.0), 1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0))))))), vec2(_GLF_FUZZED((_GLF_IDENTITY(-6.2, min(-6.2, _GLF_IDENTITY(-6.2, max(-6.2, -6.2)))) / -4.9)), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))], min((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))]))), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))).x > injectionSwitch.y)))), false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / sqrt(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))) && true)); _injected_loop_counter ++)
      {
       atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) * _GLF_IDENTITY(1u, (1u) | (1u)))], GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base.x, 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << (0 ^ 0)), 4)), 4)));
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(false))), false || (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(false))), false || (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))))), ! (! (! _GLF_IDENTITY(((_GLF_DEAD(false))), false || (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(false))), false || (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))))), ! (! (! _GLF_IDENTITY(((_GLF_DEAD(false))), false || (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(true, (true) && true)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) + _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)))], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, clamp(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) << uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), 0u, 0u)), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_base) | uvec3(0u, 0u, 0u)))).x, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(64, 0 | (64))))) >> 0))))), ((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) >> 0)))))) - 0) >> _GLF_IDENTITY(0, (0) * 1)), 4);
     subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
