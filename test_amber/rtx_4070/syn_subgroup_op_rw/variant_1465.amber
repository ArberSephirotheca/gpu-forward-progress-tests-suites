#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uvec3 GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false)))))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.z = workgroup_size, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.z = workgroup_size, (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.z = workgroup_size) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))), true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)) || false, true, true, false)), true && (bool(bvec4((_GLF_DEAD(false)) || false, true, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)) || false, true, true, false)), true && (bool(bvec4((_GLF_DEAD(false)) || false, true, true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)) || false, true, true, false)), true && (bool(bvec4((_GLF_DEAD(false)) || false, true, true, false))))))) || false)) || false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.y = workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.y = workgroup_id, (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.y = workgroup_id) ^ 0u) : _GLF_FUZZED((subgroup_size --))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, (true ? GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size : _GLF_FUZZED(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size << subgroup_id), (true ? (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size << subgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size)))))).z * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, clamp(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, uvec3(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, 0u), (uvec4(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, 0u)) - uvec4(0u, 0u, 0u, 0u)))))).y, (false ? _GLF_IDENTITY(_GLF_FUZZED(196978u), 1u * (_GLF_FUZZED(196978u))) : _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, (true ? GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size : _GLF_FUZZED(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size << subgroup_id), (true ? (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size << subgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size)))))).z * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, clamp(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size) / uvec3(1u, 1u, 1u), ((GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size, (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size)))))).y));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(((0u ^ 0u)) >> 0u, clamp(_GLF_IDENTITY(((0u ^ 0u)) >> 0u, ~ (~ (_GLF_IDENTITY(((0u ^ 0u)), (((0u ^ 0u))) ^ 0u) >> 0u))), ((0u ^ 0u)) >> 0u, ((0u ^ 0u)) >> 0u))) + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), ! (! (true && (_GLF_IDENTITY(false, (false) && true))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) ^ 0u), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u)))))) | (0u ^ 0u))), (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), uint(uvec3(uint((subgroup_local_id + 1)), 0u, 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) % subgroup_size, (0u | 0u), 0u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) | (1))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) % subgroup_size))), uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) - 0u))) + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (0u & 177198u), 0u, 1u), max(uvec4(subgroup_size, (0u & 177198u), 0u, _GLF_IDENTITY(1u, (1u) | (1u))), uvec4(subgroup_size, (0u & 177198u), 0u, 1u)))))))), 1u)))) - 0u);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(inversesqrt(4.5)) : injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(inversesqrt(4.5)) : injectionSwitch.x)) > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.x = read;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (0 | 0) ^ (_GLF_IDENTITY(64, min(64, 64)))), 4);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(92175) : 1)), _GLF_IDENTITY(0u, min(0u, 0u)) | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(92175, 0 | (_GLF_IDENTITY(92175, max(92175, 92175))))) : 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(92175, 0 | (92175))) : 1), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(92175, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-52569))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59337) : 0)))))) | (92175))) : 1))))))))) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(bvec2(((false)), false))), (! ((false))) || false))))))), ! (! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))))), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, false)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))) || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), true))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))) || false)), true && (bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))) || false)))))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.x, _GLF_IDENTITY(4, (4) << 0), 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x)) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bool(false)), false)), bvec2(bvec3(bvec2(bvec2(bool(bool(false)), false)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))), (! ((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))) || false)))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), false), true, true))))))), bvec2(bvec4(bvec2(bool(bool(false)), false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ((bool(bool(false))) || false) || false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bool(false)), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(false)), false), false, true)), true, false)))), false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), bool(bvec4(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 1.0), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 1.0)) * mat4(1.0)))) < injectionSwitch.y))) || false))), true, true, true)))))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), (bool(bool(false))) || false), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bool((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), true, false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(log(max(injectionSwitch, -2034.1705))))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(log(max(injectionSwitch, -2034.1705))))).y))))) || false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), true)))) && true))))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ((bool(bool(false))) || false) || false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bool(false)), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(false)), false), false, true)), true, false)))), false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), bool(bvec4(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 1.0), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 1.0)) * mat4(1.0)))) < injectionSwitch.y))) || false))), true, true, true)))))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), (bool(bool(false))) || false), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bool((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), true, false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(log(max(injectionSwitch, -2034.1705))))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(log(max(injectionSwitch, -2034.1705))))).y))))) || false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), true)))) && true))))))))))))), false)), bool(bvec3(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ((bool(bool(false))) || false) || false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bool(false)), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bool(false)), false), false, true)), true, false)))), false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), bool(bvec4(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 1.0), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 1.0)) * mat4(1.0)))) < injectionSwitch.y))) || false))), true, true, true)))))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), (bool(bool(false))) || false), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bool((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), true, false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(log(max(injectionSwitch, -2034.1705))))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(log(max(injectionSwitch, -2034.1705))))).y))))) || false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(bvec2(bool(bool(false)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))))))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, true))), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), true)))) && true))))))))))))), false)), true, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[virtual_gid], GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.x, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), min(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, 0 | (4)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(67.80) : injectionSwitch.y)), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_IDENTITY(_GLF_FUZZED(-1.3), clamp(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.3), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.3), mix(float(_GLF_FUZZED(8792.6172)), float(_GLF_FUZZED(-1.3)), bool(true)))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-1.3), (false ? _GLF_FUZZED(4.7) : _GLF_FUZZED(-1.3)))))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), bool(false)))))) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
