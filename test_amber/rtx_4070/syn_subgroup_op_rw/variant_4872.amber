#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (gl_WorkGroupSize.x)) + (1u ^ 1u))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 182715u, max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 182715u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 182715u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), true))))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (! _GLF_IDENTITY((bool(false)), ((bool(false))) && true)))), true && (! (bool(false))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(4924.4688)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), false || ((! ((false))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1466.0252)), vec2(_GLF_FUZZED(6.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) >> 0u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))), 0u), ~ (~ (uvec4(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) >> 0u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))), 0u))))), (uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u), max(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u), ~ (~ (uvec4(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), uvec4(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u))))) ^ 0u)))))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(809.279) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(809.279) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bool(bool(true))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bool(true))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bool(true))), true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((7893u >> num_workgroup)) : subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 0:
     case 7:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 50:
     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, ((4) ^ 0) - 0)));
     if(_GLF_DEAD(false))
      return;
     case 45:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     subgroupAll(_GLF_IDENTITY(false, (false) && true));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))) || false)))))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 20:
     if(_GLF_DEAD(false))
      return;
     while(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))))
      {
       ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
       mat2x4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[97];
       if(_GLF_DEAD(false))
        break;
       mat2x4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[15], _GLF_SWITCH_0_6v;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if((ivec3(75328, -30154, -20997) == _GLF_IDENTITY(ivec3(76675, 45407, -73635), (ivec3(76675, 45407, -73635)) | (ivec3(76675, 45407, -73635)))))
        {
         for(uvec2 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v[67]; (_GLF_IDENTITY(read < _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_IDENTITY(read < _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), ! (_GLF_IDENTITY(! (read < _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), ~ (~ (workgroup_id)))), bool(bvec2(! (read < _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) - 0u)))) | (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))))), true)))))) && true)); _GLF_SWITCH_0_7v.r)
          {
           inversesqrt(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)));
           float _GLF_SWITCH_0_9v[46], _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           ;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               break;
              }
             break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0))), max(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0))), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0)))))).x > injectionSwitch.y)), true, true))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
              break;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           mat3x2(-1.6, -7.6, -3.2, _GLF_IDENTITY(_GLF_IDENTITY(-1.2, min(_GLF_IDENTITY(-1.2, clamp(-1.2, _GLF_IDENTITY(-1.2, float(vec3(-1.2, 0.0, 0.0))), -1.2)), -1.2)), mix(float(_GLF_FUZZED(3.6)), float(-1.2), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.1, 85.48);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(_GLF_SWITCH_0_10v, sqrt(sqrt(1.0)) * (_GLF_IDENTITY(_GLF_SWITCH_0_10v, mix(float(_GLF_SWITCH_0_10v), float(_GLF_FUZZED(2609.2652)), bool(false)))))))), injectionSwitch[1])).x > injectionSwitch.y))))) || false))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
                break;
               return;
              }
             continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         uvec4 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
          return;
         while(true)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           _GLF_IDENTITY(uvec3(120918u, 57150u, 55777u), (uvec3(120918u, 57150u, _GLF_IDENTITY(55777u, (55777u) | (_GLF_IDENTITY(55777u, uint(uvec4(55777u, 0u, 0u, 0u))))))) | (uvec3(120918u, 57150u, 55777u)));
           mat4 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[74];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
              continue;
             return;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             break;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-1504.7900) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0)))))))
            continue;
           if(_GLF_DEAD(false))
            break;
           _GLF_SWITCH_0_6v;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0), vec3(1.0, 1.0, 0.0)))))))))))
          break;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(all(bvec4(true, true, false, true)), (all(bvec4(true, true, false, true))) && true))
        {
         if(_GLF_DEAD(false))
          break;
         uvec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[47];
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -2.7))), bool(false))) > injectionSwitch.y)), true)), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(vec2(-2.8, -6.1))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(vec2(-2.8, -6.1))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         while((greaterThanEqual(vec3(2838.8482, -63.11, -266.596), vec3(-287.072, _GLF_IDENTITY(-87.61, _GLF_IDENTITY(float(mat2(-87.61, 1.0, 0.0, 1.0)), max(float(mat2(-87.61, 1.0, 0.0, 1.0)), float(mat2(-87.61, 1.0, 0.0, 1.0))))), 438.115)) != bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false)).yxx))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
           bitfieldExtract(uvec2(172614u, 118366u), 39323, -55841);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            break;
           usubBorrow(_GLF_SWITCH_0_17v, uvec4(3033u, 83641u, 103255u, _GLF_IDENTITY(126293u, (126293u) | (126293u))), _GLF_SWITCH_0_17v.xyzw);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           ;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            break;
           ivec4 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[2];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            continue;
           mat3x2(-13.27, 52.17, -6003.5010, 815.321, 73.92, 952.573);
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((6.9 + 4.5)), _GLF_FUZZED(26.59)), bvec2(false, false))).x > injectionSwitch.y, false, false, true)))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(vec3(-4.8, -5.3, 38.77).z)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           vec3 _GLF_SWITCH_0_21v[94];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.5))) < injectionSwitch.y)))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           float _GLF_SWITCH_0_22v[10], _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                continue;
               continue;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), true && (! (false)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), true && (! (false)))), bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(! (false), true && (! (false)))), false, false), bvec3(bvec3(bvec3(true && (_GLF_IDENTITY(! (false), true && (! (false)))), false, false)))))))))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(true)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.8)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          return;
         (-38.07 - mat3x4(4568.2254, -515.510, 1.6, -9.7, 6072.5237, 849.702, 0.4, 2738.4777, 13.21, _GLF_IDENTITY(_GLF_IDENTITY(429.507, max(429.507, 429.507)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(429.507, max(429.507, 429.507)), max(_GLF_IDENTITY(429.507, max(429.507, 429.507)), _GLF_IDENTITY(429.507, max(429.507, 429.507)))), min(_GLF_IDENTITY(429.507, max(429.507, 429.507)), _GLF_IDENTITY(429.507, max(429.507, 429.507))))) * 1.0), -299.189, 1.9));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         ;
         if(_GLF_DEAD(false))
          continue;
         ((virtual_gid << 123688u) ^ (uvec3(61148u, 167007u, 174072u) / uvec3(85748u, _GLF_IDENTITY(136423u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(136423u, uint(uvec4(136423u, 0u, 0u, 0u)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(136423u, uint(uvec4(136423u, 0u, 0u, 0u)))), max(~ (_GLF_IDENTITY(136423u, uint(uvec4(136423u, 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(136423u, uint(uvec4(136423u, 0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(136423u, uint(uvec4(136423u, 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(136423u, uint(uvec4(136423u, 0u, 0u, 0u)))))))), 130583u)));
         if(_GLF_DEAD(false))
          return;
         (ivec3(-8337, -52987, _GLF_IDENTITY(99328, (true ? _GLF_IDENTITY(99328, (_GLF_IDENTITY(99328, _GLF_IDENTITY(int(int(99328)), ~ (~ (int(int(_GLF_IDENTITY(99328, int(ivec4(99328, 1, 1, (1 & 1))))))))))) ^ 0) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(46652, 71408, -64146).s, int(ivec3(ivec3(46652, 71408, -64146).s, 0, 0))))))) | int(next_virtual_gid));
         {
          _GLF_IDENTITY(min(88091, -45647), min(min(88091, -45647), min(88091, -45647)));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            continue;
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               continue;
              continue;
             }
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                return;
               }
              continue;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            continue;
           }
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))) && true))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) || false))) && true)))))))))))
           {
            if(_GLF_DEAD(false))
             break;
            return;
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               return;
              return;
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              break;
             }
            break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              return;
             }
            if(_GLF_DEAD(false))
             break;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          vec4(_GLF_IDENTITY(-1947.7799, (-1947.7799) - 0.0), 5.7, -1379.9341, 2.9);
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), true)))))))
             return;
            if(_GLF_DEAD(false))
             continue;
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              return;
             }
           }
          if(_GLF_DEAD(false))
           break;
          (_GLF_IDENTITY(true || true, ! (! (true || true))));
          if(_GLF_DEAD(false))
           break;
          int _GLF_SWITCH_0_25v[61], _GLF_SWITCH_0_26v;
          if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
           break;
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false)))), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false), true))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false), (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false), (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-677.775)), float(injectionSwitch.x), bool(true)))))) - 0.0) > injectionSwitch.y)), false))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))) || false, true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0))))), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true)))))), true)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(bvec3(! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true, false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false), (injectionSwitch.x > injectionSwitch.y)), false))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (injectionSwitch.x > injectionSwitch.y)), false))), false), false))), true)))))))) && true))))
           continue;
          _GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH_0_26v, (_GLF_IDENTITY(_GLF_SWITCH_0_26v, (_GLF_SWITCH_0_26v) - 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_SWITCH_0_26v, (_GLF_IDENTITY(_GLF_SWITCH_0_26v, (_GLF_SWITCH_0_26v) - 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0 << _GLF_IDENTITY(int(2), int(2))));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             continue;
            break;
            if(_GLF_DEAD(false))
             return;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             continue;
            return;
            if(_GLF_DEAD(false))
             break;
           }
          mat2 _GLF_SWITCH_0_27v;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, tan(0.0), determinant(mat4(0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat4(injectionSwitch.y, tan(0.0), determinant(mat4(0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-12.34)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                continue;
               }
              continue;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            continue;
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
           }
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            continue;
           }
          uint _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           break;
          mat4x3(3.7, 1.8, _GLF_IDENTITY(7642.9738, max(_GLF_IDENTITY(7642.9738, max(7642.9738, _GLF_IDENTITY(7642.9738, (true ? 7642.9738 : _GLF_FUZZED(87.39))))), 7642.9738)), 997.172, 5565.5145, -98.61, _GLF_IDENTITY(4.9, (_GLF_IDENTITY(true ? 4.9 : _GLF_FUZZED(7.7), clamp(true ? 4.9 : _GLF_FUZZED(7.7), _GLF_IDENTITY(true ? 4.9 : _GLF_FUZZED(7.7), float(mat3x2(true ? 4.9 : _GLF_FUZZED(7.7), 0.0, 1.0, 0.0, 1.0, 1.0))), true ? 4.9 : _GLF_FUZZED(7.7))))), -3.7, 3.4, -8227.3899, -8.6, 980.161);
          if(_GLF_DEAD(false))
           return;
         }
         if(_GLF_DEAD(false))
          return;
         ;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           break;
          return;
         }
        if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) || false), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), true && (bool(bvec4(_GLF_DEAD(false), true, true, false))))) || false)))
         break;
        if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
         continue;
       }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     default:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     1;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true)), bool(bool(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))))))), _GLF_IDENTITY((bool(bvec3(false, true, true))) || false, true && ((bool(bvec3(false, true, true))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true)), bool(bool(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))))))), _GLF_IDENTITY((bool(bvec3(false, true, true))) || false, true && ((bool(bvec3(false, true, true))) || false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))), bool(bvec4(bool(bvec3(false, false, false)), false, false, false))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(3.8, 0.1)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0, 0.0, sqrt(0.0), 1.0))), mat2(_GLF_IDENTITY(mat2(mat2(mat4x2(mat2(1.0, 0.0, sqrt(0.0), 1.0)))), (mat2(mat2(mat4x2(mat2(1.0, 0.0, sqrt(0.0), 1.0))))) + mat2(0.0, 0.0, 0.0, 0.0)))))), (determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(mat2x3(-50.02, -6988.6758, 3314.1711, -162.389, -347.340, -9192.5468))) : _GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (mat2(1.0, 0.0, sqrt(0.0), 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), min(float(mat4x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat4x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 0.0)), float(mat2x4(float(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, sqrt(0.0), 1.0)), mat2(_GLF_IDENTITY(mat3x2(transpose(mat2(1.0, 0.0, sqrt(0.0), 1.0))), (mat3x2(transpose(mat2(1.0, 0.0, sqrt(0.0), 1.0)))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (1.0) * cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-57.59)), float(0.0), bool(true))), 0.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))) / 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))), 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0))).x)) > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), 0.0 + ((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))))) - _GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, length(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, (false ? _GLF_FUZZED(-6.5) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) / 1.0)), true))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, log(1.0), 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6672.1955), (false ? _GLF_FUZZED(-331.848) : _GLF_FUZZED(6672.1955)))), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), false, false, false)), true && (bool(bvec4(bool(true), false, false, false))))))))))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (1.0) * cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat3(sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat3(sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-908.045)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))) / 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))), 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat3x4((1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 1.0, length(vec2(0.0, 0.0))))) - 0.0), 0.0, 0.0, 0.0, 1.0))).x)) > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), 0.0 + ((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) * 1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), min((determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 1.0)), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(3.2, -4.6, -7934.7599, 6832.4508, 9.2, 5.4, -5497.3032, -4.8, -574.016, -545.137, -1263.1598, -485.293, -994.564, 5.3, 8.5, -1.4)))))).x)) > injectionSwitch.y, true))) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sin(length(vec2(0.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0)))), max(1.0, 1.0)), 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0, clamp((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0, _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0, (true ? (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0 : _GLF_FUZZED(482.416))), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0, (true ? (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0 : _GLF_FUZZED(1.1)))))), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4(1.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sin(0.0)))), 1.0))), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true))))) : _GLF_FUZZED(9.6)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - _GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(421.412) : cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, 1.0, 0.0, 0.0)))))) + 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-58.26))), 0.0, 0.0, exp(0.0))))) / 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), 1.0 * (sqrt(0.0))), 1.0))) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))), 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0))).x)) > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), 0.0 + ((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))))), mix(float(_GLF_FUZZED(-4370.9231)), float(_GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat2x4(1.0, length(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0)))))) - 0.0), 1.0))))), 0.0 + ((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))))))), bool(true))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x), min(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)))) > injectionSwitch.y, true))) && true)), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-8056.1233) : 1.0, mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(-8056.1233) : 1.0, mix(float(_GLF_FUZZED(-6.6)), float(false ? _GLF_FUZZED(-8056.1233) : 1.0), bool(true)))), bool(true)))))) / 1.0), max(1.0, 1.0)), 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0, ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0) * 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(81.15, -88.42, 4.0).g)), bool(false))), injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(-400.506), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1], max((_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1], _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1], max((_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1], (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]))))), vec2((_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), max(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6672.1955)), float(1.0), bool(true)))) - 0.0), 0.0, sqrt(0.0), 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(8.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY((1.0), min((1.0), (1.0))) * cos(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) * 1.0)) - tan(0.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))) / 1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) * 1.0)) - tan(0.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) * 1.0)) - tan(0.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) * 1.0)) - tan(0.0))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))))) / 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(mod(vec2(4872.6761, 1.6), injectionSwitch))))), vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0)))))), (float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))))) - 0.0)), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0)))))), (float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))))) - 0.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0)))))), (float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, tan(0.0)), (vec2(0.0, tan(0.0))) * sqrt(vec2(1.0, 1.0))))))) - 0.0))) / 1.0)))), 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0)))), mix(vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0)))))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0)))))[1]), vec2(_GLF_FUZZED((-31.39 + -5.2)), _GLF_FUZZED((5.8))), bvec2(false, false)))).x)) > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0)), _GLF_IDENTITY((determinant(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), 0.0 + ((determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2513.9128)), bool(false)))), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2513.9128)), bool(false)))), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))).x)) > injectionSwitch.y, true))) && true)), _GLF_IDENTITY(true, true && (true)), true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(false, (false) && true))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), false))))), ! (! (! (false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(381.267, 319.498)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8670.9730), mix(float(_GLF_FUZZED(-8670.9730)), float(_GLF_FUZZED(-7.6)), bool(false)))), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.5) : injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8670.9730), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8670.9730), (_GLF_FUZZED(-8670.9730)) - 0.0)), float(_GLF_FUZZED(-7.6)), bool(false)))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(5.9)), float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8670.9730), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8670.9730)), float(_GLF_FUZZED(-7.6)), bool(false)), (mix(float(_GLF_FUZZED(-8670.9730)), float(_GLF_FUZZED(-7.6)), bool(false))) * 1.0))), float(injectionSwitch.y), bool(true))), bool(true)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8670.9730), mix(float(_GLF_FUZZED(-8670.9730)), float(_GLF_FUZZED(-7.6)), bool(false)))), float(injectionSwitch.y), bool(true))))), true, false)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
