#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && true), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), ! (! ((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 0u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), (subgroup_local_id) - _GLF_IDENTITY(0u, (0u) * 1u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) / 1u))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_FUZZED((++ virtual_gid))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_FUZZED((++ virtual_gid))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u)), (uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), 0u, 1u, (1u & 1u))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), ~ (~ (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) | (0u)), 0u))) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) | (0u)), 0u))) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size), ((false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), max(subgroup_local_id + 1, subgroup_local_id + 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(_GLF_IDENTITY(atomicOr(workgroup_base, virtual_gid), 0u | (atomicOr(workgroup_base, virtual_gid))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)), _GLF_IDENTITY(0u, (0u) * 1u) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(_GLF_IDENTITY(atomicOr(workgroup_base, virtual_gid), 0u | (atomicOr(workgroup_base, virtual_gid))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))) << 0u))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), max((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), ((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u))))))) ^ 0u))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_FUZZED((++ virtual_gid))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u, 0u))) ^ 0u)), _GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) - 0u) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), min(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, (1u & 1u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u))) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u))) >> uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) / 1u))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_FUZZED((++ virtual_gid))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_FUZZED((++ virtual_gid))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u)), (uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), 0u, 1u, (1u & 1u))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), ~ (~ (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) | (0u)), 0u))) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) | (0u)), 0u))) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size), ((false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), max(subgroup_local_id + 1, subgroup_local_id + 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(_GLF_IDENTITY(atomicOr(workgroup_base, virtual_gid), 0u | (atomicOr(workgroup_base, virtual_gid))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)), _GLF_IDENTITY(0u, (0u) * 1u) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(_GLF_IDENTITY(atomicOr(workgroup_base, virtual_gid), 0u | (atomicOr(workgroup_base, virtual_gid))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))) << 0u))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), max((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))), ((_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u))))))) ^ 0u))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_FUZZED((++ virtual_gid))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u, 0u))) ^ 0u)), _GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) - 0u) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), min(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, (1u & 1u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u))) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (1u & 1u))) >> uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | (_GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ _GLF_IDENTITY((uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size, (true ? _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size, 1u * (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size))) | 0u) : _GLF_FUZZED(subgroup_id))))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u))))), (_GLF_IDENTITY(true, (true) && true) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))) * 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) ^ 0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), 0u ^ (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) - 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec3(0u, (1u & 1u), 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u))) - uvec4(0u, 0u, 0u, 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u | ((uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size, (true ? _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size, 1u * (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), subgroup_local_id + 1)))) >> 0u) % subgroup_size))) | 0u) : _GLF_FUZZED(subgroup_id))))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u))))), (_GLF_IDENTITY(true, (true) && true) ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))) * 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) ^ 0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), 0u ^ (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) - 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec3(0u, (1u & 1u), 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u))) - uvec4(0u, 0u, 0u, 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), 0u | (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), min(uint(uint(workgroup_base)), uint(uint(workgroup_base))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u), (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))) | 0u) + 1))) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u))), 0u ^ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u))))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec4(1, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) - 0)), 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY((true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))), 0u + ((true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (_GLF_IDENTITY(~ (~ (0u)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (0u))))) | 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))) + 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid)))), (~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid))))) / 1u))))), ((_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid)))), (~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid))))) / 1u)))))) >> 0u) << 0u), (true ? true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid)))), (~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid))))) / 1u))))), ((_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid)))), (~ (_GLF_IDENTITY((++ virtual_gid), 0u | ((++ virtual_gid))))) / 1u)))))) >> 0u) << 0u) : _GLF_FUZZED(virtual_gid))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(0u))) * 1u, ((_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) << 0u)) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), (_GLF_IDENTITY(0u, (0u ^ 0u) | (0u))) | (_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_size) : 1u & 1u))), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0)))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ~ (_GLF_IDENTITY(~ ((subgroup_size) * 1u), (~ ((subgroup_size) * 1u)) >> 0u))))), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), ~ (_GLF_IDENTITY(~ (0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), ~ (~ (~ (0u ^ (uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) / 1u)), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << _GLF_IDENTITY(0u, (0u) * 1u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u))))))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)))) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec3(uint(_GLF_IDENTITY(0u, (0u) | (0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (uint(0u)))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec3(_GLF_IDENTITY(uint(0u), uint(0u)), 0u, 0u))), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), (true ? (++ virtual_gid) : _GLF_FUZZED(69393u))))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec3(_GLF_IDENTITY(uint(0u), uint(0u)), 0u, 0u))), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), (true ? (++ virtual_gid) : _GLF_FUZZED(69393u))))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec3(_GLF_IDENTITY(uint(0u), uint(0u)), 0u, 0u))), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED(_GLF_IDENTITY((++ virtual_gid), (true ? (++ virtual_gid) : _GLF_FUZZED(69393u))))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u))) * 1u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0u), ((0u)) - 0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(uint(0u), uint(0u)))) | _GLF_IDENTITY(0u, (0u) | 0u)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ~ (_GLF_IDENTITY(~ ((0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (~ ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) - 0u)))))))))))))))), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u) << 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id, subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id, subgroup_local_id)))) << 0u))) + 1)))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size, min(false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size, false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1) % subgroup_size)) : _GLF_FUZZED(virtual_gid)))), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (~ (_GLF_FUZZED(subgroup_local_id)))), (~ (_GLF_FUZZED(subgroup_local_id))) | (~ (_GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))) | 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) / 1u) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-43399) : 1))))) % subgroup_size)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 0)))))))) % subgroup_size))) / 1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) + 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))))))) >> 0u)) << 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)), (_GLF_FUZZED(atomicOr(workgroup_base, virtual_gid))) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), min(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(_GLF_IDENTITY(0u, (0u) | (0u))))), uint(uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) | (0u))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))))) - 0u), (true ? uint(0u) : _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)))))) >> 0u)) << 0u))) : _GLF_FUZZED(workgroup_base))), uint(0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), uint(uint(~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))))))))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((++ virtual_gid))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * 1u) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(++ virtual_gid, (++ virtual_gid) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_FUZZED((++ virtual_gid))) << 0u)) >> 0u)))))), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))), (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u ^ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u)))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u ^ 0u) | (0u)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))) ^ 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_IDENTITY(uvec4((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(usubBorrow(workgroup_base, bitfieldReverse(subgroup_local_id), subgroup_local_id)) : _GLF_IDENTITY(uint(0u), uint(0u))) - 0u)))))), 0u, 1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u)) & 1u), (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u)))) - 0u)), (uvec4((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) / 1u)), uint(0u))), 0u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uint(1u & 1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))))) / 1u)))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(5u), uint(5u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
  }
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)))), (~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(subgroup_local_id) : (buf[virtual_gid]))) + 0u, ~ (_GLF_IDENTITY(~ ((buf[virtual_gid]) + 0u), min(~ ((buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) + 0u), ~ ((buf[virtual_gid]) + 0u)))))))) | (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)))))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), true, false))))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-93453) : _GLF_IDENTITY(4, ~ (~ (4))))), 64, _GLF_IDENTITY(4, int(int(4))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))), 1, 1))) << 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) / 1), max(5, 5)), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) ^ 0)) | ((5))) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))), clamp((~ (0)), (~ (0)), (~ (0))))))))), 0)), (int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))))), 0))) | (int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) + 0)) ^ (1 ^ 1)), max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))), (~ (0))))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))), clamp(_GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), ((~ (0))) << 0), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), min(clamp((~ (0)), (~ (0)), (~ (0))), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), clamp(clamp((~ (0)), (~ (0)), (~ (0))), clamp((~ (0)), (~ (0)), (~ (0))), clamp((~ (0)), (~ (0)), (~ (0))))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (5) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) - 0)), clamp((~ _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0), ((0)) >> 0), 1), (ivec2(_GLF_IDENTITY((0), ((0)) >> 0), 1)) / ivec2(1, 1))))), (~ (0)), (~ (0))))))))), 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, clamp(_GLF_IDENTITY(5, clamp(5, 5, _GLF_IDENTITY(5, min(5, 5)))), 5, _GLF_IDENTITY(5, min(5, 5)))), _GLF_IDENTITY(5, (5) - 0)))), ~ (~ (int(5))))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.y), bool(true))))))); _injected_loop_counter ++)
            {
             barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), bvec2(false, true))).y))))) || false)))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -31058)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.8)), bool(false))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bvec4(bool(bvec3(false, false, true)), false, false, false))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
                barrier();
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0))))) / exp(vec2(0.0, 0.0))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter) | 0, min((_injected_loop_counter) | 0, (_injected_loop_counter) | 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_injected_loop_counter) | 0, min((_injected_loop_counter) | 0, (_injected_loop_counter) | 0))))))) != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))), (true ? ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))) : _GLF_FUZZED(_injected_loop_counter)))))), (_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))), (true ? ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))) : _GLF_FUZZED(_injected_loop_counter))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))), (true ? ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))) : _GLF_FUZZED(_injected_loop_counter)))))), (_GLF_IDENTITY((64), _GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))), (true ? ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int((64)), int(int(int((64)))))), (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))) | (int(_GLF_IDENTITY(int((64)), int(int(int((64))))))))) : _GLF_FUZZED(_injected_loop_counter))))))) * 1))) ^ (0 | 0)), _GLF_IDENTITY(0, int(ivec4(0, (0 << _GLF_IDENTITY(int(4), int(4))), 1, 1))) | (64)))), 4);
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               barrier();
              }
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.1)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.1)), float(injectionSwitch.y), bool(true)), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.1)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(5.1)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(5.1)), float(injectionSwitch.y), bool(true))))))), float(_GLF_FUZZED(10.10)), bool(false)))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(5.1), min(_GLF_FUZZED(5.1), _GLF_IDENTITY(_GLF_FUZZED(5.1), min(_GLF_FUZZED(5.1), _GLF_FUZZED(5.1)))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))) / sqrt(1.0))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-63.07)), bool(false))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-63.07)), bool(false))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       subgroupAll(false);
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true)))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, 0 | (0)))) * 1) > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))));
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter)), (false ? _GLF_FUZZED(findLSB(read)) : ((_injected_loop_counter)))) - 0, 0 ^ (_GLF_IDENTITY(((_injected_loop_counter)) - 0, (_GLF_IDENTITY(((_injected_loop_counter)) - 0, min(((_injected_loop_counter)) - 0, ((_injected_loop_counter)) - 0))) >> 0)))) | 0, int(ivec3(_GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter)), (false ? _GLF_FUZZED(findLSB(read)) : ((_injected_loop_counter)))) - 0, 0 ^ (_GLF_IDENTITY(((_injected_loop_counter)) - 0, (((_injected_loop_counter)) - 0) >> 0)))) | 0, 0, 1)))) > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && (bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))) && true))))), false || (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (true) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) < injectionSwitch.y)))))))));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (0 | (0 & (- 50837))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(pow(injectionSwitch, vec2(6304.8508, -5924.2712))), (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(pow(injectionSwitch, vec2(6304.8508, -5924.2712)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y))) - 0.0)) + 0.0)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, tan(0.0)))), 0.0)))))); _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.9, -5.3)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(2.3)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.2)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))) * vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0)), (transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]))), bvec2(false, true))), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, log(1.0), 1.0))) * mat2(1.0)))))).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)))), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0)), (transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0))) * mat2(1.0)))))).x > injectionSwitch.y))), bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0)), (transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0))) * mat2(1.0)))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0)), (transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-387.163, -81.73).r)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0))) * mat2(1.0)))))).x > injectionSwitch.y))))))))), false, false, false)))))))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-27.10, min(-27.10, _GLF_IDENTITY(-27.10, mix(float(-27.10), float(_GLF_FUZZED(23.28)), bool(false))))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-8356.2453)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-27.10)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-4385.0980)), bool(false)))), injectionSwitch.y))), bool(true))))))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) * (_injected_loop_counter ++)))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))
                      {
                       do
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                          barrier();
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  barrier();
                }
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))), false || (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), false)))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       do
        {
         atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) ^ 0u), max(_GLF_IDENTITY(read, (read) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (read))))), (read) ^ _GLF_IDENTITY(0u, (0u) << 0u))))) - 0u), 4, 64, 4);
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))) - 0.0))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
          {
           barrier();
          }
        }
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), bool(bvec4(! (false), true, true, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), int(2))), (~ (_GLF_IDENTITY(int(2), int(2)))) | (~ (_GLF_IDENTITY(int(2), int(2)))))) / 1))), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) | 0), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (0 << _GLF_IDENTITY(int(2), int(2))))))))); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true && (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0, clamp((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0, ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) + 0.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)) && true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, true && (false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false)), ((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false))) && true), true, true, true)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, true && (false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false)), ((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false))) && true), true, true, true)))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, true && (false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false)), ((_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))), true && (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, _GLF_IDENTITY(true, (true) && true)), true)))))), true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || ((_GLF_WRAPPED_IF_TRUE(true)))))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))) || false)), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(false, false || (false)), false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_WRAPPED_IF_TRUE(true)))))))), false, false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))))) || false))) && true), true, true, true))))))))) || false)) && true)), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))))) && (false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), false, true), true)))))), true, false))), false), true, false)))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false)))))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))))))))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, ! (! (false))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, ! (! (false))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))))))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, _GLF_IDENTITY(false, true && (false))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false), true))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, false || (true)) && (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(false, ! (! (false))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (true && (_GLF_WRAPPED_IF_TRUE(true))))))))), false, false)))), true))))))))))))))))))))))))))) || false)))))))))))))
                {
                 barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
