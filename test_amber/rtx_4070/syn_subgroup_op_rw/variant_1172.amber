#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false))), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && ((false))), _GLF_IDENTITY(true, (true) && true)), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4((false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -24.40)))), injectionSwitch)).y)), false))))), true && ((false))), _GLF_IDENTITY(true, (true) && true)), false, true))))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && ((false))), _GLF_IDENTITY(true, (true) && true)), false, true)), false, false))))), true, true)))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), true && (_GLF_IDENTITY((false), true && ((false))))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))), (true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true)))) && true, bool(bvec2((true) && true, false))))))) && ((false))), true), false, true)))), true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(71936u, 55533u, 177717u) / uvec3(55876u, 125920u, 12093u)[1])))).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | 0u)), ((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(71936u, 55533u, 177717u) / uvec3(55876u, 125920u, 12093u)[1])))).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | 0u))) >> 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))[0], 1u * (_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | 0u))), _GLF_IDENTITY(gl_WorkGroupID[1], (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u)) | 0u), gl_WorkGroupID[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) * int(_GLF_ONE(1.0, injectionSwitch.y)))))])), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(95357u, 82269u, 71742u), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) * (uvec3(95357u, 82269u, 71742u)))) : uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec2(ivec2(0, 1))))))))), 0))], ~ (~ (gl_WorkGroupID[0]))), gl_WorkGroupID[1], gl_WorkGroupID[2])))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) : _GLF_FUZZED(0.5))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(determinant(mat3(98.46, 0.9, -7755.4489, 374.168, 207.706, -6.1, 8009.1044, -5.9, 3136.7077)), clamp(determinant(mat3(98.46, 0.9, -7755.4489, 374.168, 207.706, -6.1, 8009.1044, -5.9, 3136.7077)), determinant(mat3(98.46, 0.9, -7755.4489, 374.168, 207.706, -6.1, 8009.1044, -5.9, 3136.7077)), determinant(mat3(98.46, 0.9, -7755.4489, 374.168, 207.706, -6.1, 8009.1044, -5.9, 3136.7077))))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(88.67))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))) && true), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(98.46, 0.9, -7755.4489, 374.168, 207.706, -6.1, 8009.1044, -5.9, 3136.7077))))), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(uvec4(uvec2(subgroup_size, 0u), (0u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u)))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size)), (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)))), 0u))) | 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u))), (~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (0u) / 1u) | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size))))) | 0u))), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))), ~ (~ ((uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u)))))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), (uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) | ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)) & (uvec4(190928u, 81u, 171619u, 144944u) / 73417u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))))))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | 0u) | 0u, 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(uvec4(uvec2(subgroup_size, 0u), (0u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u)))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size)), (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)))), 0u))) | 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u))), (~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (0u) / 1u) | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size))))) | 0u))), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))), ~ (~ ((uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u)))))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), (uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) | ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)) & (uvec4(190928u, 81u, 171619u, 144944u) / 73417u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))))))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | 0u) | 0u, ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(uvec4(uvec2(subgroup_size, 0u), (0u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u)))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size)), (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)))), 0u))) | 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), clamp(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u))), (~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (0u) / 1u) | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (0u | 0u), ~ (0u | 0u)))))) | (subgroup_size))))) | 0u))), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))), ~ (~ ((uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u)))))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), (uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), 0u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) | ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)) & (uvec4(190928u, 81u, 171619u, 144944u) / 73417u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(~ (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)), ~ (0u | 0u)))))) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (0u | 0u) | (subgroup_size)), 0u))) | 0u)))), _GLF_IDENTITY(0u, (0u) / 1u), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))))))) | 0u)))), 0u, 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | 0u) | 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)))), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)))), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u))), 0u | ((~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)))), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))))) ^ 0u)))) | 0u, min((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)) | _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u), _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) | (~ ((subgroup_size)))))), (subgroup_size)))), _GLF_IDENTITY(0u, max(0u, 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), 0u))) | 0u)))))) | 0u, ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), _GLF_IDENTITY(0u, min(0u, 0u))))) | 0u)))))) | 0u) - 0u)))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED((workgroup_size ++))))), uint(uint((subgroup_size))))), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u)))))), ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | (subgroup_size)), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size ++, (workgroup_size ++) / 1u)))))), uint(uint((subgroup_size))))), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u)))))), ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | (subgroup_size)), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u), clamp(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | (subgroup_size)), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | (subgroup_size)), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | (subgroup_size)), 0u)) : _GLF_FUZZED(workgroup_base)))) | 0u))))))))))) : _GLF_FUZZED(workgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), (true ? uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))), 0u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))), 0u), (uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))), 0u)) | (uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))), 0u))), uvec2(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))), 0u)))) : _GLF_FUZZED(workgroup_base)))) | 0u)))))), ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) | 0u))) | (subgroup_size)))), 0u)), (true ? _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))), 0u)) | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), uint(uvec3(uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))), 0u)) | _GLF_IDENTITY(0u, min(0u, 0u))) | (subgroup_size)), 0u)), 1u, (0u | 0u)))) : _GLF_FUZZED(workgroup_base)))) | 0u))))))))) | 0u) ^ 0u)) | 0u)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false || (((injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, false, true)))))), _GLF_IDENTITY(false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), (false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))).x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))).y), 0.0, 1.0))).x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) | 0));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) : subgroup_local_id), (_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id), (_GLF_IDENTITY(true ? (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id) : _GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec2(true ? (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id) : _GLF_FUZZED(num_workgroup), 0u), (true ? uvec2(true ? (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id) : _GLF_FUZZED(num_workgroup), 0u) : _GLF_FUZZED(uvec2(48681u, 106890u))))))))) - 0u)) + 1, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 1u), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))), max(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 1u), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u))))), uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 1u, 1u), ~ (~ (uvec4(subgroup_local_id, 1u, 1u, 1u)))))))) + 1, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? read : _GLF_FUZZED(virtual_gid)))), max((_GLF_IDENTITY(read, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! (_GLF_IDENTITY((! (! (true))), bool(bvec2((! (! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))) ? _GLF_IDENTITY(read, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read, uint(_GLF_IDENTITY(uint(read), (uint(read)) | 0u))) : _GLF_FUZZED(atomicExchange(subgroup_size, atomicMin(workgroup_size, workgroup_base))))) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(true, ! (! (true))) ? read : _GLF_FUZZED(virtual_gid)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) || false), true, false))))) ? read : _GLF_FUZZED(virtual_gid)))), min((_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? read : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? read : _GLF_FUZZED(virtual_gid)))), clamp((_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? read : _GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(true, ! (! (true))) ? read : _GLF_FUZZED(virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(read, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), false || ((true)))))), false || (_GLF_IDENTITY(! (true), false || (! (true))))))) ? read : _GLF_FUZZED(virtual_gid)))), (_GLF_IDENTITY(read, (_GLF_IDENTITY(true, ! (! (true))) ? read : _GLF_FUZZED(virtual_gid)))))))) : _GLF_FUZZED(workgroup_id))))) | (_GLF_IDENTITY(read, (read) >> 0u)))) >> 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)))) && true))) && true)) || false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(726.141, _GLF_IDENTITY(-699.348, clamp(_GLF_IDENTITY(-699.348, max(_GLF_IDENTITY(-699.348, min(-699.348, -699.348)), -699.348)), -699.348, _GLF_IDENTITY(-699.348, (-699.348) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8823.6045) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))).x)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(vec2(726.141, _GLF_IDENTITY(-699.348, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-699.348, max(_GLF_IDENTITY(-699.348, min(-699.348, -699.348)), -699.348)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-699.348, max(_GLF_IDENTITY(-699.348, min(-699.348, -699.348)), -699.348)), float(vec2(_GLF_IDENTITY(-699.348, max(_GLF_IDENTITY(-699.348, min(-699.348, -699.348)), -699.348)), 0.0)))))), -699.348, _GLF_IDENTITY(-699.348, (-699.348) + 0.0)))).x)), bool(false)))) * 1.0), injectionSwitch.y))))))
    return;
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))) ? _GLF_FUZZED(virtual_gid) : virtual_gid)), virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(injectionSwitch))))).y) * round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5448.7238) : length(normalize(1.0)))))))) ? _GLF_FUZZED(virtual_gid) : virtual_gid)), virtual_gid)), uint(uvec3(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(_GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0)))))))) ? _GLF_FUZZED(virtual_gid) : virtual_gid)), virtual_gid)), 0u, 1u))), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))) ? _GLF_FUZZED(virtual_gid) : virtual_gid)), virtual_gid))))], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(uvec4(72344u, 4312u, 117195u, 56194u).b))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), _GLF_IDENTITY((max(64, 64)) | (_GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), clamp((max(64, 64)) | (_GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), (max(64, 64)) | (_GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), (max(64, 64)) | (_GLF_IDENTITY(_GLF_IDENTITY(max(64, 64), (false ? _GLF_FUZZED((mat2(4.8, -987.519, 4.0, -6750.6399) , -3080)) : _GLF_IDENTITY(max(64, 64), int(ivec3(max(64, 64), 1, 0))))), 0 | (max(64, 64)))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec4(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(1, (1) | (1)), 0, 0))), max(64, 64)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec4(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(1, (1) | (1)), 0, 0))), max(64, 64)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) / 1)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), mix(float(_GLF_FUZZED(6.7)), float(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), bool(true)))) > injectionSwitch.y)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, true)), (bool(bvec2((false) || false, true))) || false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), false || (bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), ! (! ((_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), false || (bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))))))))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat4x3(injectionSwitch.x, exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0)) : _GLF_FUZZED(-896.186), mix(float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat4x3(injectionSwitch.x, exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0)) : _GLF_FUZZED(-896.186), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat4x3(injectionSwitch.x, exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0)) : _GLF_FUZZED(-896.186), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat4x3(injectionSwitch.x, exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0)) : _GLF_FUZZED(-896.186)))), float(_GLF_FUZZED((+ 0.6))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-35.78)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(true))) : _GLF_FUZZED(54.17))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))), false || (bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true, true, true))))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))) || false))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-7.7)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-85.91, -8090.1731, false)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-7.7)), bool(false)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-7.7)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-85.91, -8090.1731, false)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-7.7)), bool(false))))))) && true))))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (true)), bool(bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y)))))), ((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))))) || false)))))))))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, false))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), bvec3(bvec4(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), min(_GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), clamp(vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)))), vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), min(_GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), clamp(vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)), vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0)))), vec2(mat2(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 1.0))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-73.35)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))) && true)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(log(sqrt(1.0)), 0.0 + (log(sqrt(1.0)))), 0.0)), mix(vec2(_GLF_FUZZED(9026.7702), (vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))[1]), vec2((vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.5, max(-2.5, -2.5))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.5, max(-2.5, -2.5)))), float(_GLF_FUZZED(-48.10)), bool(false)))), bvec2(true, false)))).x > injectionSwitch.y))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(log(sqrt(1.0)), clamp(_GLF_IDENTITY(log(sqrt(1.0)), 0.0 + (log(sqrt(1.0)))), log(sqrt(1.0)), log(sqrt(1.0)))), 0.0)), mix(vec2(_GLF_FUZZED(9026.7702), (vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))[1]), vec2((vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))[0], _GLF_FUZZED(-2.5)), bvec2(true, false)))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(153.560), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.4)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(injectionSwitch, injectionSwitch)) : injectionSwitch)))).y))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)), (true ? vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)) : _GLF_FUZZED(vec2(-0.0, -379.577)))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9026.7702, max(9026.7702, 9026.7702))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(sqrt(1.0)), 0.0), max(vec4(injectionSwitch, log(sqrt(1.0)), 0.0), vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), (false ? _GLF_FUZZED(vec2(2.2, 1426.8094)) : _GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0), mix(vec4((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[0], _GLF_FUZZED(-633.853), _GLF_FUZZED(9180.3876), _GLF_IDENTITY((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], clamp((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3]))), vec4(_GLF_FUZZED(450.382), (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[1], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[2], _GLF_FUZZED((4.4))), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(34.33) : 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))), mix(vec2(_GLF_FUZZED(3.2), (vec2(mat3x4(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))[1]), vec2((vec2(mat3x4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -987.555)))), log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))[0], _GLF_FUZZED(-279.767)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false)))))))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))], _GLF_FUZZED(-2.5)), bvec2(true, false)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)), (true ? vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)) : _GLF_FUZZED(vec2(-0.0, -379.577)))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9026.7702, max(9026.7702, 9026.7702))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(sqrt(1.0)), 0.0), max(vec4(injectionSwitch, log(sqrt(1.0)), 0.0), vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), (false ? _GLF_FUZZED(vec2(2.2, 1426.8094)) : _GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0), mix(vec4((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[0], _GLF_FUZZED(-633.853), _GLF_FUZZED(9180.3876), _GLF_IDENTITY((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], clamp((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3]))), vec4(_GLF_FUZZED(450.382), (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[1], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[2], _GLF_FUZZED((4.4))), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(34.33) : 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))), mix(vec2(_GLF_FUZZED(3.2), (vec2(mat3x4(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))[1]), vec2((vec2(mat3x4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -987.555)))), log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))[0], _GLF_FUZZED(-279.767)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false)))))))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))], _GLF_FUZZED(-2.5)), bvec2(true, false)))).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)), (true ? vec2(vec4(injectionSwitch, log(sqrt(1.0)), 0.0)) : _GLF_FUZZED(vec2(-0.0, -379.577)))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9026.7702, max(9026.7702, 9026.7702))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(sqrt(1.0)), 0.0), max(vec4(injectionSwitch, log(sqrt(1.0)), 0.0), vec4(injectionSwitch, log(sqrt(1.0)), 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), (false ? _GLF_FUZZED(vec2(2.2, 1426.8094)) : _GLF_IDENTITY(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0), mix(vec4((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[0], _GLF_FUZZED(-633.853), _GLF_FUZZED(9180.3876), _GLF_IDENTITY((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], clamp((vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[3]))), vec4(_GLF_FUZZED(450.382), (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[1], (vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))[2], _GLF_FUZZED((4.4))), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(34.33) : 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))), mix(vec2(_GLF_FUZZED(3.2), (vec2(mat3x4(vec2(vec4(injectionSwitch, log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))[1]), vec2((vec2(mat3x4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -987.555)))), log(sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))[0], _GLF_FUZZED(-279.767)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), false)))))))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))], _GLF_FUZZED(-2.5)), bvec2(true, false)))).x > injectionSwitch.y))))))))))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))), false, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false, true)), true)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6852.4999) : 0.0))) / 1.0))), 1.0, cos(0.0), 1.0))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) - 0.0) : _GLF_FUZZED(injectionSwitch.r))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(injectionSwitch.r))))))))), true))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
