#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) && true))))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))) || false)))), bvec2(bvec4(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))), false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))) || false)))), bvec2(bvec4(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))), false, true))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))) || false)))), bvec2(bvec4(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))), false, true))))), false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))) || false)))), bvec2(bvec4(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))), false, true))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))) || false)))), bvec2(bvec4(bvec2((false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true))))))))), false, true))))), false)))), false, false, false))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true)))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) && true), true)))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, false)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, false))) && true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec4(false, false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat2x3(injectionSwitch.y, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-51.76) : 0.0)), injectionSwitch.x), 1.0, 0.0))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (false ? _GLF_FUZZED(log2(6.3)) : _GLF_IDENTITY(float(_GLF_FUZZED(58.53)), _GLF_IDENTITY(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), clamp(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53)))))))), _GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(-1522.3961))), bool(true))), cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1)))), mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1)))), (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1))))) - 0.0)), bool(true)))) / 1.0), mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1))))), float(_GLF_FUZZED(-3127.8274)), bool(false))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0))), float(_GLF_FUZZED(-1.7)), bool(false))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), max(0.0, 0.0)), 1.0, 0.0))))))), min(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), float(mat2x4(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) - 0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (false ? _GLF_FUZZED(log2(6.3)) : _GLF_IDENTITY(float(_GLF_FUZZED(58.53)), _GLF_IDENTITY(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), clamp(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53)))))))), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1)))), mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1))))), float(_GLF_FUZZED(-3127.8274)), bool(false))), 0.0, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-68.33) : 1.0)))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(0.0, 0.0)), 1.0, 0.0))))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (false ? _GLF_FUZZED(log2(6.3)) : _GLF_IDENTITY(float(_GLF_FUZZED(58.53)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), min(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))))) / 1.0), float(_GLF_FUZZED(58.53))), clamp(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), _GLF_IDENTITY(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), float(mat3x2(max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53))), 1.0, 1.0, 0.0, 1.0, 0.0))), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53)))))))), float(injectionSwitch.y), bool(true))), cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1)))), 0.0 + (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1)))))), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1))))), float(_GLF_FUZZED(-3127.8274)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(0.0, 0.0)), 1.0, 0.0))))))))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.0, -1.5)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (false ? _GLF_FUZZED(log2(6.3)) : _GLF_IDENTITY(float(_GLF_FUZZED(58.53)), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53)))))), float(injectionSwitch.y), bool(true))), cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1407.8143)))) : _GLF_FUZZED(exp(9.1)))), mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1))))), float(_GLF_FUZZED(-3127.8274)), bool(false))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))))))))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (false ? _GLF_FUZZED(log2(6.3)) : _GLF_IDENTITY(float(_GLF_FUZZED(58.53)), max(float(_GLF_FUZZED(58.53)), float(_GLF_FUZZED(58.53)))))), float(injectionSwitch.y), bool(true))), cos(0.0), 0.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))), mix(vec4(_GLF_FUZZED(-0.6), _GLF_FUZZED(-1992.7927), _GLF_FUZZED(-1.7), _GLF_IDENTITY((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[3], clamp((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[3], (vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[3], (vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[3]))), vec4((vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[0], (vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[1], (vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))), 0.0))))[2], _GLF_FUZZED(-48.39)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1407.8143)))) : _GLF_FUZZED(exp(9.1)))), mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(exp(9.1))))), float(_GLF_FUZZED(-3127.8274)), bool(false))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(max(-0.3, 2525.9708)))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))))))))))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.53)), (false ? _GLF_FUZZED(log2(6.3)) : _GLF_IDENTITY(float(_GLF_FUZZED(58.53)), max(float(_GLF_FUZZED(_GLF_IDENTITY(58.53, 0.0 + (58.53)))), float(_GLF_FUZZED(58.53)))))), float(injectionSwitch.y), bool(true))), cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1407.8143)))) : _GLF_FUZZED(exp(9.1)))), mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(mat3((0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0))) / 1.0) : _GLF_FUZZED(exp(9.1))))), float(_GLF_FUZZED(-3127.8274)), bool(false))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))))))))))) && true) && true), true, true, false)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (true ? 2288.6584 : 7.2)))), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-11.23))), injectionSwitch.x))) - sqrt(0.0)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(153408u) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 0u, 0u))))))), 1u), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)) ? uvec4(workgroup_size, 0u, 1u, 1u) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(49488u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(49488u), (true ? uint(49488u) : _GLF_FUZZED(num_workgroup)))), (uint(_GLF_IDENTITY(uint(49488u), (true ? uint(49488u) : _GLF_FUZZED(num_workgroup))))) >> 0u)), 139070u, _GLF_IDENTITY(170320u, (170320u) | (170320u)), 100557u)))))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) | 0u)) ^ 1u)))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id) | (0u | 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), ivec2(0, 0) ^ (_GLF_FUZZED(ivec2(63098, -27654)))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ (ivec2(1, 0))), (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0)))))) - ivec2(0, 0)))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED((148905u ^ workgroup_base))))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), ivec2(0, 0) ^ (_GLF_FUZZED(ivec2(63098, -27654)))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ (ivec2(1, 0))), (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0)))))) - ivec2(0, 0)))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED((148905u ^ workgroup_base))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))) << 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))) << 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) | (subgroup_local_id))) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) : _GLF_FUZZED(workgroup_id))))) << 0u))) + 0u), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))) | 0u))) << 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) * 1u))), (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))) << 0u))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u))))))), ((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u)))))))) | ((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u))))), (true ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u), 0u | (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size))))), ((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5943))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1) / 1u))) ^ 0u)))))))) | ((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, min(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1))) / 1u))) ^ 0u)))))))))) * 1u)) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u)))) + 1) | (subgroup_local_id + 1)))))))) ^ 0u)) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_FUZZED(ivec2(63098, -27654)))), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), (_GLF_FUZZED(ivec2(63098, -27654))) >> ivec2(0, 0)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(8281) : 0))))), ivec2(0, 0) ^ (ivec2(1, 0))), (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ (ivec2(1, 0)))) - ivec2(0, 0))))), (int(_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_FUZZED(ivec2(63098, -27654)))), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), min(_GLF_FUZZED(ivec2(63098, -27654)), _GLF_IDENTITY(_GLF_FUZZED(ivec2(63098, -27654)), (_GLF_FUZZED(ivec2(63098, -27654))) >> ivec2(0, 0)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(8281) : 0))))), ivec2(0, 0) ^ (ivec2(1, 0))), (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ (ivec2(1, 0)))) - ivec2(0, 0)))))) >> 0)), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED((148905u ^ workgroup_base)))))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), (true ? (~ ((subgroup_local_id + 1))) : _GLF_FUZZED(67229u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) / 1u, (true ? (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) / 1u : _GLF_FUZZED(3782u)))))), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) / 1u, (true ? (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) / 1u : _GLF_FUZZED(3782u)))))), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))) - 0u))) << 0u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (1)))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1)))), (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) ^ 0u))))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (1)))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) ^ 0u)))))))) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 | (1)))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) ^ 0u)))))))) - 0u, (false ? _GLF_FUZZED(virtual_gid) : (~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (1 ^ 1)), (1) ^ 0), _GLF_IDENTITY(1, 0 | (1)))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) ^ 0u)))))))) - 0u)))))) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1) | (subgroup_local_id + 1)))))))) ^ 0u)) % subgroup_size)) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, (3u) + 0u), 3u))), uint(3u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false)))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))) && true)))), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6472.7631, -44.76)) : injectionSwitch))) * vec2(1.0, 1.0)))), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6472.7631, -44.76)) : injectionSwitch))) * vec2(1.0, 1.0)))), injectionSwitch)).y)))), false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(_GLF_IDENTITY(false, (false) && true)))) > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))) || false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) && true)))), bool(bvec4(! (false), true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false))))))))), true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY((64), ~ (~ ((64)))) >> 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.1))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4279.8371) : injectionSwitch.y))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(1.0))), 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(90.15)), clamp(float(_GLF_FUZZED(90.15)), float(_GLF_FUZZED(90.15)), _GLF_IDENTITY(float(_GLF_FUZZED(90.15)), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(float(_GLF_FUZZED(90.15)), mix(float(_GLF_FUZZED(1222.1878)), float(float(_GLF_IDENTITY(_GLF_FUZZED(90.15), clamp(_GLF_FUZZED(90.15), _GLF_FUZZED(90.15), _GLF_IDENTITY(_GLF_FUZZED(90.15), (_GLF_FUZZED(90.15)) / cos(0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], float(vec4(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_IDENTITY(((vec2(injectionSwitch[0], injectionSwitch[1])))[0], 1.0 * (_GLF_IDENTITY(((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]) + 0.0))))[0], (((vec2(injectionSwitch[0], injectionSwitch[1])))[0]) + 0.0))), ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(301.375), _GLF_FUZZED(-3.6)), bvec2(false, false)))[0], 1.0, 1.0, 1.0))), _GLF_FUZZED(84.15)), vec2(_GLF_FUZZED(-9708.9642), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))).x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(90.15)), clamp(float(_GLF_FUZZED(90.15)), float(_GLF_FUZZED(90.15)), _GLF_IDENTITY(float(_GLF_FUZZED(90.15)), mix(float(_GLF_FUZZED(0.3)), float(float(_GLF_FUZZED(90.15))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, ((0 | 0) >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(1, 0, ((0 | 0) >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec4(1, 0, ((0 | 0) >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(1, 0, ((0 | 0) >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) << ivec4(0, 0, 0, 0))))) + 0)]), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], float(vec4((vec2(injectionSwitch[0], injectionSwitch[1]))[0], 1.0, 1.0, 1.0))), _GLF_FUZZED(84.15)), vec2(_GLF_FUZZED(-9708.9642), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], float(vec4((vec2(injectionSwitch[0], injectionSwitch[1]))[0], 1.0, 1.0, 1.0))), _GLF_FUZZED(84.15)), vec2(_GLF_FUZZED(-9708.9642), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true)))))).x), bool(true))) > injectionSwitch.y), false)), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(90.15)), clamp(float(_GLF_FUZZED(90.15)), _GLF_IDENTITY(float(_GLF_FUZZED(90.15)), max(float(_GLF_FUZZED(90.15)), float(_GLF_FUZZED(90.15)))), _GLF_IDENTITY(float(_GLF_FUZZED(90.15)), mix(float(_GLF_FUZZED(0.3)), float(float(_GLF_FUZZED(90.15))), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0 + (injectionSwitch[0]), float(vec2(0.0 + (injectionSwitch[0]), 1.0)))), injectionSwitch[1])), clamp(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), clamp((injectionSwitch[0]), (injectionSwitch[0]), _GLF_IDENTITY((injectionSwitch[0]), min((injectionSwitch[0]), _GLF_IDENTITY((injectionSwitch[0]), mix(float(_GLF_FUZZED(-0.5)), float((injectionSwitch[0])), bool(true)))))))), injectionSwitch[1])), vec2(vec4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-308.289), _GLF_FUZZED(6668.2507)), vec2(((vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])))[0], ((vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])))[1]), bvec2(true, true))), 0.0, 1.0))), (vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.1) : 0.0)) + (injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])), max((vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])), (vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1]))))))[0], float(vec4((_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(vec2(4.7, -2.7)))), vec2(injectionSwitch[0], injectionSwitch[1]))))[0], 1.0, 1.0, 1.0))), _GLF_FUZZED(84.15)), vec2(_GLF_FUZZED(-9708.9642), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true)))).x), bool(true))) > injectionSwitch.y), false)), _GLF_IDENTITY(false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(90.15)), clamp(float(_GLF_FUZZED(90.15)), float(_GLF_FUZZED(90.15)), _GLF_IDENTITY(float(_GLF_FUZZED(90.15)), mix(float(_GLF_FUZZED(0.3)), float(float(_GLF_FUZZED(90.15))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], float(vec4((vec2(injectionSwitch[0], injectionSwitch[1]))[0], 1.0, 1.0, 1.0))), _GLF_FUZZED(84.15)), vec2(_GLF_FUZZED(-9708.9642), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[1], (vec2(injectionSwitch[0], injectionSwitch[1]))[1], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]))), bvec2(false, true)))).x), bool(true))) > injectionSwitch.y), false))), ! (! (false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(90.15)), clamp(float(_GLF_FUZZED(90.15)), float(_GLF_FUZZED(90.15)), _GLF_IDENTITY(float(_GLF_FUZZED(90.15)), mix(float(_GLF_FUZZED(0.3)), float(float(_GLF_FUZZED(90.15))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(9.7, -1365.2000))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], float(vec4((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), _GLF_FUZZED(84.15)), vec2(_GLF_FUZZED(-9708.9642), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])), min((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])))), mix(vec2((_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])), min((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])))))[0], _GLF_FUZZED(vec2(9828.7208, 969.930).r)), vec2(_GLF_FUZZED((-646.673)), (_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])), min((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1])))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1]), bvec2(false, true)))).x), bool(true))) > injectionSwitch.y), false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false), ! (! (bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-926.295))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-999.336), _GLF_FUZZED(75.69), _GLF_FUZZED(-1541.4212), _GLF_FUZZED(9.0)), vec4((vec4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))[0], (vec4(injectionSwitch, 1.0, 1.0))[1], (vec4(injectionSwitch, 1.0, 1.0))[2], (vec4(injectionSwitch, 1.0, 1.0))[3]), bvec4(true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true)))), (true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-999.336), _GLF_FUZZED(75.69), _GLF_FUZZED(-1541.4212), _GLF_FUZZED(9.0)), vec4((vec4(injectionSwitch, 1.0, 1.0))[0], _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 1.0))[1], mix(float(_GLF_FUZZED((-307.168 + -8.2))), float((vec4(injectionSwitch, 1.0, 1.0))[1]), bool(true))), (vec4(injectionSwitch, 1.0, 1.0))[2], (vec4(injectionSwitch, 1.0, 1.0))[3]), bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) : _GLF_FUZZED(vec2(-2.7, -7033.5339))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-113.312)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-113.312)), bool(false))) > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u), (true ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(workgroup_size))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (max(injectionSwitch, injectionSwitch)))[0], max((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 1.0)))))[0], (mat2(1.0) * (max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(8076.9479), (mat2(1.0) * (max(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) << 0))]), bvec2(false, true))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ((_GLF_IDENTITY(false, (false) || false)) || false) && true))))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), bool(bvec3(! (bool(bvec4(true, true, false, false))), true, true))), (! (bool(bvec4(true, true, false, false)))) || false)))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), (! (bool(bvec4(true, true, false, false)))) || false)))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), (! (bool(bvec4(true, true, false, false)))) || false)))), (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), (! (bool(bvec4(true, true, false, false)))) || false)))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8455.1673)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), (! (bool(bvec4(true, true, false, false)))) || false)))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), (! (bool(bvec4(true, true, false, false)))) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false))), true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(-2.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (read), _GLF_IDENTITY((_GLF_IDENTITY(~ (read), clamp(_GLF_IDENTITY(~ (read), max(~ (read), _GLF_IDENTITY(~ _GLF_IDENTITY((read), clamp(_GLF_IDENTITY((read), ((read)) | 0u), (read), (read))), 0u + (~ _GLF_IDENTITY((read), min((read), (read))))))), ~ (read), ~ (read)))) | _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((read), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read)))), ((~ (read))) - 0u), 0u + ((_GLF_IDENTITY(~ (read), (~ (read)) | ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << 0u)))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u ^ ((_GLF_IDENTITY(~ (read), clamp(_GLF_IDENTITY(~ (read), max(~ (read), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), min(_GLF_IDENTITY(~ (read), (~ (read)) | 0u), ~ (read)))) * 1u), 0u + (~ (read))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), min(_GLF_IDENTITY(~ (read), (~ (read)) | 0u), ~ (read)))) * 1u), 0u + (~ (read)))))))), ~ (read), ~ (_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, 0u | (read))) | (read)))))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (read)), ((~ (read))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 1u * (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))), ~ (~ (_GLF_IDENTITY((~ (read)), ((~ (read))) - 0u)))), 0u + ((_GLF_IDENTITY(~ (read), (~ (read)) | ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u + (0u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ (read), _GLF_IDENTITY((_GLF_IDENTITY(~ (read), clamp(_GLF_IDENTITY(~ (read), max(~ (read), _GLF_IDENTITY(~ _GLF_IDENTITY((read), clamp(_GLF_IDENTITY((read), ((read)) | 0u), (read), (read))), 0u + (~ _GLF_IDENTITY((read), min((read), (read))))))), ~ (read), ~ (read)))) | _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((read), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read)))), ((~ (read))) - 0u), 0u + ((_GLF_IDENTITY(~ (read), (~ (read)) | ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << 0u)))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u ^ ((_GLF_IDENTITY(~ (read), clamp(_GLF_IDENTITY(~ (read), max(~ (read), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), min(_GLF_IDENTITY(~ (read), (~ (read)) | 0u), ~ (read)))) * 1u), 0u + (~ (read))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), min(_GLF_IDENTITY(~ (read), (~ (read)) | 0u), ~ (read)))) * 1u), 0u + (~ (read)))))))), ~ (read), ~ (_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, 0u | (read))) | (read)))))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (read)), ((~ (read))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 1u * (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))), ~ (~ (_GLF_IDENTITY((~ (read)), ((~ (read))) - 0u)))), 0u + ((_GLF_IDENTITY(~ (read), (~ (read)) | ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u + (0u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), 0u | (uint((_GLF_IDENTITY(~ (read), _GLF_IDENTITY((_GLF_IDENTITY(~ (read), clamp(_GLF_IDENTITY(~ (read), max(~ (read), _GLF_IDENTITY(~ _GLF_IDENTITY((read), clamp(_GLF_IDENTITY((read), ((read)) | 0u), (read), (read))), 0u + (~ _GLF_IDENTITY((read), min((read), (read))))))), ~ (read), ~ (read)))) | _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((read), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read)))), ((~ (read))) - 0u), 0u + ((_GLF_IDENTITY(~ (read), (~ (read)) | ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << 0u)))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u ^ ((_GLF_IDENTITY(~ (read), clamp(_GLF_IDENTITY(~ (read), max(~ (read), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), min(_GLF_IDENTITY(~ (read), (~ (read)) | 0u), ~ (read)))) * 1u), 0u + (~ (read))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), min(_GLF_IDENTITY(~ (read), (~ (read)) | 0u), ~ (read)))) * 1u), 0u + (~ (read)))))))), ~ (read), ~ (_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, 0u | (read))) | (read)))))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (read)), ((~ (read))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 1u * (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))), ~ (~ (_GLF_IDENTITY((~ (read)), ((~ (read))) - 0u)))), 0u + ((_GLF_IDENTITY(~ (read), (~ (read)) | ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u + (0u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))))))), 4, _GLF_IDENTITY(64, int(ivec3(64, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), (int(_GLF_IDENTITY(8, clamp(8, 8, 8)))) - 0)))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, true && (false))) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
