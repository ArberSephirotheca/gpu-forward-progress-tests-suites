#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(8.9, 335.857)), min(_GLF_FUZZED(vec2(8.9, 335.857)), _GLF_FUZZED(vec2(8.9, 335.857)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(48.92), _GLF_FUZZED(9159.4728)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-4.4)), bool(false))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.8)), bool(false))), 1.0)), 1.0, 1.0)))), abs(0.0), 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec2(false || (injectionSwitch.x > injectionSwitch.y), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), true, false, false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), true, true)))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.3)), bool(false))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), true, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))
  barrier();
 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.z * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), (float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) - 0.0)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), 0u ^ (subgroup_id))) + 0u), subgroup_id)), subgroup_id, subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.x = next_virtual_gid;
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]), (clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])) | 0u), clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))))) - 0u), 1u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(floatBitsToUint(475.737)) : buf[virtual_gid]))) - 0u), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)))) : _GLF_FUZZED(workgroup_size))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), (false ? _GLF_FUZZED((-6087.8528 , virtual_gid)) : _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), uint(uint((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))))))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-997.346) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, 1.0, 1.0, 0.0))))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, 1.0, 1.0, 0.0))))))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-971.040) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))))))))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * ((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0)))))))), max(min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0)))))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 1.0, 0.0)))))))))))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, _GLF_IDENTITY(0u, (0u) / (1u | 0u))))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3134.3567)), float(0.0), bool(true))), 0.0)), 0.0)), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(subgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))), max(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)) << 0u))], (buf[virtual_gid]) - 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), (_GLF_IDENTITY((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-208.569))), injectionSwitch.x))) ^ 0u)) << 0u))], (buf[virtual_gid]) - 0u) : _GLF_FUZZED(76407u))), 1u, 0u))), _GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), 1u), clamp(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), 1u), (uvec4(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), 1u)) | (uvec4(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), 1u))), uvec4(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), 1u), uvec4(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ (120982u & 0u)), (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u), 1u)))))))))))), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)))))], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)))))]) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)))))])), (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)), _GLF_IDENTITY((true ? uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((buf[virtual_gid]), 0u | (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))))) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 0u ^ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))])))))), (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (~ ((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u)))) >> 0u) - 0u), 1u, 0u)))))))), max(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), _GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))), max(~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))), ~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((buf[virtual_gid]) - 0u, ((buf[virtual_gid]) - 0u) * 1u)), 1u, 0u)))))))), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(80.02) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(80.02) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))) ^ 0u))))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, ~ (~ (6u)))))) - 0u)), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))) | 0u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)) : _GLF_FUZZED(atomicXor(virtual_gid, workgroup_id))), (_GLF_IDENTITY((true ? uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((buf[virtual_gid]), 0u | (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))))) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 0u ^ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))])))))), (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (~ ((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u)))) >> 0u) - 0u), 1u, 0u)))))))), max(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), _GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))), max(~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))), ~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((buf[virtual_gid]) - 0u, ((buf[virtual_gid]) - 0u) * 1u)), 1u, 0u)))))))), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(80.02) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(80.02) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))) ^ 0u))))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, ~ (~ (6u)))))) - 0u)), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))) | 0u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)) : _GLF_FUZZED(atomicXor(virtual_gid, workgroup_id))), (true ? (true ? uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((buf[virtual_gid]), 0u | (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))))) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 0u ^ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))])))))), (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), ~ (~ ((uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u)))) >> 0u) - 0u), 1u, 0u)))))))), max(~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), _GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))), max(~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))), ~ (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)))))))), 1u * (~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY((buf[virtual_gid]) - 0u, ((buf[virtual_gid]) - 0u) * 1u)), 1u, 0u)))))))), ~ (_GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), clamp(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))]) - 0u), 1u, 0u))), ~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(~ (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))], (buf[virtual_gid]) - 0u), 1u, 0u))), 1u * (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(80.02) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(80.02) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))], (buf[virtual_gid]) - 0u), 1u, 0u))) ^ 0u))))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, ~ (~ (6u)))))) - 0u)), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))) | 0u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)) : _GLF_FUZZED(atomicXor(virtual_gid, workgroup_id))) : _GLF_FUZZED(workgroup_id)))) - 0u)))), _GLF_IDENTITY(0u ^ (uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(1u, (1u) / 1u), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 1u, 0u))), (0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-- subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))), 1u, 0u)))) << 0u), min(0u ^ (uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 1u, 0u))), _GLF_IDENTITY(0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))), 1u, 0u))), clamp(0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))), 1u, 0u))), _GLF_IDENTITY(0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uint(buf[virtual_gid]), (uint(buf[virtual_gid])) / 1u)))) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))), 1u, 0u))), 0u ^ (0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))) | (virtual_gid))]) - 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u))), (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) | (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))) | (virtual_gid))]) - 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) * (0u | 1u)) - 0u)) | (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))) | (virtual_gid))]) - 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)]) - 0u)) | (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))), 1u, 0u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))) | (virtual_gid))]) - 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) | (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))), 1u, 0u)), 0u, 1u)))))))), 0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))), 1u, 0u))))))), 0u ^ (uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 1u, _GLF_IDENTITY(0u, 0u | (0u))))))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6255.7644, 575.047)))) : _GLF_FUZZED(_GLF_IDENTITY(mat4x2(-877.959, -5.0, -3.6, -8.0, -9.2, -1.0, 11.87, 4.3)[0], (_GLF_IDENTITY(mat4x2(-877.959, -5.0, -3.6, -8.0, -9.2, -1.0, 11.87, 4.3)[0], (mat4x2(-877.959, -5.0, -3.6, -8.0, -9.2, -1.0, 11.87, 4.3)[0]) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6255.7644, 575.047)))) : _GLF_FUZZED(_GLF_IDENTITY(mat4x2(-877.959, -5.0, -3.6, -8.0, -9.2, -1.0, 11.87, 4.3)[0], (_GLF_IDENTITY(mat4x2(-877.959, -5.0, -3.6, -8.0, -9.2, -1.0, 11.87, 4.3)[0], (mat4x2(-877.959, -5.0, -3.6, -8.0, -9.2, -1.0, 11.87, 4.3)[0]) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(bvec2(! (_GLF_DEAD(false)), true))))))
    return;
   barrier();
  }
 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.y = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.x], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), ~ (~ (_GLF_IDENTITY(~ (uint(1)), uint(uvec2(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1))), ~ (~ (~ (uint(1))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) - 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u | (uint(uvec2(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.y, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.y, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), cos(0.0), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, abs(0.0)), vec4(0.0, sqrt(1.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, abs(0.0)), vec4(0.0, sqrt(1.0), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(cos(0.0), 1.0 * (_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), float(mat4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)))), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - 0.0)), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), float(mat4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)))), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - 0.0)), false)))))) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, abs(0.0)), vec4(0.0, sqrt(1.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, abs(0.0)), vec4(0.0, sqrt(1.0), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(cos(0.0), 1.0 * (_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), float(mat4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)))), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - 0.0)), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), float(mat4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)))), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), sin(0.0), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2722.5267)), bool(false))), cos(0.0), sin(0.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - 0.0)), false)))))) && true))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, false, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, false, true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), bvec3(bvec3(bvec3(false, false, true)))))))), (false) && true))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true)))))) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
