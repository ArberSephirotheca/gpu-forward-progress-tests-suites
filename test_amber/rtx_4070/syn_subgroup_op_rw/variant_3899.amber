#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idsubgroup_local_id;
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  return;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec4 GLF_merged2_0_3_73_3_1_12GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))) || false))))
  return;
 uvec4 GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    return;
   return;
  }
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread;
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.xy = GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.xy = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup;
 uvec4 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-929.955)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_73_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idsubgroup_local_id.xyz = GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_id;
 GLF_merged2_0_3_73_3_1_12GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idworkgroup_id.xyz = GLF_merged2_0_3_73_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idsubgroup_local_id.xyz;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(537.646)), bvec2(true, false)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (mat2x4(mat2(1.0))) * mat2(1.0))))))) * (mix(vec2(_GLF_FUZZED(-8801.8946), _GLF_IDENTITY((injectionSwitch), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(53.81), _GLF_FUZZED(-6041.1560)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(537.646)), bvec2(true, false))), (false ? _GLF_FUZZED(vec2(9.0, -5.7)) : mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8801.8946), max(_GLF_FUZZED(-8801.8946), _GLF_FUZZED(-8801.8946))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(_GLF_IDENTITY(-8801.8946, clamp(-8801.8946, -8801.8946, -8801.8946))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8801.8946), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]))), vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(537.646)), bvec2(true, false))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(537.646)), bvec2(true, false)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(647.962, 4.3, 24.68, 7.8)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))))), (mat2x4(mat2(1.0))) * mat2(1.0))))))) * (mix(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(537.646)), bvec2(true, false))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(9.0, -5.7)) : mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(537.646)), bvec2(true, false)))), ((false ? _GLF_FUZZED(vec2(9.0, -5.7)) : mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8801.8946, (false ? _GLF_FUZZED(96.70) : -8801.8946))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8801.8946), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(537.646)), bvec2(true, false))))) + vec2(0.0, 0.0))))))).x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz = GLF_merged2_0_3_73_3_1_12GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idworkgroup_id.xyz;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.xy.x = subgroup_id;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.y = GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.xy.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.xy.y = GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9535.7029))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false)))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), false), false))), true, false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / cos(vec2(0.0, 0.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / cos(vec2(0.0, 0.0))).y)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false, true))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / cos(vec2(0.0, 0.0))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) || false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, false)))))) || false, ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, false)))))) || false))))), bool(bvec2((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))), true, false, false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, false)))))) || false, ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, false)))))) || false))))), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_73_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x = GLF_merged2_0_3_73_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idsubgroup_local_id.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))) > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.xy.y = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.z = GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.xy.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.z = num_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.z = num_workgroup, (true ? GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.z = num_workgroup : _GLF_FUZZED(subgroup_id)))) ^ (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base), (~ (GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base)) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(uvec2(0u, 1u)))))))))).z;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))))))))))), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-225.223), _GLF_FUZZED(-8.3)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))))), true, true))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   return;
  }
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.xy.x = GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.w = GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.xy.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.x = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-960.914))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), false), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_73_3_1_12GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged2_0_3_73_3_1_12GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idworkgroup_id.w;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y = GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.6)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), 0.0 + (injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy.y = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y;
 uint subgroup_base = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.y * GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.xy.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.w = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base, max(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base, (true ? GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base))), GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base))) >> uvec4(0u, 0u, 0u, 0u)).w, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), clamp((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)) / uvec4(188414u, 157870u, 116233u, _GLF_IDENTITY(13744u, (13744u) + 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, _GLF_IDENTITY(116233u, (_GLF_IDENTITY(116233u, clamp(116233u, _GLF_IDENTITY(116233u, (116233u) >> 0u), _GLF_IDENTITY(116233u, 0u ^ (116233u))))) ^ 0u), 13744u))))[2]), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / _GLF_IDENTITY(uvec4(188414u, 157870u, 116233u, 13744u), max(_GLF_IDENTITY(uvec4(188414u, 157870u, 116233u, 13744u), (true ? uvec4(188414u, 157870u, 116233u, 13744u) : _GLF_FUZZED((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup)))), uvec4(188414u, 157870u, 116233u, 13744u)))), clamp((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, _GLF_IDENTITY(13744u, (13744u) + 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, _GLF_IDENTITY(116233u, (_GLF_IDENTITY(116233u, clamp(116233u, 116233u, _GLF_IDENTITY(116233u, 0u ^ (_GLF_IDENTITY(116233u, ~ (~ (116233u)))))))) ^ 0u), 13744u))))[2])), 0u + (~ (_GLF_FUZZED(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), clamp(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), max((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, _GLF_IDENTITY(13744u, (13744u) + 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, _GLF_IDENTITY(116233u, (_GLF_IDENTITY(116233u, clamp(116233u, 116233u, _GLF_IDENTITY(116233u, 0u ^ (116233u))))) ^ 0u), 13744u))))[2])))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / _GLF_IDENTITY(uvec4(188414u, 157870u, 116233u, 13744u), (uvec4(188414u, 157870u, 116233u, 13744u)) | uvec4(0u, 0u, 0u, 0u))), clamp((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, _GLF_IDENTITY(13744u, (13744u) + 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, _GLF_IDENTITY(116233u, (_GLF_IDENTITY(116233u, clamp(116233u, 116233u, _GLF_IDENTITY(116233u, 0u ^ (116233u))))) ^ 0u), 13744u)))), ~ (~ (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, 13744u)), clamp((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(_GLF_IDENTITY(188414u, _GLF_IDENTITY((188414u), ((188414u)) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) / 1u), 157870u, 116233u, 13744u)), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, 116233u, _GLF_IDENTITY(13744u, (13744u) + 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid / uvec4(188414u, 157870u, _GLF_IDENTITY(116233u, _GLF_IDENTITY((_GLF_IDENTITY(116233u, clamp(116233u, 116233u, _GLF_IDENTITY(116233u, 0u ^ (116233u))))), ((_GLF_IDENTITY(116233u, clamp(116233u, 116233u, _GLF_IDENTITY(116233u, 0u ^ (116233u)))))) << 0u) ^ 0u), 13744u)))))))[2])))))) : GLF_merged3_0_2_53_2_1_13_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnum_workgroupsubgroup_base.w));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.z = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.x;
 uint virtual_gid = GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid) ^ _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u), (_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, min((0u) - 0u, (0u) - 0u))) | ((0u) - 0u)))) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u)) | (uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u)))) | (uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u)))).z + _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz) / uvec3(1u, 1u, 1u)).z;
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.w = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.z, (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.z) >> (0u ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy.x = GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.w, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy.x = GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.w, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy.x = GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.w) | 0u)) | ((_GLF_IDENTITY(0u, (0u) | 0u) | 1u) ^ 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.w = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, clamp(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid))) + uvec4(0u, 0u, 0u, 0u)).xy.x;
 uint next_virtual_gid = GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.xy.y + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.z + ((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.z + 1) % GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.xy.y);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), (true && (false)) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.w], 4, 64, _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) - 0))));
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.x = read;
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.w = GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_base.x;
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid.z = GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_sizenum_workgroupread.w;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.y = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, max(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, clamp(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid) | uvec4(0u, 0u, 0u, 0u)), GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid)), _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, min(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, max(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid, GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basereadvirtual_gid)))))).z;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.z % 2) == 0, ! (! (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz.z % 2) == 0, ((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz, min(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz, uvec3(uvec4(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz, 1u))), GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_17subgroup_basesubgroup_idsubgroup_local_idnum_workgroup.xyz)).z % 2) == 0) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), true, true))))))) && true))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))) || false))))), true, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))), true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(606.233), _GLF_FUZZED((2.1 / -2.9))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.w, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.w) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.w))], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basevirtual_gid.y, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
