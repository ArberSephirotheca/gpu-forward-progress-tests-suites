#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true)), true && (bool(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true)), true && (bool(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(! (! ((false) || false)), ! (! (! (! ((false) || false)))))), true)))), false), true))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED((+ -4.8)), clamp(_GLF_FUZZED((+ -4.8)), _GLF_FUZZED((+ -4.8)), _GLF_IDENTITY(_GLF_FUZZED((+ -4.8)), float(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -4.8)), 0.0), (vec2(_GLF_FUZZED((+ -4.8)), 0.0)) / vec2(1.0, 1.0)))))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.0, 31.34)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 1u, 0u)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-863.308))))), clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), min(0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(0.0, 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), (0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -98.73))), float(0.0), bool(true))), 0.0 + (0.0)))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), transpose(transpose(mat4(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)))))), mat3(mat4x3(mat3(_GLF_IDENTITY(mat4(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, abs(0.0)), vec3(mat3x2(vec3(0.0, 0.0, abs(0.0)), 0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0)), transpose(transpose(mat4(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))))), 1.0, 0.0)), min(float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0))), clamp(max(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat2x4((0.0), cos(sin(0.0)), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), round(length(normalize(1.0))), 0.0)), mix(float(float(mat2x4((0.0), cos(sin(0.0)), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), round(length(normalize(1.0))), 0.0))), float(_GLF_FUZZED(169.198)), bool(false))))), _GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0))), float(mat2(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0))), (max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0 + (0.0)))) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0)))))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), max(0.0 + (0.0), 0.0 + (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0))))) : _GLF_FUZZED(5475.3041)))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3(mat3(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), mat3(mat4(mat3(mat3(mat3(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat4x3(dot(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED((_GLF_IDENTITY(-60.59, (true ? -60.59 : _GLF_FUZZED(max(5.4, 469.331)))) / -92.53))), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))), vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(35.83))), 1.0, 0.0)))), 0.0))) + _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 1.0, exp(0.0)), max(vec3((0.0), 1.0, exp(0.0)), vec3((0.0), 1.0, exp(0.0))))))), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), (float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(3.9)))) / 1.0), 0.0 + (0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0 + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (0.0)))), determinant(mat3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2942.3733) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2942.3733) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2942.3733) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2942.3733) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2942.3733) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0))), 1.0, 0.0))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(true))) && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)), false || ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(true))) && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)))), false, false))))))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))))) && (false)), (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.6)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min(_GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((injectionSwitch.y) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-33.22) : (injectionSwitch.y))) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * 1.0, ((injectionSwitch.y) * 1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((injectionSwitch.y) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min(_GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, 1.0 * ((injectionSwitch.y) * 1.0)))), _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min(_GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((injectionSwitch.y) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-33.22) : (injectionSwitch.y))) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * 1.0, ((injectionSwitch.y) * 1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(float(mat2x4((injectionSwitch.y) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(((+ -1836.6808) + 8.7))), float(float(mat2x4((injectionSwitch.y) * 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), bool(true)))))))))))) * 1.0)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat2x3((injectionSwitch) / vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat2x3((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat2x3((injectionSwitch) / vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0))))) / sqrt(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).y))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7586.6704)), bool(false))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7586.6704)), bool(false))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), min(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7586.6704)), bool(false))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7586.6704)), bool(false))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7586.6704)), bool(false))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), (vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7586.6704)), bool(false))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)) * vec2(1.0, 1.0))))), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(6.0))), injectionSwitch[1])).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.1, 4.1)))), injectionSwitch))))[0] : _GLF_FUZZED(6.0))), injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(6.0))), injectionSwitch[1])).y)) && true)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0)))).x)), 0u | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))) ^ (workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))))) : _GLF_FUZZED(subgroup_base), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))))) : _GLF_FUZZED(subgroup_base), 1u * (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))))) : _GLF_FUZZED(subgroup_base))), true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))))) : _GLF_FUZZED(subgroup_base), true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))))) : _GLF_FUZZED(subgroup_base))))))), (true ? max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) - 0u)), uint(0u)), max(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) - 0u)), uint(0u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) - 0u)), uint(0u))))))))) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size)))), 0u ^ ((_GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))))))), (0u | 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))))))), (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u))))))) | 0u)))) / 1u))))), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), ~ (~ (_GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size))))))), _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)), uint(0u))))))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) : _GLF_FUZZED(workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y)) : _GLF_FUZZED(409.088)))) / 1.0), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((float(65166) * -958.695))), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((float(65166) * -958.695))), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((float(65166) * -958.695))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((float(65166) * -958.695))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((float(65166) * -958.695))), float(injectionSwitch.y), bool(true)))))) - 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y)) : _GLF_FUZZED(409.088)), float(mat4x2(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y)) : _GLF_FUZZED(409.088)), mix(float((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y)) : _GLF_FUZZED(409.088))), float(_GLF_FUZZED(-30.75)), bool(false))), 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))) / 1.0)) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, ((0 | 0) | 0)), (ivec4(64, 0, 0, ((0 | 0) | 0))) >> (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0))))), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), uint(0u))))), max(uint(uvec3(subgroup_local_id % 2, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), (1u ^ 1u))), min(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), (1u ^ 1u))), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), (1u ^ 1u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_base) : 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u & 196554u) ^ (subgroup_local_id)) % 2, (subgroup_local_id % _GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) | 0u)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.1)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-3.6)), bool(false)))), bool(true))))), float(_GLF_FUZZED(1013.2180)), bool(_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))), max(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u, 1u), min(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_id))))), 1u, 0u, 1u)))))), uint(0u))))), uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2)), 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, (46621u & 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) | (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) + 0u)) | (subgroup_local_id % 2))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(subgroup_local_id % 2, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))), ~ (~ (~ (0u)))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(29.00)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), (0u ^ 0u), _GLF_IDENTITY(0u, (0u) / 1u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u)) | (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u), 0u))), uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u), ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-201.704)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), (0u ^ 0u), 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), ~ (~ (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u))))) * uvec4(1u, 1u, 1u, 1u)), (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), max((_GLF_IDENTITY(~ (0u), ~ (~ (_GLF_IDENTITY(~ (0u), min(_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u), ~ (0u))))))), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(7.7)))), (0u ^ 0u), 0u)) - uvec4(0u, 0u, 0u, 0u))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), max(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), max(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), _GLF_IDENTITY(0u, (0u) / 1u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u)), (false ? _GLF_FUZZED(uvec4(96602u, 175607u, 55211u, 115085u)) : (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u)))) | (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u), 0u))), uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))) - 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), max((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), max((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), max((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))) / 1u)) | 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u)) - uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), _GLF_IDENTITY(0u, (0u) / 1u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))) << 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-443.741)), bool(false)))), (false ? _GLF_FUZZED(30567u) : uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-443.741)), bool(false)))))), (0u ^ 0u), 0u)) | (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u), 0u))), uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), max(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u), (uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), max((_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), (_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 0u)) - uvec4(0u, 0u, 0u, 0u)))))) | 0u) : _GLF_FUZZED(subgroup_id)))) & 196554u) ^ (subgroup_local_id)) % 2, (subgroup_local_id % _GLF_IDENTITY(2, (2) + _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), 0 | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))))))) | 0u)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.4), min(_GLF_FUZZED(-0.4), _GLF_IDENTITY(_GLF_FUZZED(-0.4), clamp(_GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4)))))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.1)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.1)), float(injectionSwitch.y), bool(true)))) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(4.1, -1.3).x)), float(1.0), bool(true))))), float(_GLF_FUZZED(-3.6)), bool(false)))), bool(true))))), float(_GLF_IDENTITY(_GLF_FUZZED(1013.2180), float(mat2(_GLF_FUZZED(1013.2180), sqrt(1.0), 0.0, 1.0)))), bool(false)))))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) == _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY(0 | (~ (~ (0))), clamp(0 | (~ (~ _GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(ivec2((0), 1)))) | ((0))))))), _GLF_IDENTITY(0 | (~ (~ (0))), (true ? 0 | (~ (~ (0))) : _GLF_FUZZED(95386))), 0 | (~ (~ (0))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), clamp(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]))), min(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), clamp(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), clamp(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]))), min(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), clamp(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]))), vec2(mat2x4(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), clamp(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), clamp(true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, 818.194, -5992.7681)[1]))))))), true ? injectionSwitch : _GLF_FUZZED(mat3x2(-8485.2527, -333.356, 582.287, 806.968, _GLF_IDENTITY(818.194, min(818.194, 818.194)), -5992.7681)[1]))))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), (bool(bvec4(_GLF_DEAD(false), false, false, true))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.21)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.21)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.21)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.21)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY((_GLF_IDENTITY(false || (! (false)), true && (false || (_GLF_IDENTITY(! (false), true && (! (false))))))) && true, false || ((_GLF_IDENTITY(false || (! (false)), true && (false || (_GLF_IDENTITY(! (false), true && (! (false))))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), false || ((! (_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(false, ! (! (false))))), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false || (! (_GLF_IDENTITY(false, ! (! (false))))), false, true)), true), bvec2(bvec2(bvec2(bool(bvec3(false || (! (_GLF_IDENTITY(false, ! (! (false))))), false, true)), true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), bool(_GLF_IDENTITY(bool((! (_GLF_DEAD(false)))), true && (bool((! (_GLF_DEAD(false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), true)))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false)))))))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
