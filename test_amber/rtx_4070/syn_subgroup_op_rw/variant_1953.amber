#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 uvec2 _f0;
 bvec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_29 {
 uint workgroup_id;
 mat3 _f0;
} ;

struct _GLF_struct_28 {
 uint _f0;
 mat2x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_26 {
 uint _f0;
 mat4 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 ivec2 _f4;
 mat3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_25 {
 ivec2 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 uint _f4;
 mat3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_31 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 bvec3 _f2;
 _GLF_struct_27 _f3;
 _GLF_struct_28 _f4;
 _GLF_struct_29 _f5;
 _GLF_struct_30 _f6;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 mat3x2 _f1;
 mat3 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_24 _f0;
 _GLF_struct_31 _f1;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 vec4 _f3;
 int _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
 uvec2 _f1;
 ivec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 vec2 _f3;
 bvec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 bvec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 mat4x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 bvec3 _f1;
 uint _f2;
 mat2x4 _f3;
 bool _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 mat4x2 _f1;
 _GLF_struct_14 _f2;
 mat3 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 bool _f3;
 vec4 _f4;
 float _f5;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 mat4 _f1;
 mat4x3 _f2;
 int _f3;
 mat2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat4x3 _f1;
 mat2 _f2;
 mat3x4 _f3;
 mat2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 _GLF_struct_7 _f1;
 int _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_17 _f3;
 uint next_virtual_gid;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_3 {
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 mat3 _f1;
 float _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_5 {
 uint workgroup_base;
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat4x2 _f2;
 _GLF_struct_3 _f3;
 ivec3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 vec2 _f1;
 _GLF_struct_5 _f2;
 mat4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 vec2 _f1;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), ! (! (_GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec2(bool(bvec2(true, false)), true)))))), ! (! (bool(bvec2(true, false))))))), vec2(1.0), gl_SubgroupID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch))[0], injectionSwitch[1])).y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_24(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, (1) / 1))) - _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) - ivec2(0, 0)), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), min((ivec2(1)), (ivec2(1)))) - ivec2(0, 0)), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)))))))))) / ivec2(1, 1)), mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(997.536)), bool(false)))), mat3(1.0), _GLF_struct_22(vec4(1.0)), _GLF_struct_23(uvec4(1u))), _GLF_struct_31(_GLF_struct_25(ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, (1) | (1))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, 1))))))), bvec3(true), mat2x4(1.0), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0))), _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (_GLF_IDENTITY(true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-0.0), min(true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-0.0), true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-0.0))))))), (false ? _GLF_FUZZED(-94.50) : _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-0.0)))))))), injectionSwitch.y))), mat3(1.0), mat2(1.0)), _GLF_struct_26(1u, mat4(1.0), ivec2(_GLF_IDENTITY(1, 0 | (1))), mat3x4(1.0), _GLF_IDENTITY(ivec2(1), ivec2(ivec3(ivec2(1), int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, length(log(vec2(1.0, 1.0))) + (0.0)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395)))), bool(false)), min(mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395))), min(_GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395))), _GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395)))))), bool(false)), mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395))), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395))), max(_GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395))), _GLF_FUZZED(_GLF_IDENTITY(651.395, (false ? _GLF_FUZZED(exp(-0.0)) : 651.395)))))))), bool(false))))), injectionSwitch.x))))), mat3(1.0), ivec2(_GLF_IDENTITY(1, (1) ^ 0))), bvec3(true), _GLF_struct_27(vec4(1.0), vec4(1.0)), _GLF_struct_28(1u, mat2x4(1.0), ivec2(1)), _GLF_struct_29(gl_WorkGroupID.x, mat3(1.0)), _GLF_struct_30(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u))))) | (uvec2(1u))), bvec2(true), uvec2(1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0), vec2(mat2(vec2(1.0), 0.0, 0.0))), _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), uint(uvec2(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), 1u))) * _GLF_struct_replacement_32._f1._f5.workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size * _GLF_struct_replacement_32._f1._f5.workgroup_id)), _GLF_struct_1(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id))))))), 0u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id))))))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id))))))), 0u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id))))))), 0u)))))), mat3(1.0), 1.0, uvec2(1u)), _GLF_struct_2(ivec4(_GLF_IDENTITY(1, max(1, 1))), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(5540.7286) : 1.0), max((false ? _GLF_FUZZED(5540.7286) : 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(5540.7286) : 1.0), (false ? _GLF_FUZZED(5025.2255) : _GLF_IDENTITY((false ? _GLF_FUZZED(5540.7286) : 1.0), max((false ? _GLF_FUZZED(5540.7286) : 1.0), (false ? _GLF_FUZZED(5540.7286) : 1.0))))))))) / determinant(mat4(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3901.2409)), float(0.0), bool(true))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0 * (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sin(tan(0.0)), determinant(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), min(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sin(tan(0.0)), determinant(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sin(tan(0.0)), determinant(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), 0.0), vec3(0.0, 1.0, 0.0))))))), 0.0, log(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))), bvec4(true), bvec2(true)), mat4x2(1.0), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-141.747, (false ? _GLF_FUZZED(4267.1588) : -141.747))) : 1.0))) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED((-7.4 * floor(-9.8))), min(_GLF_IDENTITY(_GLF_FUZZED((-7.4 * floor(-9.8))), clamp(_GLF_FUZZED((-7.4 * floor(-9.8))), _GLF_FUZZED((-7.4 * floor(-9.8))), _GLF_FUZZED((-7.4 * floor(-9.8))))), _GLF_FUZZED((-7.4 * floor(-9.8))))))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), float(float(_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-141.747) : 1.0))) / 1.0) : _GLF_FUZZED((-7.4 * floor(-9.8))))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.9)))), float(mat2x4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0))), float(_GLF_FUZZED(-63.01)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0))), float(_GLF_FUZZED(-63.01)), bool(false))), float(_GLF_FUZZED((true ? 71.23 : 9003.2638))), bool(false)))), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8600.1285) : 1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(22.13)))), sqrt(1.0), 0.0, 1.0, tan(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), float(vec3(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0))), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.9)))), (true ? max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-5249.9386, min(-5249.9386, -5249.9386)))), bool(false))), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(343.104))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4011.4971))), 0.0, 1.0, 1.0)))))))), (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(343.104))), 1.0)), mix(float(_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(343.104))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(343.104))), 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(343.104))), 1.0))))), float(_GLF_FUZZED(722.068)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)))))))), clamp(_GLF_IDENTITY(float(mat4x2(1.0, _GLF_IDENTITY(1.0, log(1.0) + _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), ((1.0)) * 1.0)), float(_GLF_FUZZED((+ -54.70))), bool(false)))), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(343.104))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(float(mat4x2(1.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(343.104))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(float(mat4x2(1.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), min(float(mat4x2(1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(887.460) : 0.0)), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(5.7)), bool(false))), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5249.9386)), bool(false))), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(343.104))), 1.0)), min(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0), (mat3x4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))), 1.0)), float(mat4x2(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0))))))))))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(-9.9)))) : _GLF_FUZZED(-450.305))), 0.0, 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)))), 0.0, 1.0, tan(length(_GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))))), 0.0)))), ivec2(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))), ivec3(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ~ (~ ((_GLF_IDENTITY(1, (1) << 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), max((_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(1, (1) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), min((_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(1, (1) << 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), max((_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(1, (1) << 0)))))), min(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ ((1))), (~ (~ ((1)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ ((1))), (~ (~ ((1)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0))), (1))))), _GLF_struct_4(ivec4(1), mat2(1.0), mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(-110.317), max(_GLF_IDENTITY(_GLF_FUZZED(-110.317), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(-110.317)) * 1.0, clamp((_GLF_IDENTITY(_GLF_FUZZED(-110.317), float(mat4x2(_GLF_FUZZED(-110.317), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0)))) * 1.0, _GLF_IDENTITY((_GLF_FUZZED(-110.317)) * 1.0, (_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-110.317, max(-110.317, -110.317)))) * 1.0, min((_GLF_IDENTITY(_GLF_FUZZED(-110.317), (false ? _GLF_FUZZED(-8.1) : _GLF_FUZZED(-110.317)))) * 1.0, (_GLF_FUZZED(-110.317)) * 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(-110.317)) * 1.0, ((_GLF_FUZZED(-110.317)) * 1.0) - 0.0), mix(float(_GLF_IDENTITY((_GLF_FUZZED(-110.317)) * 1.0, ((_GLF_FUZZED(-110.317)) * 1.0) - 0.0)), float(_GLF_FUZZED((vec2(3.8, 5.2) + 0.9).g)), bool(false))))), (_GLF_IDENTITY((_GLF_FUZZED(-110.317)) * 1.0, clamp((_GLF_FUZZED(-110.317)) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(-110.317)), mix(float(_GLF_FUZZED((29.36 / 830.916))), float((_GLF_FUZZED(-110.317))), bool(true))) * 1.0, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0, min(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0, min((_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0, (_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0)), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0, clamp((_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0, (_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0, (_GLF_FUZZED(_GLF_IDENTITY(-110.317, (-110.317) - 0.0))) * 1.0)))), min((_GLF_IDENTITY(_GLF_FUZZED(-110.317), mix(float(_GLF_FUZZED(-110.317)), _GLF_IDENTITY(float(_GLF_FUZZED(-3.7)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-3.7)), float(mat4x3(float(_GLF_FUZZED(-3.7)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-3.7)))), bool(false)))) * 1.0, (_GLF_FUZZED(-110.317)) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) + 0.0), _GLF_IDENTITY((_GLF_FUZZED(-110.317)) * 1.0, ((_GLF_FUZZED(-110.317)) * 1.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))))) / determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(-110.317), max(_GLF_FUZZED(-110.317), _GLF_FUZZED(-110.317))))) : 1.0))))))), mat4(1.0), mat3x2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false))))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(669.409, 357.269)), mix(vec2(_GLF_FUZZED(90.70), _GLF_FUZZED(-658.172)), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(669.409, 357.269)))[0], (true ? injectionSwitch : _GLF_FUZZED(vec2(669.409, 357.269)))[1]), bvec2(true, true))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 0.0, 1.0))), injectionSwitch.y)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false))), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! (bool(bool(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))), ! (! ((bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! (bool(bool(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))))))))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_6._f2.workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_10(mat2(1.0), _GLF_struct_7(_GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(57333, 30930, -63261)) : ivec3(1))), ~ (_GLF_IDENTITY(~ (ivec3(1)), (~ (ivec3(1))) / ivec3(1, 1, 1)))), ivec3(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) / 1)))))), mat2x3(1.0), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u))) * (uvec4(1u, 1u, 1u, 1u) | (uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)))) - uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) | (1u))))))), ivec3(1)), 1, _GLF_struct_8(true, mat4x3(1.0), mat2(1.0), mat3x4(1.0), mat2(1.0), vec3(1.0)), _GLF_struct_9(vec4(1.0), mat4(1.0), mat4x3(1.0), 1, mat2(1.0), mat4(1.0)), mat3x2(1.0)), _GLF_struct_11(ivec3(1)), _GLF_struct_12(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - (_GLF_IDENTITY(uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u)))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) << _GLF_IDENTITY(uint(0u), uint(0u))))), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) << _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(0u)))))) / 1u), uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) << _GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))), ~ (~ ((_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u))))))) | (uvec2(0u)))), ~ (~ (_GLF_IDENTITY(uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) << _GLF_IDENTITY(uint(0u), uint(0u)))))) | (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))))))), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u))), ~ (~ (_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))))))))) | (uvec2(0u)))), clamp(uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, 0u)) | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))))), (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) | (uint(uvec4(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))))))), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))), ~ (~ ((_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u))))))) | (uvec2(0u)))), uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_size) : uint(0u))))), uint(0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))))) | (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))))))), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))), ~ (~ ((_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(~ (~ (uvec2(0u))), min(~ (~ (uvec2(0u))), ~ (~ (uvec2(0u)))))), uvec2(0u))))))) | (uvec2(0u)))), uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(uvec2(0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-9.7))), 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), uint(0u))))))))), (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))), max(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))))))))), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))), ~ (~ ((_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) >> 0u)))))))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) >> 0u)))))))), 1u, 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))) << uvec4(0u, 0u, 0u, 0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u), (uvec2(0u)) | (uvec2(0u))), ~ (~ (uvec2(0u)))), ~ (~ (_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u)))) * 1u)))))))), uvec2(0u)))), ~ (~ ((_GLF_IDENTITY(uvec2(0u), min(_GLF_IDENTITY(uvec2(0u), ~ (~ (uvec2(0u)))), uvec2(0u)))))))))) | (uvec2(0u))))))))))), mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), true, _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2(vec4(1.0)), transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(vec4(1.0))), transpose(transpose(transpose(mat2(vec4(1.0)))))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(transpose(mat2(vec4(1.0))), transpose(transpose(transpose(mat2(vec4(1.0))))))), (true ? mat2x4(_GLF_IDENTITY(transpose(mat2(vec4(1.0))), transpose(transpose(transpose(mat2(vec4(1.0))))))) : _GLF_FUZZED(mat2x4(332.377, -3.4, -789.279, 9.2, 597.985, -7.6, -109.553, 150.110)))))), mat2(mat2x3(transpose(mat2(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(mat2(vec4(1.0)), transpose(_GLF_IDENTITY(transpose(mat2(vec4(1.0))), mat2(mat2x3(transpose(mat2(vec4(1.0)))))))))))))), 1.0), _GLF_struct_17(_GLF_struct_13(ivec4(_GLF_IDENTITY(1, max(1, 1))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))), 1u, mat2x4(1.0), true), mat4x2(1.0), _GLF_struct_14(uvec3(1u)), mat3(1.0), _GLF_struct_15(mat3x4(1.0), mat4x2(1.0), uvec4(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))), _GLF_struct_16(mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(9.3)), float(float(1.0)), _GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (bool(true)) && true)))))), float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * 1.0)), clamp(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * 1.0)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * 1.0)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * 1.0)))))), float(_GLF_FUZZED(-75.15)), bool(false)))), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), max(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec3(_GLF_IDENTITY(1, (1) + 0), (1 & 1), 0)))) | (1)), clamp(1, 1, 1)))) | (ivec4(1))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), ((_GLF_IDENTITY(1, (1) + 0)) | (1)) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (1)))), clamp(1, 1, 1)))) | (ivec4(1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1)), clamp(1, 1, 1)))) | (ivec4(1)))) >> ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(87864, -6644, -69128, 45062))), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), ((_GLF_IDENTITY(1, (1) + 0)) | (1)) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (1)))), clamp(1, 1, 1)))) | (ivec4(1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1)), clamp(1, 1, 1)))) | (ivec4(1)))) >> ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(87864, -6644, -69128, 45062))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), ((_GLF_IDENTITY(1, (1) + 0)) | (1)) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (1)))), clamp(1, 1, 1)))) | (ivec4(1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1)), clamp(1, 1, 1)))) | (ivec4(1)))) >> ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(87864, -6644, -69128, 45062)))) >> ivec4(0, 0, 0, 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), ((_GLF_IDENTITY(1, (1) + 0)) | (1)) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (1)))), clamp(1, 1, 1)))) | (ivec4(1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1)), clamp(1, 1, 1)))) | (ivec4(1)))) >> ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(87864, -6644, -69128, 45062))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) | (1), ((_GLF_IDENTITY(1, (1) + 0)) | (1)) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (1)))), clamp(1, 1, 1)))) | (ivec4(1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1)))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1)), clamp(1, 1, 1)))) | (ivec4(1)))) >> ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(87864, -6644, -69128, 45062))))))))), mat2x3(1.0)), _GLF_struct_replacement_6._f2.workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_local_id + 1))) % subgroup_size), _GLF_struct_20(mat3x4(1.0), _GLF_struct_18(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), ~ (~ (uvec2(_GLF_IDENTITY(1u, min(1u, 1u)))))), uvec2(1u), ivec2(1), mat4(1.0)), _GLF_struct_19(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | ((uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u)), ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 | (1))) | (1)) : _GLF_FUZZED(80421)))), mat2x3(1.0), vec4(1.0), 1, ivec2(1)), _GLF_IDENTITY(vec2(1.0), vec2(mat4x3(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(vec2(-5.3, -4959.6567)) : _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))))), log(1.0), 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(15.63)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), injectionSwitch.y)))), bvec4(true), ivec4(1)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(num_workgroup) : virtual_gid))])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid]), (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) | ((buf[virtual_gid]))), clamp(~ _GLF_IDENTITY((buf[virtual_gid]), (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) | ((buf[virtual_gid]))), ~ _GLF_IDENTITY((buf[virtual_gid]), (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) | ((buf[virtual_gid]))), ~ _GLF_IDENTITY((buf[virtual_gid]), (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) | ((buf[virtual_gid]))))))), buf[virtual_gid])), max(buf[virtual_gid], buf[virtual_gid])))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))))))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(76.75), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(99.90)), bvec2(true, false))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY(0u, (0u) / 1u) | (_GLF_IDENTITY(1u * (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY(uint(uvec3(1u * (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)) << 0u), (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u) : _GLF_FUZZED(read))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u))), 0u)), min(uint(_GLF_IDENTITY(uvec3(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_21.next_virtual_gid)), min(_GLF_IDENTITY(~ ((_GLF_struct_replacement_21.next_virtual_gid)), 0u | (~ ((_GLF_struct_replacement_21.next_virtual_gid)))), _GLF_IDENTITY(~ ((_GLF_struct_replacement_21.next_virtual_gid)), (~ ((_GLF_struct_replacement_21.next_virtual_gid))) >> 0u))))))), 1u, 0u), max(uvec3(1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ((_GLF_struct_replacement_21.next_virtual_gid)) ^ 0u), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), clamp(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), 1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), max(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), min(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), 1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))))))))), 1u, 0u), (false ? _GLF_FUZZED(uvec3(152233u, 199880u, 130286u)) : uvec3(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) << 0u))))), (_GLF_IDENTITY(uvec3(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY(clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid))))), ~ (~ (clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid))))))))), 1u, 0u), (false ? _GLF_FUZZED(uvec3(152233u, 199880u, 130286u)) : uvec3(1u * _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), clamp((_GLF_struct_replacement_21.next_virtual_gid), (_GLF_struct_replacement_21.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21.next_virtual_gid), ~ (~ ((_GLF_struct_replacement_21.next_virtual_gid)))))), 1u, _GLF_IDENTITY(0u, 0u | (0u)))))) ^ uvec3(0u, 0u, 0u))))), uint(uvec3(_GLF_IDENTITY(1u * (_GLF_struct_replacement_21.next_virtual_gid), (false ? _GLF_FUZZED((workgroup_size --)) : 1u * (_GLF_struct_replacement_21.next_virtual_gid))), 1u, 0u)))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, (_GLF_struct_replacement_21.next_virtual_gid) | (_GLF_struct_replacement_21.next_virtual_gid)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, (_GLF_struct_replacement_21.next_virtual_gid) | (_GLF_struct_replacement_21.next_virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, (_GLF_struct_replacement_21.next_virtual_gid) | (_GLF_struct_replacement_21.next_virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY(~ (_GLF_FUZZED(num_workgroup)), (~ (_GLF_FUZZED(num_workgroup))) - 0u)) / 1u)))) ^ 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY(~ (_GLF_FUZZED(num_workgroup)), (~ (_GLF_FUZZED(num_workgroup))) - 0u)) / 1u)))) ^ 0u) : _GLF_FUZZED(subgroup_size)))))) - 0u)))))) << 0u) : _GLF_FUZZED(workgroup_size)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) | (1))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | ((4))) ^ 0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(517.286))), injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) * 1u) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) * 1u) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) * 1u) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) / 1u)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) * 1u) < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) | (subgroup_size)), subgroup_size)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) * 1u) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) * 1u) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(subgroup_size)))))], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84744) : 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(431.864)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true)))), bool(true)))) - 0.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.7)), bool(false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false))))))))), true, false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec4(0.0, 1.0, 1.0, 0.0))), abs(1.0), log(1.0), 1.0)), mix(float(_GLF_FUZZED(-79.63)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(4.2))), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), abs(1.0), log(1.0), 1.0))), bool(true)))) < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), float(mat3x4(1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, log(1.0), 0.0)))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x : _GLF_FUZZED(1353.5154))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, bool(bool(true))))), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, bool(bool(true))))), false, true)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) + vec2(0.0, 0.0)), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) + vec2(0.0, 0.0)), vec2(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (_GLF_IDENTITY(! (false), false || (! (false))))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(-448.317)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(-448.317)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y) && true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED((+ injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED((+ injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false || ((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, log(1.0)))), injectionSwitch.y)))))) || (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)))) > injectionSwitch.y)) || (false))))))), _GLF_IDENTITY(false, ! (! (false))), true, false))) && true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec3((_GLF_DEAD(false)) && true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true) || false), true && (true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false))))) && true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
