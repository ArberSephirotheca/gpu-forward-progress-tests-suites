#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true && ((! (_GLF_DEAD(false))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)), true && ((! (_GLF_DEAD(false)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))) && true), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false || (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), true, false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)))), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false))))))))))))))))) || false)))))) || false)), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), bool(bvec2((! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))))), 1.0), transpose(transpose(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))))), 1.0)))))).y)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), (bool(_GLF_IDENTITY(bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.x = _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), subgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))), max(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.3))))), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_NumWorkGroups.x)))), uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(sqrt(1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0), (mat4(0.0, 1.0, 0.0, 1.0, 0.0, sqrt(sqrt(1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), injectionSwitch.x)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 1u))))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-54.12)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-925.888), (_GLF_FUZZED(-925.888)) - 0.0), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-925.888), (_GLF_FUZZED(-925.888)) - 0.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-925.888), (_GLF_FUZZED(-925.888)) - 0.0), (injectionSwitch)[1]))), bvec2(false, true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(sqrt(1.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) ^ 0u))))), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0))))).x)), 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size), (_GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size)) + uvec4(0u, 0u, 0u, 0u)) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))))), (max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-11.76)), bool(false)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u) / 1u))))), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))).x)), 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 0u)))), 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) | _GLF_IDENTITY((uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), clamp((uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0u)), (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x)), 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) : _GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u, 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u, 0u)))), 0u) | (uvec4(gl_NumWorkGroups.x, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0u))))))))) << (1u ^ 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), clamp((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), uvec3(1u))) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) + _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize))))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))) || false))), true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w = workgroup_size;
 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, _GLF_IDENTITY(uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), 1u, 1u)), _GLF_IDENTITY((uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, 0u, 1u, 1u))) ^ 0u, ((uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, 0u, 1u, 1u))) ^ 0u) | (_GLF_IDENTITY((uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, 0u, 1u, 1u))) ^ 0u, ((_GLF_IDENTITY(uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, 0u, 1u, 1u)), ~ (~ (uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, 0u, 1u, 1u)))))) ^ 0u) * 1u))))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, min(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w, (1u ^ 1u) ^ (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))))))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))))))), false, false, true))) && true)) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))).x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)), true, false, false))))))) && true)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))), bool(bvec2(bool(bvec2(! (! (false)), _GLF_IDENTITY(false, true && (false)))), false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(53920u, 98705u, 34467u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_base = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.z * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) | (workgroup_base)) + GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.x * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z = virtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z = virtual_gid) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false))), bool(bool(! (! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)))))))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), bool(bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), false), true, true))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))), _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(true, false || (true)), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), _GLF_IDENTITY(bool(bvec3(((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), false, false)), true && (bool(bvec3((_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))) || false)))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))) || false)))), true), bvec2(bvec4(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))) || false)))), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false))))) && true))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), false || (((! (false))))) || false))))))), false, false, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-811.912)), bool(false)))), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))) && true), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))))))), false, true, false))) && true), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, true, false))) && true), true), false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)).y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false))), true && (bool(bool(_GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size, clamp(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size, GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size, GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size)))), ~ _GLF_IDENTITY((~ (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size)), uvec3(0u, 0u, 0u) | ((~ (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size))))).x * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false))), false))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false))), false))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false))), false))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false, false, false)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false))), false))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false, false, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8813.7210)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-4.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8813.7210)), bvec2(true, false))).y), bool(true))))))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(372.539)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-6.1, 5.9).y)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_FUZZED(93.94), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat2(1.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(93.94, min(93.94, 93.94))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) * mat2(1.0))[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_FUZZED(_GLF_IDENTITY(-0.0, (-0.0) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), bvec2(true, _GLF_IDENTITY(false, (false) && true)))))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2008.6967), float(float(_GLF_FUZZED(-2008.6967)))), min(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-2008.6967))), _GLF_IDENTITY(_GLF_FUZZED(-48.45), (_GLF_FUZZED(-48.45)) - 0.0)), bvec2(false, false))) : _GLF_FUZZED(refract(injectionSwitch, vec2(_GLF_IDENTITY(6.3, (6.3) * 1.0), 856.908), -4776.8184)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-5095.3647), _GLF_FUZZED(-177.677)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-5095.3647), _GLF_FUZZED(-177.677)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1]), (false ? _GLF_FUZZED(vec2(1233.4610, 1.9)) : vec2(_GLF_FUZZED(93.94), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-5095.3647), _GLF_FUZZED(-177.677)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1])))) + sin(vec2(0.0, 0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-0.0, 0.0 + (-0.0)))), bvec2(true, false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec3((true), false, true)))) || _GLF_IDENTITY(false, (false) || false))) && (true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))), false))), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED((73.66 - -8366.1108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, (0) << 0)))], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), min(vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED((73.66 - -8366.1108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED((73.66 - -8366.1108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false)))) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED((73.66 - -8366.1108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7291.8353) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(584.265)), float(injectionSwitch.y), bool(true))))))), false))), mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false)))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED((73.66 - -8366.1108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7291.8353) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(584.265)), float(injectionSwitch.y), bool(true))))))), false))), mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))[1]))), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false)), (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(93.94), (_GLF_FUZZED(93.94)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), (false ? _GLF_FUZZED(vec2(35.45, 5.7)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)) : _GLF_FUZZED(vec2(4.7, 6.4)))))), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false))) + vec2(0.0, 0.0)))[0], _GLF_IDENTITY((mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false)))[1], float(mat2x4((mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false)))[1], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 1.0)))), mat2(1.0) * (vec2((_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false)), (mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(93.94), (_GLF_FUZZED(93.94)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), (false ? _GLF_FUZZED(vec2(35.45, 5.7)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)) : _GLF_FUZZED(vec2(4.7, 6.4)))))), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false))) + vec2(0.0, 0.0)))[0], _GLF_IDENTITY((mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-624.906), _GLF_FUZZED(8607.2454)), vec2((vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false)))[1], float(mat2x4((mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_FUZZED(-48.45)), bvec2(false, false)))[1], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 1.0)))))), vec2(_GLF_FUZZED(734.040), _GLF_FUZZED(-4245.7649)), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false)))) : _GLF_FUZZED(refract(injectionSwitch, vec2(6.3, 856.908), -4776.8184)))))[_GLF_IDENTITY(0, 1 * (0))], _GLF_FUZZED((-9.5 / 22.96))), vec2(_GLF_FUZZED(86.50), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(93.94), 1.0 * (_GLF_FUZZED(93.94))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(6.5), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(93.94), (false ? _GLF_FUZZED(635.905) : _GLF_IDENTITY(_GLF_FUZZED(93.94), min(_GLF_IDENTITY(_GLF_FUZZED(93.94), min(_GLF_FUZZED(93.94), _GLF_FUZZED(93.94))), _GLF_FUZZED(93.94))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[0], _GLF_FUZZED(-4.3)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(93.94), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true, ! (! (true))) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-2008.6967), _GLF_IDENTITY(_GLF_FUZZED(-48.45), clamp(_GLF_FUZZED(-48.45), _GLF_IDENTITY(_GLF_FUZZED(-48.45), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-48.45, float(mat4x2(_GLF_IDENTITY(-48.45, mix(float(_GLF_FUZZED(74.60)), float(_GLF_IDENTITY(-48.45, 1.0 * (-48.45))), bool(true))), 1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, tan(0.0))), 0.0, log(1.0), 1.0, 1.0))))), float(_GLF_FUZZED(195.750)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-48.45), clamp(_GLF_FUZZED(-48.45), _GLF_FUZZED(-48.45), _GLF_FUZZED(-48.45)))))), bvec2(_GLF_IDENTITY(false, false || (false)), false))) : _GLF_FUZZED(refract(injectionSwitch, vec2(6.3, 856.908), -4776.8184)))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y, uint(_GLF_IDENTITY(uint(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y), (true ? uint(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y) : _GLF_FUZZED(atomicCompSwap(subgroup_id, next_virtual_gid, 63624u))))))], 4, 64, 0);
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read, ~ (~ _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read), ((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read)) | 0u)))) >> (0u ^ 0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), max(0u, 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) - 0, ~ (~ ((_GLF_IDENTITY(4, max(4, 4))) - 0))))), min((_GLF_IDENTITY(4, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), clamp(~ ((0)), ~ ((0)), _GLF_IDENTITY(~ ((0)), ~ (~ (~ ((0))))))))) | (0)) | (4))), (4))) - 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id))) : subgroup_local_id))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y) >> 0u), clamp(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y))) ^ _GLF_IDENTITY((0u | 0u), ((0u | _GLF_IDENTITY(0u, 0u ^ (0u)))) >> 0u)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ((64) | (64)) << 0)), (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64)))))) << 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y, (true ? _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y, clamp(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y, (GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y) | 0u), GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y, GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size.y)) : _GLF_FUZZED(atomicXor(workgroup_base, next_virtual_gid))))], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true)))), ! (! (! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))))))))))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
