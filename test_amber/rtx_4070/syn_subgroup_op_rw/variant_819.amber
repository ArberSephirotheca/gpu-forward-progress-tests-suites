#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), false || (true && (false)))))))) && true)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))) || false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), _GLF_IDENTITY(false, true && (false)) || (false)), bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (false ? _GLF_FUZZED(5.9) : max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(clamp(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(clamp(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), clamp(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))))).y, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-7.5, -243.378, -6.7, -7262.0935, -3093.0852, -6.0, 9.5, 9.0, -6.4))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) : _GLF_FUZZED(77.98)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, true, false)), (bool(bvec4(false || (false), false, true, false))) && true))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / round(length(normalize(1.0))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) << 0u)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(169652u))), min(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), false, false), false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true)))))) || false))) || false) ? (subgroup_local_id) : _GLF_FUZZED(169652u))), _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(169652u)))))))), min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(169652u))), min(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? (subgroup_local_id) : _GLF_FUZZED(169652u))), _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(169652u)))))))), workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), clamp(1u * (subgroup_base), 1u * (subgroup_base), 1u * (subgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(169652u), 0u + (_GLF_IDENTITY(_GLF_FUZZED(169652u), 0u | (_GLF_FUZZED(169652u))))), (_GLF_IDENTITY(_GLF_FUZZED(169652u), 0u + (_GLF_IDENTITY(_GLF_FUZZED(169652u), 0u | (_GLF_FUZZED(169652u)))))) | (_GLF_IDENTITY(_GLF_FUZZED(169652u), 0u + (_GLF_IDENTITY(_GLF_FUZZED(169652u), 0u | (_GLF_FUZZED(169652u))))))))), min(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(169652u))), _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(169652u), (_GLF_IDENTITY(_GLF_FUZZED(169652u), (_GLF_FUZZED(169652u)) - 0u)) / 1u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6839.5375)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-6540.8114)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), vec2(_GLF_FUZZED(3644.4208), _GLF_FUZZED(0.2)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), mix(vec2(_GLF_FUZZED(6211.5058), _GLF_FUZZED((false ? 1.0 : -184.499))), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))))[0], (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-85.17), mix(float(_GLF_FUZZED(float(35903u))), float(_GLF_FUZZED(-85.17)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(980.365)), bool(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-85.17), (_GLF_FUZZED(-85.17)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), (mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)), _GLF_IDENTITY(min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))))), (min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))))) / vec2(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), (float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), (vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y)))))))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0]))), float(_GLF_FUZZED(2791.8924)), bool(false))), _GLF_FUZZED(-8856.3009)), vec2(_GLF_FUZZED(5545.0093), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), (vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y)))))))) - vec2(0.0, 0.0)), bvec2(false, _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, min(1, 1)))))], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), min(mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)), min((true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)), _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)), 1.0 * ((true ? (injectionSwitch)[1] : _GLF_FUZZED(-0.5)))))))), vec2(_GLF_FUZZED(0.7), _GLF_IDENTITY(_GLF_FUZZED(-85.17), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(_GLF_FUZZED(-85.17), _GLF_ONE(1.0, injectionSwitch.y))))))), bvec2(false, _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true, false), true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(float(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(0.4)), bool(false)))) * 1.0)))), 0.0 + (injectionSwitch[1])), injectionSwitch[1])))))).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_IDENTITY(true, (true) || false), false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false)))), float(_GLF_FUZZED(-7.2)), bool(false))), 1.0))), (false ? _GLF_FUZZED(3.5) : _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false)))) * 1.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false)))), float(_GLF_FUZZED(-7.2)), bool(false))), 1.0)))))))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED((num_workgroup * workgroup_size))), ((true ? subgroup_local_id + 1 : _GLF_FUZZED((num_workgroup * workgroup_size)))) ^ 0u)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(176123u) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))), subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) / 1u), 0u + (2u))), _GLF_IDENTITY(uint(2u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(next_virtual_gid) : uint(2u))))))))], ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))))], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))))]))), min(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))))], buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))))]))))), 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! _GLF_IDENTITY((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, ~ (~ (2))), 2)), 0, 0)), (int(ivec3(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, ~ (~ (2))), 2)), 0, 0))) / 1))), max(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))))) == 0, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))) == 0) && true, bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 1u), max(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 1u))))) % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false)))))), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) % 2) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false))))))) && true)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false)))))), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) / 1u)) << 0u) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false))))))) && true)))), ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) * 1u) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && (false))) && true, false)))))), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) / 1u)) << 0u) == 0) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), false || (((subgroup_local_id % 2) == 0)))) || _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) && true, false))))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), max(_GLF_IDENTITY((subgroup_local_id % 2), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) % 2)))), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))))) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) == 0) && true)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY(bool(bool((subgroup_local_id % _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-48650)))) == 0)), (bool(bool((subgroup_local_id % 2) == 0))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), max(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))), max((subgroup_local_id % 2), (subgroup_local_id % 2))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) - (0 | 0))), min((subgroup_local_id % 2), (subgroup_local_id % 2))))), (true ? _GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), min(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) | (ivec2(2, 1))), ivec2(2, 1))))), 2))), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))) : _GLF_FUZZED(subgroup_id))))) == 0, ((subgroup_local_id % 2) == 0) && true))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.6))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) >> (91098u & 0u)), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), max(4, 4)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), max(4, 4))))))))), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 + (4))))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))).x < injectionSwitch.y)), false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) - log(vec2(1.0, 1.0)))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && true)) || _GLF_IDENTITY(false, (false) || false)), true && (injectionSwitch.x < injectionSwitch.y))) || false))) && (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 1.0, 1.0, sqrt(1.0)), mat3(mat4x3(mat3(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 1.0, 1.0, sqrt(1.0)))))))), float(_GLF_FUZZED((124.797 + -7.3))), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(_GLF_IDENTITY(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))), true, true))), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))), true, true))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))), true, true))), false, true))), bool(bvec3(! (bool(bvec3(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))), true, true))), false, true))), false, false))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.3))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, length(0.0))), 0.0)), mix(vec2(_GLF_FUZZED(9.4), (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, length(0.0))), 0.0)), vec2(1.0, 1.0) * (vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, length(0.0))), 0.0)))))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (true ? ~ (~ (1)) : _GLF_FUZZED(-45312))))))]), vec2((vec2(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), abs(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, length(0.0))), 0.0)))[0], _GLF_FUZZED(367.271)), bvec2(true, false)))).y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))) || false)) || false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(bvec3((false), true, false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), false, false)), bool(bvec3(bool(bvec3(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), false, false)), false, false))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), false, false)), bool(bvec3(bool(bvec3(! (bool(_GLF_IDENTITY(! (false), false || (! (false))))), false, false)), false, false)))))) || false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false)))))))))))))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), true && (_GLF_IDENTITY(! (false), false || (! (false)))))))))))) || false)))), true, true))))))))))))), bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(bvec3((false), true, false)))))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false)))))))))))))), true, true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(! (false), false || (! (false)))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(! (false), false || (! (false)))), true, true)), bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(! (false), false || (! (false)))), true, true))))))))), ! (! (bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (! (false)))))))))))), true, true))))))))))))), false))))) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.4), _GLF_FUZZED(525.766)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (_GLF_IDENTITY(true ? (injectionSwitch)[0] : _GLF_FUZZED(tanh(53.28)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(true ? (injectionSwitch)[0] : _GLF_FUZZED(tanh(53.28)), mix(float(_GLF_FUZZED(1.3)), float(true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED((3.6 + -1.4))), bvec2(false, false)))[0] : _GLF_FUZZED(_GLF_IDENTITY(tanh(53.28), (tanh(53.28)) / 1.0))), bool(true))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(true ? (injectionSwitch)[0] : _GLF_FUZZED(tanh(53.28)), mix(float(_GLF_FUZZED(1.3)), float(true ? (injectionSwitch)[0] : _GLF_FUZZED(tanh(53.28))), bool(true))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))) / 1.0)))), (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4369.1649)), bool(false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && true)), (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(vec2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), 0.0, abs(0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(vec2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), 0.0, abs(0.0))) - mat2(0.0, 0.0, 0.0, 0.0))), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(vec2(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.1, -9.7)))))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), 0.0, abs(0.0)))) * vec2(1.0, 1.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]) - 0.0)), vec2(_GLF_FUZZED(-5233.9072), _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-337.116, _GLF_ONE(1.0, injectionSwitch.y) * (-337.116)) + -39.62), ((-337.116 + -39.62)) / 1.0))), bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, false))))))).y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
