#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), true, true), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), true, true), false))))), _GLF_IDENTITY(true, false || (true)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), true, true), false))))), _GLF_IDENTITY(true, false || (true)), true, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7767.6621)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(max(95.57, 5.6)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(366.921) : float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)))))), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), true && ((false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))) / 1u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> (_GLF_IDENTITY(0u ^ (60520u & 0u), max(_GLF_IDENTITY(0u ^ (60520u & 0u), (0u ^ (60520u & 0u)) - 0u), 0u ^ (60520u & 0u)))))))))) / 1u) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))) / 1u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> (_GLF_IDENTITY(0u ^ (60520u & 0u), max(_GLF_IDENTITY(0u ^ (60520u & 0u), (0u ^ (60520u & 0u)) - 0u), 0u ^ (60520u & 0u)))))))))) / 1u) - 0u)) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))) / 1u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> (_GLF_IDENTITY(0u ^ (60520u & 0u), max(_GLF_IDENTITY(0u ^ (60520u & 0u), (0u ^ (60520u & 0u)) - 0u), 0u ^ (60520u & 0u)))))))))) / 1u) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))) / 1u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> (_GLF_IDENTITY(0u ^ (60520u & 0u), max(_GLF_IDENTITY(0u ^ (60520u & 0u), (0u ^ (60520u & 0u)) - 0u), 0u ^ (60520u & 0u)))))))))) / 1u) - 0u)) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))) / 1u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> (_GLF_IDENTITY(0u ^ (60520u & 0u), max(_GLF_IDENTITY(0u ^ (60520u & 0u), (0u ^ (60520u & 0u)) - 0u), 0u ^ (60520u & 0u)))))))))) / 1u) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))) / 1u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> (_GLF_IDENTITY(0u ^ (60520u & 0u), max(_GLF_IDENTITY(0u ^ (60520u & 0u), (0u ^ (60520u & 0u)) - 0u), 0u ^ (60520u & 0u)))))))))) / 1u) - 0u)) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.3)))), float(_GLF_FUZZED((2589.7277 * 54.46))), bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), false, true)))))), false), true, false))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), 0u ^ ((workgroup_base + subgroup_base + subgroup_local_id))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) + 0u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))) ^ 0u) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + subgroup_local_id)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) >> uvec2(0u, 0u))))))))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), 1u, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, _GLF_IDENTITY(1u, (1u) * 1u))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 1u)), (uint(uvec3(subgroup_local_id, 0u, 1u))) << 0u))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), 0u, 0u, 0u))))) + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * _GLF_IDENTITY(1u, (1u) / 1u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), 1u, 0u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))), (_GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))), uint(uint((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))))))))) | ((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))))), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), 0u, 0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) / 1u)), ((workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) / 1u))) * 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), ~ (~ (uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))), ~ (~ (uint(_GLF_IDENTITY(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), ~ (~ (uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), 1u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))), 1u, 0u, 0u))) << 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u))) ^ 0u), 0u, 1u)))) - _GLF_IDENTITY(0u, 0u + (0u))))) | _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY(max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))), (max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) | (_GLF_IDENTITY(max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))), max(max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))), max((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))))))), 1u, 0u, 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), ((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) * 1u) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (workgroup_base + subgroup_base + subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) ^ (0u | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) + 0u), (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), _GLF_IDENTITY(1u, (1u) | (1u)))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), 1u))))) - 0u))) | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), ~ (~ (~ (subgroup_base)))))) + subgroup_local_id), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base + subgroup_local_id), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))), min((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))), (1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(subgroup_base)))), 0u)), (_GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), (uint(uvec4((workgroup_base + subgroup_base + subgroup_local_id), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, min(4u, 4u))) * 1u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))) >> _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) << ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), 1u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> 0u) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_base : _GLF_FUZZED(workgroup_base))) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_id))) - 0u) + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))) | (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)), ~ (~ ((_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))))))) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), 0u ^ (0u ^ (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), subgroup_size)))));
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(0u, (0u) * 1u) ^ 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))) ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)), max(uint(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)), uint(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))), 0u + (((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))))) - 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0u ^ 1u))), 1u))), max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)), (true ? _GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)) : _GLF_FUZZED(subgroup_base)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)), max(uint(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(workgroup_size) : 0u ^ 1u))) ^ 0u)))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)), uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, 0u ^ 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).x)) | ((0u ^ 1u))), 1u))), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)), 0u | (_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)), (_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))) / 1u), _GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ _GLF_IDENTITY(1u, (1u) << 0u))))) - 0u))))) + 0u)), uint(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)))) - 0u)))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0u ^ 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0u ^ 1u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0u ^ 1u)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0u ^ 1u))))))), 1u))))), 4, 64, 2), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)))), clamp(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)))), ~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)))), ~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)))))))) == _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (0) - 0))
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (false) && true))))) || false));
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)) + 0u)], uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (0 | 0)), (4) | 0), _GLF_IDENTITY(min(4, 4), (min(4, 4)) | (min(4, 4)))), 64, 4);
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))) || false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true, false, true))))))), false))))))) || false))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((false ? -903.190 : _GLF_IDENTITY(-9339.6285, (-9339.6285) - 0.0))), _GLF_FUZZED(-2314.0029)), bvec2(false, false))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
