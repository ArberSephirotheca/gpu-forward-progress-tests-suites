#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-5.9, -27.76, 5.8, 180.247).g), _GLF_FUZZED(-1.4)), bvec2(false, false)))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8968.0606)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(8968.0606)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-66.02)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-209.899)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, true, true))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch[1])))), injectionSwitch)))).y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-863.664)), float(0.0), bool(true))), 0.0, 0.0)))) + 0.0), 1.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u))))))), workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9314.8574) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, -5176.9057).g)), max((true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, -5176.9057).g)), (true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, -5176.9057).g)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, _GLF_IDENTITY(-5176.9057, min(-5176.9057, -5176.9057))).g)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, -5176.9057).g)), (true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, -5176.9057).g)), (true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, 314.315, 1.4, -5176.9057).g))))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true), false))))))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && _GLF_IDENTITY(true, (true) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(subgroup_id, 0u, 1u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) ^ (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-38.29)), float((_GLF_ONE(1.0, injectionSwitch.y))), bool(true))), (_GLF_ONE(1.0, injectionSwitch.y)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(subgroup_id, 0u, 1u))))))), (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0 * (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(subgroup_id, 0u, 1u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) ^ (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-38.29)), float((_GLF_ONE(1.0, injectionSwitch.y))), bool(true))), (_GLF_ONE(1.0, injectionSwitch.y)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(subgroup_id, 0u, 1u)))))))) << (0u ^ 0u)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size), (uint(workgroup_base + subgroup_id * subgroup_size)) | (uint(workgroup_base + subgroup_id * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (true ? uint(uvec2(workgroup_base, 0u)) : _GLF_FUZZED(atomicMin(subgroup_size, subgroup_local_id))))) + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), (_GLF_IDENTITY(uvec3(0u, 1u, 0u), (uvec3(0u, 1u, 0u)) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))), uint(uvec3(0u, 1u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))))), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), max(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size)) * 1u))), 0u)))))))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(33.13)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, exp(0.0))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, exp(0.0)), (false ? _GLF_FUZZED(cos(vec4(7.4, 373.532, 77.31, -5890.4825))) : vec4(injectionSwitch.x, 0.0, 0.0, exp(0.0)))))) * determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false))), false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))) || false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false))))))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))))[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true))))), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)), mat2(1.0) * (mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(mat2(-6100.8192, 4.4, -5.7, 6.0)[1]) : (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))), injectionSwitch)))[1]), bvec2(false, true))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)), mat2(1.0) * (mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(mat2(-6100.8192, 4.4, -5.7, 6.0)[1]) : (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))), injectionSwitch)))[1]), bvec2(false, true)))))))))) * mat2(1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(4.7)), float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED(-15.46)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(4.7)), float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), bool(true))), 0.0 + (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(4.7)), float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), bool(true)))))), bool(true)))), log(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))), _GLF_FUZZED(254.886)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), vec2(mat3x4(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), 1.0, tan(determinant(mat3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_FUZZED(849.882)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, tan(0.0), 1.0))), bvec2(false, true))))), mix(vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true))))))[1], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED((-3617.3079)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bvec2(false, true)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0], min((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0])), ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0]) + 0.0), _GLF_FUZZED(-2.2)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED((-3617.3079)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), mix(vec2(_GLF_FUZZED(-2852.7095), _GLF_FUZZED((false ? -57.49 : 5.1))), vec2((vec2(_GLF_FUZZED(0.7), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]))[0], (vec2(_GLF_FUZZED(0.7), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]))[1]), bvec2(true, true))), bvec2(false, true)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0], min((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0])), ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true)))[0]) + 0.0), _GLF_FUZZED(-2.2)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false))), false)), false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false))), false))), false)), false)))))))))))))))))))[1]) * 1.0)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.886)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(false, true))))))[0], _GLF_FUZZED(-67.20)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), true))), false)))))), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), true))), false))))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((1085.3156 * -185.059))), float(injectionSwitch.y), bool(true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true, false))), false)))), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), true && (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false)), false)), bool(bvec2(bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(sin(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0)))), 1.0), mat3x2(mat4(mat3x2(injectionSwitch, tan(sin(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0)))), 1.0)))))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(sin(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0)))), 1.0), mat3x2(mat4(mat3x2(injectionSwitch, tan(sin(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0)))), 1.0)))))).y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(sin(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0)))), 1.0), mat3x2(mat4(mat3x2(injectionSwitch, tan(sin(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, abs(1.0)))), 1.0)))))).y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false))), false)))), false, false)), false)), false)))))))) && true), bool(bvec3(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(false, ! (! (false))), false)))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (bool((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)) || false)))), false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false) && _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true)))))))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))))))))), true))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))), bvec3(bvec3(bvec3(true, true, true)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))))))))), true, true)))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true, true, true), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true, true, true), true)), false))))))), bvec3(bvec3(bvec3(true, true, true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bvec3(bvec4(bvec3(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false)))))))))))))), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), false))), false))), true))), bvec3(bvec3(bvec3(true, true, true)))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), true)), false)))))), false)))), true))), true))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), false))))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true))))), true))), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true)))))))))))))))), _GLF_IDENTITY(false, ! (! (false))))))), true))), true))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))), bvec3(bvec3(bvec3(true, true, true)))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))))), _GLF_IDENTITY(false, ! (! (false))))))), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), _GLF_IDENTITY(false, ! (! (false))))))), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), _GLF_IDENTITY(false, ! (! (false))))))), true))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), false)))))))))))))))) ? injectionSwitch : _GLF_FUZZED(vec2(-72.75, 7751.6724)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true)))))))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))))))))), true))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))), bvec3(bvec3(bvec3(true, true, true)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))))))))), true, true)))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true, true, true), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true, true, true), true)), false))))))), bvec3(bvec3(bvec3(true, true, true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bvec3(bvec4(bvec3(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false)))))))))))))), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), false))), false))), true))), bvec3(bvec3(bvec3(true, true, true)))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))), true)), false)))))), false)))), true))), true))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, true))), false))))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true))))), true))), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, true)), bvec3(bvec3(bvec3(bvec3(true, true, true)))))))))))))))), _GLF_IDENTITY(false, ! (! (false))))))), true))), true))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))), bvec3(bvec3(bvec3(true, true, true)))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, true))))))), _GLF_IDENTITY(false, ! (! (false))))))), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), _GLF_IDENTITY(false, ! (! (false))))))), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), _GLF_IDENTITY(false, ! (! (false))))))), true))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), false)))))))))))))))) ? injectionSwitch : _GLF_FUZZED(vec2(-72.75, 7751.6724)))).y)) && true))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6680.5665)))) + 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-72.75, 7751.6724)))).y)))) || false, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-72.75, 7751.6724)), mix(vec2((_GLF_FUZZED(vec2(-72.75, 7751.6724)))[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, min(0, 0)), 1, 0), max(ivec3(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) / (1 & 1)), 0)), 1, 0), ivec3(_GLF_IDENTITY(0, min(0, 0)), 1, 0)))))))], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(-10.64), _GLF_IDENTITY((_GLF_FUZZED(vec2(-72.75, 7751.6724)))[1], clamp(_GLF_IDENTITY((_GLF_FUZZED(vec2(-72.75, 7751.6724)))[1], 1.0 * ((_GLF_FUZZED(vec2(-72.75, 7751.6724)))[1])), (_GLF_FUZZED(vec2(-72.75, 7751.6724)))[1], (_GLF_FUZZED(vec2(-72.75, 7751.6724)))[1]))), bvec2(_GLF_IDENTITY(false, (false) && true), true))))).y)))) || false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), ((injectionSwitch)) + vec2(0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) - log(1.0)))), (false ? _GLF_FUZZED(vec2(-7.8, -49.20)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) * mat2(1.0)))), (false ? _GLF_FUZZED(vec2(5.2, 311.767)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(-7.8, -49.20)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) * mat2(1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-748.447), clamp(true ? 0.0 : _GLF_FUZZED(-748.447), true ? 0.0 : _GLF_FUZZED(-748.447), true ? 0.0 : _GLF_FUZZED(-748.447))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) / 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.3))), 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), log(1.0), 1.0, 1.0))), 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-50.58) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8444.9778) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-58.41, 1.0 * (-58.41)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0))), 0.0, 0.0, 1.0))))) + 0.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8298.6498), mix(float(_GLF_FUZZED(9525.3471)), float(_GLF_FUZZED(-8298.6498)), bool(true)))), float((_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8524.8874)), float(0.0), bool(true))), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.3))), 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), log(1.0), 1.0, 1.0))), 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-50.58) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8444.9778) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-58.41, 1.0 * (-58.41)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.3))), 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), log(1.0), 1.0, 1.0))), 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-50.58) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8444.9778) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-58.41, 1.0 * (-58.41)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0))))), mix(float(float(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.3))), 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), log(1.0), 1.0, 1.0))), 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-50.58) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8444.9778) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-58.41, 1.0 * (-58.41)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED((-2.3 + -7.9))), bool(false)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.3))), 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), log(1.0), 1.0, 1.0))), 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-50.58) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8444.9778) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-58.41, 1.0 * (-58.41)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0))))), mix(float(float(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.3))), 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), log(1.0), 1.0, 1.0))), 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-50.58) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8444.9778) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-58.41, 1.0 * (-58.41)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED((-2.3 + -7.9))), bool(false))))) / 1.0))) + 0.0))), bool(true))) + 0.0))))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y))))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u ^ (uint(8u))))) ^ (virtual_gid))], _GLF_IDENTITY(read, ~ (~ (read))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39038)))), max(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39038)))), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39038)))))), 0 + (_GLF_IDENTITY(4, (1 ^ 1) ^ (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39038)))), max(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39038)))), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39038)))))), 0 + (_GLF_IDENTITY(4, (1 ^ 1) ^ (4))))) + 0), 64, _GLF_IDENTITY(4, int(int(4))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) || false))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true)), bool(bool(bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true)))))) || false)))) || false))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) && true))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))) || false)))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false)))) || false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))) || false)))) || false)))))))) || false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))), false || (bool(bool(_GLF_IDENTITY(! (false), true && (! (false)))))))) && true)))), false || (! (! (! (false))))))))) || false)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (false))))))))) || false))) && true))) || false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), false))))))), true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(98.65) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-869.480)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-158.161) : injectionSwitch.x)) > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))))), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))))), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))))) && true), (true && (false)) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && (false)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), _GLF_IDENTITY((true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))) && true))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && (false)) && true))))), false, false)))) || _GLF_IDENTITY(false, ! (! (false)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && (false)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && (false)) && true))))), false, false)))) || _GLF_IDENTITY(false, ! (! (false)))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && (_GLF_IDENTITY(false, true && (false)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true && (false)))) && true), (true && (false)) && true))))), false, false)))) || _GLF_IDENTITY(false, ! (! (false)))), true, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec3(! (! (! (_GLF_DEAD(false)))), false, true)))))) && true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
