#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, cos(0.0))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, false))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))))) != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), false, false, false))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0), (vec2(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0)) * vec2(1.0, 1.0))), (float(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0), (vec2(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0)) * vec2(1.0, 1.0)))) / 1.0))) : _GLF_FUZZED(-53.57))), (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(96.46, mix(float(96.46), float(_GLF_FUZZED(_GLF_IDENTITY(3.6, (3.6) / 1.0))), bool(false))), -2619.4306)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-826.371)), bool(false))), injectionSwitch[1])).x, mix(float(_GLF_FUZZED(-2.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), bool(true)))) - 0.0))), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0)), (false ? _GLF_FUZZED(-3983.0386) : min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0))))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(max(vec2(injectionSwitch), vec2(injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (max(vec2(injectionSwitch), vec2(injectionSwitch))), max(mat2(1.0) * (max(vec2(injectionSwitch), vec2(injectionSwitch))), mat2(1.0) * (max(vec2(injectionSwitch), vec2(injectionSwitch)))))))) : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + ((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-53.57)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-53.57)), (true ? (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-53.57)) : _GLF_FUZZED(1.7))), (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-53.57))))), (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(96.46, mix(float(96.46), float(_GLF_FUZZED(3.6)), bool(false))), -2619.4306)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(446.820), _GLF_FUZZED(34.93)), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(true, true)))))).x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(max(vec2(injectionSwitch), vec2(injectionSwitch)), (max(vec2(injectionSwitch), vec2(injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + ((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, abs(0.0), 1.0, tan(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch)))))).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-53.57))), (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(96.46, mix(float(96.46), float(_GLF_FUZZED(3.6)), bool(false))), -2619.4306)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))), _GLF_IDENTITY((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + ((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))))).y)), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-53.57))), (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(96.46, mix(float(96.46), float(_GLF_FUZZED(3.6)), bool(false))), -2619.4306)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) - 0.0)), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x))))) + 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))), _GLF_IDENTITY((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))), vec2(0.0, 0.0) + ((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))))).y))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)), (mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0))) * mat4(1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-372.714)), bool(false)))), max(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-372.714)), bool(false)))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-372.714)), bool(false)))))))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-46.49)), bool(false))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), min(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 0.0, 0.0))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6022.4918), _GLF_FUZZED(-6911.7729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, log(1.0)))).x)))) : _GLF_FUZZED(-53.57))), (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(96.46, mix(float(96.46), float(_GLF_FUZZED(3.6)), bool(false))), -2619.4306)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) + 0.0), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) + 0.0), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(323.261) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) + 0.0), float(injectionSwitch.x), bool(true))))))), injectionSwitch.x))) - 0.0), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(8078.4772)), vec2(_GLF_FUZZED(474.634), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))))).x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))), _GLF_IDENTITY((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + ((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))))).y)))), bool(bvec4((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)), (mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0))) * mat4(1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-372.714)), bool(false)))), max(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-372.714)), bool(false)))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-372.714)), bool(false)))))))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-46.49)), bool(false))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), min(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 0.0, 0.0))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6022.4918), _GLF_FUZZED(-6911.7729)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, log(1.0)))).x)))) : _GLF_FUZZED(-53.57))), (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(96.46, mix(float(96.46), float(_GLF_FUZZED(3.6)), bool(false))), -2619.4306)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) + 0.0), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) + 0.0), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(323.261) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) + 0.0), float(injectionSwitch.x), bool(true))))))), injectionSwitch.x))) - 0.0), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(8078.4772)), vec2(_GLF_FUZZED(474.634), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))))))).x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))), _GLF_IDENTITY((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + ((true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))))).y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true), false)))))) || false))), (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-660.514)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY((bool(bvec4(false, true, true, false))) && true, bool(bvec4((bool(bvec4(false, true, true, false))) && true, true, true, false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY((bool(bvec4(false, true, true, false))) && true, bool(bvec4((bool(bvec4(false, true, true, false))) && true, true, true, false)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY((bool(bvec4(false, true, true, false))) && true, bool(bvec4((bool(bvec4(false, true, true, false))) && true, true, true, false))))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, false))) && true, bool(bvec4((bool(bvec4(false, true, true, false))) && true, true, true, false)))))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(66.22) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0), ~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0), ~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))))), max((_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0), ~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0), ~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1, 0, (((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1 & 1, 1 * (1 & 1))))) | (1 & 1))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3)))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)))), false)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)))), false))))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))) & 1)))), _GLF_IDENTITY(1 * (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))) * 1))))), (_GLF_IDENTITY(1 * (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))) * 1))))), (1 * (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))) * 1)))))) | (1 * (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), ((_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))) * 1)))))))) ^ 0)) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY((6), ((6)) << (0 << _GLF_IDENTITY(int(5), int(5)))) - 0)), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), 0.0, 0.0))))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(516.907), _GLF_FUZZED((-57.92 * -1.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(516.907), _GLF_FUZZED((-57.92 * -1.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))))) || false)), false || _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(vec2(-3816.3061, 4.3).s), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(79.93)), bvec2(true, false))))).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) && true))))) && true)), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))))), true, false)))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, log(1.0), sqrt(1.0), 0.0, 0.0, abs(1.0), tan(0.0), 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3(injectionSwitch.x, log(1.0), sqrt(1.0), 0.0, 0.0, abs(1.0), tan(0.0), 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6563.8239) : float(mat3(injectionSwitch.x, log(1.0), sqrt(1.0), 0.0, 0.0, abs(1.0), tan(0.0), 0.0, 1.0)))), float(mat3(injectionSwitch.x, log(1.0), sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))) * (1.0))), 0.0, 0.0, abs(1.0), tan(0.0), 0.0, 1.0)), float(mat3(injectionSwitch.x, log(1.0), sqrt(1.0), 0.0, 0.0, abs(1.0), tan(0.0), 0.0, 1.0))))))) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(-79.05)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), true, false)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))) && (false))) && true))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4095.2109), _GLF_FUZZED(-59.26)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9147.8411)), bool(false))), injectionSwitch[1])), injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))), _GLF_IDENTITY(true, (true) || false), true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), false, false)), _GLF_IDENTITY(true && (bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), ! (! ((bool(bvec4(true, false, false, false)))))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), false, false)), _GLF_IDENTITY(true && (bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), ! (! ((bool(bvec4(true, false, false, false))))))))))))))) && (false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))))))), bool(bvec3(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))), false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) || false)) || false))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) || false)) || false))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) || false)) || false))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))), true, true, false))))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(bvec4(true, false, false, false))), ! (! (_GLF_IDENTITY((bool(bvec4(true, false, false, false))), false || ((bool(bvec4(true, false, false, false)))))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && _GLF_IDENTITY((bool(bvec4(true, false, false, false))), ! (! ((bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false))))))))))))) && (false)))), _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(true, ! (! (true))))), false, false, false)), false || (bool(bvec4(! (! (_GLF_IDENTITY(true, ! (! (true))))), false, false, false)))))), true && (true)), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))))))))) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))))) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), false, false, true))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true))), false, true))))), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bool(false))))))), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), false, true))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))))), false, true, false))))))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), _GLF_IDENTITY(true && (bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((bool(bvec4(true, false, false, false))), ! (! ((bool(bvec4(true, false, false, false))))))))))))) && (false)))), _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (bool(bvec4(true, false, false, false)))))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), true))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), true))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))))))) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, true))))))), true && (bool(bool((! (_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y))))), false, true, false))))))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), _GLF_IDENTITY(true && (bool(bvec4(true, false, false, false))), true && (_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((bool(bvec4(true, false, false, false))), ! (! ((bool(bvec4(true, false, false, false))))))))))))) && (false)))), _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec2(bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (bool(bvec4(true, false, false, false)))))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), true))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true), true))))), true && (true)), false, true))), _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))))))) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, true))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false)))))))) && true))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ((0) + 0) | 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-308.489))) : _GLF_FUZZED(698.357))), injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), false, true)))) || (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(191847u) : _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))) ? _GLF_FUZZED(191847u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size))), 1u * (subgroup_base)))) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), 1u)), ~ (~ (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id))), (1u ^ 0u), 1u)))))))) + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (true) && true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false))))))), true))))))))), false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y)))) && true), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false) || false)), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), false))))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y)))) && true), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false) || false)), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), false))))))))) || false))) || false) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(76.38)), bvec2(true, false))))[0], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), _GLF_IDENTITY(true, (true) || false), true, true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(76.38)), bvec2(true, false))))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(int(0))), 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (ivec2(0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))) ^ ivec2(0, 0)))))), clamp(0, 0, 0)) : _GLF_FUZZED(-26498)))))], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-4.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.1))))), min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).y), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false)))), true, true)), bool(bool(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-4.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.1))))), min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).y), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false)))), true, true))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))), 1.0, 0.0)))[0], _GLF_FUZZED(-3.1)), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), (vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), max(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), min(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)))))))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1))) - vec2(0.0, 0.0)), max(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(7165.8379, float(mat4(7165.8379, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(76.38, 0.0 + (76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) + (vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.1, mix(float(-3.1), float(_GLF_IDENTITY(_GLF_FUZZED(-34.26), max(_GLF_FUZZED(-34.26), _GLF_FUZZED(-34.26)))), bool(false))))))), 1.0, 0.0))), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, true))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))), 1.0, 0.0)))[0], _GLF_FUZZED(-3.1)), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), (vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), max(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), min(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)))))))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1))) - vec2(0.0, 0.0)), max(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(7165.8379, float(mat4(7165.8379, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(76.38, 0.0 + (76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) + (vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.1, mix(float(-3.1), float(_GLF_IDENTITY(_GLF_FUZZED(-34.26), max(_GLF_FUZZED(-34.26), _GLF_FUZZED(-34.26)))), bool(false))))))), 1.0, 0.0))), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, true))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))), 1.0, 0.0)))[0], _GLF_FUZZED(-3.1)), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), (vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), max(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), min(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)))))))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1))) - vec2(0.0, 0.0)), max(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(7165.8379, float(mat4(7165.8379, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(76.38, 0.0 + (76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) + (vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.1, mix(float(-3.1), float(_GLF_IDENTITY(_GLF_FUZZED(-34.26), max(_GLF_FUZZED(-34.26), _GLF_FUZZED(-34.26)))), bool(false))))))), 1.0, 0.0))), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.3, 4.8, 819.830, 50.00)))) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))), 1.0, 0.0)))[0], _GLF_FUZZED(-3.1)), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), (vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), max(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), min(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_FUZZED(76.38)))))))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1))) - vec2(0.0, 0.0)), max(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(7165.8379, float(mat4(7165.8379, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(76.38, 0.0 + (76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(-3.1)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7165.8379), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) + (vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(76.38)))), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.1, mix(float(-3.1), float(_GLF_IDENTITY(_GLF_FUZZED(-34.26), max(_GLF_FUZZED(-34.26), _GLF_FUZZED(-34.26)))), bool(false))))))), 1.0, 0.0))), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, true))).y))))))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3015.7787), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))))) - vec2(0.0, 0.0)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((mat2(-40.47, 27.52, 1.3, -89.05) / mat2(-7.9, -15.41, -539.678, 98.10))) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * (injectionSwitch)).x))).y), _GLF_IDENTITY(true, (true) || false), true, true)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) && true)))), true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), (bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, bool(bool(false))))))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) ^ 0))) << 0), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) | (64)), 64)), 2);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, cos(0.0), 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), false)), false || (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), false))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), (! (! (false))) || false))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (min(_injected_loop_counter, _injected_loop_counter)) << 0))))) > _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 ^ 0))) ^ 0) | 0), (0 | 0) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 ^ 0))) ^ 0) | 0), clamp((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 ^ 0))) ^ 0) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) - (_GLF_IDENTITY(86962 & 0, min(86962 & 0, 86962 & 0))))) + 0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (0) >> (0 ^ 0))) ^ 0) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) ^ 0) | 0), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) >> (0 ^ 0))) ^ 0) | 0)) | ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 ^ _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) >> (1 ^ 1))))))) ^ 0) | 0)))))))); _injected_loop_counter --)
      {
       subgroupAll(false);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) << 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_injected_loop_counter --) << 0 : _GLF_FUZZED(_injected_loop_counter))))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0)))))) | (1))))), 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true)))))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), 1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0)))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), ~ (~ (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0)))))) : _GLF_FUZZED(81408)))), 0 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), 1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0)))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0), ~ (~ (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0)))) | 0)))))) : _GLF_FUZZED(81408)))))), ~ (~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) << 0), int(_GLF_IDENTITY(4, (4) - 0))))))) >> _GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), (false ? _GLF_FUZZED(ivec2(38684, 72463)[1]) : (4))))))), int(int(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0, 0 | (0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4))))))), _GLF_IDENTITY(0, 0 | (0)) << _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ~ (~ ((4)))))))), (int(4)) << 0), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 + (4))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))) | 0)) << 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) | (4))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (4) | (4))))))), (int(4)) << 0), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) << 0, ((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((0 << _GLF_IDENTITY(int(4), int(4)))) / 1) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), _GLF_IDENTITY((4) | (4), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4) | (4), ~ (~ ((_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4))))), ((_GLF_IDENTITY((4) | (4), ~ (~ ((_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (4) | (4)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(ivec4((_GLF_IDENTITY(4, (4) | (4))), 0, (0 | 0), 0)))), (false ? _GLF_FUZZED(-30624) : ~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(ivec4((_GLF_IDENTITY(4, (4) | (4))), 0, (0 | 0), 0)))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-90088))))))))), (int(4)) << 0), int(4))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), _GLF_IDENTITY((4) | (4), ~ (~ (_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))))), (4) | (4)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))), (_GLF_IDENTITY(4, (4) | (4))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)))), (false ? _GLF_FUZZED(-61085) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), _GLF_IDENTITY((4) | (4), ~ (~ (_GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))))), (4) | (4)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))), (_GLF_IDENTITY(4, (4) | (4))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) ^ 0), _GLF_IDENTITY((4), min((4), (4))), _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))) + 0)) | (4))))))))), (int(4)) << 0), int(4)))) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) << 0) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))), _GLF_IDENTITY(int(5), (int(5)) << 0)))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
                  barrier();
                }
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(904.855), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-72.41)), bvec2(true, false))).y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) || false))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true))))
                barrier();
              }
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_WRAPPED_LOOP(false)))), (! (_GLF_WRAPPED_LOOP(false))) || false))));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((0.6 * -1451.3005)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6644.9071)), bvec2(true, false))).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? 733.877 : -93.52))), float(injectionSwitch.y), bool(true))))), false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / exp(0.0)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / exp(0.0)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-525.985)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), false)), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), false), _GLF_IDENTITY(false, false || (false)))), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))), false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))), 1, 0)))) >> 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(767.703) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.5))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(767.703) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.5))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(767.703), (_GLF_FUZZED(767.703)) * 1.0) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.5))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(false, true, true))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))))))))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(65.30), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1217.2398)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), int(int(int(2))))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2)))))) >> 0)) >> 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(8), int(8))))) * (1 & 1)), (1) >> 0))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | _GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY((_GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(28289) : (1))) | (1)) >> (1 ^ 1), int(int(((1) | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1)))) >> (1 ^ 1))))))), 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))) || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(1, int(ivec3(1, 0, 0))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))), bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))), false, false, true))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       atomicStore(buf[virtual_gid], read, 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
