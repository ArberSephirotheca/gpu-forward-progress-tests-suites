#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))));
    }
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(86.71)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, ((false) || false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false) || false, ((false) || false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((false) || false, ((false) || false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && true))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(injectionSwitch, vec2(-328.493, -59.28), injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false, true, false))));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 | _GLF_IDENTITY((1 | 1), 0 ^ ((1 | 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))))) && true)))) && true))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (((((1 ^ 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           else
            {
             return;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), ~ (~ (1)))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         return;
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-420.864)), vec2(_GLF_FUZZED(vec3(69.66, 479.401, 55.29).y), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(36.99)), bvec2(true, false))))).x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), subgroup_size)), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) >> 0u) | 0u)) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u)) >> _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))))), min(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) >> 0u) | 0u)) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u)) >> _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))))), uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) >> 0u) | 0u)) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u)) >> _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u), (uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u)) ^ uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u), max(uvec2(subgroup_id * subgroup_size, 1u), uvec2(subgroup_id * subgroup_size, 1u))) : _GLF_FUZZED(uvec2(156630u, 117179u))), ((true ? _GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u), max(uvec2(subgroup_id * subgroup_size, 1u), uvec2(subgroup_id * subgroup_size, 1u))) : _GLF_FUZZED(uvec2(156630u, 117179u)))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), ((true ? uvec2(subgroup_id * subgroup_size, 1u) : _GLF_FUZZED(uvec2(156630u, 117179u)))) >> uvec2(0u, 0u))))))))) + subgroup_local_id;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            {
            }
           else
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (subgroup_id), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u), 0u ^ (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u))))))) / 1u), min(~ (subgroup_id), ~ (subgroup_id))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), (~ (subgroup_id)) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (true ? (uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))) : _GLF_FUZZED(subgroup_id)))) + 0u)))), ((~ (subgroup_id))) | ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (~ (subgroup_id)))) - 0u)), ((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), (~ (subgroup_id)) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (true ? (uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))) : _GLF_FUZZED(subgroup_id)))) + 0u)))), ((~ (subgroup_id))) | ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (~ (subgroup_id)))) - 0u))) | ((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), (~ (subgroup_id)) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (true ? (uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))) : _GLF_FUZZED(subgroup_id)))) + 0u)))), ((~ (subgroup_id))) | ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (~ (subgroup_id)))) - 0u)))), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), (~ (subgroup_id)) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (true ? (uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))) : _GLF_FUZZED(subgroup_id)))) + 0u)))), ((~ (subgroup_id))) | ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (~ (subgroup_id)))) - 0u)), ((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), (~ (subgroup_id)) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (true ? (uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))) : _GLF_FUZZED(subgroup_id)))) + 0u)))), ((~ (subgroup_id))) | ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (~ (subgroup_id)))) - 0u))) | ((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY((~ (subgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), (~ (subgroup_id)) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))), (true ? (uint(uint(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | 0u)))) : _GLF_FUZZED(subgroup_id)))) + 0u)))), ((~ (subgroup_id))) | ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (~ (subgroup_id)))) - 0u)))), 0u, 0u, 1u))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) >> 0u)) >> 0u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), max(_GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))))), (_GLF_IDENTITY((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), clamp((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), _GLF_IDENTITY((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), max((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid]), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid]), min(false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid]), false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))) - 0u)))))))), (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid]))))))))) | (_GLF_IDENTITY((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), uint(uvec4((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), 0u, 0u, 1u))))), 0u | (_GLF_IDENTITY((buf[virtual_gid]) | _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), 0u | _GLF_IDENTITY(((buf[virtual_gid])), (false ? _GLF_FUZZED(subgroup_id) : ((buf[virtual_gid])))))))), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))))), 0u | ((buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))), (~ _GLF_IDENTITY((_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)])))), max((_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid]))), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)])))), (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]))))))) - 0u))))))))) | (buf[virtual_gid]), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) / 1u)], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), max((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))) / 1u)]) | 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))))))) / 1u))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, (0u | 1u)))), _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))))], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u)) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u), ((0u ^ 0u) << _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u), ((0u ^ 0u) << _GLF_IDENTITY(uint(1u), uint(1u))), 1u), 1u)))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), uint(uint(_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid])))))))) | (buf[virtual_gid]))) / 1u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (buf[virtual_gid]))))), min(_GLF_IDENTITY(buf[virtual_gid], (1u ^ 1u) | (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u)))) ^ 0u)]))) | (buf[virtual_gid]))) / 1u))), ((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + (buf[virtual_gid]), max(0u + (buf[virtual_gid]), _GLF_IDENTITY(0u + (buf[virtual_gid]), clamp(0u + (buf[virtual_gid]), 0u + (buf[virtual_gid]), 0u + (buf[virtual_gid]))))))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u)))) | 0u)) * 1u), 1u), (uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid])), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), 0u ^ ((buf[virtual_gid]))) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u)), uint(uint(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u))) << 0u)))))))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])))), 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(55615u))))))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), ((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u)), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))]))) / 1u)))) | 0u)) * 1u), 1u)) / uvec2(1u, 1u)))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), 0u | ((buf[virtual_gid]))) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), (true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(4u), uint(4u))))))]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])))), (true ? ~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u + (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))), clamp(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))))) + 0u))) | (buf[virtual_gid])) : _GLF_FUZZED(num_workgroup))), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))))))), uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, (0u | 1u)))), _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))))], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u)) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u), ((0u ^ 0u) << _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u), ((0u ^ 0u) << _GLF_IDENTITY(uint(1u), uint(1u))), 1u), 1u)))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), uint(uint(_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid])))))))) | (buf[virtual_gid]))) / 1u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (buf[virtual_gid]))))), min(_GLF_IDENTITY(buf[virtual_gid], (1u ^ 1u) | (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u)))) ^ 0u)]))) | (buf[virtual_gid]))) / 1u))), ((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u + (buf[virtual_gid]), max(0u + (buf[virtual_gid]), _GLF_IDENTITY(0u + (buf[virtual_gid]), clamp(0u + (buf[virtual_gid]), 0u + (buf[virtual_gid]), 0u + (buf[virtual_gid]))))))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u)))) | 0u)) * 1u), 1u), (uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid])), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), 0u ^ ((buf[virtual_gid]))) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u)), uint(uint(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 1u))) << 0u)))))))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])))), 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(55615u))))))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), ((~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u)), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u) + 0u))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))]))) / 1u)))) | 0u)) * 1u), 1u)) / uvec2(1u, 1u)))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), 0u | ((buf[virtual_gid]))) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))), (true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(4u), uint(4u))))))]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])))), (true ? ~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u + (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))), clamp(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))), min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))))) + 0u))) | (buf[virtual_gid])) : _GLF_FUZZED(num_workgroup))), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))))))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid]), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])) | 0u)), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), 0u | ((buf[virtual_gid]) | (buf[virtual_gid]))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])), min(((buf[virtual_gid])), ((buf[virtual_gid])))) - 0u))))), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) * 1u)]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u)))), clamp(~ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u)))), ~ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u)))), ~ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) | (buf[virtual_gid]))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u)))))))))))))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)]))))))) | 0u) + 0u))) | _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(next_virtual_gid) : (buf[virtual_gid])))) >> 0u)), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u)))), 0u + (~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) - 0u), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, (0u) | 0u) + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u))))))))), max(((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u)))), 0u + (~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) - 0u), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, (0u) | 0u) + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u))))))))), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u)))), 0u + (~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) - 0u), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, (0u) | 0u) + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u)))))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))))), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (buf[virtual_gid])), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))))), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))) | (buf[virtual_gid])), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u) | 0u))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u))))))))))), 0u | (~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u) + 0u))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, 1u * (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u, ~ (~ (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u))))))))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), (true ? _GLF_IDENTITY((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) * 1u) : _GLF_FUZZED(virtual_gid)))) + 0u))) | _GLF_IDENTITY((buf[virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u))))), (~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u), min(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u), _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u), min(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u), _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u)))))) * 1u) | (buf[virtual_gid])), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) << (0u | 0u)))) | (buf[virtual_gid]))) / 1u, ((~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (~ (uvec2(virtual_gid, 0u))))))], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))]) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / 1u) | 0u))))))))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u) + 0u)), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), ((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u)), uint(uint((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u))) | 0u))))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) | 0u) + 0u))) - 0u)) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u | ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(~ (~ ((buf[virtual_gid]))), (~ (~ ((buf[virtual_gid])))) ^ 0u)) | (buf[virtual_gid]))) | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY((buf[virtual_gid]) | (buf[virtual_gid]), ((buf[virtual_gid]) | (buf[virtual_gid])) - 0u), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), max(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) ^ 0u), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))))) + 0u, clamp(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : buf[virtual_gid])))))))) + 0u, 1u * (((buf[virtual_gid]) | _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (virtual_gid))]) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (virtual_gid))]) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), 0u, 1u)), uint(uint(uint(uvec3((_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (virtual_gid))]) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))), 0u, 1u))))))) + 0u)), _GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))))) + 0u, ~ (~ (_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), uint(uvec3(_GLF_IDENTITY(((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))), (((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))))))) << 0u), 0u, 1u)))) ^ 0u) + 0u))), ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))))) + 0u))))) | (buf[virtual_gid])), (~ ((_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)))) | (buf[virtual_gid]))) | (buf[virtual_gid]))) / _GLF_IDENTITY(1u, (1u) + 0u))))))))))))))) ^ 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY(0u | (buf[virtual_gid]), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) | (buf[virtual_gid])) >> 0u)), (buf[virtual_gid]) | (buf[virtual_gid]))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY(0u | (buf[virtual_gid]), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) | (buf[virtual_gid])) >> 0u)), (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u + (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY(0u | (buf[virtual_gid]), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) | (buf[virtual_gid])) >> 0u)), (buf[virtual_gid]) | (buf[virtual_gid]))))), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u | (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | (buf[virtual_gid])) >> 0u)), (buf[virtual_gid]) | (buf[virtual_gid])))) ^ 0u) | (buf[virtual_gid])))) | ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid])))) << 0u))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u)))), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4)))), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 1 * (int(4))), _GLF_IDENTITY(int(4), max(int(4), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 1 * (int(4))), int(4))) + 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(-66027) : (int(4)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(-66027) : (int(4)))))), 1, 1), (ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(-66027) : (int(4)))))), 1, 1)) << ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(-66027) : (int(4)))))), 1, 1), (ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(-66027) : (int(4)))))), 1, 1)) << ivec3(0, 0, 0)))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) : _GLF_FUZZED(28487))) != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) + 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7758.1295, -2658.2415)))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(true, false, false, true)), true, false)), ! (! (bool(bvec3(bool(bvec4(true, false, false, true)), true, false))))))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.6)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)) && true))) && true))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) || false))
            break;
           continue;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(1), 4, 64, 4);
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true) && true)))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               break;
              }
             if(_GLF_DEAD(false))
              return;
             continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
                {
                 return;
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
          return;
         for(int _injected_loop_counter = ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, 2))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), bool(bvec3((_GLF_DEAD(false)), true, false)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))) - 0), 1)), 1)), (_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1))))), _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0))))))), 1)), _GLF_IDENTITY(1, (1) | (1))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))); _injected_loop_counter ++)
  {
   if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((178083u & 0u), ((178083u & 0u)) ^ 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) | ((0u))), (0u), _GLF_IDENTITY((0u), ((0u)) >> 0u)))) * 1u), _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uint((0u))), uint(uvec3(uint(uint((0u))), 1u, 0u))))))), 0u)) | (subgroup_size))) + 0u))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > 0, false), bvec2(bvec3(bvec2(_injected_loop_counter > 0, false), true)))), true && (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > 0, false), bvec2(bvec3(bvec2(_injected_loop_counter > 0, false), true))))))), false || (_injected_loop_counter > 0)))))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            continue;
           atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) << 0u), 4, 64, 4);
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))), true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), (bool((false))) && true)))), true, true))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), true))), false))), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), true))), false))), false)), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), (bool((false))) && true)))), true, true))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), true))), false))), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), true))), false))), false)), true)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), (bool((false))) && true)))), true, true))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), true))), false))), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))), false))), true))), false))), false)), true)))))))))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)))))))))))))) && true) && (false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) && true)), true, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)))))))))))))) && true) && (false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) && true)), true, false)))), true)), true && (bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)))))))))))))) && true) && (false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) && true)), true, false)))), true)))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)))))))))))))) && true) && (false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) && true)), true, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)))))))))))))) && true) && (false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) && true)), true, false)))), true)), true && (bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))) && true)))))))))))))) && true) && (false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))) && true)), true, false)))), true)))))))), true, true), true))))))))));
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         return;
        }
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       subgroupAll(false);
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               continue;
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               return;
              }
            }
           continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_injected_loop_counter))))) | (_injected_loop_counter)), (false ? _GLF_FUZZED(-44081) : _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))))) | (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-90275) : _GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _injected_loop_counter)))))))), _injected_loop_counter)) < (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY((0.0) - 0.0, (false ? _GLF_FUZZED(2380.0090) : _GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-3891.6703)), min(float(_GLF_IDENTITY(_GLF_FUZZED(-3891.6703), mix(float(_GLF_FUZZED(824.473)), float(_GLF_IDENTITY(_GLF_FUZZED(-3891.6703), float(mat3x4(_GLF_FUZZED(-3891.6703), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), bool(true)))), _GLF_IDENTITY(float(_GLF_FUZZED(-3891.6703)), (float(_GLF_FUZZED(-3891.6703))) / 1.0))), bool(false)))))))), injectionSwitch.x))))) ^ (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)) ^ _GLF_IDENTITY(0, (0) / 1)))); _injected_loop_counter ++)
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), max(float(vec2(injectionSwitch.y, 1.0)), float(vec2(injectionSwitch.y, 1.0)))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false)))))))), true))))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       do
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 ^ 1))) | 1)); _injected_loop_counter ++)
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-82.11))), 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), clamp(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-750.416) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-6.7)), float(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), bool(true)))))) - 0.0)))) + 0.0))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7280.2163)), bool(false)))) / 1.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7280.2163)), bool(false)))) / 1.0))) > injectionSwitch.y))), false))))) && true)))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(sqrt(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0)), (vec2(mat4(injectionSwitch, sqrt(sqrt(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))) * mat2(1.0))).x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        continue;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))).y) / cos(0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))))))
      continue;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), int(7))) - 0)) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       atomicStore(buf[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))) && true))), (bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(1.0))), sqrt(1.0), 0.0, 1.0, 1.0, sqrt(0.0)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))))).y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))) && true))), (bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(1.0))), sqrt(1.0), 0.0, 1.0, 1.0, sqrt(0.0)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))))).y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))) && true))), (bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0, 1.0, 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(1.0))), sqrt(1.0), 0.0, 1.0, 1.0, sqrt(0.0)))) : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))))).y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 | 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))) || (true))) && true)))) && true));
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        break;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))).x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_DEAD(false))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))) / 1.0))))) || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || (_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), (_injected_loop_counter) | (0 | 0)))), (_injected_loop_counter) | 0) > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1))))) * 1)) | (min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1)))))))), false || (_GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))), ((_injected_loop_counter != _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (true ? ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(_injected_loop_counter)))), min((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter)))))))))))), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (true ? ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(_injected_loop_counter)))), min((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter))))))))))))))))) || false)))) || false) && true)); _injected_loop_counter ++)
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          continue;
        }
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
