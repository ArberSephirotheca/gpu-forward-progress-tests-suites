#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 float _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat3x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 vec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_8 {
 uint _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 uint read;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6458.3270)), bool(false))), injectionSwitch.x), 1.0, 1.0, 0.0, 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2221.7341)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), true)))))))))) && true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u);
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), max(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY((~ workgroup_id), uint(uvec3(_GLF_IDENTITY((~ workgroup_id), (true ? (~ workgroup_id) : _GLF_FUZZED(workgroup_size))), 0u, 0u)))))) * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(1.0, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(virtual_gid))) % subgroup_size), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), min(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), vec4(injectionSwitch, 0.0, round(length(normalize(1.0))))))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), min(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))))))) - vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)) : _GLF_FUZZED(vec2(631.896, -4278.7641))))))))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)) : _GLF_FUZZED(vec2(631.896, -4278.7641))))))))).y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)) : _GLF_FUZZED(vec2(631.896, -4278.7641))))))))).y, false, false))))))))))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y, sqrt(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y, (false ? _GLF_FUZZED(5099.8116) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y))))))))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y))))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), min(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) / 1.0)), float(_GLF_FUZZED(0.0)), bool(false)))), vec4(injectionSwitch, 0.0, round(length(normalize(1.0))))))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), min(vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))), vec4(injectionSwitch, 0.0, round(length(normalize(1.0)))))))) - vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), min(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)))) : _GLF_FUZZED(vec2(9437.3646, -668.843)))), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)) : _GLF_FUZZED(vec2(631.896, -4278.7641))))))))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), vec2(vec4(_GLF_FUZZED(_GLF_IDENTITY(vec2(7693.7532, 7309.9327), mix(vec2((vec2(7693.7532, 7309.9327))[0], _GLF_FUZZED((+ 3.0))), vec2(_GLF_FUZZED(6225.9852), (vec2(7693.7532, 7309.9327))[1]), bvec2(false, true)))), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)) : _GLF_FUZZED(vec2(631.896, -4278.7641))))))))).y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)), (true ? vec2(vec4(_GLF_FUZZED(vec2(7693.7532, 7309.9327)), 0.0, 0.0)) : _GLF_FUZZED(vec2(631.896, -4278.7641))))))))).y, false, false))))))))))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y, sqrt(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y, (false ? _GLF_FUZZED(5099.8116) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y))))))))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))) && true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y))))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y) || false))))))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7693.7532, 7309.9327)))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) ? _GLF_FUZZED(-728.840) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)) || (false), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))) || false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(1u, _GLF_struct_4(_GLF_struct_0(bvec3(true)), mat2x3(1.0), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0))))) + vec4(0.0, 0.0, 0.0, 0.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-4680.0714)), float(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), bool(true))) : _GLF_FUZZED(-62.03))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), bvec4(true)), _GLF_struct_2(_GLF_IDENTITY(vec2(1.0), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8091.0851 - vec2(-6.9, -9.0).t))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-944.815 - 0.0))), bool(false))), (1.0) / 1.0)), bool(true)))), (vec2(1.0)) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-1985.5823, 376.451)))), mat3x2(1.0), uvec4(1u)), _GLF_struct_3(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))))), _GLF_struct_6(_GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(_GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)))), 1.0, 1.0))) - 0.0), 1.0))) / 1.0, (true ? (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(880.706) : 1.0)) : _GLF_FUZZED(-2.4)))))) - 0.0), 1.0))) / 1.0 : _GLF_FUZZED(6.0)))), 1.0))), (true ? mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)))), 1.0, 1.0))) - 0.0), 1.0))) / 1.0, (true ? (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(880.706) : 1.0)) : _GLF_FUZZED(-2.4)))))) - 0.0), 1.0))) / 1.0 : _GLF_FUZZED(6.0)))), 1.0)), exp(0.0) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))))) - 0.0), 1.0))) / 1.0, (true ? (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(880.706) : 1.0)) : _GLF_FUZZED(-2.4)))))) - 0.0), 1.0))) / 1.0 : _GLF_FUZZED(6.0)))), 1.0))))) : _GLF_FUZZED(mat3(-1.8, 701.901, -8739.2063, 0.8, 49.09, -7.0, -0.5, 4.5, -1978.3435)))), (mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0, 1.0))) - 0.0), 1.0))) / 1.0, (true ? (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) - 0.0), 1.0))) / 1.0 : _GLF_FUZZED(6.0)))), 1.0)))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0, 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), _GLF_IDENTITY((min(1.0, 1.0)), min(_GLF_IDENTITY((min(1.0, 1.0)), ((min(1.0, 1.0))) / 1.0), _GLF_IDENTITY((min(1.0, 1.0)), min((min(1.0, 1.0)), (min(1.0, 1.0)))))) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(mat2x4(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(mat2x4(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-367.979)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(907.233, -5.4, 2.1, -3.3, 1.1, 879.927, 3.5, 9.6, -389.001, 982.986, 16.14, -1049.4522))))))), bool(true))), 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(mat2x4(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0, 1.0))))))))), (mat3(mat3(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / mat3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, sin(abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(18.56) : (0.0))) / exp(0.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((float(93168u) + -9.4))), bool(false)))), (false ? _GLF_FUZZED(mat3x2(-42.98, -2645.6375, -3.8, _GLF_IDENTITY(13.44, (_GLF_IDENTITY(13.44, (13.44) - 0.0)) - 0.0), _GLF_IDENTITY(2.9, mix(float(2.9), float(_GLF_FUZZED((3334.7958))), bool(false))), 358.205)) : mat3x2(1.0, 0.0, sin(_GLF_IDENTITY(abs(0.0), float(mat4(abs(_GLF_IDENTITY(0.0, float(mat3x2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(dot(asinh(-823.242), 1.1)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0)))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, sin(abs(0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-63.91)), bool(false))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0 + (_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0))), (false ? _GLF_FUZZED(mat3x2(-42.98, -2645.6375, -3.8, 13.44, 2.9, 358.205)) : mat3x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (false ? _GLF_FUZZED(-98.76) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(5334.2714)))), float(_GLF_FUZZED(-3.7)), bool(false)))) / 1.0))), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))))))), 0.0, sin(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), abs(0.0)))) - 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, min(_GLF_IDENTITY(-7.9, mix(float(_GLF_FUZZED(-1.0)), float(-7.9), bool(true))), _GLF_IDENTITY(-7.9, (false ? _GLF_FUZZED(-5.9) : -7.9)))))), float(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, sin(abs(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-42.98, -2645.6375, -3.8, _GLF_IDENTITY(13.44, 0.0 + (13.44)), 2.9, 358.205)) : mat3x2(1.0, 0.0, sin(abs(0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-248.681), clamp(_GLF_IDENTITY(_GLF_FUZZED(-248.681), (true ? _GLF_FUZZED(-248.681) : _GLF_FUZZED(2.9))), _GLF_FUZZED(-248.681), _GLF_FUZZED(-248.681)))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))))), 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))))), 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.9), (_GLF_IDENTITY(_GLF_FUZZED(2.9), min(_GLF_FUZZED(2.9), _GLF_IDENTITY(_GLF_FUZZED(2.9), (_GLF_FUZZED(2.9)) * 1.0)))) - 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(2.9), (false ? _GLF_FUZZED(normalize(4901.8691)) : _GLF_IDENTITY(_GLF_FUZZED(2.9), 1.0 * (_GLF_FUZZED(2.9))))), _GLF_FUZZED(2.9)), (max(_GLF_IDENTITY(_GLF_FUZZED(2.9), (false ? _GLF_FUZZED(normalize(4901.8691)) : _GLF_IDENTITY(_GLF_FUZZED(2.9), 1.0 * (_GLF_FUZZED(2.9))))), _GLF_FUZZED(2.9))) * 1.0)) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9.1)))), 1.0)) : _GLF_FUZZED(-23.62))))), 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(969.763))), max((1.0) - 0.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(-23.62))), (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-23.62, min(-23.62, -23.62))))))), 0.0, 1.0, sin(0.0), _GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-52.40)))))), 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), (false ? _GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat2x4(2.9, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7365.7344)), bool(false)))) / 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0), (max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)))) : _GLF_FUZZED(-23.62))))), 0.0, 1.0, sin(0.0), log(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec3(6.2, 7.4, 85.29), vec3(5.5, 8.3, -1.9))) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(245.973)))))), 1.0)) : _GLF_FUZZED(-23.62))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-23.62))))))), 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0))))), 0.0))))), bool(true)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((2.7 + -7973.9237))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED((2.7 + -7973.9237))))), (float(float(float(_GLF_FUZZED((2.7 + -7973.9237)))))) / 1.0)), bool(false)), max(mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((2.7 + -7973.9237))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED((2.7 + -7973.9237))))), (float(float(float(_GLF_FUZZED((2.7 + -7973.9237)))))) / 1.0)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((2.7 + -7973.9237))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED((2.7 + -7973.9237))))), (float(float(float(_GLF_FUZZED((2.7 + -7973.9237)))))) / 1.0)), bool(false)), clamp(mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((2.7 + -7973.9237))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED((2.7 + -7973.9237))))), (float(float(float(_GLF_FUZZED((2.7 + -7973.9237)))))) / 1.0)), bool(false)), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((2.7 + -7973.9237))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED((2.7 + -7973.9237))))), (float(float(float(_GLF_FUZZED((2.7 + -7973.9237)))))) / 1.0)), bool(false)), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((2.7 + -7973.9237))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED((2.7 + -7973.9237))))), (float(float(float(_GLF_FUZZED((2.7 + -7973.9237)))))) / 1.0)), bool(false))))))), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) || false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))))))))))) && true))) ? _GLF_FUZZED(mat3(0.1, 1.1, -5289.4674, 8.7, 3.1, 628.553, -95.73, 580.454, -2.4)) : _GLF_IDENTITY(mat3(mat3(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), transpose(transpose(mat3(mat3(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))), mat2x3(1.0))), _GLF_struct_7(bvec2(true), vec4(1.0), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) - 0.0)))), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) / 1), 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), mix(float(_GLF_FUZZED(1.4)), _GLF_IDENTITY(float(float(_GLF_FUZZED(-9.2))), min(float(float(_GLF_FUZZED(-9.2))), float(float(_GLF_FUZZED(-9.2))))), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) + 0)) << 0)], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(151.363)), bvec2(false, false))).x), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363))) * vec2(1.0, 1.0)), bvec2(false, false))).x), min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x))), 0.0, 0.0, cos(0.0), 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x))), 0.0, 0.0, cos(0.0), 0.0, 0.0)), min(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 1 * (1))))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false)), min(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))))).x))), 0.0, 0.0, cos(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0)))) + abs(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), _GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x)), mix(float(_GLF_FUZZED(7.3)), float(min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x))), bool(true)))), 0.0, 0.0, cos(0.0), 0.0, 0.0)))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, _GLF_IDENTITY(-8.4, float(_GLF_IDENTITY(mat4x3(-8.4, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0), mat3(1.0) * (mat4x3(-8.4, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0)))))))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x))), 0.0, 0.0, cos(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.4, max(-8.4, -8.4)), (_GLF_IDENTITY(-8.4, max(-8.4, -8.4))) - sin(0.0))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4))), _GLF_FUZZED(151.363)), bvec2(false, false))).x))), 0.0, 0.0, cos(0.0), 0.0, 0.0))))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(151.363)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))), true, true))))).x))), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7652.0641)))) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.9)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bool(false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_9.next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)))), min(uint(uint(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), _GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) / 1u)))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), min(uint(uint(1)), _GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) / 1u)))))))), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3889.9075), _GLF_FUZZED(-52.61)), bvec2(false, false))).y)))), true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(270.246)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_FUZZED(-209.005)), float(injectionSwitch.x), bool(true)))), bool(true))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_struct_replacement_8.read, (_GLF_struct_replacement_8.read) | (_GLF_IDENTITY(_GLF_struct_replacement_8.read, (_GLF_IDENTITY(_GLF_struct_replacement_8.read, ~ (~ (_GLF_struct_replacement_8.read)))) | (_GLF_struct_replacement_8.read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))), (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))))))))) && true)) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))), (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), ! (! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))))))))) && true)) && true)), true, false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) && true))), ! (! ((! (false)))))), (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && true)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))), true, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))) && true)) && true))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_struct_replacement_8.read, (_GLF_struct_replacement_8.read) | (_GLF_IDENTITY(_GLF_struct_replacement_8.read, max(_GLF_struct_replacement_8.read, _GLF_IDENTITY(_GLF_struct_replacement_8.read, 0u ^ (_GLF_struct_replacement_8.read)))))), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4519.1950) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
