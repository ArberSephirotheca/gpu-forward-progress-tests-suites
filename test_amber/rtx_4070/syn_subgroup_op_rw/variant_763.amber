#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- 61.13)), _GLF_FUZZED(6.6)), bvec2(false, _GLF_IDENTITY(false, (false) && true)))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((bool(bvec3(false, false, false))) || false, (_GLF_IDENTITY((bool(bvec3(false, false, false))) || false, ! (! ((_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) || false)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) * round(length(normalize(cos(vec2(0.0, 0.0)))))), 1.0, 1.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-2.2) : 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), true))), true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(439.489))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(86.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))) && true), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.5) : injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(40.85)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3488.7081, 91.36)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(73.39) : injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))), mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(482.670), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y), float(_GLF_FUZZED(-4.7)), bool(false))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))) / 1.0)))) > injectionSwitch.y)))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, true, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))), true, _GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), tan(0.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0)), 1.0)))))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))))))), false)), (bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))))))), false))) && true)))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))), true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(float(true)), ((injectionSwitch))[1]), bvec2(false, true))) + vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(float(true)), ((injectionSwitch))[1]), bvec2(false, true))) + vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0)), mix(vec2(_GLF_FUZZED(-71.21), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(float(true)), ((injectionSwitch))[1]), bvec2(false, true))) + vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0)))[1], mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(float(true)), ((injectionSwitch))[1]), bvec2(false, true))) + vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0)))[1]), float(_GLF_FUZZED(-3127.6886)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(float(true)), ((injectionSwitch))[1]), bvec2(false, true))) + vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0)))), 0.0)))[0], _GLF_FUZZED(-7101.7918)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))))) && true)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(_GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(_GLF_IDENTITY(true, ! (! (true)))), 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(float(vec2(float(true), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-2.6 + -4.5))), float(1.0), bool(true))))), min(float(vec2(float(true), 1.0)), float(vec2(float(_GLF_IDENTITY(true, ! (! (true)))), 1.0)))))) - 0.0), float(true))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) - vec2(0.0, 0.0))), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), float(true)))))), bool(true))), bool(false))), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), false || (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), true, false))))))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))) || false))) || false)), true, false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-32.23, -5622.2686, 135.986, 20.88)))) * (injectionSwitch)).y)), false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, -97.36)))))), (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))), false || ((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED((542.404 / 52.44)), _GLF_FUZZED(vec2(763.434, -4.4).s), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4(_GLF_FUZZED(651.726), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(-2.3)), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))) : _GLF_FUZZED(mat4(4.9, 476.414, -554.889, 86.00, -9.3, -82.44, -9697.5256, -6.8, 33.64, -5207.8943, 3356.1572, -262.497, -3.5, 8.3, -1.5, 11.97)))))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), _GLF_IDENTITY((float(true)) / cos(0.0), clamp((float(true)) / _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(smoothstep(-403.742, -7.8, -0.6)))), (float(true)) / cos(0.0), (float(true)) / cos(0.0)))), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(_GLF_IDENTITY(true, false || (true))), 1.0))))))), float(true))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), mat2(1.0) * (vec2(float(true), 1.0))))))), float(true))), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), float(true)))))))), bool(true))), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(true, (true) && true) && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), min(vec2(float(true), 1.0), vec2(float(true), 1.0)))), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(_GLF_IDENTITY(vec2(float(true), 1.0), min(_GLF_IDENTITY(vec2(float(true), 1.0), (_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(float(true), 1.0))), vec2(float(true), 1.0))))))), float(true)))), mix(float(_GLF_FUZZED(-770.116)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), min(vec2(float(true), 1.0), vec2(float(true), 1.0)))), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(_GLF_IDENTITY(vec2(float(true), 1.0), min(_GLF_IDENTITY(vec2(float(true), 1.0), (_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(float(true), 1.0))), vec2(float(true), 1.0))))))), float(true))))), bool(true)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), 1.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(float(true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-3174.3124)) : float(true))), 1.0)), (float(vec2(_GLF_IDENTITY(float(true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-3174.3124)) : float(true))), 1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), float(vec2(float(true), 1.0))))), float(true)))))), bool(true))), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec4(true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0))) > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))))), false)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), clamp(float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), _GLF_IDENTITY(float(true), max(float(true), _GLF_IDENTITY(float(true), (float(true)) - 0.0)))))))), bool(true))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), bool(bvec3(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), true, false)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(atanh(injectionSwitch)))).y))))) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)))))), false))))) && true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, -97.36)))))), (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))), false || ((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED((542.404 / 52.44)), _GLF_FUZZED(vec2(763.434, -4.4).s), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4(_GLF_FUZZED(651.726), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(-2.3)), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))) : _GLF_FUZZED(mat4(4.9, 476.414, -554.889, 86.00, -9.3, -82.44, -9697.5256, -6.8, 33.64, -5207.8943, 3356.1572, -262.497, -3.5, 8.3, -1.5, 11.97)))))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), _GLF_IDENTITY((float(true)) / cos(0.0), clamp((float(true)) / _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(smoothstep(-403.742, -7.8, -0.6)))), (float(true)) / cos(0.0), (float(true)) / cos(0.0)))), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(_GLF_IDENTITY(true, false || (true))), 1.0))))))), float(true))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), mat2(1.0) * (vec2(float(true), 1.0))))))), float(true))), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), float(true)))))))), bool(true))), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(true, (true) && true) && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), min(vec2(float(true), 1.0), vec2(float(true), 1.0)))), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(_GLF_IDENTITY(vec2(float(true), 1.0), min(_GLF_IDENTITY(vec2(float(true), 1.0), (_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(float(true), 1.0))), vec2(float(true), 1.0))))))), float(true)))), mix(float(_GLF_FUZZED(-770.116)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), min(vec2(float(true), 1.0), vec2(float(true), 1.0)))), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(_GLF_IDENTITY(vec2(float(true), 1.0), min(_GLF_IDENTITY(vec2(float(true), 1.0), (_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(float(true), 1.0))), vec2(float(true), 1.0))))))), float(true))))), bool(true)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), 1.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(float(true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-3174.3124)) : float(true))), 1.0)), (float(vec2(_GLF_IDENTITY(float(true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-3174.3124)) : float(true))), 1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), float(vec2(float(true), 1.0))))), float(true)))))), bool(true))), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec4(true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0))) > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))))), false)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), clamp(float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), _GLF_IDENTITY(float(true), max(float(true), _GLF_IDENTITY(float(true), (float(true)) - 0.0)))))))), bool(true))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), bool(bvec3(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), true, false)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(atanh(injectionSwitch)))).y))))) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)))))), false))))) && true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), true, false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, -97.36)))))), (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))), false || ((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED((542.404 / 52.44)), _GLF_FUZZED(vec2(763.434, -4.4).s), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4(_GLF_FUZZED(651.726), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(-2.3)), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? mat4(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) + length(vec2(0.0, 0.0)))) : _GLF_FUZZED(mat4(4.9, 476.414, -554.889, 86.00, -9.3, -82.44, -9697.5256, -6.8, 33.64, -5207.8943, 3356.1572, -262.497, -3.5, 8.3, -1.5, 11.97)))))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), _GLF_IDENTITY((float(true)) / cos(0.0), clamp((float(true)) / _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(smoothstep(-403.742, -7.8, -0.6)))), (float(true)) / cos(0.0), (float(true)) / cos(0.0)))), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(_GLF_IDENTITY(true, false || (true))), 1.0))))))), float(true))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), mat2(1.0) * (vec2(float(true), 1.0))))))), float(true))), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), float(true)))))))), bool(true))), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(true, (true) && true) && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), min(vec2(float(true), 1.0), vec2(float(true), 1.0)))), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(_GLF_IDENTITY(vec2(float(true), 1.0), min(_GLF_IDENTITY(vec2(float(true), 1.0), (_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(float(true), 1.0))), vec2(float(true), 1.0))))))), float(true)))), mix(float(_GLF_FUZZED(-770.116)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(true), 1.0), min(vec2(float(true), 1.0), vec2(float(true), 1.0)))), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(_GLF_IDENTITY(vec2(float(true), 1.0), min(_GLF_IDENTITY(vec2(float(true), 1.0), (_GLF_IDENTITY(vec2(float(true), 1.0), (vec2(float(true), 1.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(float(true), 1.0))), vec2(float(true), 1.0))))))), float(true))))), bool(true)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), 1.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(float(true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-3174.3124)) : float(true))), 1.0)), (float(vec2(_GLF_IDENTITY(float(true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(-3174.3124)) : float(true))), 1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), float(vec2(float(true), 1.0))))), float(true)))))), bool(true))), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec4(true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true)))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(_GLF_IDENTITY(vec2(float(true), 1.0), max(vec2(float(true), 1.0), vec2(float(true), 1.0))))))), float(true))))) - 0.0)))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), float(true)))))), bool(true))), bool(false))), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0))) > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))))), false)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), clamp(float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0)), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (float(true)) / cos(0.0)), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(_GLF_IDENTITY(vec2(float(true), 1.0), clamp(vec2(float(true), 1.0), vec2(float(true), 1.0), vec2(float(true), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true)))), 1.0), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), clamp(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY(max(vec2(float(true), 1.0), vec2(float(true), 1.0)), _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), (false ? _GLF_FUZZED((false ? vec2(-4.3, -88.12) : vec2(-7.7, -1.6))) : _GLF_IDENTITY((max(vec2(float(true), 1.0), vec2(float(true), 1.0))), ((max(vec2(float(true), 1.0), vec2(float(true), 1.0)))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))))))))))), float(true))))), 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(-6.3)), float(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), _GLF_IDENTITY(float(true), _GLF_IDENTITY(float(vec2(float(true), 1.0)), min(float(vec2(float(true), 1.0)), float(vec2(float(true), 1.0))))), _GLF_IDENTITY(float(true), max(float(true), _GLF_IDENTITY(float(true), (float(true)) - 0.0)))))))), bool(true))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), bool(bvec3(! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))), true, false)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(atanh(injectionSwitch)))).y))))) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)))))), false))))) && true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), true, false)))), true)))))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.1))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.1))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) * mat4(1.0)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED(workgroup_size) : 0u | 0u))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_base, subgroup_base), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), min((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u))))) + 0u)), clamp(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), min((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u))))) + 0u)), ~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), min((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u))))) + 0u)), ~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), min((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) << 0u))))) + 0u))))))), (false ? _GLF_FUZZED(142170u) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) / 1u))))) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (true ? workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base)))))), clamp((_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (true ? workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (true ? workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (true ? workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base)))))))) | (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))))) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))), true, _GLF_IDENTITY(true, true && (true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true, false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | 0), 2);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 1), ~ (~ (ivec2(4, 1))))), (int(_GLF_IDENTITY(ivec2(4, 1), ~ (~ (ivec2(4, 1)))))) * 1), int(ivec3(int(_GLF_IDENTITY(ivec2(4, 1), ~ (_GLF_IDENTITY(~ (ivec2(4, 1)), min(~ (ivec2(4, 1)), _GLF_IDENTITY(~ (ivec2(4, 1)), min(~ (ivec2(4, 1)), _GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 1)), (~ (ivec2(4, 1))) | ivec2(0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 1)), (~ (ivec2(4, 1))) | ivec2(0, 0)), (_GLF_IDENTITY(~ (ivec2(4, 1)), (~ (ivec2(4, 1))) | ivec2(0, 0))) | ivec2(0, 0)), _GLF_IDENTITY(~ (ivec2(4, 1)), (~ (ivec2(4, 1))) | ivec2(0, 0))))))))))), (0 << _GLF_IDENTITY(int(2), int(2))), 1)))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(293.380) : injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch) + sqrt(vec2(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0), (mat2x3((injectionSwitch) + sqrt(vec2(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch) + sqrt(vec2(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0), (mat2x3((injectionSwitch) + sqrt(vec2(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat2x3((injectionSwitch) + sqrt(vec2(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0), (mat2x3((injectionSwitch) + sqrt(vec2(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.6)), bool(false))), injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.4)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u), (next_virtual_gid) | (next_virtual_gid))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), true, false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(173333u) : uint(1), 0u | (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), true, false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(173333u) : uint(1), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), true, false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(173333u) : uint(1)) + (0u ^ 0u)))))), _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acos(vec3(-96.36, 86.26, 527.794)[0]))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, false))), false || (! (bool(bvec4(false, true, false, false)))))))), bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), 0 + (_GLF_IDENTITY(4, (4) ^ 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
