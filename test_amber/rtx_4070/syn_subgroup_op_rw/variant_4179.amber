#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 uvec2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat3x2 _f3;
 ivec3 _f4;
 bvec2 _f5;
 uint subgroup_size;
 bvec4 _f6;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat3 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 bool _f1;
 mat3 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(_GLF_struct_0(uvec2(1u), ivec4(1))), _GLF_struct_4(_GLF_struct_2(ivec3(1), mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), 1u), true, mat3(1.0), _GLF_struct_3(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))) ^ 0u)), mat4x3(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)) * mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), max((vec4(1.0)) * mat4(1.0), (vec4(1.0)) * mat4(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-1.6)), bool(false))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (vec4(1.0)) * mat4(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243), min(true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243), true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243))), _GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243), float(mat4x2(true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))), true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-1.7), mix(float(true ? 1.0 : _GLF_FUZZED(-1.7)), float(_GLF_FUZZED(106.655)), bool(false))))) : _GLF_FUZZED(-3605.3243))))))) / _GLF_IDENTITY(mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(min(83.30, -6382.5939), 2438.3062)) : injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(min(83.30, -6382.5939), 2438.3062)) : injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat4(0.4, 1618.4198, 245.045, 7.0, -41.31, 8751.1810, 4.3, 192.475, -807.816, 3.5, -1666.9170, -5.1, 26.11, -1046.4659, 54.31, 226.832))))), (vec4(1.0)) * mat4(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), max(_GLF_IDENTITY((vec4(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(mat4(-726.224, -0.3, -7.9, 2594.9634, 6.5, 69.93, 7537.0327, 9347.7105, -1.8, -60.37, -5127.5687, 25.55, 3148.7667, -0.1, 97.88, 82.27)) : _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), mix(vec4(_GLF_IDENTITY(((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(417.627))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], (_GLF_IDENTITY(((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * mat4(1.0), ((((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * mat4(1.0)) * mat4(1.0)))[0]) - 0.0), _GLF_FUZZED(-6609.0296), ((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(1.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x4(1.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(1.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-0.7) : float(mat3x4(1.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], ((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-9383.9247) : injectionSwitch[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(772.741)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[3]), vec4(_GLF_FUZZED(-32.76), ((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_FUZZED(-8.8), _GLF_FUZZED(-6955.6732)), bvec4(false, true, false, false))), (vec4(1.0)) * mat4(1.0))), mix(vec4((_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), ((mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-510.183)), float((1.0)), bool(true))) : _GLF_FUZZED(-655.226)))))), 1.0, 0.0, 0.0))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-46.92)))))), (vec4(1.0)) * mat4(1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(-673.778), (_GLF_FUZZED(-673.778)) - 0.0), _GLF_FUZZED(-7.8), _GLF_IDENTITY(_GLF_FUZZED(-20.67), 1.0 * (_GLF_FUZZED(-20.67)))), vec4(_GLF_FUZZED(_GLF_IDENTITY(-8784.8893, (true ? _GLF_IDENTITY(-8784.8893, mix(float(-8784.8893), float(_GLF_FUZZED(505.958)), bool(false))) : _GLF_FUZZED(48.16)))), (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch.y) : _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)))))) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), mix(float(_GLF_FUZZED(-1711.2114)), float(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (vec4(1.0)) * mat4(1.0))))[1], (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), _GLF_IDENTITY(max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(869.993, 84.47, 22.91, -62.98, -773.025, -5.9, -91.36, -9.1, 5.6, -6.1, -60.42, -5.7, 5291.9664, -3773.6530, 7.8, -9969.0210)) : mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (true ? _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec4(8481.0316, 1.3, 4.1, 3020.7115))))), clamp(max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(869.993, 84.47, 22.91, -62.98, -773.025, -5.9, -91.36, -9.1, 5.6, -6.1, -60.42, -5.7, 5291.9664, -3773.6530, 7.8, -9969.0210)) : mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (true ? _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec4(8481.0316, 1.3, 4.1, 3020.7115))))), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(869.993, 84.47, 22.91, -62.98, -773.025, -5.9, -91.36, -9.1, 5.6, -6.1, -60.42, -5.7, 5291.9664, -3773.6530, 7.8, -9969.0210)) : mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (true ? _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec4(8481.0316, 1.3, 4.1, 3020.7115))))), _GLF_IDENTITY(max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(869.993, 84.47, 22.91, -62.98, -773.025, -5.9, -91.36, -9.1, 5.6, -6.1, -60.42, -5.7, 5291.9664, -3773.6530, 7.8, -9969.0210)) : mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (true ? _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec4(8481.0316, 1.3, 4.1, 3020.7115))))), (max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(869.993, 84.47, 22.91, -62.98, -773.025, -5.9, -91.36, -9.1, 5.6, -6.1, -60.42, -5.7, 5291.9664, -3773.6530, 7.8, -9969.0210)) : mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), (true ? _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(vec4(8481.0316, 1.3, 4.1, 3020.7115)))))) - vec4(0.0, 0.0, 0.0, 0.0))))))[2], (_GLF_IDENTITY((vec4(1.0)) * mat4(1.0), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-9.1, 3.7, 90.38).p), _GLF_FUZZED(32.30)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y))), (vec4(1.0)) * mat4(1.0))))[3]), bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), _GLF_IDENTITY(true, true && (true)), true, true)))) * _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((vec4(1.0)) * mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(degrees(60.55)) : _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0))), injectionSwitch[1])).y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (vec4(1.0)) * mat4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), mat3x2(1.0), ivec3(1), bvec2(true), gl_SubgroupSize, bvec4(true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482), min(vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482), max(vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482), mix(vec2(_GLF_FUZZED(984.798), (vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482))[1]), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482))[0], mix(float(_GLF_FUZZED(-756.671)), float((vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482))[0]), bool(true))), _GLF_FUZZED(19.82)), bvec2(true, false))))), (false ? _GLF_FUZZED(vec2(-0.0, 21.99)) : vec2(_GLF_IDENTITY(-3.0, min(_GLF_IDENTITY(-3.0, clamp(-3.0, _GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(3.0))), -3.0)), -3.0)), -2180.1482))))))))))).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7226.9270) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.48)))))), 0.0 + (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-3.0, -2180.1482)), mat2(1.0) * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-3.0, -2180.1482))))))))).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7226.9270) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.48))))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((true ? int(6) : _GLF_FUZZED(_injected_loop_counter)), ((true ? int(6) : _GLF_FUZZED(_injected_loop_counter))) | 0)), int(6))))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0, ((int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0) | (_GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0, clamp((int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0, _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0, min((int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0, (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0)), (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0))))), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))))) / 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (_GLF_IDENTITY(~ (0), (~ (0)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))))))), 0 | ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (_GLF_IDENTITY(~ (0), (~ (0)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))), (false ? _GLF_FUZZED(23651) : _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), 0 + (~ (0))))), (~ (0)) | (~ (0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), 0 + (~ (0))))), (~ (0)) | (~ (0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), 0 + (~ (0))))), (~ (0)) | (~ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), 0 + (~ (0))))), (~ (0)) | (~ (0))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), 0 + (~ (0))))), (~ (0)) | (~ (0)))))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))))))))))))) | (int(0))))) >> _GLF_IDENTITY(int(0), int(0)))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(bitfieldExtract(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), 36083, ivec3(37625, 86879, -11787)[0])) : int(6))), (_GLF_IDENTITY(true ? int(6) : _GLF_FUZZED(_injected_loop_counter), ~ (~ (true ? int(6) : _GLF_FUZZED(_injected_loop_counter)))))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), clamp(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))))))) | (int(0)))), int(ivec3(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (_GLF_IDENTITY(0, (0) | (0)))) + 0))), (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) << (0 & -91934))) << 0)), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) ^ 0), _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))), (~ (0)), (~ (0)))) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))), min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) | (~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0)) | (~ (0))), clamp(~ ((~ (0)) | (~ (0))), ~ ((~ (0)) | (~ (0))), _GLF_IDENTITY(~ ((~ (0)) | (~ (0))), (~ ((~ (0)) | (~ (0)))) | 0)))))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> 0) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), max(_GLF_IDENTITY(~ (0), ~ (~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))), ~ (0))), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) ^ 0))), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))))))))))))) | (_GLF_IDENTITY(int(0), min(int(0), int(0)))))), 0, 0)))) >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(bitfieldExtract(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), 36083, ivec3(37625, 86879, -11787)[0])) : int(6))), (_GLF_IDENTITY(true ? int(6) : _GLF_FUZZED(_injected_loop_counter), ~ (~ (true ? int(6) : _GLF_FUZZED(_injected_loop_counter)))))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), clamp(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))))))) | (int(0)))), int(ivec3(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (_GLF_IDENTITY(0, (0) | (0)))) + 0))), (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) << (0 & -91934))) << 0)), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) ^ 0), _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))), (~ (0)), (~ (0)))) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))), min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) | (~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0)) | (~ (0))), clamp(~ ((~ (0)) | (~ (0))), ~ ((~ (0)) | (~ (0))), _GLF_IDENTITY(~ ((~ (0)) | (~ (0))), (~ ((~ (0)) | (~ (0)))) | 0)))))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> 0) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), max(_GLF_IDENTITY(~ (0), ~ (~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))), ~ (0))), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) ^ 0))), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))))))))))))) | (_GLF_IDENTITY(int(0), min(int(0), int(0)))))), 0, 0)))) >> _GLF_IDENTITY(int(0), int(0))))), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(bitfieldExtract(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), 36083, ivec3(37625, 86879, -11787)[0])) : int(6))), (_GLF_IDENTITY(true ? int(6) : _GLF_FUZZED(_injected_loop_counter), ~ (~ (true ? int(6) : _GLF_FUZZED(_injected_loop_counter)))))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), clamp(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))))))))))) | (int(0)))), int(ivec3(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (_GLF_IDENTITY(0, (0) | (0)))) + 0))), (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6)))))) >> 0), int(_GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) << (0 & -91934))) << 0)), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), int(6))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) ^ 0), _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))), (~ (0)), (~ (0)))) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))), min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) | (~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0)) | (~ (0))), clamp(~ ((~ (0)) | (~ (0))), ~ ((~ (0)) | (~ (0))), _GLF_IDENTITY(~ ((~ (0)) | (~ (0))), (~ ((~ (0)) | (~ (0)))) | 0)))))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0))))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> 0) : int(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), max(_GLF_IDENTITY(~ (0), ~ (~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))), ~ (0))), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) ^ 0))), (~ (0)) | (~ (0)))) >> 0)))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), min(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) >> 0)))))))))))))) | (_GLF_IDENTITY(int(0), min(int(0), int(0)))))), 0, 0)))) >> _GLF_IDENTITY(int(0), int(0))))), false, false, false)))) && true))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-62.15)), clamp(float(_GLF_FUZZED(-62.15)), float(_GLF_FUZZED(-62.15)), _GLF_IDENTITY(float(_GLF_FUZZED(-62.15)), clamp(float(_GLF_FUZZED(-62.15)), float(_GLF_FUZZED(-62.15)), float(_GLF_FUZZED(-62.15)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), false || (bool(bvec4((false), true, false, true))))) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) || false))), ! (! (bool(! (_GLF_IDENTITY(false, (false) || false))))))))))))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | 0), true && (_injected_loop_counter < (1 | 0)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
      barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(70529))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), mix(vec2(_GLF_FUZZED(-37.40), _GLF_FUZZED(7.3)), vec2((vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[0], (vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[1]), bvec2(true, true)))))).x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, ~ (~ (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_5._f1._f3.subgroup_size, 0u), max(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_5._f1._f3.subgroup_size, 0u), (uvec2(_GLF_struct_replacement_5._f1._f3.subgroup_size, 0u)) / uvec2(1u, 1u)), uvec2(_GLF_struct_replacement_5._f1._f3.subgroup_size, 0u))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (true ? _GLF_struct_replacement_5._f1._f3.subgroup_size : _GLF_FUZZED(subgroup_local_id))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, clamp(_GLF_struct_replacement_5._f1._f3.subgroup_size, _GLF_struct_replacement_5._f1._f3.subgroup_size, _GLF_struct_replacement_5._f1._f3.subgroup_size))) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(124787u) : 0u))))) | (0u))) | 0u)), uint(0u)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u)))))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) / 1u)), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), max((_GLF_struct_replacement_5._f1._f3.subgroup_size), (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))))) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.2)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), ((_GLF_struct_replacement_5._f1._f3.subgroup_size)) >> 0u)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))) | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) / 1u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))))), ~ (~ (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size), clamp(_GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size), 1u * ((_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size), _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size), ~ (~ ((_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))))), min(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) ^ 0u)) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))), 0u + ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))) | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) / 1u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))))))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) - 0u, min((uint(0u)) - 0u, (uint(0u)) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), uint(0u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) | ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), clamp(_GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), ((_GLF_struct_replacement_5._f1._f3.subgroup_size)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), min((_GLF_struct_replacement_5._f1._f3.subgroup_size), (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) * 1u), _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), ((_GLF_struct_replacement_5._f1._f3.subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))))), 0u, 0u))) * 1u)), ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) ^ 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) ^ 0u))) | 0u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) ^ 0u))) | 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) ^ 0u))) | 0u)), uint(uvec3(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) ^ 0u))) | 0u)), 1u, 1u))), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) ^ 0u))) | 0u)))))), uint(0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u), _GLF_FUZZED(subgroup_id))))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) >> 0u) | _GLF_IDENTITY((0u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((0u), ((0u)) | 0u))))) | 0u)), uint(0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), uint(0u))))) - 0u)) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), ((_GLF_struct_replacement_5._f1._f3.subgroup_size)) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-508.072)), bool(false)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (_GLF_IDENTITY(uint(0u), uint(0u))))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1._f3.subgroup_size), max((_GLF_struct_replacement_5._f1._f3.subgroup_size), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_5._f1._f3.subgroup_size), 0u ^ (~ (_GLF_struct_replacement_5._f1._f3.subgroup_size))))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))))) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) | (_GLF_struct_replacement_5._f1._f3.subgroup_size)))) << 0u))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u)))), (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))) / 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))), (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))) / 1u) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u)), clamp(clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))), (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))) / 1u) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))), (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))) / 1u) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))), (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))))) / 1u) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1._f3.subgroup_size) * 1u))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f3.subgroup_size, (_GLF_struct_replacement_5._f1._f3.subgroup_size) ^ 0u)))) | 0u)) - 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % _GLF_struct_replacement_5._f1._f3.subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = (-81669 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_5._f1._f3.subgroup_size, false || (subgroup_local_id + 1 < _GLF_struct_replacement_5._f1._f3.subgroup_size)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_5._f1._f3.subgroup_size, false || (subgroup_local_id + 1 < _GLF_struct_replacement_5._f1._f3.subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_5._f1._f3.subgroup_size, false || (subgroup_local_id + 1 < _GLF_struct_replacement_5._f1._f3.subgroup_size))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))], read, 4, 64, 4);
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), false), true)))))))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             subgroupAll(false);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY(0, min(0, 0)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.1, (-4.1) / abs(1.0))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec2(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, sqrt(length(vec3(0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 & 1))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0, 1.0)), float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat3x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(365.981)), float(1.0), bool(true))))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, cos(0.0)), transpose(transpose(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(_GLF_IDENTITY(0.0, (0.0) / 1.0)), log(1.0), 1.0, cos(0.0)))))), clamp(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, cos(0.0)), transpose(transpose(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, cos(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9438.5615)), float(0.0), bool(true))) : _GLF_FUZZED(403.669))))))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, cos(0.0)), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(float(169708u))), bool(false)))))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0)))), float(_GLF_FUZZED(-0.5)), bool(false)))), transpose(transpose(mat4x2(injectionSwitch, abs(1.0), 0.0, abs(0.0), log(1.0), 1.0, cos(0.0))))))))).x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))) && true))), false, true))))))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
                barrier();
              }
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), max(vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)))) || false), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7894.3661) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7565.4857))))), 1.0))) - 0.0)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)))) || false), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7894.3661) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7565.4857))))), 1.0))) - 0.0)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true)) || false)), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)))) || false), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7894.3661) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7565.4857))))), 1.0))) - 0.0)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false))), bool(bool((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false))))))))))))))))))));
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-23280) : 4)));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))));
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true) && _GLF_IDENTITY(true, true && (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, bool(bool(true))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, abs(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, abs(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), true, true))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), true, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), true, true))), true)))))) && true)))))), false), true, true)))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(863.851), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((vec3(-1.8, -2.3, -54.31) * -4.5).y)), bvec2(true, false))).y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false))), true, true)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           subgroupAll(true);
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(9.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(9.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) * mat2(1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(vec3(-3.7, 7591.4589, -0.2).b)), float(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5766.6316)))), bool(true)))), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(9.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) && _GLF_IDENTITY(true, (true) || false))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
