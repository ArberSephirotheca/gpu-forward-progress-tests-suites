#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_33 {
 mat3x2 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 mat3 _f3;
 mat2x3 _f4;
 uint subgroup_id;
 uvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
} ;

struct _GLF_struct_30 {
 mat3x2 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 uint _f3;
 uvec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_29 {
 bvec3 _f0;
 ivec4 _f1;
 int _f2;
 mat3x4 _f3;
 bvec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_28 {
 ivec4 _f0;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 mat2x3 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 uint read_val;
 vec2 _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_31 _f0;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 vec3 _f1;
 mat4 _f2;
 int _f3;
 mat2 _f4;
} ;

struct _GLF_struct_24 {
 bvec4 _f0;
} ;

struct _GLF_struct_23 {
 bool _f0;
 mat2 _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 mat2x3 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 bvec3 _f1;
 float _f2;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 bool _f1;
 bvec3 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
 mat4 _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
 bvec3 _f1;
 mat4x2 _f2;
 mat4 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 ivec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 uvec4 _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 uvec2 _f1;
 ivec3 _f2;
 bvec2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uint num_workgroup;
 bvec2 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 uint _f1;
 int _f2;
 vec4 _f3;
 uvec3 _f4;
 vec2 _f5;
 float _f6;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 ivec3 _f1;
 uint _f2;
 bvec2 _f3;
 bool _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_11 {
 int _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_17 _f2;
 bvec3 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_26 _f5;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat3 _f1;
 int _f2;
 ivec3 _f3;
 ivec3 _f4;
 float _f5;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 uvec2 _f3;
 uint workgroup_size;
 bvec3 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 bvec3 _f1;
 _GLF_struct_2 _f2;
 uvec2 _f3;
 bvec3 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 uint subgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_35 _GLF_struct_replacement_35 = _GLF_struct_35(_GLF_struct_34(_GLF_struct_33(mat3x2(1.0), bvec3(true), mat2x3(1.0), mat3(1.0), mat2x3(1.0), gl_SubgroupID, uvec2(1u), bvec4(true)), uvec3(1u)));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_11(1, _GLF_struct_9(vec3(1.0), ivec3(1), 1u, bvec2(true), true, ivec3(1)), _GLF_struct_10(ivec4(1), 1u, 1, vec4(1.0), uvec3(1u), vec2(1.0), 1.0)), _GLF_struct_14(_GLF_struct_12(mat3(1.0)), gl_NumWorkGroups.x, bvec2(true), _GLF_struct_13(bvec3(true), uvec2(1u), ivec3(1), bvec2(true), bvec3(true))), _GLF_struct_17(_GLF_struct_15(mat4x3(1.0), uvec4(1u), mat2x3(1.0), ivec2(1), ivec2(1)), uvec4(1u), _GLF_struct_16(true, bvec3(true), mat4x2(1.0), mat4(1.0), mat3x4(1.0), mat4x3(1.0))), bvec3(true), _GLF_struct_22(_GLF_struct_18(mat4x3(1.0), mat2x4(1.0)), true, bvec3(true), _GLF_struct_19(vec3(1.0), mat4(1.0)), _GLF_struct_20(mat2(1.0), uvec4(1u)), mat4(1.0), _GLF_struct_21(uvec2(1u), bvec3(true), 1.0)), _GLF_struct_26(_GLF_struct_23(true, mat2(1.0)), mat2x3(1.0), _GLF_struct_24(bvec4(true)), _GLF_struct_25(vec4(1.0), vec3(1.0), mat4(1.0), 1, mat2(1.0)), mat2x3(1.0)));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec4(1), bvec3(true), _GLF_struct_2(mat3x2(1.0), _GLF_struct_1(bvec3(true), mat2x4(1.0), uvec2(1u), uvec2(1u), gl_WorkGroupSize.x, bvec3(true), bvec3(true), mat2(1.0))), uvec2(1u), bvec3(true), _GLF_struct_7(_GLF_struct_3(mat4x2(1.0), mat3x2(1.0)), mat3x2(1.0), ivec2(1), _GLF_struct_4(bvec3(true)), _GLF_struct_5(1, mat3(1.0), 1, ivec3(1), ivec3(1), 1.0), _GLF_struct_6(ivec4(1))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_8._f2._f1.workgroup_size * workgroup_id;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec4(1.0), _GLF_struct_replacement_35._f0._f0.subgroup_id * subgroup_size);
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_base + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_31(_GLF_struct_28(ivec4(1)), mat2x3(1.0), _GLF_struct_29(bvec3(true), ivec4(1), 1, mat3x4(1.0), bvec2(true), uvec2(1u)), _GLF_struct_30(mat3x2(1.0), mat4x3(1.0), bvec2(true), 1u, uvec3(1u), true), atomicLoad(write_val, 4, 64, 2), vec2(1.0)));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_32._f0.read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
