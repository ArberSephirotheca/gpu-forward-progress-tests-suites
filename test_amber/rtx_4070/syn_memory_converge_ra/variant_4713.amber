#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 uint _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 vec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 ivec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat2x3 _f1;
 float _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 vec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 uint workgroup_base;
 vec4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat3x2 _f1;
 mat4 _f2;
 _GLF_struct_4 _f3;
 uvec3 _f4;
 vec4 _f5;
 _GLF_struct_5 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_FUZZED(-6459.1883)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6802.2730), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(2.0, 2.5).x)), bvec2(true, false))), 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0), transpose(transpose(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))) || false), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), false, true, false)), true && (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.9) : injectionSwitch.x))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(7.9) : injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.19), _GLF_FUZZED(-6.7)), bvec2(false, false))).y) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.0))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true)))))))) && true))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])) + vec2(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])) + vec2(0.0, 0.0))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED(_GLF_IDENTITY((41963u * subgroup_id), min(_GLF_IDENTITY((41963u * subgroup_id), min((41963u * subgroup_id), (41963u * subgroup_id))), (41963u * subgroup_id))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, (0u | 0u)))), 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(184759u, 57909u, 199761u)) : _GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, _GLF_IDENTITY(0u, (1u ^ 1u) | (0u)), 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) ^ (clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID))), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) + 0u))))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(172400u, (172400u) | (172400u)), 8687u, 120104u)) : _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << (74599u & 0u)), uint(uvec4(0u, 1u, (0u | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(184759u, 57909u, 199761u)) : _GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))))), uvec3(0u, 0u, 0u) ^ (clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(184759u, 57909u, 199761u)) : _GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) | (gl_WorkGroupID)), clamp(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) ^ (clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), 0u | 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(184759u, 57909u, 199761u)) : _GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))), uvec3(uvec3(_GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(184759u, 57909u, 199761u)) : _GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))))))), uvec3(0u, 0u, 0u) ^ (clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) ^ uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), _GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID)))))), max(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID)))))), uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(172400u, 8687u, 120104u)) : gl_WorkGroupID)))))))))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))), max(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(0u, (0u) << 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(184759u, 57909u, 199761u)) : _GLF_IDENTITY(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.9)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), 0.0, abs(1.0), 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! _GLF_IDENTITY((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))))))), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1u, mat3x2(1.0), mat4(1.0), _GLF_struct_4(mat2x3(1.0), vec2(1.0), _GLF_struct_0(bvec3(true), mat2x3(1.0), _GLF_IDENTITY(1.0, float(vec2(1.0, tan(0.0))))), _GLF_struct_1(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((matrixCompMult(mat2(-8522.2891, 39.35, -112.680, -26.60), mat2(_GLF_IDENTITY(71.45, (true ? 71.45 : _GLF_FUZZED(-671.919))), -9.1, _GLF_IDENTITY(585.875, (585.875) - 0.0), -394.731)) + mat2(-3.2, -23.40, _GLF_IDENTITY(-7539.9349, max(-7539.9349, -7539.9349)), -405.220))))) + (mat2(1.0))), ivec2(1), uvec4(1u)), _GLF_struct_2(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1))))), max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1))), ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) << 0))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))))))), mat2x3(1.0), mat4x2(1.0), mat3x2(1.0), bvec2(true)), workgroup_size * workgroup_id, _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.8)), bool(false))))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_IDENTITY(1.0 * (0.0), (_GLF_IDENTITY(1.0 * (0.0), min(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) + (1.0)) * (0.0), 1.0 * (0.0)))) / 1.0)), float(_GLF_FUZZED(-53.20)), bool(false)))), min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))))), (_GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.8)), bool(false))))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_IDENTITY(1.0 * (0.0), (_GLF_IDENTITY(1.0 * (0.0), min(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0), 0.0)) + (1.0)) * (0.0), 1.0 * (0.0)))) / 1.0)), float(_GLF_FUZZED(-53.20)), bool(false)))), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(float(mat2(min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), tan(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x3(float(mat2(min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), tan(0.0), 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(float(mat4x3(float(mat2(min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), tan(0.0), 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(9.2)), bool(false))))))), max((vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.8)), bool(false))))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_IDENTITY(1.0 * (0.0), (_GLF_IDENTITY(1.0 * (0.0), min(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) + (1.0)) * (0.0), 1.0 * (0.0)))) / 1.0)), float(_GLF_FUZZED(-53.20)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))), min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))))), (vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.8)), bool(false))))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_IDENTITY(1.0 * _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat3x4((0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3x4((0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)), (_GLF_IDENTITY(1.0 * (0.0), min(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(43756))), bool(false)))) / 1.0), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(1.0)), bool(false)))), 0.0)) + (1.0)) * (0.0), 1.0 * (0.0)))) / 1.0)), float(_GLF_FUZZED(-53.20)), bool(false)))), min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))))))) - vec4(0.0, 0.0, 0.0, 0.0))), _GLF_struct_3(ivec3(1), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(62.46) : sin(0.0))), abs(1.0), log(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), length(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-622.850))), sin(0.0), 1.0), _GLF_IDENTITY((mat3x4(1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6338.1014) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), sin(0.0), abs(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2.1)))), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 1.0)) * mat3(1.0), transpose(transpose((mat3x4(1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)))) - abs(0.0)), 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7.6)), float(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)))) - abs(0.0)), 1.0, 1.0, 1.0)))), bool(true))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), abs(1.0), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)) * mat3(1.0))))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), abs(1.0), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-622.850))), sin(0.0), 1.0), _GLF_IDENTITY((mat3x4(1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6338.1014) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), sin(0.0), abs(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2.1)))), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 1.0)) * mat3(1.0), transpose(transpose((mat3x4(1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), abs(1.0), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)) * mat3(1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), abs(1.0), log(1.0), length(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-622.850))), sin(0.0), 1.0), _GLF_IDENTITY((mat3x4(1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6338.1014) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), sin(0.0), abs(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2.1)))), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 1.0)) * mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(transpose((mat3x4(1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-87.32 - -6.7))), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), abs(1.0), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)) * mat3(1.0))))))), 0.0 + (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), sin(0.0), abs(1.0), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-622.850))), sin(0.0), 1.0), _GLF_IDENTITY((mat3x4(1.0, _GLF_IDENTITY(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) * (1.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6338.1014) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6338.1014) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), sin(0.0), abs(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2.1)))), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 1.0)) * mat3(1.0), transpose(transpose((mat3x4(1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), abs(1.0), log(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)) * mat3(1.0)))))))))))), mat3x4(1.0))), uvec3(1u), vec4(1.0), _GLF_struct_5(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7519.9776) : injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) + 0.0)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u)) | 0u), 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, clamp(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, _GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, _GLF_struct_replacement_6._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u))), 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base, (1u | 1u) * (_GLF_struct_replacement_6._f3.workgroup_base)) + subgroup_base) << 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, (_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base) << 0u))))))), (_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (true ? _GLF_IDENTITY(0u, 0u | (0u)) : _GLF_FUZZED(subgroup_local_id))))), (min(_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, clamp(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base, (_GLF_struct_replacement_6._f3.workgroup_base) - 0u) + subgroup_base, _GLF_struct_replacement_6._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, 1u))))), _GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f3.workgroup_base, (_GLF_struct_replacement_6._f3.workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + subgroup_base), ~ (~ ((_GLF_struct_replacement_6._f3.workgroup_base + subgroup_base)))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), _GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))) << 0u)) >> 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), max(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), (_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))) * 1u))))) | ((_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), ~ (virtual_gid)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))), min(~ (virtual_gid), ~ (virtual_gid))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), _GLF_IDENTITY(min(~ (virtual_gid), ~ (virtual_gid)), (_GLF_IDENTITY(min(~ (virtual_gid), ~ (virtual_gid)), min(min(~ (virtual_gid), ~ (virtual_gid)), min(~ (virtual_gid), ~ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), uint(_GLF_IDENTITY(uvec3(~ (virtual_gid), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(~ (virtual_gid), 0u, 1u)))))))))))) >> 0u))))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec2((virtual_gid), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), min(uint(uvec2((virtual_gid), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(uint(uvec2((virtual_gid), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (true ? uint(uvec2((virtual_gid), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) : _GLF_FUZZED(workgroup_size)))))), min(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (virtual_gid)))), ((_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))) | ((_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))) | ((virtual_gid)))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), ~ (~ (_GLF_FUZZED(subgroup_base)))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))))) : uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (virtual_gid)))), ((_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u)))), ~ (virtual_gid))))) | ((_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (virtual_gid)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (virtual_gid)))), ((_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))))))))), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))), ~ (virtual_gid)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u), min(~ (virtual_gid), ~ (virtual_gid))))) | ((_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | 0u))), clamp(uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) - 0u), uint(virtual_gid))), _GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)), (true ? uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) : _GLF_FUZZED(uvec4(122777u, 126454u, 12316u, 53234u)[3])))) / 1u, ((uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u))) / 1u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) ^ 0u), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, 0u ^ (write_val)), 4, _GLF_IDENTITY(64, int(int(64))), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
