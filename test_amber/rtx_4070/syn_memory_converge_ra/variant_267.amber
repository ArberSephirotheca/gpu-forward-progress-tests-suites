#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec2((true), false)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), _GLF_IDENTITY(bool(bvec2(false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), true)), (bool(bvec2(false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), true))) || false)))) && (bool(_GLF_DEAD(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))) && true)))), true && (true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), bool(bvec4(true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (true && (bool(_GLF_DEAD(false)))) && true)) || false)))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), false || (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) && (! (false)))))))) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false)), (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false))) || false)))))))))))) || _GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(-37460))), vec2(_GLF_FUZZED(vec3(-188.012, 47.68, 102.580).z), (injectionSwitch)[1]), bvec2(false, true))))).y)) && _GLF_IDENTITY((! (false)), true && ((! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false)), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) && (! (false)))))))) || false))))))) || _GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_DEAD(false)))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false)), false || (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))) || false))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (bool(_GLF_DEAD(false)))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) && true)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))))), ! (! (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY(true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bool((bool(_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bool((bool(_GLF_DEAD(false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))) && (bool(_GLF_DEAD(false))))))))))))))))))))))), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(-284.463)) : _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))), true && (bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), true), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), true), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), true), true)))))))))) || false))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (false), true, false))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), min(float(vec3(injectionSwitch.x, 0.0, 1.0)), float(vec3(injectionSwitch.x, 0.0, 1.0))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.8)))) - determinant(mat2(sqrt(0.0), sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat3x4(mat2(injectionSwitch, 0.0, 1.0))))))))).x)) > injectionSwitch.y)) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), false, true)))))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))) || false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))))))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(mat4x3(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(sin(0.0)), 1.0, 0.0)))))))) / vec2(1.0, 1.0))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))).x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (false) || false)))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(mat2x3(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, sin(0.0), 0.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-3.9))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)) : _GLF_FUZZED(-3.9)))) / 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), false || (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))) || (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false) || (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false) || (false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, true, false, true)), bool(bool(bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))) || false, true, false, true)))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(float(min(injectionSwitch.y, injectionSwitch.y))))) / 1.0), min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(34.35)), bool(false)))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(34.35)), bool(false)))), ((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(34.35)), bool(false))))) / 1.0))) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(598.148, 82.85)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, _GLF_IDENTITY(true, (true) && true))), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, _GLF_IDENTITY(true, (true) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), ~ (~ ((gl_WorkGroupSize.x)))) - _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)) | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)) | 0u)) >> 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(61.97))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), false || (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), ! (! ((false)))))), false || (! (false))))), ! (! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))) || false)), ! (! ((false)))))), false || (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)))))))) && true)) || false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.93)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(67.23) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.93)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(67.23) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(30.93)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(67.23) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -6.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.93)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(67.23), log(determinant(mat2(1.0, 1.0, 0.0, 1.0))) + (_GLF_FUZZED(67.23))) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.9))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0))))) * mat2(1.0)))[0], _GLF_FUZZED(93.00)), vec2(_GLF_FUZZED(953.772), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_DEAD(false)))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, true))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true), true, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true), true, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true), true, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.5))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (_GLF_IDENTITY(false, ! (! (false))))) || false)), bool(bvec2(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (_GLF_IDENTITY(false, ! (! (false))))) || false)), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-48.32)))) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6975.6687) : _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0, 1.0, 1.0))))) > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    break;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8429.2456)), float(0.0), bool(true)))) + 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, sin(0.0))))), float(_GLF_FUZZED((float(52966) * -80.73))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, log(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))).y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2))))))))) | (0 ^ 0))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (0 ^ 0) + (int(2)))) ^ 0)) / 1))))))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (0 << _GLF_IDENTITY(int(8), int(8)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))), 0 + (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) + 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(ivec2(0 << _GLF_IDENTITY(int(5), int(5)), 1)))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2)))) | 0))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), false, false, false))))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2))))))))) | (0 ^ 0))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (0 ^ 0) + (int(2)))) ^ 0)) / 1))))))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (0 << _GLF_IDENTITY(int(8), int(8)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))), 0 + (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) + 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(ivec2(0 << _GLF_IDENTITY(int(5), int(5)), 1)))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2)))) | 0))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), false, false, false))))) || false))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2))))))))) | (0 ^ 0))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (0 ^ 0) + (int(2)))) ^ 0)) / 1))))))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (0 << _GLF_IDENTITY(int(8), int(8)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))), 0 + (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) + 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(ivec2(0 << _GLF_IDENTITY(int(5), int(5)), 1)))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2)))) | 0))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), false, false, false))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (1 ^ 0) * ((1 << _GLF_IDENTITY(int(2), int(2))))))))) | (0 ^ 0))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (0 ^ 0) + (int(2)))) ^ 0)) / 1))))))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - (0 << _GLF_IDENTITY(int(8), int(8)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))), 0 + (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | _GLF_IDENTITY((int(2)), ((int(2))) + 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(ivec2(0 << _GLF_IDENTITY(int(5), int(5)), 1)))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(2)))))))) * 1)) * (1 | 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9940))))), int(2)))) | 0))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(int(int(2))))) | (int(2))), int(2)))))), false, false, false))))) || false))), false, true)), true, true, true)))))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), ~ (~ (int(int(_injected_loop_counter))))))) * int(_GLF_ONE(1.0, injectionSwitch.y))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), clamp((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) / 1)) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2))), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (_GLF_IDENTITY(0, int(ivec2(0, 1))) << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (0 << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (0 << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (0 << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (0 << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)), max(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (0 << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) + (0 << _GLF_IDENTITY(int(3), int(3)))), int(2))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), (int(_GLF_IDENTITY(5, (5) >> 0))) - 0), (int(5)) ^ (1 ^ 1)), int(5))) | (int(2))))) >> _GLF_IDENTITY(int(2), int(2))))))), (bool(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(int(1), max(int(1), int(1)))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(int(1), max(int(1), int(1)))))), 0 | (int(_GLF_IDENTITY(int(1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(int(1), max(int(1), int(1)))))))) : _GLF_FUZZED(_injected_loop_counter)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec3(2, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(_GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(2)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-79731) : int(int(2))))))) | (int(2))), int(2)))))))) || false))), true && (_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * (_GLF_IDENTITY(int(2), int(2)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * (_GLF_IDENTITY(int(2), int(2))))) | 0)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec4(_GLF_IDENTITY(int(2), (int(2)) << 0), 1, 0, 1))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) | (ivec2(2, 0)))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))))))), (bool(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(int(2), 1, 0, (0 | 1)))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(int(int(2)), int(ivec2(int(int(2)), 1)))))) | (int(2))), int(2)))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) | (ivec2(2, 0)))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))))))), (bool(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(int(2), 1, 0, (0 | 1)))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(int(int(2)), int(ivec2(int(int(2)), 1)))))) | (int(2))), int(2)))))))) || false))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) | (ivec2(2, 0)))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bool(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) | (int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))))))), (bool(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(int(2), 1, 0, (0 | 1)))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(int(int(2)), int(ivec2(int(int(2)), 1)))))) | (int(2))), int(2)))))))) || false)))) && true))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bvec2(! (! (! (true))), true)), false || (bool(bvec2(! (! (! (true))), true)))))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.0)), float(1.0), bool(true))), 1.0) * (injectionSwitch))), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(0.0) + (injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, true))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        return;
       break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.1, -1.4)) : injectionSwitch, mix(vec2(_GLF_FUZZED(float(64410)), _GLF_FUZZED(-92.21)), vec2((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch)[1]), vec2(_GLF_FUZZED(-8861.8559), _GLF_FUZZED((+ -809.015))), bvec2(false, false))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5.1, clamp(_GLF_IDENTITY(5.1, (true ? _GLF_IDENTITY(5.1, max(5.1, 5.1)) : _GLF_FUZZED(-4754.1537))), 5.1, 5.1)), -1.4)) : injectionSwitch)))))[0], (false ? _GLF_FUZZED(vec2(5.1, -1.4)) : injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        continue;
      }
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, false))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.9, mix(float(9.9), float(_GLF_FUZZED(934.238)), bool(false)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(52.78)), bvec2(true, false)))) / vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(52.78)), bvec2(true, false)))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(932.497), _GLF_FUZZED(6897.8099)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(52.78)), bvec2(true, false)))) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)), mix(vec2((mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)))[0], _GLF_FUZZED(-6972.3188)), vec2(_GLF_FUZZED(42.75), (mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)))[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(52.78)), bvec2(true, false)))))))[0], _GLF_FUZZED(-4.2)), vec2(_GLF_FUZZED(-9.1), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.9, max(9.9, 9.9))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))), mix(vec2((_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))))[0], (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))))[1]), vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(-4.6)), bvec2(false, false)))))[0], _GLF_FUZZED(52.78)), bvec2(true, false)))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(vec2(1.0, 1.0), cos(0.0), cos(0.0), 1.0, 0.0, 0.0, 0.0)))) * mat2(1.0))), injectionSwitch)).x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-34.36)), bool(false)))) < injectionSwitch.y))) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-34.36)), bool(false)))) < injectionSwitch.y))) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-34.36)), bool(false)))) < injectionSwitch.y))) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-34.36)), bool(false)))) < injectionSwitch.y))) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0), (mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(abs(0.0), 0.0, 0.0, 1.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-34.36)), bool(false)))) < injectionSwitch.y))) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) && true))), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), _GLF_IDENTITY(bool(bool(false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (bool(bool(false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.49)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, true)), false || (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), false, false, true)), false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, true))))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))))), false, false, _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, true))), bool(bool(_GLF_IDENTITY(false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, true))), bool(bvec2(false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false, true))), false)))))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false, true, false)))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(95810), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(95810)), (_GLF_IDENTITY((_GLF_FUZZED(95810)), clamp((_GLF_FUZZED(95810)), (_GLF_FUZZED(95810)), (_GLF_FUZZED(95810))))) << 0))) : 4, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED(95810), ~ (~ (_GLF_FUZZED(95810)))) : 4 : _GLF_FUZZED((-24860 + 94232))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(95810), _GLF_IDENTITY(int(ivec4(_GLF_FUZZED(95810), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), int(7))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(int(int(ivec4(_GLF_FUZZED(95810), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(67635)))) + 0) >> _GLF_IDENTITY(int(7), int(7))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))) : 4))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))), ~ (~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4)))))), ~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))))), min(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : _GLF_IDENTITY(4, (4) | 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4)), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))) + 0)))))))) + 0), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))))), min(~ ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))))), ~ ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))), int(ivec3(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))), 1, 0))), ~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(95810) : 4))))))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((subgroup_id ^ num_workgroup)) : read_val)))), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u, ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u) | 0u))))))), (false ? _GLF_FUZZED(read_val) : (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u, ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u) | 0u)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((subgroup_id ^ num_workgroup)) : read_val)))), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u, ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u) | 0u))))))), (false ? _GLF_FUZZED(read_val) : (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u, ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u) | 0u))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((subgroup_id ^ num_workgroup)) : read_val)))), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u, ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u) | 0u))))))), (false ? _GLF_FUZZED(read_val) : (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u, ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u) | 0u)))))))))))) << 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(238.344)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
