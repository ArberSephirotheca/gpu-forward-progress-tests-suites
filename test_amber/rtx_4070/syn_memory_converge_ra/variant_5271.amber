#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uvec4 _f0;
 mat4x3 _f1;
 uint _f2;
 uvec3 _f3;
 uint workgroup_size;
 vec4 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 vec2 _f1;
 mat4x2 _f2;
 bool _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat2x4 _f1;
 vec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 float _f0;
 ivec2 _f1;
 mat2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uint _f1;
 mat2x3 _f2;
 int _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat3 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_7 {
 uint subgroup_local_id;
 uvec4 _f0;
 _GLF_struct_1 _f1;
 uvec4 _f2;
 _GLF_struct_6 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(gl_SubgroupInvocationID, uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) / 1u), _GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_struct_1(mat4x3(1.0), mat3(1.0), _GLF_struct_0(mat2x3(1.0), 1u, mat2x3(1.0), 1, bvec2(true))), uvec4(1u), _GLF_struct_6(_GLF_struct_2(1.0, ivec2(1), mat2(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_3(1, mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-941.276))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec4(0.0, 0.0, log(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, log(1.0), 1.0))), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))), bvec2(_GLF_IDENTITY(true, (true) || false))), _GLF_struct_4(mat4x2(1.0), vec2(1.0), mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(470.229)), bool(false)), mix(float(mix(float(1.0), float(_GLF_FUZZED(470.229)), bool(false))), float(_GLF_FUZZED(-14.48)), bool(_GLF_IDENTITY(false, false || (false)))))), 1.0))))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), min(ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), clamp(ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), (ivec3(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))) | ivec3(0, 0, 0))))))), _GLF_struct_5(bvec4(true), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), uvec4(1u))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true, ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) * exp(0.0)) > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6799.4394)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_9(_GLF_struct_8(uvec4(1u), mat4x3(1.0), 1u, uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))), gl_WorkGroupSize.x, vec4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))), (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), ! (! _GLF_IDENTITY(((! (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec3((true) && true, false, true)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) + 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))) * 1.0) < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720)))))))), max(float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720)))))))), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720))))))))))) * 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), (true ? mat3x4(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, _GLF_IDENTITY(405.462, 1.0 * (_GLF_IDENTITY(405.462, min(405.462, 405.462)))), -121.042, -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720))))))))) * 1.0))) < injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720)))))))), max(float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720)))))))), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720))))))))))) * 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), (true ? mat3x4(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, _GLF_IDENTITY(405.462, 1.0 * (_GLF_IDENTITY(405.462, min(405.462, 405.462)))), -121.042, -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720))))))))) * 1.0))) < injectionSwitch.y))), false || ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720)))))))), max(float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720)))))))), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-9.0)), bool(false)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(903.069)), bool(false))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), (true ? mat3x4((injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, 405.462, _GLF_IDENTITY(-121.042, (-121.042) * 1.0), -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720))))))))))) * 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0), (true ? mat3x4(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-8.6, _GLF_IDENTITY(405.462, 1.0 * (_GLF_IDENTITY(405.462, min(405.462, 405.462)))), -121.042, -2.7, 65.49, 5559.4456, 5958.6100, -9.2, 5.1, 56.06, 93.87, -999.720))))))))) * 1.0))) < injectionSwitch.y))))))) || false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_10._f0._f0.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(445.466) : (injectionSwitch.y))) - length(vec2(0.0, 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(write_val), max(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))) : subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u | 0u))))))) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))))) < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))))) < injectionSwitch.y))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(674.105)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))) - 0.0)), bool(true)))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x) + _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((- -3.2), max((- -3.2), (- -3.2))))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(sqrt(1.0))), (true ? length(normalize(sqrt(1.0))) : _GLF_FUZZED(-2434.7712)))), 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0)), (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))) + 0.0), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -3.2))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, round(length(normalize(sqrt(1.0)))), 1.0))))) < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, 0u | (_GLF_struct_replacement_7.subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY((injectionSwitch), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))[1] : _GLF_FUZZED(1.7)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(15.47, max(_GLF_IDENTITY(15.47, max(15.47, 15.47)), 15.47))), _GLF_FUZZED(-399.230)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(15.47, clamp(15.47, 15.47, _GLF_IDENTITY(15.47, clamp(15.47, _GLF_IDENTITY(15.47, float(vec4(15.47, 1.0, 0.0, 0.0))), 15.47))))), _GLF_FUZZED(-399.230))), clamp(vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(15.47, clamp(15.47, 15.47, _GLF_IDENTITY(15.47, (15.47) / 1.0)))), _GLF_FUZZED(-399.230)), (vec2(_GLF_FUZZED(_GLF_IDENTITY(15.47, clamp(15.47, 15.47, _GLF_IDENTITY(15.47, (15.47) / 1.0)))), _GLF_FUZZED(-399.230))) / vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230))), min(vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230))), max(vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230))), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230)))))))))), vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230)))), bvec2(false, false))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), tan(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(5565.3416, -1.1)) : vec2(0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-758.611), _GLF_FUZZED(-42.28)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))[1]), vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(389.197)), float((injectionSwitch)[1]), bool(true)))) - 0.0)), vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230)), bvec2(false, false)))[0], _GLF_FUZZED(-5210.7072)), vec2(_GLF_FUZZED(-457.132), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(15.47), _GLF_FUZZED(-399.230)), bvec2(false, false)))[1]), bvec2(false, true)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * 1)) << 0), max(4, 4)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), (true ? _GLF_IDENTITY((4) | (4), 0 + ((4) | (4))) : _GLF_FUZZED(-12542)))), 4)))), 1, 0), clamp(ivec3(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), 1, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) * 1.0)) - 0.0)) | (4) : _GLF_FUZZED((-53254 % 41693))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), 0), ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1) | (4)), 1, 0))))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(ivec4(clamp(4, 4, 4), 0, 0, 0)), (int(ivec4(clamp(4, 4, 4), 0, 0, 0))) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), (clamp(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) * 1), 4)), 4)) + 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))])).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0))), 1.0), (_GLF_IDENTITY(mat2x3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0))), 1.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0))), 1.0))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-6598.8142)))), vec2(_GLF_FUZZED(-317.764), _GLF_FUZZED(1.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) * (injectionSwitch)).y) || false)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)) * (injectionSwitch)).y) || false, bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), true), false), true))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false), false)))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))))), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), true && (true && ((! (false)))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))))), false))))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, ! (! (true))) && ((! _GLF_IDENTITY((false), bool(bool((false))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false)))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false)))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))))))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false)))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))))))))), true)))))))))))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && ((! (false)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), (_GLF_IDENTITY(true && ((! (false))), false || (true && ((! (false)))))) && true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), false, true, false))) && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), false, true, false))) && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), false, true, false))) && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false), false))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))), true && (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, true && (true)) && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))) && ((! (false)))), true), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true)))), true && ((! (false)))), true), false), false)))), false))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, bool(bool(false))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), true && ((! (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), true && ((! (false)))), true), false)))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), false), false)))), false))))))))))))), false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), false || (bool((! (false))))))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), true && ((! (false)))), true), false), false)))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), bool(bvec4(true && ((! (false))), true, true, false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), ! (! ((false))))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), (_GLF_IDENTITY(true && ((! (false))), true && (_GLF_IDENTITY(true && ((! (false))), ! (! (true && ((_GLF_IDENTITY(! (false), true && (! (false))))))))))) && true)), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), _GLF_IDENTITY(false, true && (false))))))))))))))), false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), false || (bool((! (false))))))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), true && ((! (false)))), true), false), false)))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), bool(bvec4(true && ((! (false))), true, true, false)))), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), ! (! ((false))))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), false))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), (_GLF_IDENTITY(true && ((! (false))), true && (_GLF_IDENTITY(true && ((! (false))), ! (! (true && ((_GLF_IDENTITY(! (false), true && (! (false))))))))))) && true)), true), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false), false)))), _GLF_IDENTITY(false, true && (false))))))))))))))), false)), false))))))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || false)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || false)), false, true))))))), bool(bvec2(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)))))))))))), true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(1u * (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), ~ (~ (1u * (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))))), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) ^ 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) / (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(floatBitsToUint(-7.8))))) >> 0u))), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
