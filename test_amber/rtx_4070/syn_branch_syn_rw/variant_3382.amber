#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-87.62), 1.0 * (_GLF_FUZZED(-87.62)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6000.2366)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), 0.0, 0.0, 0.0, 0.0)), log(1.0), round(length(normalize(1.0))), 0.0))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asinh(-7.6)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (false ? _GLF_FUZZED(6.0) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u), (false ? _GLF_FUZZED((125533u - num_workgroup)) : 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u))), clamp(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) - 0u), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))), 1u, 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (workgroup_base)))), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) << 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ 0u), min(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y), min((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y), (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ 0u)), clamp((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y) ^ 0u)))) << 0u)))) << 0u) * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).z + _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id));
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid) >> 0u)) + 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec4(0u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(0u, (0u) / 1u), 1u, 0u)))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (false ? _GLF_FUZZED(clamp(workgroup_size, workgroup_base, workgroup_id)) : GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))), bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid))).z, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z)))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z))))))) | (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z))))) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z);
 uint read = atomicLoad(buf[GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0))), min(vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0))), vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0)))))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0))))) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(12.19) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0))))) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(12.19) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, length(vec2(0.0, 0.0))))) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(12.19) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), false, true))) || false)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9867.1170)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-9867.1170), float(mat3x4(_GLF_FUZZED(-9867.1170), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0))))), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0))))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), true))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-8645))))))], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-913.193), _GLF_FUZZED(7821.4211)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0)), bvec2(true, true))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-8.6, 49.82, 3378.4404, 3.9).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90572))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * vec2(1.0, 1.0)).y))), true))) && _GLF_IDENTITY(true, false || (true)))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))), (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, exp(0.0))), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, exp(0.0))))), transpose(transpose(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, exp(0.0))), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, exp(0.0)))))))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x3(0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0))))))), float(_GLF_FUZZED(vec4(280.829, 7023.3994, -97.92, 6.4).s)), bool(false))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.8)), bool(false))))), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, sin(0.0), sin(0.0), 0.0))), 1.0, 0.0), (mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat3(1.0))))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, abs(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0)))) / abs(1.0))))), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), abs(1.0)))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8053.8126)), float(0.0), bool(true))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), float(mat3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(-9502.6228), _GLF_FUZZED(-3955.8189)), vec3(_GLF_FUZZED(8.4), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8053.8126)), float(0.0), bool(true))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), float(mat3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(-9502.6228), _GLF_FUZZED(-3955.8189)), vec3(_GLF_FUZZED(8.4), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8053.8126)), float(0.0), bool(true))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), float(mat3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(-9502.6228), _GLF_FUZZED(-3955.8189)), vec3(_GLF_FUZZED(8.4), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8053.8126)), float(0.0), bool(true))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), float(mat3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(-9502.6228), _GLF_FUZZED(-3955.8189)), vec3(_GLF_FUZZED(8.4), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false))))), float(_GLF_FUZZED(-88.77)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8053.8126)), _GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(-1.9)), float(float(0.0)), bool(true))), bool(true))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(652.813)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-498.327)))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), float(mat3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(-9502.6228), _GLF_FUZZED(-3955.8189)), vec3(_GLF_FUZZED(8.4), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0)), mix(float(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4732.1074)), bool(false)))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1)))), (_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1))))) | (_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1))))))), uint(uvec2(~ ((uint(1))), 1u))))) | (uint(1)))) - 0u)) | (uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)), max((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) / 1u)), (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))))) | (uint(1)))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) >> 0u)))) | 0u)), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).z), bool(_GLF_IDENTITY(bvec2(! (subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, (true ? GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid : _GLF_FUZZED(uvec4(102100u, 131876u, 54629u, 174644u)))).z), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bvec2(bvec4(bvec2(! (subgroup_local_id + 1 < GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z), false), true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, ! (! (false))), true)), false || (bool(bvec4(false, false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
        barrier();
       return;
      }
    }
   atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))).w], GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), (4))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), _GLF_IDENTITY((false ? _GLF_FUZZED(i) : (4)), _GLF_IDENTITY(int(ivec4((false ? _GLF_FUZZED(i) : (4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2)))))))), (int(ivec4((false ? _GLF_FUZZED(i) : (4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2))))))))) | (int(ivec4((false ? _GLF_FUZZED(i) : (4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2)))))))))))), _GLF_IDENTITY((4), ((4)) | ((4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), max(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))))), int(ivec4(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), clamp((4), (4), (4)))))))) | ((4)))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), max(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), min((4), (4))), (4))))), _GLF_IDENTITY((4), ((4)) | ((4)))), clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))))), int(ivec4(clamp((4), _GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY((false ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), clamp((4), (4), (4)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), clamp((4), (4), (4)))), int(int((false ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), clamp((4), (4), (4)))))))) + 0))))) | ((4)))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), (clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), max(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (_GLF_IDENTITY(4, clamp(4, 4, 4))))), _GLF_IDENTITY((4), ((4)) | ((4)))), clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))))), int(ivec4(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), int(ivec2((4), 0)))))))))) | ((4)))), 0, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) - 0.0)))))) | 0), (_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(i) : (4), clamp(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(i) : (4), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(i) : (4), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(i) : (4))))), _GLF_IDENTITY((4), ((4)) | ((4)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) | ((4)), (((4)) | ((4))) << 0))), max(clamp((4), _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 ^ ((4)))) | (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(58360) : (4))))), ((4)) | ((4)))))), int(ivec4(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) * 1)))))) | ((4)))), 0, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-6.4) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))))))) | 0)) + 0)) | (_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))) ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), max(clamp((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + (1 ^ 1))) / 1)), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(_GLF_IDENTITY(i, (i) * 1)) : (4))), _GLF_IDENTITY((4), ((4)) | ((4)))), clamp((4), _GLF_IDENTITY((4), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), ((4)) | _GLF_IDENTITY(((4)), min(((4)), ((4)))))))), int(ivec4(clamp((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(i) : (4))), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(i) : _GLF_IDENTITY((4), clamp((4), (4), (4)))))))) | ((4)))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0)))) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), ((0 >> _GLF_IDENTITY(int(5), int(5)))) ^ (1 ^ 1))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1512.1981)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), false, true, true)))) && true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), false, true, true)))) && true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false, true))))))))), false || (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true && (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (true && (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))), false, true, true)))) && true))))))) || false)) || false)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).x)), (false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).x)), mix(float(_GLF_FUZZED(863.184)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).x))))), bool(true))))), injectionSwitch.x)) > injectionSwitch.y))))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), vec2(mat3x4(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), 0.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch)))).x)), injectionSwitch.x)) > injectionSwitch.y)))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec4((_GLF_DEAD(false)) || false, true, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch)), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(0.0), bool(true)))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0), vec3(0.0, 0.0, cos(0.0)))))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), sin(0.0), 1.0)), (mat4x3(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)), vec2(1.0, 1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)))), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)), vec2(1.0, 1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)))), bvec2(true, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)), vec2(1.0, 1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)), vec2(1.0, 1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)), vec2(1.0, 1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(8.9)))), bvec2(true, false)))))) / vec2(1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0))) * 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-607.228)), bool(false))))), min(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0))) * 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-607.228)), bool(false))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0))) * 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(mix(float(cos(0.0)), float(_GLF_FUZZED(-607.228)), bool(false)), (mix(float(cos(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(_GLF_FUZZED(-607.228)), bool(false))) - length(vec2(0.0, 0.0)))))), clamp(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0))) * 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-607.228)), bool(false))))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0)), (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0)) : _GLF_FUZZED(-2.8))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0))))) * 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(float(cos(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-607.228)), 1.0 * (float(_GLF_FUZZED(-607.228)))), bool(false))))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8126.4567) : 1.0))) * 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-607.228)), bool(false))))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-0.5, 8.5, -5.6)[2], mix(float(_GLF_FUZZED(35.53)), float(vec3(-0.5, 8.5, -5.6)[2]), bool(true)))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((+ 8.9) * 1027.0542))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), vec3(0.0, 0.0, cos(0.0)))) / 1.0), mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((+ 8.9) * 1027.0542))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), vec3(0.0, 0.0, cos(0.0)))) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))) * mat4(1.0))))), min(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), 0.0))), 0.0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), 0.0))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), 0.0))), mix(float(_GLF_FUZZED(-2091.4508)), float(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), 0.0)))), bool(true)))) * 1.0), min(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))))))), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-944.680)), bool(false))), 0.0))))) : _GLF_FUZZED(-4.7)))))), 0.0, cos(0.0)))), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0))))), injectionSwitch.y), abs(1.0) * (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), sin(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, abs(0.0), exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 1.0))), 1.0 * (1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(34.75, _GLF_IDENTITY(8.5, min(8.5, 8.5)))) : 1.0))), vec3(0.0, 0.0, cos(0.0)))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), injectionSwitch.y), sin(0.0), 1.0)), (mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))[0], min((mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))[0], (mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))[0])), _GLF_FUZZED(5884.0310)), vec2(_GLF_FUZZED(67.89), (mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))[1]), bvec2(false, true))), max(mat2(1.0) * _GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * (injectionSwitch)), (true ? (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(-1.4, _GLF_IDENTITY(-1.5, mix(float(-1.5), float(_GLF_FUZZED((- (-83.44 / 1.0)))), bool(false))))))), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / cos(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))) - 0.0))))) * (vec2(1.0, 1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (mat2(_GLF_IDENTITY(1.0, (1.0) / cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))) * (vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), min(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / vec2(1.0, 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (injectionSwitch)))))), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(34.40)), bool(false))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))) * mat4(1.0))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.5)), float(0.0), bool(true))), 0.0)), 0.0, cos(0.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (float(_GLF_IDENTITY(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) - log(1.0))), cos(0.0))), float(vec2(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), 1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8178.0758)), bool(false)))))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))) / 1.0)), 1.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0)), (mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)) * mat2(1.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)) * mat2(1.0)))), 0.0), max(vec3(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)) * mat2(1.0)))), 0.0), vec3(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)) * mat2(1.0)))), 0.0)))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2x4(sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))))), 1.0, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.23) : 0.0)), 1.0)), max(float(mat2x4(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.9)), float(0.0), bool(true)))))), float(_GLF_FUZZED(4.7)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec4(-0.6, 2.1, -4.7, -5656.9356), vec4(74.30, -3896.9287, 1338.8775, 51.19))))), 1.0, cos(0.0), 0.0, 1.0)), float(mat2x4(sin(0.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0))))), 1.0))) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))))))).y) / 1.0)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat3x2(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0))))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED((+ -6868.5445)), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.4) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))) && true))))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-20.27, 8219.1098)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)))).x, (false ? _GLF_FUZZED(1.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-20.27, 8219.1098)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mix(vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(1.0)), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)))).x, (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-20.27, 8219.1098)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)))).x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-20.27, 8219.1098), min(vec2(-20.27, 8219.1098), vec2(-20.27, 8219.1098)))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3979.6119), _GLF_FUZZED(62.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))).x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), ! (! (bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.8, 0.5)) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w], GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
