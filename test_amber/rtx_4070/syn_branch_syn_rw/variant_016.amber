#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 25:
     if(false)
      {
       if(false)
        {
        }
       else
        {
         for(         bvec4(true);
 true; min(ivec2(92461, 4594), ivec2(-10448, 2755)))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (_GLF_IDENTITY(0, (0) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           mat4x2(9.3, 1301.3557, -7.9, -0.6, -20.91, 2.8, -87.50, 1220.6660);
           mat3x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       for(       vec2(4.0, -8.2);
 (mat4x3(-82.29, 538.964, -857.005, 828.201, 865.595, -9452.5706, -492.841, -33.46, -9.2, 57.07, -82.17, -2.2) == mat4x3(0.7, 5.1, -5612.0069, 410.188, 21.04, -5.9, 917.515, 0.2, -50.53, -50.94, -176.147, 9.5)); unpackSnorm4x8(subgroup_size))
        {
         if(_GLF_DEAD(false))
          break;
         (atanh(-93.84) + inverse(mat4(-3.0, -6448.0460, -1.3, 120.178, -8.5, -3.5, 8189.0837, 1.2, -948.666, -15.79, 259.009, -1508.9803, 7099.7940, -2.9, 67.16, 4380.5755)))[0];
         while((bvec4(true, false, false, true) == bvec4(true, true, true, true)))
          {
          }
         mat4((mat4(4.1, -77.44, -770.051, -20.15, -433.503, -676.781, 84.17, 371.909, 9.6, 8.0, -162.002, -4.1, -2187.9603, -55.12, 6481.4762, 68.70) * mat2x4(871.622, 1.8, -4247.0839, 733.550, -0.1, -3097.0268, 76.93, -4.1)));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         mat3 _GLF_SWITCH_3_2v[82];
         for(         max((94600 ^ ivec3(-3859, -66685, 90587)), ivec3(88818, 849, -8168));
 false; mat2(mat2x4(8931.4123, -709.881, 67.99, -2870.2259, -6.4, 806.979, -8.4, 93.74)))
          {
           (subgroup_size * (mat3(-9.8, 6.7, -129.844, 53.75, 0.4, 9.8, 3.5, -4853.4183, -875.679) , uvec2(77406u, 76276u)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
            }
           else
            {
             mat2(-43.52, 924.961, 5.6, 8442.3362);
            }
           float _GLF_SWITCH_3_3v[11];
           (mat2(24.78, -895.685, 0.8, -0.9) * mat3x2(7431.9249, 16.49, 0.0, 4310.2247, 100.886, -3.5));
           mat4x2(85.37, 9734.0235, -15.78, 742.845, -297.158, 3.6, -252.931, -9742.5078);
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           bool _GLF_SWITCH_3_4v[66], _GLF_SWITCH_3_5v[50], _GLF_SWITCH_3_6v;
           vec2 _GLF_SWITCH_3_7v[82];
          }
        }
       true;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       60333;
       do
        {
        }
       while(bvec4(true, true, true, false).b);
       if(true)
        {
         injectionSwitch;
         lessThan(vec4(-9290.1627, -4734.6739, 781.478, -891.389), vec4(4.5, -24.42, -616.131, 2230.0164));
         (-46.38 + mat4(-329.562, -316.079, -30.94, -1569.3624, -194.895, -7.9, 530.992, -9.3, -9343.1421, -88.91, 91.59, -61.16, -4741.9585, -1.7, -249.410, -8650.4719));
         ;
         mat3x2 _GLF_SWITCH_3_8v;
         for(         bvec2(false, false);
 true; mat4x2(55.82, -4872.8858, -181.081, 4.4, 8.1, 3410.9410, -1.7, 1.8))
          {
           ;
           bvec2 _GLF_SWITCH_3_9v[96], _GLF_SWITCH_3_10v[39], _GLF_SWITCH_3_11v[86];
           bvec3(true, true, false);
           vec2(-71.22, 7.5);
           ivec2 _GLF_SWITCH_3_12v;
           findLSB((28644));
           mat3(9.0, 5.7, 7.3, -718.785, 5.8, 4.4, -7010.5061, -1.6, 1.9);
           subgroup_size;
           uvec4(173571u, 176083u, 159358u, 160418u);
          }
         bvec2 _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v;
         {
          mat2x4(mat4x2(7.6, 4526.0485, 53.34, 7.5, -5.0, 9.8, -964.850, 2243.4600));
          ivec4 _GLF_SWITCH_3_15v;
          mat4x2 _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v[47], _GLF_SWITCH_3_18v[61];
          vec4 _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v[22];
          (uvec2(164596u, 92487u) + 174862u);
          vec4 _GLF_SWITCH_3_21v, _GLF_SWITCH_3_22v;
          -6615;
         }
         ;
        }
       else
        {
         distance(vec2(-16.87, -2.4), vec2(-779.649, -991.692));
         while(false)
          {
           bvec2(false, false);
           ivec2 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v, _GLF_SWITCH_3_25v;
           subgroup_local_id;
           mat3x2 _GLF_SWITCH_3_26v, _GLF_SWITCH_3_27v;
           -9721;
           if(_GLF_DEAD(false))
            continue;
          }
         if(false)
          {
           uvec3 _GLF_SWITCH_3_28v[14];
           int _GLF_SWITCH_3_29v;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         {
          vec3 _GLF_SWITCH_3_30v[28];
          mat3x4 _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v[60], _GLF_SWITCH_3_33v;
          mat2x4 _GLF_SWITCH_3_34v, _GLF_SWITCH_3_35v[65];
         }
         if(true)
          {
           float _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v[50];
           (mat3x4(2073.1727, -583.947, 860.694, -9.3, 945.520, 898.283, -7284.8880, -7.6, -4495.8389, 4.8, 3425.9187, 9.0) * mat2x3(85.49, 207.256, -5.5, -7116.3809, -8.8, 2.1));
           float _GLF_SWITCH_3_38v[31];
           (false , mat4x3(52.65, 0.0, -112.505, -469.563, -279.754, 1060.4326, 183.323, -6677.3551, -6639.2987, -3.5, 3514.9291, -3238.7840));
           ;
           bvec2(true, false);
           mat2x3 _GLF_SWITCH_3_39v[70];
           if(_GLF_DEAD(false))
            return;
           vec4 _GLF_SWITCH_3_40v, _GLF_SWITCH_3_41v;
          }
         else
          {
          }
         if(true)
          {
           mat4x3(5.8, -2492.2767, 895.322, 79.59, -36.85, -42.72, -5255.7887, 3.9, 3.1, -9.4, 2.6, -6726.3835);
           ;
           (50774 ^ 87406);
           uint _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v;
           (injectionSwitch != injectionSwitch);
          }
         for(         mat2(3.3, 729.155, -20.40, -66.18);
 (true); vec4(951.586, vec2(-5300.1630, 2359.3396), 4736.1460))
          {
           if(_GLF_DEAD(false))
            return;
           mat2(5.5, -938.595, 9.7, 78.56);
           mix(bvec4(true, false, false, true), bvec4(false, true, true, false), bvec4(false, false, true, false));
           ;
           ivec3 _GLF_SWITCH_3_44v[4], _GLF_SWITCH_3_45v;
          }
        }
      }
     else
      {
       while((39903 < 73381))
        {
         mat3(vec3(-9.7, 4265.2086, -8.5).p);
         notEqual(ivec4(30336, 32242, -50957, 60428), ivec4(-40228, 31347, -17171, 5377));
         bvec4(true, true, true, false);
         mat4 _GLF_SWITCH_3_46v;
         if(true)
          {
           vec3 _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v, _GLF_SWITCH_3_49v;
           mat4x3(2.4, 8.5, 6.7, 659.342, 3.4, -5129.6765, 812.994, 7.7, -945.885, 609.376, 3690.3247, -5.4);
          }
         _GLF_SWITCH_3_46v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       vec3(10.74, 79.85, -7948.6311);
       if(_GLF_DEAD(false))
        return;
       {
        if((mat4(-0.6, -3.4, 604.621, -1838.9428, -3.0, -98.72, 5546.9633, 4.5, 23.11, -91.47, 5562.7692, 5182.8929, 0.4, 8227.7395, -8.1, -2.0) == mat4(-7.4, -8012.4800, -89.14, -4693.3878, -9012.1534, 9772.1983, 961.094, 52.68, -0.4, -9.7, 2.5, 78.89, -4583.4847, -431.620, -966.656, 67.29)))
         {
          vec2(-84.35, -27.73);
          bvec4 _GLF_SWITCH_3_50v, _GLF_SWITCH_3_51v[75];
          true;
          ldexp(max(vec2(33.03, -36.24), injectionSwitch), ivec2(27143, 92024));
          length(vec3(3.2, 4618.6445, 0.4));
          findLSB(num_workgroup);
          ;
          mat3x2(mat3x4(-1.1, 4776.6183, -338.183, -33.76, 3630.7325, -4.8, 162.825, -9.9, 890.433, 991.363, 609.846, 5.6));
         }
        {
         mat4x3 _GLF_SWITCH_3_52v, _GLF_SWITCH_3_53v[28], _GLF_SWITCH_3_54v;
         mat3(5664.0690, 38.16, 6655.4522, 34.13, 57.03, 2694.0813, 169.355, -9.1, -1472.9972);
         mat3x4(2.8, -975.256, 164.563, -139.218, 91.96, -16.83, 836.734, 6.6, 526.231, -3172.6518, -81.22, -5.9);
         ((ivec2(85825, -63237) >> ivec2(85116, 2649)) >> ivec2(57776, -73159));
         mat3x4(-6051.2099, 4.9, 3.4, 780.288, -4.1, 543.725, -128.610, -4140.9181, 78.76, 4.3, 6.0, -60.41);
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        ;
        if(_GLF_DEAD(false))
         return;
        ;
        {
         bvec2(true, false);
         vec3 _GLF_SWITCH_3_55v[3];
         ((mat4x3(550.645, -7233.7969, 2.0, 9843.8371, 3550.8633, 40.33, 4446.0440, -3703.6281, -7.3, -225.657, 38.69, 4.5) == mat4x3(342.466, 7.4, 55.74, 293.895, -8.6, 82.85, 47.01, 9008.1694, -54.75, -7.8, -3867.2173, 605.544)) ? ivec2(26321, -7200) : clamp(ivec2(-12626, -29906), ivec2(-12707, -40660), ivec2(75522, -17705)));
         bool _GLF_SWITCH_3_56v, _GLF_SWITCH_3_57v[45];
         if(_GLF_DEAD(false))
          return;
         ivec3 _GLF_SWITCH_3_58v[76];
         ;
         mat2x3 _GLF_SWITCH_3_59v, _GLF_SWITCH_3_60v, _GLF_SWITCH_3_61v;
         float _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v;
         mat4x2(-770.150, -7754.0433, -2520.8368, -9.9, -70.95, 400.221, -792.264, 374.353);
         if(_GLF_DEAD(false))
          return;
        }
        uvec4 _GLF_SWITCH_3_64v[59];
       }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     case 40:
     while(true)
      {
       if(true)
        {
         ivec2 _GLF_SWITCH_3_65v, _GLF_SWITCH_3_66v, _GLF_SWITCH_3_67v;
        }
       if(false)
        {
         float _GLF_SWITCH_3_68v, _GLF_SWITCH_3_69v, _GLF_SWITCH_3_70v[51];
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         matrixCompMult(mat4x2(12.18, 362.406, 287.167, 94.15, 7.9, -3.6, 645.111, -4105.7798), mat4x2(-7969.0950, 1.4, -415.294, -7.4, 20.09, 666.376, 5.8, 4.2));
         float _GLF_SWITCH_3_71v, _GLF_SWITCH_3_72v;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(uvec3 _GLF_SWITCH_3_73v; bool(_GLF_SWITCH_3_71v); smoothstep(_GLF_SWITCH_3_72v, _GLF_SWITCH_3_71v, _GLF_SWITCH_3_72v))
            {
             (mat3x4(84.42, -5.5, -98.03, -5.1, -458.083, 7.2, -5281.1134, -928.145, -153.761, 770.403, -6582.3565, 3.4) != mat3x4(10.02, -65.46, 471.590, -4.7, 88.28, -491.046, 11.87, 9.4, -47.37, -78.76, 3039.3806, 0.1));
             uvec2 _GLF_SWITCH_3_74v, _GLF_SWITCH_3_75v, _GLF_SWITCH_3_76v;
             ;
             uint _GLF_SWITCH_3_77v[2], _GLF_SWITCH_3_78v[80], _GLF_SWITCH_3_79v[54];
             ivec4((~ 44008));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             max(acos(injectionSwitch), _GLF_SWITCH_3_72v);
            }
          }
         else
          {
          }
         while((vec3(94.19, 654.881, 82.06) != vec3(1390.5750, -45.62, -7.4)))
          {
           mix(_GLF_SWITCH_3_71v, vec3(45.93, -5.8, -1.6)[2], _GLF_SWITCH_3_71v);
           (-83504 + 16841);
           mat2x3 _GLF_SWITCH_3_80v[6], _GLF_SWITCH_3_81v;
           sign(-53954);
           uvec3 _GLF_SWITCH_3_82v;
           bvec2 _GLF_SWITCH_3_83v;
           uvec4(143216u, 122535u, 29506u, 121103u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           ;
           uint _GLF_SWITCH_3_84v, _GLF_SWITCH_3_85v[28];
           if(_GLF_DEAD(false))
            return;
          }
        }
       vec3 _GLF_SWITCH_3_86v, _GLF_SWITCH_3_87v[53];
       if(bvec2(true, true)[0])
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         (-41611 - ivec4(90643, -87420, 74352, -38487));
         mat2x4(-388.377, -3.0, -354.671, -598.803, 8.9, 77.17, 9753.6374, 102.192);
         for(mat4 _GLF_SWITCH_3_88v, _GLF_SWITCH_3_89v[18]; true; outerProduct(vec3(-4.5, -4.0, -2095.3797), vec3(-2.6, 66.93, -0.1)))
          {
           uvec4 _GLF_SWITCH_3_90v[51], _GLF_SWITCH_3_91v[5], _GLF_SWITCH_3_92v[98];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               _GLF_SWITCH_3_86v;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
           float _GLF_SWITCH_3_93v;
           injectionSwitch;
           bvec4 _GLF_SWITCH_3_94v;
           vec4(-921.607, -85.03, -214.231, 4.0);
           injectionSwitch;
          }
         uint _GLF_SWITCH_3_95v, _GLF_SWITCH_3_96v;
         if(_GLF_DEAD(false))
          continue;
         vec2(-70.14, -4690.1289);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       int _GLF_SWITCH_3_97v, _GLF_SWITCH_3_98v[31];
       ((true ? -20.33 : -5.3) / mat3x2(-7.8, -0.8, 8.4, -20.24, 3.4, -579.577));
       mat3x2(mat3x4(6.8, -562.336, 3.5, -4689.4249, 9.0, 6976.4685, -8.5, -35.57, -5.6, 1852.6240, 7.8, 518.536));
      }
     case 0:
     case 55:
     case 20:
     case 14:
     if(_GLF_DEAD(false))
      return;
     case 57:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     case 35:
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 2:
     for(mat2x3 _GLF_SWITCH_3_99v; any(bvec3(false, true, true)); uvec3(178779u, 146841u, 194198u))
      {
       mat4x3(8.8, -8.4, 1532.6389, -735.609, 344.780, -7.9, 651.228, 37.92, -8977.2253, 213.924, -984.931, 3632.7615);
       mat3 _GLF_SWITCH_3_100v[94];
       {
        if(_GLF_DEAD(false))
         continue;
        for(int _GLF_SWITCH_3_101v; (mat4x3(-0.6, 1.8, 283.808, 4686.5613, 253.896, -9.3, -2.8, 3.2, -2.7, -4.4, 21.29, -0.5) != mat4x3(mat2(-4.4, 947.897, 292.235, 224.957))); (subgroup_size + uvec3(147860u, 72976u, 66687u)))
         {
          vec4(-4603.9828, 642.779, -612.683, -7.8);
          ivec2(3676, -85109);
          uvec4(91103u, 80354u, 158912u, 2108u);
          mat2x4 _GLF_SWITCH_3_102v, _GLF_SWITCH_3_103v[45];
          mat2x4(883.134, -293.326, 3014.5566, 732.584, 3.4, 1293.7432, 29.60, 46.90);
          mat3x4 _GLF_SWITCH_3_104v[35], _GLF_SWITCH_3_105v;
         }
        subgroup_id;
        if(false)
         {
          atomicAnd(workgroup_size, num_workgroup);
          uvec3 _GLF_SWITCH_3_106v, _GLF_SWITCH_3_107v[72], _GLF_SWITCH_3_108v;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             continue;
            subgroup_size;
           }
          else
           {
           }
          uvec2 _GLF_SWITCH_3_109v, _GLF_SWITCH_3_110v[63];
          if(_GLF_DEAD(false))
           break;
          vec3 _GLF_SWITCH_3_111v, _GLF_SWITCH_3_112v;
          ((num_workgroup) % bitfieldExtract(_GLF_SWITCH_3_106v, -74747, 40560));
          bvec2 _GLF_SWITCH_3_113v[69];
          max(_GLF_SWITCH_3_109v, uvec2(145590u, 118112u));
          subgroup_local_id;
          if(_GLF_DEAD(false))
           return;
         }
        for(        bvec4(false, false, true, true).yx;
 true; vec4(-8.3, 709.019, -5180.1791, -8802.5720))
         {
          uint(true);
          lessThanEqual(uvec3(35035u, 20112u, 66883u), uvec3(141304u, 131743u, 100457u));
          ;
          mat2x4(70.59, -7101.8939, -4903.2899, -0.3, 802.032, -4.4, -7.8, 8.8);
          uvec4 _GLF_SWITCH_3_114v[63];
          subgroup_local_id;
          if(_GLF_DEAD(false))
           break;
          bvec4 _GLF_SWITCH_3_115v[58];
          bitfieldInsert(uvec2(146413u, 58292u), uvec2(165250u, 107585u), 39428, -19510);
         }
       }
       float _GLF_SWITCH_3_116v[66], _GLF_SWITCH_3_117v, _GLF_SWITCH_3_118v;
       do
        {
         for(         uvec3(73469u, 88856u, 99117u);
 true; -6.4)
          {
          }
         lessThan(ivec3(67510, -80282, -18476), ivec3(48684, -60516, -19910));
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
          continue;
         do
          {
           (mat3x2(6.0, 5362.9223, 49.86, 30.14, -793.108, 56.54) + mat3x2(129.853, 123.968, 385.372, 95.69, -921.747, -848.631));
           uvec3(84452u, 176197u, 157139u);
           vec3(2.4, 94.65, 32.37);
           mat2x4((mat3(99.51, -2105.7249, 414.639, 3.9, 5792.4340, 8.9, 0.4, -544.885, -5.7) * mat4x3(6.5, -1055.6900, -5.5, 46.53, -248.758, 98.04, 61.63, 9989.1769, -986.904, -903.506, 5514.9007, 9.5)));
          }
         while(false);
         (- ivec2(-78915, 5992));
         uvec4 _GLF_SWITCH_3_119v[56], _GLF_SWITCH_3_120v;
         uvec3(183444u, 102412u, 111492u);
        }
       while(false);
      }
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
    {
     case 29:
     {
      while(true)
       {
        ;
        ;
       }
      for(      vec3(-15.20, 433.391, 4.1);
 true; sin(vec3(-7752.8066, -5933.3573, -141.666)))
       {
        uint(false);
        {
         mat4x2(-106.225);
         ivec4(54916, 42963, -78134, -92471);
         if(_GLF_DEAD(false))
          continue;
         mat2x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[46], _GLF_SWITCH_3_2v[92];
         (+ mat4x2(5.8, -7.3, -0.8, 97.69, 3.4, 1.6, 378.043, 2.9));
         abs(-39674);
        }
        ivec3 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v;
        for(        (workgroup_size * uvec2(39013u, 88474u)).xxyy;
 (atan(vec4(575.421, -791.382, 59.19, -8.3), normalize(vec4(-959.395, 3.5, -318.016, 3958.1458))) != vec4(-702.886, -8.5, 8.4, -351.709)); matrixCompMult(mat2(-8.6, 223.999, 6.3, -1.7), mat2(-7.7, -7250.2464, 3262.0893, 5.2)))
         {
          mat2x3(995.401, 47.26, -441.143, -3020.7012, -4.0, -6.2);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          ;
          if(_GLF_DEAD(false))
           return;
          -8644.5684;
          mat4x3(0.3, -2614.5942, 3110.6083, 55.24, -9023.2542, 445.121, 4015.6497, 78.55, -0.8, 914.744, -3842.5510, -9.7);
         }
       }
      mat2 _GLF_SWITCH_3_6v;
      if(true)
       {
        int _GLF_SWITCH_3_7v;
        mat3(-7329.8200);
        for(bvec2 _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v[30]; false; uvec3(126392u, 160176u, 27666u))
         {
          if(_GLF_DEAD(false))
           continue;
          mat2x4(-173.258, -0.5, 39.96, -5402.5033, 0.3, -6505.2769, 2.3, 0.9);
         }
        if(_GLF_DEAD(false))
         return;
        ;
        if(_GLF_DEAD(false))
         return;
        ivec2(-16585, -16415);
        max(uvec2(154688u, 25676u), uvec2(4320u, 88335u));
        vec3 _GLF_SWITCH_3_11v;
        float _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v;
       }
      else
       {
        for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
         {
          if((mat2(-9879.1484, 874.830, -9.4, 8.6) != _GLF_SWITCH_3_6v))
           {
            mat2x4 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              vec3(577.346, -2.1, -1.2);
             }
            else
             {
             }
            ;
            if(_GLF_DEAD(false))
             return;
            mat4x2 _GLF_SWITCH_3_18v[10], _GLF_SWITCH_3_19v[98], _GLF_SWITCH_3_20v;
            ;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              ivec3(-66354, -8686, -72627);
             }
            mat2 _GLF_SWITCH_3_21v, _GLF_SWITCH_3_22v[85];
            mat3x4 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v;
           }
          else
           {
            mat2x4(9.2, 0.6, 4.5, -678.625, -536.145, -24.83, -0.1, -9064.2257);
            uvec3 _GLF_SWITCH_3_25v[96];
            mat4x2(2.6, 2.9, -590.190, -4.0, -7.5, 1.1, 58.08, 21.03);
            vec4 _GLF_SWITCH_3_26v, _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v;
            (13254 & -95286);
            vec3(6.0, 1.1, -66.85);
            if(_GLF_DEAD(false))
             break;
            -82344;
            float _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v[80];
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              modf(_GLF_SWITCH_3_28v, _GLF_SWITCH_3_27v);
             }
            else
             {
             }
           }
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
         return;
        mat4x3(-6.2, -5.7, -22.52, 525.062, -8.0, -2.7, 1832.7881, -64.06, 6223.5677, 9.4, -11.59, 3.6);
        if(_GLF_DEAD(false))
         return;
        (((+ ivec3(-69261, 327, 33172)) - ivec3(-77123, 89448, 89592)) == ivec3(-62063, -75388, -20047));
        ivec4 _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v;
        vec4(4193.3597, 4.4, 1496.0065, 94.78);
        uvec4(128321u, 36804u, 30243u, 8155u);
        ;
        {
         mat3x2(mat4(-9668.5639, 596.874, 7.1, 9740.0401, 2712.0470, -5.3, 5536.1170, -570.262, 747.967, -808.190, -948.433, -4.5, -510.534, 49.41, 5.9, -800.408));
         true;
         if(_GLF_DEAD(false))
          return;
         ivec4 _GLF_SWITCH_3_33v, _GLF_SWITCH_3_34v[9], _GLF_SWITCH_3_35v;
         ivec3 _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v[50];
         uvec2 _GLF_SWITCH_3_38v;
         uvec2 _GLF_SWITCH_3_39v[3], _GLF_SWITCH_3_40v, _GLF_SWITCH_3_41v;
         if(_GLF_DEAD(false))
          return;
        }
        {
        }
       }
      if(false)
       {
        if(any(bvec3(true, true, true)))
         {
          vec2 _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v;
          ivec3(50879, 25542, -13050);
          ;
          bvec4(true, true, false, false);
          mat4x2(-541.130, -839.827, -0.1, -46.49, -0.0, -1608.1093, -9.2, 692.501);
         }
        else
         {
          true;
          ;
          (+ ivec4(-560, 54137, 73631, 17277));
          mat4x3 _GLF_SWITCH_3_44v;
          ;
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
         return;
        ;
        mat2(-6896.0577);
        if(_GLF_DEAD(false))
         return;
        mat3x2 _GLF_SWITCH_3_45v, _GLF_SWITCH_3_46v, _GLF_SWITCH_3_47v;
        for(vec3 _GLF_SWITCH_3_48v, _GLF_SWITCH_3_49v; (dot(max(vec4(-278.914, -4097.1371, 0.7, -54.43), 2.7), vec4(-1.9, -470.993, -6674.3409, -761.754)) > _GLF_SWITCH_3_48v.p); subgroup_id)
         {
          (true ? mat3(-3338.7690, -642.966, 1.5, -280.906, 4261.9995, 7536.9729, -278.128, -95.37, 6.8) : mat3(-9012.5443, -990.860, 65.53, 827.378, 5.8, -769.554, 6.8, -64.36, -6.5));
         }
       }
      {
      }
      for(ivec3 _GLF_SWITCH_3_50v[25]; false; (false , vec3(-758.022, -45.82, 7.9)))
       {
        mix(-6921, 16532, false);
        (ivec4(44181, -48850, 98318, 599) ^ 61990);
        vec4 _GLF_SWITCH_3_51v, _GLF_SWITCH_3_52v;
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
         break;
       }
      for(      vec3(-533.483, -7.6, 9264.8876).pt;
 true; uvec2(161299u, 132866u))
       {
        (+ uvec4(124042u, 76093u, 8920u, 166537u));
        mat2 _GLF_SWITCH_3_53v, _GLF_SWITCH_3_54v;
        if(bvec4(false, false, false, false).a)
         {
          (mat4x2(-9.0, -7.9, 7.4, -2.3, 728.528, 9878.0122, -5.1, -5.4) , mat3x4(-75.21, 6918.5074, 7384.8118, 4068.1675, -8.0, 1624.1052, -4722.0959, -1020.6489, -6.0, 0.6, -90.31, 1.3));
          uvec2 _GLF_SWITCH_3_55v, _GLF_SWITCH_3_56v[96];
          ivec2(75587, 58182);
          float _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v, _GLF_SWITCH_3_59v;
          uvec4 _GLF_SWITCH_3_60v;
          ;
          uvec4 _GLF_SWITCH_3_61v, _GLF_SWITCH_3_62v[22], _GLF_SWITCH_3_63v;
          mat2x4(mat4(38.42, -9.6, -3593.9466, -3.4, 9.0, -5.4, -4443.9391, -687.787, 840.581, 4.6, 5763.9844, 6.9, -9.6, -1.3, 34.56, -65.42));
          if(_GLF_DEAD(false))
           break;
         }
        else
         {
         }
        bvec4 _GLF_SWITCH_3_64v, _GLF_SWITCH_3_65v;
        {
        }
       }
     }
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 92:
     if(_GLF_DEAD(false))
      return;
     case 44:
     if(_GLF_DEAD(false))
      return;
     case 64:
     case 85:
     case 20:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     break;
     default:
     1;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
    {
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     case 30:
     case 41:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     int i = 0;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 91:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 68:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     case 50:
     case 2:
     case 12:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
      }
     else
      {
      }
     case 27:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if((mat3x2(-42.72, 1745.3673, 13.50, -6.9, 2.3, 821.099) != mat3x2(-4.8, 1.3, 219.083, 3.5, -94.35, -16.96)))
      {
       ivec3(-36594, -6990, -71399);
       mat4x2(-7.3, 3324.0287, 43.49, -388.696, -77.52, 5.9, 86.13, 785.584);
       mat4x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       vec3(181.110, -2576.9633, -792.932);
       if(_GLF_DEAD(false))
        return;
       if(true)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         uvec3 _GLF_SWITCH_0_3v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if((false ? true : (mat4x2(-2082.9104, 540.171, -659.883, 4.6, 2.8, 0.7, -39.98, 64.72) == mat4x2(-747.374, -7.0, -876.127, -21.05, -7.0, -455.782, -294.204, -4.7))))
          {
           isinf(vec3(-5.9, 0.6, 903.559));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           ;
           _GLF_SWITCH_0_1v;
           if(_GLF_DEAD(false))
            return;
           uint _GLF_SWITCH_0_4v[40];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           bvec4 _GLF_SWITCH_0_5v[59], _GLF_SWITCH_0_6v;
           mat3 _GLF_SWITCH_0_7v;
           if(_GLF_DEAD(false))
            barrier();
           ceil(-14.48);
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           mat2x4 _GLF_SWITCH_0_8v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           uvec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
          ivec3(71713, 71543, 29625);
          uvec3 _GLF_SWITCH_0_12v[42], _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[63];
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          mat2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
          (++ _GLF_SWITCH_0_3v);
          if(_GLF_DEAD(false))
           return;
          greaterThanEqual(vec3(-54.62, 78.26, 1.2), (vec3(46.21, 676.411, -8290.1726) - -597.394));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         ivec3 _GLF_SWITCH_0_18v[33], _GLF_SWITCH_0_19v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         {
          switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
           {
            case 0:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
                if(_GLF_DEAD(false))
                 return;
               }
              else
               {
               }
             }
            if(_GLF_DEAD(false))
             return;
            bvec2(false, true);
            break;
            case 86:
            uvec4 _GLF_SWITCH_3_0v[59], _GLF_SWITCH_3_1v[36], _GLF_SWITCH_3_2v;
            case 38:
            mat4x3(mat3(-563.449, -41.20, -1.8, -87.00, -994.540, -825.716, 478.248, -9.8, 561.590));
            default:
            1;
           }
         }
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
          bvec2 _GLF_SWITCH_0_20v[34], _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
         }
         ivec4(-95574, -63853, 41481, 55027);
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         do
          {
           while(false)
            {
             ldexp(981.264, 69830);
             mat2(9.1, -68.52, 4.4, -5.1);
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             sign(ivec2(-62756, -66448));
             if(_GLF_DEAD(false))
              return;
             2608.1467;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
               if(_GLF_DEAD(false))
                return;
              }
             bvec3(false, false, false);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              barrier();
             bitfieldReverse(ivec2(-51804, 86744));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         bool _GLF_SWITCH_0_23v;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     case 56:
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     {
      switch(_GLF_SWITCH((0 | 0)))
       {
        case 0:
        if(_GLF_DEAD(false))
         return;
        case 91:
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
         }
        if(_GLF_DEAD(false))
         return;
        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
         {
          (subgroup_size * next_virtual_gid);
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           continue;
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          return;
          if(_GLF_DEAD(false))
           return;
         }
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        case 47:
        ivec3(43430, 98249, 54318);
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
        case 72:
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           return;
          barrier();
         }
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           return;
          return;
         }
        ivec3 _GLF_SWITCH_0_24v;
        case 90:
        if(_GLF_DEAD(false))
         return;
        for(vec3 _GLF_SWITCH_0_25v; (mat4(6.6, -2.9, -2.8, 4.5, -81.09, -849.370, -5792.7986, 8.6, 4606.6249, 18.98, 9.9, -0.6, 14.65, 95.40, 174.688, -1141.3479) == mat4(-2.8, -8758.2861, -71.81, -4.3, 3.3, 55.80, -96.81, -5.3, -19.37, -2927.1212, 9823.9828, -946.245, 8.5, -200.655, -5518.8081, 169.634)); 134351u)
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           break;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           barrier();
          if((mat2x4(840.382, 6439.9167, 6943.3023, 5.1, 4.3, -47.85, -9.1, 9422.1393) == mat2x4(-8.9, -9658.1175, 517.462, -8.8, -824.804, 585.624, 5.0, -280.928)))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            (mat3x2(-37.38, -0.1, 4.7, -2.8, -1114.7741, 1.6) * atan(vec3(-4.3, 1.5, -87.69)));
           }
          else
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            ivec3(-64904, -75524, 96475);
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                 return;
                barrier();
               }
              barrier();
             }
            mat3x4(-0.6, 18.15, -5.0, -8.4, -7.0, 0.4, -3.0, 636.491, 837.036, 6.2, 577.944, 550.681);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                barrier();
               }
              break;
             }
            uvec3(64506u, 195220u, 45058u);
           }
          ivec3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
         }
        mat3(-3.1, 751.310, 5.5, 4234.9254, -33.72, 6.0, 4363.8279, 65.77, -9646.4894);
        for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
         {
          switch(_GLF_SWITCH(0))
           {
            case 0:
            case 52:
            case 93:
            case 76:
            if(_GLF_DEAD(false))
             break;
            case 77:
            case 24:
            case 2:
            case 67:
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               return;
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            break;
            case 45:
            mat4x3(-976.957, -8.1, 3837.2395, 0.7, 6697.9011, 46.42, 59.86, 9.6, 2907.9917, -8174.2647, 2.0, 686.619);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            case 91:
            mat2x3(((5492.0312 - mat4x3(-5.9, -6.1, -1.3, -9.6, -479.454, 967.822, -91.39, 9.2, 4.3, 5.7, -9303.7272, -1427.5227)) / mat4x3(7609.7494, 496.123, -9685.1314, -80.90, 3198.9297, 1.2, -1.8, -4.4, 6.1, -813.983, 900.693, 29.66)));
            default:
            1;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
         }
        case 74:
        mat3(mat2x4(2969.0728, -8273.9720, 51.79, 7.9, -2.0, 9.5, 6.5, 2560.6807));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           return;
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        break;
        default:
        if(_GLF_DEAD(false))
         barrier();
        1;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             return;
            barrier();
           }
          do
           {
            return;
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
         }
       }
      if(_GLF_DEAD(false))
       barrier();
     }
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   switch(_GLF_SWITCH(0))
    {
     case 5:
     if(_GLF_DEAD(false))
      barrier();
     if(true)
      {
       mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
       uint _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
       if(_GLF_DEAD(false))
        barrier();
       mat2 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v[29];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       mat2 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v[54], _GLF_SWITCH_1_10v;
       do
        {
         vec3 _GLF_SWITCH_1_11v;
         if(_GLF_DEAD(false))
          return;
         ivec4 _GLF_SWITCH_1_12v;
         {
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             continue;
            continue;
           }
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           barrier();
          bool _GLF_SWITCH_1_13v[95], _GLF_SWITCH_1_14v;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            return;
           }
          mat2x3 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[16];
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           barrier();
          vec3 _GLF_SWITCH_1_17v[18], _GLF_SWITCH_1_18v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            barrier();
           }
          ;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          workgroup_id;
          bvec4(false, false, false, true);
         }
         mat3x4(2910.0435, 927.266, 5326.8332, -5545.5782, -17.85, -6.3, 2672.8322, 321.269, -314.407, 610.150, 7758.9623, -3.9);
         {
          vec4(-1.4, 654.418, -36.19, 3.2);
          ivec2 _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v[99], _GLF_SWITCH_1_21v;
          if(_GLF_DEAD(false))
           continue;
          bvec2(true, true);
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          ;
          if(_GLF_DEAD(false))
           continue;
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
            }
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           uvec4(50102u);
          }
         else
          {
          }
         {
          switch(_GLF_SWITCH(0))
           {
            case 89:
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              continue;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
               break;
              return;
             }
            case 0:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                break;
               }
              if(_GLF_DEAD(false))
               break;
              break;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              break;
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
               {
                if(_GLF_DEAD(false))
                 continue;
                barrier();
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              continue;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            ivec3 _GLF_SWITCH_1_22v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              return;
             }
            ;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            break;
            case 37:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            (-56884 & 47017);
            case 10:
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             break;
            mat3x2 _GLF_SWITCH_2_0v[7];
            default:
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             return;
            1;
           }
          if(_GLF_DEAD(false))
           break;
         }
         if(_GLF_DEAD(false))
          barrier();
        }
       while((mat2x3(1242.3212, 9565.4233, -9211.1558, -6798.0599, -3.6, -330.744) == mat2x3(vec3(7.7, -42.78, -6195.8192), vec3(2.3, -0.9, -3.9))));
       ;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       findLSB(workgroup_id);
      }
     case 0:
     case 46:
     if(_GLF_DEAD(false))
      return;
     case 20:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 53:
     case 68:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     case 38:
     if(_GLF_DEAD(false))
      return;
     while(true)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       bool _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v[73], _GLF_SWITCH_1_25v;
       (mat3x4(-6.9, -9.8, 628.799, -0.4, -85.98, 7.8, 70.45, -1.5, -5.0, 576.094, 6.4, 4049.8589) , mat4x2(-6627.5438, 480.414, -72.69, 4.4, 1.9, 5509.1462, -0.4, -3440.0774));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       mat3x4(4.7, -31.85, -12.68, -3562.4599, 8.1, -7.6, 5521.5127, -337.150, -8499.1776, 962.651, 40.77, -3.2);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       bvec2 _GLF_SWITCH_1_26v[95];
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     default:
     1;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
