#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_72 {
 vec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_71 {
 uvec4 _f0;
 vec3 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_70 {
 vec2 _f0;
 mat3x4 _f1;
 vec2 _f2;
 ivec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_73 {
 ivec3 _f0;
 _GLF_struct_70 _f1;
 mat4x2 _f2;
 _GLF_struct_71 _f3;
 _GLF_struct_72 _f4;
} ;

struct _GLF_struct_68 {
 int _f0;
 uvec3 _f1;
 vec3 _f2;
 ivec4 _f3;
 bool _f4;
 int _f5;
} ;

struct _GLF_struct_67 {
 mat4x3 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_66 {
 mat4x2 _f0;
 uint _f1;
} ;

struct _GLF_struct_65 {
 mat3x4 _f0;
 bvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_64 {
 mat4x3 _f0;
 vec3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_69 {
 _GLF_struct_64 _f0;
 _GLF_struct_65 _f1;
 vec4 _f2;
 _GLF_struct_66 _f3;
 _GLF_struct_67 _f4;
 vec4 _f5;
 _GLF_struct_68 _f6;
} ;

struct _GLF_struct_63 {
 ivec4 _f0;
 bvec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_74 {
 uint workgroup_base;
 mat3x2 _f0;
 mat4 _f1;
 _GLF_struct_63 _f2;
 _GLF_struct_69 _f3;
 mat3x2 _f4;
 mat2 _f5;
 _GLF_struct_73 _f6;
} ;

struct _GLF_struct_60 {
 uint _f0;
 mat2x4 _f1;
 uvec3 _f2;
 mat3x2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_59 {
 float _f0;
 bvec3 _f1;
 float _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_58 {
 mat3x4 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 vec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_57 {
 uint _f0;
 mat3 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 mat4x2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_61 {
 _GLF_struct_57 _f0;
 _GLF_struct_58 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 _GLF_struct_59 _f4;
 _GLF_struct_60 _f5;
} ;

struct _GLF_struct_55 {
 vec3 _f0;
 mat4x2 _f1;
 bool _f2;
 uvec3 _f3;
 mat2 _f4;
 ivec3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_54 {
 bvec2 _f0;
 ivec3 _f1;
 bool _f2;
 float _f3;
 uvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_53 {
 ivec2 _f0;
 mat3x2 _f1;
 uint _f2;
} ;

struct _GLF_struct_52 {
 bool _f0;
 mat3x2 _f1;
 mat3 _f2;
 uvec3 _f3;
 mat3x4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_51 {
 mat2 _f0;
 mat3x2 _f1;
 mat2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_50 {
 vec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_56 {
 _GLF_struct_50 _f0;
 _GLF_struct_51 _f1;
 _GLF_struct_52 _f2;
 _GLF_struct_53 _f3;
 bool _f4;
 _GLF_struct_54 _f5;
 _GLF_struct_55 _f6;
} ;

struct _GLF_struct_62 {
 uint workgroup_id;
 _GLF_struct_56 _f0;
 _GLF_struct_61 _f1;
} ;

struct _GLF_struct_47 {
 bvec4 _f0;
 uint _f1;
 mat4x2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_46 {
 mat4 _f0;
 ivec3 _f1;
 ivec2 _f2;
 uvec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_48 {
 bvec3 _f0;
 _GLF_struct_46 _f1;
 _GLF_struct_47 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_44 {
 uvec3 _f0;
} ;

struct _GLF_struct_43 {
 mat2x4 _f0;
 mat2 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat4x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_45 {
 uint _f0;
 _GLF_struct_43 _f1;
 _GLF_struct_44 _f2;
 int _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_41 {
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_40 {
 uint _f0;
 float _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_39 {
 bvec2 _f0;
 uvec3 _f1;
 bvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_38 {
 mat2x4 _f0;
 vec4 _f1;
 mat2x3 _f2;
 mat4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_37 {
 uvec3 _f0;
 float _f1;
 int _f2;
} ;

struct _GLF_struct_42 {
 _GLF_struct_37 _f0;
 _GLF_struct_38 _f1;
 int _f2;
 _GLF_struct_39 _f3;
 _GLF_struct_40 _f4;
 _GLF_struct_41 _f5;
} ;

struct _GLF_struct_49 {
 _GLF_struct_42 _f0;
 _GLF_struct_45 _f1;
 uvec3 _f2;
 _GLF_struct_48 _f3;
 uint subgroup_id;
 vec4 _f4;
} ;

struct _GLF_struct_34 {
 mat2 _f0;
 vec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_33 {
 int _f0;
 mat4 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_32 {
 ivec3 _f0;
} ;

struct _GLF_struct_31 {
 float _f0;
 uint _f1;
 mat4 _f2;
 float _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_35 {
 _GLF_struct_31 _f0;
 _GLF_struct_32 _f1;
 mat3 _f2;
 _GLF_struct_33 _f3;
 uint workgroup_size;
 _GLF_struct_34 _f4;
 ivec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_29 {
 mat2x4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_28 {
 mat4x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_27 {
 uvec2 _f0;
} ;

struct _GLF_struct_26 {
 mat2 _f0;
 vec4 _f1;
 int _f2;
 uint _f3;
 uvec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_26 _f0;
 uvec2 _f1;
 mat2 _f2;
 _GLF_struct_27 _f3;
 bvec4 _f4;
 _GLF_struct_28 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
 uint _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_22 {
 mat3 _f0;
} ;

struct _GLF_struct_23 {
 uint _f0;
 int _f1;
 _GLF_struct_22 _f2;
} ;

struct _GLF_struct_20 {
 uint _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 vec4 _f3;
 bool _f4;
 ivec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 uvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 bvec2 _f1;
 bool _f2;
 mat3x4 _f3;
 ivec4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_21 {
 float _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 vec4 _f3;
 ivec4 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_15 {
 float _f0;
 uvec2 _f1;
 ivec3 _f2;
 uvec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_36 {
 _GLF_struct_16 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_30 _f4;
 bvec4 _f5;
 _GLF_struct_35 _f6;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat4x2 _f1;
 bvec4 _f2;
 uvec4 _f3;
 mat4x2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 mat4x2 _f1;
 uint _f2;
 uvec4 _f3;
 uint subgroup_size;
 mat2 _f4;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 vec2 _f1;
 uvec3 _f2;
 mat4x3 _f3;
 uvec3 _f4;
 vec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 bool _f0;
 int _f1;
 mat3 _f2;
 bvec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 uint _f1;
 float _f2;
} ;

struct _GLF_struct_6 {
 float _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 bvec3 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_13 _f4;
 mat2x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 uvec4 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 vec4 _f4;
 vec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat2 _f2;
 _GLF_struct_2 _f3;
 uint _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_size;
 _GLF_struct_5 _GLF_struct_replacement_5;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 _GLF_struct_49 _GLF_struct_replacement_49 = _GLF_struct_49(_GLF_struct_42(_GLF_struct_37(uvec3(1u), 1.0, 1), _GLF_struct_38(mat2x4(1.0), vec4(1.0), mat2x3(1.0), mat4(1.0), uvec2(1u)), 1, _GLF_struct_39(bvec2(true), uvec3(1u), bvec4(true), ivec2(1)), _GLF_struct_40(1u, 1.0, mat2x3(1.0)), _GLF_struct_41(1.0, ivec2(1))), _GLF_struct_45(1u, _GLF_struct_43(mat2x4(1.0), mat2(1.0), mat2x3(1.0), vec4(1.0), mat4x3(1.0), ivec3(1)), _GLF_struct_44(uvec3(1u)), 1, mat4x3(1.0)), uvec3(1u), _GLF_struct_48(bvec3(true), _GLF_struct_46(mat4(1.0), ivec3(1), ivec2(1), uvec2(1u), uvec4(1u)), _GLF_struct_47(bvec4(true), 1u, mat4x2(1.0), uvec2(1u)), vec4(1.0)), gl_SubgroupID, vec4(1.0));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_6(1.0), _GLF_struct_7(uvec2(1u), 1u, 1.0), bvec3(true), _GLF_struct_11(mat4(1.0), _GLF_struct_8(true, 1, mat3(1.0), bvec4(true), vec2(1.0)), _GLF_struct_9(mat2x3(1.0), vec2(1.0), uvec3(1u), mat4x3(1.0), uvec3(1u), vec4(1.0), mat4(1.0)), _GLF_struct_10(vec3(1.0), mat4x2(1.0), 1u, uvec4(1u), gl_SubgroupSize, mat2(1.0)), mat2x4(1.0)), _GLF_struct_13(_GLF_struct_12(ivec3(1), mat4x2(1.0), bvec4(true), uvec4(1u), mat4x2(1.0), mat4(1.0))), mat2x4(1.0), vec3(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_16(mat4x3(1.0), _GLF_struct_15(1.0, uvec2(1u), ivec3(1), uvec3(1u), mat3x2(1.0))), _GLF_struct_21(1.0, _GLF_struct_17(ivec3(1), bvec2(true), true, mat3x4(1.0), ivec4(1), bvec4(true)), _GLF_struct_18(uvec4(1u), uvec2(1u), mat3(1.0)), vec4(1.0), ivec4(1), _GLF_struct_19(vec4(1.0), mat3x2(1.0), ivec2(1), vec4(1.0), true, ivec4(1), true), _GLF_struct_20(1u, bvec2(true))), _GLF_struct_23(1u, 1, _GLF_struct_22(mat3(1.0))), _GLF_struct_25(_GLF_struct_24(uvec3(1u), 1u, mat3x4(1.0)), uvec3(1u)), _GLF_struct_30(_GLF_struct_26(mat2(1.0), vec4(1.0), 1, 1u, uvec4(1u), mat2x3(1.0)), uvec2(1u), mat2(1.0), _GLF_struct_27(uvec2(1u)), bvec4(true), _GLF_struct_28(mat4x2(1.0), uvec2(1u)), _GLF_struct_29(mat2x4(1.0), ivec3(1), mat2x3(1.0))), bvec4(true), _GLF_struct_35(_GLF_struct_31(1.0, 1u, mat4(1.0), 1.0, bvec3(true)), _GLF_struct_32(ivec3(1)), mat3(1.0), _GLF_struct_33(1, mat4(1.0), mat2x3(1.0), mat3x4(1.0)), gl_WorkGroupSize.x, _GLF_struct_34(mat2(1.0), vec3(1.0), mat4x3(1.0)), ivec2(1), uvec4(1u)));
 GLF_merged2_0_1_4_1_1_14readworkgroup_size.y = _GLF_struct_replacement_36._f6.workgroup_size;
 do
  {
   _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = GLF_merged2_0_1_4_1_1_14readworkgroup_size.y;
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_62 _GLF_struct_replacement_62 = _GLF_struct_62(gl_WorkGroupID.x, _GLF_struct_56(_GLF_struct_50(vec2(1.0), vec4(1.0)), _GLF_struct_51(mat2(1.0), mat3x2(1.0), mat2(1.0), mat3x2(1.0)), _GLF_struct_52(true, mat3x2(1.0), mat3(1.0), uvec3(1u), mat3x4(1.0), mat3x2(1.0)), _GLF_struct_53(ivec2(1), mat3x2(1.0), 1u), true, _GLF_struct_54(bvec2(true), ivec3(1), true, 1.0, uvec2(1u), ivec3(1)), _GLF_struct_55(vec3(1.0), mat4x2(1.0), true, uvec3(1u), mat2(1.0), ivec3(1), mat3x2(1.0))), _GLF_struct_61(_GLF_struct_57(1u, mat3(1.0), bvec3(true), mat2x4(1.0), mat4x2(1.0), bvec2(true)), _GLF_struct_58(mat3x4(1.0), mat4x3(1.0), ivec4(1), vec2(1.0), bvec2(true)), bvec3(true), mat2x4(1.0), _GLF_struct_59(1.0, bvec3(true), 1.0, ivec4(1)), _GLF_struct_60(1u, mat2x4(1.0), uvec3(1u), mat3x2(1.0), bvec2(true))));
 _GLF_struct_74 _GLF_struct_replacement_74 = _GLF_struct_74(_GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * _GLF_struct_replacement_62.workgroup_id, mat3x2(1.0), mat4(1.0), _GLF_struct_63(ivec4(1), bvec2(true), true), _GLF_struct_69(_GLF_struct_64(mat4x3(1.0), vec3(1.0), uvec4(1u)), _GLF_struct_65(mat3x4(1.0), bvec4(true), uvec3(1u)), vec4(1.0), _GLF_struct_66(mat4x2(1.0), 1u), _GLF_struct_67(mat4x3(1.0), mat3x4(1.0), uvec4(1u), uvec4(1u)), vec4(1.0), _GLF_struct_68(1, uvec3(1u), vec3(1.0), ivec4(1), true, 1)), mat3x2(1.0), mat2(1.0), _GLF_struct_73(ivec3(1), _GLF_struct_70(vec2(1.0), mat3x4(1.0), vec2(1.0), ivec2(1), bvec2(true)), mat4x2(1.0), _GLF_struct_71(uvec4(1u), vec3(1.0), mat2x3(1.0), vec4(1.0), mat2x4(1.0)), _GLF_struct_72(vec4(1.0), bvec3(true))));
 uint virtual_gid = _GLF_struct_replacement_74.workgroup_base + _GLF_struct_replacement_49.subgroup_id * _GLF_struct_replacement_14._f3._f3.subgroup_size + _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x;
 uint next_virtual_gid = _GLF_struct_replacement_74.workgroup_base + _GLF_struct_replacement_49.subgroup_id * _GLF_struct_replacement_14._f3._f3.subgroup_size + ((_GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % _GLF_struct_replacement_14._f3._f3.subgroup_size);
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged2_0_1_4_1_1_14readworkgroup_size.x = read;
    }
  }
 else
  {
  }
 atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1 < _GLF_struct_replacement_14._f3._f3.subgroup_size)
          {
           int i = 0;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_14readworkgroup_size.x, 4, 64, 4);
            }
          }
         else
          {
           atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_14readworkgroup_size.x, 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
