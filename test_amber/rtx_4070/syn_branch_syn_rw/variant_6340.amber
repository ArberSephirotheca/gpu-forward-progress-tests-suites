#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x = _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) ^ 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) | (0u | 0u)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base) : uvec4(subgroup_id, 1u, 0u, 1u)))) << uvec4(0u, 0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) : uvec4(subgroup_id, 1u, 0u, 1u)))), uint(uvec4(subgroup_id, 1u, 0u, 1u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float((injectionSwitch.y) - 0.0), float(_GLF_FUZZED(-4.5)), bool(false)))), float(_GLF_FUZZED(86.98)), bool(false))), float(vec3(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat4((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, cos(length(0.0)), 0.0, 0.0, 1.0))), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0))))), injectionSwitch.y), max(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), float(float(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), exp(0.0), abs(1.0), 1.0))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-76.21)), bool(false)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(49.44) : injectionSwitch.y)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), mix(float(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(radians(941.789))))) - 0.0), injectionSwitch.y)), float(_GLF_FUZZED(-4.3)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), mix(float(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(radians(941.789))))) - 0.0), injectionSwitch.y)), float(_GLF_FUZZED(-4.3)), bool(false)))), (false ? _GLF_FUZZED(1.3) : (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), mix(float(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(radians(941.789))))) - 0.0), injectionSwitch.y)), float(_GLF_FUZZED(-4.3)), bool(false)))))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), mix(float(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(radians(941.789))))) - 0.0), injectionSwitch.y)), float(_GLF_FUZZED(-4.3)), bool(false)))), (false ? _GLF_FUZZED(1.3) : (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y), mix(float(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(radians(941.789))))) - 0.0), injectionSwitch.y)), float(_GLF_FUZZED(-4.3)), bool(false))))))), bool(true))))) - 0.0)))))))))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | 0) > 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.4) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))), (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
            }
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) || false), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false)))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))))), 1 * (_GLF_IDENTITY(1, min(1, 1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))) || false)))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z = subgroup_size;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x) << 0u);
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false, true)))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), false), true)), false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))) && true))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0))) > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true))))))))), true, _GLF_IDENTITY(true, (true) || false), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w = workgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w = workgroup_id) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(386.076)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(-17978) : _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w = workgroup_base, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w = workgroup_base)), _GLF_IDENTITY((~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w = workgroup_base))) << 0u, 0u + ((~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w = workgroup_base))) << 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(4u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w = workgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w = workgroup_base)))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(1.0), bool(true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), float(_GLF_FUZZED(-150.971)), bool(false))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(1.0), bool(true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), float(_GLF_FUZZED(-150.971)), bool(false)))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) >> 0), (1))) << 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) << (0 >> _GLF_IDENTITY(int(2), int(2)))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true, true, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.z = subgroup_base;
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w) - 0u))), uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.w))))) + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.z + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   for(int _injected_loop_counter = (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))) + 0) | 1) ^ 1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), (injectionSwitch.x < injectionSwitch.y))), false)))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), max((0), (0))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), float(mat4x2(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(sqrt(1.0), 1.0)), dot(vec2(0.0, 0.0), vec2(sqrt(1.0), 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0)))), 1.0)), 0.0, 0.0, 0.0, 1.0))))))) + 0.0)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), 0.0 + (0.0 + (injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, min(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base), (uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base), ((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)) * uvec4(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), 1u, 1u, 1u))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u)))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base) >> uvec4(0u, 0u, 0u, 0u))), (uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)) << uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) + (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base) >> uvec4(0u, 0u, 0u, 0u), (true ? (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base) >> uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(workgroup_size, uvec3(188242u, 153222u, 37791u))))))), (uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)) << uvec4(0u, 0u, 0u, 0u))))).w) / 1u) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.z, ~ (~ _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.z), min(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.z), ((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.z)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)).z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base) - uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)).z, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)).z, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)).z))) | 0u)))))) + _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))).y + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), clamp(_GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, (1) >> (0 | 0))))) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z), uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))))), (~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(0, (0) | (0)) + ((0 | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((8510 - -91612))))))))))) / 1)), 0u ^ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))))), (~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(0, (0) | (0)) + ((0 | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((8510 - -91612))))))))))) / 1))))) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z), 0u ^ (((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u)))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))))).y + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) ^ 0), 0, 1, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) ^ 0), 0, 1, 0), min(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1))))) ^ 0), 0, 1, 0), ivec4(_GLF_IDENTITY(1, (1) ^ 0), 0, 1, 0)))) >> ivec4(0, 0, 0, 0))))) >> (_GLF_IDENTITY(0 | 0, min(_GLF_IDENTITY(0 | 0, 0 + (0 | 0)), 0 | 0))))) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z))), 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-899.647), _GLF_FUZZED(961.475)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-899.647), _GLF_FUZZED(961.475)), (false ? _GLF_FUZZED(vec2(5.9, 2292.1784)) : vec2(_GLF_FUZZED(-899.647), _GLF_FUZZED(961.475)))), vec2(_GLF_FUZZED(-899.647), _GLF_FUZZED(961.475)), vec2(_GLF_FUZZED(-899.647), _GLF_FUZZED(961.475)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], float(_GLF_IDENTITY(float((injectionSwitch)[0]), (false ? _GLF_FUZZED(5814.3156) : _GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0]))))))), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) | 0u), _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) | 0u))), ((virtual_gid) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) | 0u)))) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u))))], clamp(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), 4, 64, 2);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base.y = read;
  }
 if((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y) - _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (0u) | 0u))) % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))) && true))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(ivec2((1), 0))), (1))) / 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 1, 0, 1), (ivec4((1), 1, 0, 1)) * ivec4(1, 1, 1, 1))))) << (1 ^ 1)) * 1)) | (1)))), max((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 0), (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 0)) ^ ivec2(0, 0))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 0), (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 0)) ^ ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 0), (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 0)) ^ ivec2(0, 0)))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)))), ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) * 1)) | (1))))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)))), ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1))))) | ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1))) - 0))))))))))) - 0u)) | 0u)), uint(uint(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))))) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))), max(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))), max(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))) + 0u)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))), 0u | (_GLF_IDENTITY((uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))), ((uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))) ^ 0u)))))), _GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))))))) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) | (1u << _GLF_IDENTITY(uint(7u), uint(7u))))) + 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))), clamp(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))))))) ^ 0u) * _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), min((0u), (0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))) - 0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) * (0u)), clamp((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))), uint(uint(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))))))) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(read))), uint(1)))) / 1u)))))) - 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))) - 0u), max(~ ((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))) - 0u), ~ ((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / _GLF_IDENTITY(1u, 0u | (1u)))))))) - 0u))))))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) + 0u)) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) + 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))), max(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))))), ((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) + 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))), max(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))))))) | 0u) * 1u) * (0u)), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(workgroup_id))), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(97533)))), uint(1)))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u, 1u), (true ? uvec3(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u, 1u) : _GLF_FUZZED(uvec3(55341u, 148220u, 152247u))))) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(uint(1), (uint(1)) / 1u))))) >> 0u))))) - 0u)) | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u | (7u))), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), _GLF_IDENTITY(uint(7u), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | (7u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))), clamp(uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))), uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))), clamp(uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))), uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))), uint(uint(_GLF_IDENTITY(7u, (7u) | (7u)))))))))), uint(7u))))) * (0u)), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))) - 0u, ~ (~ ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), (true ? (uint(1)) : _GLF_FUZZED((++ next_virtual_gid)))) | (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))))) - 0u))))) | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(7u))))) * (0u))))) / 1u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), ~ (~ (uint(_GLF_IDENTITY(1, (1) << 0))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(1, (1) << 0)))), uint(_GLF_IDENTITY(1, (1) << 0)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((17689 * -9240)) : 1)), clamp(1, 1, 1)))) - 0u)) | 0u)), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), min(0 | (1), _GLF_IDENTITY(0 | (1), (0 | (1)) ^ 0)))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), ((uint(1)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u, ((_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u) | 0u))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0))), vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))))))).y)), (true ? uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0))), vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))))))).y)) : _GLF_FUZZED(num_workgroup)))), uint(uvec4((uint(1)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), min(~ ((_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), ~ ((_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)))) >> 0u), 1u, 0u, 1u))))) | 0u)), clamp(uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) | 0u)), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 ^ (1)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), max((uint(_GLF_IDENTITY(1, 0 ^ (1)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), (uint(_GLF_IDENTITY(1, 0 ^ (1)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u))), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u))))) | 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (_GLF_IDENTITY(~ (~ (~ (0u))), (~ (~ (~ (0u)))) / 1u))))) * 1u), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u))))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, (0u) | (0u))))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((next_virtual_gid)) : _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) * 1u), (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / 1u) * 1u), 1u, 0u, 1u))))) | 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((next_virtual_gid)) : _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) * 1u), (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / 1u) * 1u), 1u, 0u, 1u))))) | 0u, ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((next_virtual_gid)) : _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) * 1u), (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / 1u) * 1u), 1u, 0u, 1u))))) | 0u) | ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((next_virtual_gid)) : _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) * 1u), (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / 1u) * 1u), 1u, 0u, 1u))))) | 0u)) : _GLF_FUZZED(atomicMax(subgroup_local_id, 193847u)))))) - (110580u & 0u))), uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) | ((_GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)), min(uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)), min(uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)))), 0u + (_GLF_IDENTITY(uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)), min(uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u)), uint(uvec4((uint(1)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), 1u, 0u, 1u))))))) >> 0u)))) | 0u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) / 1)), (uint(1)) - 0u)) | 0u)), (uint(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / 1)), (uint(1)) - 0u), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u) - 0u) : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u), uint(uint(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) - 0u)), min((_GLF_IDENTITY(uint(1), (uint(1)) - 0u)), (_GLF_IDENTITY(uint(1), (uint(1)) - 0u)))), ((_GLF_IDENTITY(uint(1), (uint(1)) - 0u))) - 0u) | 0u))))))) << 0u)) - 0u)), ~ (~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uint(uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), (uint(1)) - 0u)), max(uint(_GLF_IDENTITY(uint(1), (uint(1)) - 0u)), uint(_GLF_IDENTITY(uint(1), (uint(1)) - 0u))))), 0u ^ (uint(uint(uint(1)))))) << 0u))))), 4, 64, _GLF_IDENTITY(4, (4) << 0));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5273.6500)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-41.92) : injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), 0u | (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), uint(uvec3(uint(_GLF_IDENTITY(1, (1) + 0)), 0u, 1u)))) ^ 0u), uint(_GLF_IDENTITY(1, (1) + 0)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), (uint(_GLF_IDENTITY(1, (1) + 0))) >> 0u)))), (uint(1)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-557.048)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
  {
   subgroupBarrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-974.998, -18.35)) : _GLF_FUZZED(injectionSwitch))))).y))))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_base)).y, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | 0) | _GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, 4))))), int(ivec2((0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, 4))))), 1))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) >> 0)))), (int(ivec3((_GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, 4))))), int(ivec2((0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, 4))))), 1))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) >> 0))))) / 1))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
