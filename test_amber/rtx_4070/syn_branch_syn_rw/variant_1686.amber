#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), true, false)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, ! (! (true))), true)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, ! (! (true))), true)), true, false, false)))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, false))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((_GLF_IDENTITY(false, (false) && true))), false, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(0, 0))], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, exp(0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-325.421))))) > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(-4.2)), float(_GLF_FUZZED(-54.83)), bool(false))), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(4.7)), bvec2(false, false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(-2168.2850), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2168.2850), (_GLF_FUZZED(-2168.2850)) * 1.0), float(mat3x2(_GLF_FUZZED(-2168.2850), cos(0.0), 0.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-2168.2850)))), bvec2(true, false))).y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0]), max(min((injectionSwitch)[0], (injectionSwitch)[0]), _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), (min((injectionSwitch)[0], (injectionSwitch)[0])) - 0.0)))), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0)))[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(0, 0))], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, exp(0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-325.421))))) > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(-4.2)), float(_GLF_FUZZED(-54.83)), bool(false))), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(4.7)), bvec2(false, false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(-2168.2850), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2168.2850), (_GLF_FUZZED(-2168.2850)) * 1.0), float(mat3x2(_GLF_FUZZED(-2168.2850), cos(0.0), 0.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-2168.2850)))), bvec2(true, false))).y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0]), max(min((injectionSwitch)[0], (injectionSwitch)[0]), _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), (min((injectionSwitch)[0], (injectionSwitch)[0])) - 0.0)))), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0)))[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false, false))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, exp(0.0))), tan(0.0))), mix(vec2(_GLF_FUZZED(57.87), _GLF_FUZZED(2.5)), vec2((vec2(vec4((injectionSwitch), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, exp(0.0))), tan(0.0))))[0], (vec2(vec4((injectionSwitch), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, exp(0.0))), tan(0.0))))[1]), bvec2(true, true))))[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), max(min((injectionSwitch)[0], (injectionSwitch)[0]), min((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY(_GLF_FUZZED(-2168.2850), max(_GLF_IDENTITY(_GLF_FUZZED(-2168.2850), float(float(_GLF_FUZZED(-2168.2850)))), _GLF_FUZZED(-2168.2850)))), bvec2(true, false))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2168.2850)), bvec2(true, false))).y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) || false))) && _GLF_IDENTITY(true, true && (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-64.10, 701.115)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(177.067) : (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])))), (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) + 0)], min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], (injectionSwitch)[0]))) - _GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_FUZZED(-2168.2850)), _GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2137.2618), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-42.35)), bvec2(true, false))).y))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * sqrt(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))), max(0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))), 0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) + (subgroup_id * subgroup_size), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)) >> 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract(injectionSwitch, vec2(_GLF_IDENTITY(-6.1, float(_GLF_IDENTITY(mat2x4(-6.1, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat2x4(-6.1, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0)))))), -7.9), 1.8)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-805.180, -2.5)) : injectionSwitch)))).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.1))), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-449.082)), float(injectionSwitch.y), bool(true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) ^ 0), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(2, 2)), (false ? _GLF_IDENTITY(_GLF_FUZZED(156600u), (_GLF_FUZZED(156600u)) ^ 0u) : _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) >> 0)) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u))), subgroup_local_id % 2))))) == 0, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) ^ 0), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(2, 2)), (false ? _GLF_FUZZED(156600u) : _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u))))))))))))) | 0u))), subgroup_local_id % 2))))) == 0, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), int(ivec3(_GLF_IDENTITY(~ (2), int(ivec2(~ (2), 0))), 1, 0)))))) ^ 0), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(2, 2)), (false ? _GLF_FUZZED(156600u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), (true ? _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u) : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u))))), _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))) == 0, false || (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), int(ivec3(_GLF_IDENTITY(~ (2), int(ivec2(~ (2), 0))), 1, 0)))))) ^ 0), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(2, 2)), (false ? _GLF_FUZZED(156600u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), (true ? _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u) : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u))))), _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))) == 0, ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), int(ivec3(_GLF_IDENTITY(~ (2), int(ivec2(_GLF_IDENTITY(~ (2), 0 ^ (~ (2))), 0))), 1, 0)))))) ^ 0), min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(2, 2)), (false ? _GLF_FUZZED(156600u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), (true ? _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u) : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), 0u, 0u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % _GLF_IDENTITY(2, (2) << (0 << _GLF_IDENTITY(int(3), int(3))))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)) % 2)), 1u, 0u, 0u)))))) | 0u), (true ? _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))) ^ (0u | 0u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u) : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u, 0u, 0u)))))) | 0u)))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) >> 0u)))))) == 0) && true)))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! _GLF_IDENTITY((false), ! (! ((false)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(false, (false) || false)))), ! (! (! (false)))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true)), (true) && true), false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) && true))), true && ((! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || false))))))))))), true, false))) || false, bool(_GLF_IDENTITY(bvec3((bool(bvec3(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) && true))), true && ((! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || false))))))))))), true, false))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((bool(bvec3(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) && true))), true && ((! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || false))))))))))), true, false))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((bool(bvec3(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) && true))), true && ((! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || false))))))))))), true, false))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))))), ! (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((false), _GLF_IDENTITY(true, (true) && true), false))))))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), false || (! _GLF_IDENTITY((! (false)), false || ((! (false))))))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))))), ! (! (bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))))))), ! (! (! (false)))))))))))), false)))) && true))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(_GLF_IDENTITY(((uint(1))) | ((uint(1))), (_GLF_IDENTITY(((uint(1))) | ((uint(1))), 0u ^ (_GLF_IDENTITY(((uint(1))), max(((uint(1))), ((uint(1))))) | ((uint(1)))))) - 0u), max(((uint(1))) | ((uint(1))), ((uint(1))) | ((uint(1)))))) >> 0u), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ (0 | 0), 0 | ((4) ^ (0 | 0)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.5) : injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(acosh(-9159.5573)))) + (min(0.0, 0.0))))) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.5)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(0.0), float(_GLF_FUZZED(950.178)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(-4.8)), bool(false)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, cos(0.0), abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(950.178)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))))))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, cos(0.0), abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(950.178)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))))))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), bool(bool(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, cos(0.0), abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(950.178)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))))))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, cos(0.0), abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(950.178)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))))))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), bool(bool(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, cos(0.0), abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(950.178)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))))))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(1133.4488)))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | (4))))), (4) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1))) | 0), _GLF_IDENTITY(0 + (int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ 0), 1))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? 0 + (int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) ^ 0, ((4) ^ 0) << 0), ((4) ^ 0) ^ 0)), 1))) : _GLF_FUZZED(40698))))), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
