#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_26 {
 bvec3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_25 {
 ivec2 _f0;
} ;

struct _GLF_struct_27 {
 uvec2 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 vec2 _f3;
 ivec3 _f4;
 _GLF_struct_25 _f5;
 _GLF_struct_26 _f6;
 uint workgroup_id;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
} ;

struct _GLF_struct_23 {
 mat3x2 _f0;
 ivec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_21 {
 bool _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 vec3 _f4;
 mat4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_19 {
 float _f0;
 mat2 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 uvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_18 {
 int _f0;
 mat3 _f1;
 float _f2;
 mat2x3 _f3;
 uvec2 _f4;
 bvec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 mat4x3 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_24 {
 mat4 _f0;
 mat3 _f1;
 uint subgroup_local_id;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 uint _f1;
 ivec3 _f2;
 uvec3 _f3;
 bvec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 vec2 _f1;
 mat4x2 _f2;
 float _f3;
 uvec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_13 {
 int _f0;
 mat3x4 _f1;
 vec3 _f2;
 ivec4 _f3;
 mat2x3 _f4;
 ivec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_12 {
 uint _f0;
 bool _f1;
 mat3x2 _f2;
 bvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 mat3x4 _f1;
 bool _f2;
 ivec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 int _f0;
 bvec2 _f1;
 vec4 _f2;
 ivec2 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat3x2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 mat3 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_4 {
 bool _f0;
 uint subgroup_base;
 mat2x4 _f1;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3x4 _f1;
 bool _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat2x4 _f3;
 _GLF_struct_2 _f4;
 ivec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_10 _f2;
 vec2 _f3;
 _GLF_struct_16 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_id)), 0u + ((true ? subgroup_size : _GLF_FUZZED(subgroup_id)))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) && true)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true)))), true && (_GLF_WRAPPED_LOOP(false))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))))) || false))));
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(mat4(1.0), mat3(1.0), gl_SubgroupInvocationID, _GLF_struct_22(_GLF_struct_18(1, mat3(1.0), 1.0, mat2x3(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED((mat4x3(-593.753, -637.464, 23.92, -71.81, 6.2, -6.7, -1.5, -3.0, 6311.8037, 901.102, -0.4, 4.3) , GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)) : uvec2(0u, 0u)))) * uvec2(1u, 1u))), bvec2(true), vec3(1.0)), mat4x3(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_struct_19(1.0, mat2(1.0), mat3x4(1.0), bvec3(true), uvec3(1u), mat4(1.0)), _GLF_struct_20(vec3(1.0), bvec3(true)), _GLF_struct_21(true, vec4(1.0), mat4x2(1.0), mat4x3(1.0), vec3(1.0), mat4(1.0), uvec3(1u))), _GLF_struct_23(mat3x2(1.0), ivec2(1), mat3x2(1.0)));
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x = _GLF_struct_replacement_24.subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(99.44), float(mat4(_GLF_FUZZED(99.44), _GLF_IDENTITY(1.0, (1.0) * 1.0), tan(0.0), 0.0, 1.0, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(725.441)), float(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(99.44), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(99.44), (_GLF_FUZZED(99.44)) + 0.0), 1.0, tan(0.0), 0.0, 1.0, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(662.494)), float(0.0), bool(true))), 0.0)), 1.0, 1.0)))), bool(true))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-112.765), _GLF_FUZZED(-908.407)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-23.98), _GLF_FUZZED((-936.642 - -657.676))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), max(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0)), (mat4(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), max(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), max(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0)), (mat4(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), max(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), max(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0)), (mat4(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), max(float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)), float(vec4(injectionSwitch.x, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-50910))), bool(false)))), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)))), (true ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0)))) : _GLF_FUZZED(abs(1.5))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0))))) > injectionSwitch.y)) && true), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 1.0))))) > injectionSwitch.y)))))))))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))) || false, bool(bvec4((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))) || false, true, false, false)))))) && true, false || ((bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0))))).x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) || false, bool(bvec4((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sqrt(1.0), 0.0))))))))))) || false, true, false, false)))))) && true)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0))), false))), true), true, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = num_workgroup;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (int(4))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), float(vec3(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), 0.0, 1.0))), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), float(vec3(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), 0.0, 1.0))), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), float(vec3(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), 0.0, 1.0))))))))), 0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0, ((float(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0) - 0.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0)), (true ? float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-3075.0021))), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), 0.0, 1.0, 0.0)) : _GLF_FUZZED(-921.101)))), _GLF_IDENTITY(float(_GLF_FUZZED(-4.3)), (true ? float(_GLF_FUZZED(-4.3)) : _GLF_FUZZED(134.102))), bool(false))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))))).y)) ? int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8728.4150 - 9.7))), float(1.0), bool(true))), injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-4881.2316, -6.6).y), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9969.7045)), bvec2(true, false))).y), sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((16.20 + 1450.9825))), bool(false)))), float(_GLF_FUZZED(5.3)), bool(false))), 0.0)), mix(float(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (1.0) - abs(0.0)), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-4.3)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7066.8546)), float(0.0), bool(true)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6673.9005)), float(1.0), bool(true))), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(sqrt(0.0), float(mat3(sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0)), min(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0)))), float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0)), 0.0 + (float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(211.456)), bool(false)))), (true ? injectionSwitch.y : _GLF_FUZZED(2.3)))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(33583u, ~ (~ (33583u)))))), bool(false))), 1.0)))))), 0.0, 1.0, 0.0))))))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.3, mix(float(-4.3), float(_GLF_FUZZED(562.690)), bool(false))))), bool(false))), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))))), 0.0, 1.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true))) + 0.0))), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(normalize(-5.6)) : 1.0)))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), max(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), clamp(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))) / 1.0), float(_GLF_FUZZED(-17.49)), bool(false)))), mix(float(_GLF_FUZZED(8.6)), float(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true))) + 0.0))), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(normalize(-5.6)) : 1.0)))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), max(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), clamp(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.13)), float(injectionSwitch.y), bool(true)))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))) / 1.0), float(_GLF_FUZZED(-17.49)), bool(false))))), bool(true))), float(_GLF_FUZZED(-4.3)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0)))))), (false ? _GLF_FUZZED(-65.51) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.2)), float(1.0), bool(true))), sqrt(1.0), 0.0)), max(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.2)), float(1.0), bool(true))), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.2)), float(1.0), bool(true))), sqrt(1.0), 0.0))))), injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))))), 0.0, 1.0, 0.0)), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0))) * 1.0)), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0))) * 1.0)), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-4.3)), bool(false))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(41.92)), float(1.0), bool(true))))))))))), 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-4.3)), bool(false)))))) - 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(-91657, clamp(-91657, -91657, _GLF_IDENTITY(_GLF_IDENTITY(-91657, max(_GLF_IDENTITY(-91657, (-91657) ^ 0), -91657)), int(ivec2(_GLF_IDENTITY(-91657, max(_GLF_IDENTITY(-91657, (-91657) ^ 0), -91657)), 1))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0))) << 0))) > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1)))) / 1), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false), true))))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_27(uvec2(1u), mat3x4(1.0), ivec4(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(1, (1) / 1)))), vec2(1.0), ivec3(1), _GLF_struct_25(ivec2(1)), _GLF_struct_26(bvec3(true), ivec4(1)), gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_28._f0.workgroup_id, (_GLF_struct_replacement_28._f0.workgroup_id) ^ (0u | 0u));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 + (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z)) >> 0u), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z)) >> 0u), (true ? ~ _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).z)) >> 0u) : _GLF_FUZZED(subgroup_id))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_3(bvec3(true), _GLF_struct_0(1u, bvec2(true)), _GLF_struct_1(uvec2(1u), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), mat2x3(1.0), 1), mat2x4(1.0), _GLF_struct_2(mat3x4(1.0), mat3x4(1.0), _GLF_IDENTITY(true, (true) && true), ivec2(1), mat4x2(1.0)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(13261) : 1)), (1) - 0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(785.346)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) ? _GLF_FUZZED(2.7) : 1.0, float(mat2x3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) ? _GLF_FUZZED(2.7) : 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0)))))) - log(1.0)))), _GLF_struct_5(ivec4(1), _GLF_struct_4(true, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)))))), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec4(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, max(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) ^ (118505u & 0u)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)))))), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec4(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, max(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) ^ (118505u & 0u)))))), (min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uint(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y))), GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)))))), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, uint(uvec4(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, max(subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) ^ (118505u & 0u))))))) - 0u)) ^ (0u ^ 0u))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) | 0u), mat2x4(1.0))), _GLF_struct_10(_GLF_struct_6(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.9)), bool(false))), (1.0) * 1.0)) - 0.0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.9)), bool(false))), (1.0) * 1.0)) - 0.0, min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.9)), bool(false))), (1.0) * 1.0)) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.9)), bool(false))), (1.0) * 1.0)) - 0.0)) : _GLF_FUZZED(-4.8)))), mat3x2(1.0), ivec2(1)), mat2x4(1.0), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_struct_7(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1)), 1)), bvec2(true), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ivec2(1), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_8(mat4(1.0)), _GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(8476.0816, -67.29, -305.096, 8.8, -376.745, 4.5, 690.083, 4.1, -9737.5323)))), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.7, -835.617, 3.5, 8185.7293, _GLF_IDENTITY(78.21, (78.21) / 1.0), 7.1, -952.596, _GLF_IDENTITY(-21.26, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-21.26, (_GLF_IDENTITY(-21.26, mix(float(-21.26), float(_GLF_FUZZED(426.526)), bool(false)))) * 1.0), sqrt(0.0)), clamp(vec2(_GLF_IDENTITY(-21.26, (_GLF_IDENTITY(-21.26, mix(float(-21.26), float(_GLF_FUZZED(426.526)), bool(false)))) * 1.0), sqrt(0.0)), vec2(_GLF_IDENTITY(-21.26, (_GLF_IDENTITY(-21.26, mix(float(-21.26), float(_GLF_FUZZED(426.526)), bool(false)))) * 1.0), sqrt(0.0)), vec2(_GLF_IDENTITY(-21.26, (_GLF_IDENTITY(-21.26, mix(float(-21.26), float(_GLF_FUZZED(426.526)), bool(false)))) * 1.0), sqrt(0.0)))))), -9.9)))) : _GLF_FUZZED(mat3(_GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)), -9.5, -77.95, _GLF_IDENTITY(-557.297, min(-557.297, _GLF_IDENTITY(-557.297, max(_GLF_IDENTITY(-557.297, float(mat4x2(-557.297, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.4), (false ? _GLF_FUZZED(-11.71) : _GLF_FUZZED(-3.4))))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0))), -557.297)))), -4.1, -9.0, -8.3, -7.3, 1870.0530)))), _GLF_struct_9(1u)), vec2(1.0), _GLF_struct_16(_GLF_struct_11(ivec2(1), mat3x4(1.0), true, ivec4(1), mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_12(1u, _GLF_IDENTITY(true, ! (! (true))), mat3x2(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), false), true, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4((bool(bvec2(true, false))), false, true, false))) || false))), true), _GLF_struct_13(1, mat3x4(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), _GLF_IDENTITY(float(mat3x2(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), 0.0, 1.0, 1.0, 0.0, log(1.0))), min(float(mat3x2(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), 0.0, 1.0, 1.0, 0.0, log(1.0))), float(mat3x2(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), 0.0, 1.0, 1.0, 0.0, log(1.0))))))), mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(((bvec2(true, true) != _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))) ? 4.6 : 3.8))), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (vec3(1.0)) / _GLF_IDENTITY(abs(vec3(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(abs(vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0) + (abs(vec3(1.0, 1.0, 1.0)))), abs(vec3(1.0, 1.0, 1.0)), abs(vec3(1.0, 1.0, 1.0))))), ivec4(1), mat2x3(1.0), ivec4(1), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), _GLF_struct_14(mat2(1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.8) : 1.0))))), mat4x2(1.0), 1.0, _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))), clamp(((uvec4(1u))), ((uvec4(1u))), ((uvec4(1u))))) + uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u), 0u, 0u)) | (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), uvec4(1u))))), mat3(1.0)), _GLF_struct_15(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2963.8903)), float(1.0), bool(true)))), 1u, ivec3(1), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false) ? uvec3(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(138837u, 4917u, _GLF_IDENTITY(_GLF_IDENTITY(3225u, max(3225u, _GLF_IDENTITY(3225u, 1u * (3225u)))), (_GLF_IDENTITY(3225u, max(3225u, _GLF_IDENTITY(3225u, 1u * (3225u))))) ^ 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u), 0u, 0u)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) ^ (uvec3(138837u, 4917u, 3225u)))))), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), mat4x3(1.0))));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y) << 0u) + _GLF_struct_replacement_17._f1._f1.subgroup_base + GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-12035 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), false)), false)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) && (_GLF_DEAD(false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))), true, false)))));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0))).y)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-481.258), _GLF_FUZZED(-231.212)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_DEAD(false))))) || false))))) || false)))))))))) || false))))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y = virtual_gid;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
             barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true, true, true))) && true)))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = ((1 ^ 0) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6451.6946)), bvec2(true, false))))), length(0.0), 1.0, 0.0, abs(1.0)))).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))))))) || false)))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 1), (ivec4(_injected_loop_counter, 1, 1, 1)) * ivec4(1, 1, 1, 1)))) < (1 | 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               barrier();
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), ((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ (0 >> _GLF_IDENTITY(int(1), int(1))))) << _GLF_IDENTITY(0, ~ (~ (0)))))))) >> 0)); _injected_loop_counter --)
      {
       do
        {
         GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))) || false), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))), (_GLF_IDENTITY((true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))), ! (! ((true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-83.95) : injectionSwitch.y)))), true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))))))))))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)).y + _GLF_struct_replacement_17._f1._f1.subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, max(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base))) / uvec3(1u, 1u, 1u)).x + 1) % GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y, ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, max(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base))) / uvec3(1u, 1u, 1u)).x + 1) % GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))))), false), true)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true)))))), true))))) ? _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x) : GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + _GLF_struct_replacement_17._f1._f1.subgroup_base + (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + _GLF_IDENTITY(1, int(ivec3(1, 0, 1)))), min((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1, 0u | _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + _GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1, ~ (~ (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1)))))), (false ? _GLF_FUZZED(171480u) : _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1))), min(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1))), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (true ? (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1) : _GLF_FUZZED(workgroup_base))), clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1) << 0u), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1, 1u * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1))))), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1))))))))), 0u | ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1, 0u | _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), _GLF_IDENTITY(clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), ~ (~ ((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1)))), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1)), (clamp((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1), ~ (~ ((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1)))), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1))) >> 0u)))))))), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1))) % GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y)));
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_id) : atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) - uvec2(0u, 0u)).x], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(14871) : 64), 0 | ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(14871) : 64))))) >> 0)))))), 2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))).x], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))), 64, 2), (atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x) - 0u)))) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))], 4, 64, 2)) >> 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), max(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2), _GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) << 0u)))) >> 0u, ((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), max(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, _GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) * 1))), 2), _GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) << 0u)))) >> 0u) << 0u))), ((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), max(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2), _GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) << 0u)))) >> 0u, ((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), max(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, _GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) * 1))), 2), _GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) << 0u)))) >> 0u) << 0u)))) | ((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), max(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2), _GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) << 0u)))) >> 0u, ((_GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), max(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, _GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) * 1))), 2), _GLF_IDENTITY(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) << 0u)))) >> 0u) << 0u)))))) / 1u)));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, 5921.7168)))) : _GLF_FUZZED(vec2(4.8, _GLF_IDENTITY(-3.5, min(-3.5, _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-75.82) : -3.5)))))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))), false, true, false))))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(_injected_loop_counter) : int(7))))) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), 0 ^ ((0 >> _GLF_IDENTITY(int(5), int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), clamp(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)), mix(vec2(_GLF_FUZZED(-889.417), _GLF_FUZZED(-3.9)), vec2((vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[0], (vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(-602.644), _GLF_FUZZED(-45.25)))), bvec2(false, false))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x % 2, (1u & 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x % 2))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x % 2, (1u & 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x % 2))), ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x % 2, (1u & 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x % 2)))) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == 0)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))) >> 0u)], uint(1), 4, 64, 4);
      }
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 ^ 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 subgroupBarrier();
 do
  {
   atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(uvec3(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, 0u, 1u)))], read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
