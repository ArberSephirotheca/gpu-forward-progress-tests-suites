#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(-3.6), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(6.9)))), bvec2(false, true))).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0))) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0))) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0))) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0))) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-62.95)))))))) && (injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), vec2(_GLF_FUZZED((878.517)), _GLF_FUZZED(718.641)), bvec2(false, false))).y))))) && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(3.2), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) && true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(3.2), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) && true)))))))))))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) || false)), bool(bvec4(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) || false)), true, true, false)))))) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) && true)), true)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) && true)), true)))))) || false)))))))))) && true))))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-589.126, 7.4).t), _GLF_FUZZED(vec3(-0.4, 151.361, -493.089).s)), bvec2(false, false))).y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))))) && true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))), (! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false)), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.6) : 0.0)), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)))) > injectionSwitch.y)) || false), true))))))))) && true))))) || false))))))) && _GLF_IDENTITY(true, false || (true))))))), true, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))))))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (! (false)) || false))), (((_GLF_IDENTITY(! (false), false || (! (false)))))) || false) && true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(_GLF_IDENTITY(((! (false))), (_GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), false, true, true)))) || false) && true, (_GLF_IDENTITY(((! (false))), (_GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), false, true, true)))) || false) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), (((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! (_GLF_IDENTITY(false, false || (false)))))))) || false) && true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(true, true))) && (_GLF_IDENTITY(((! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(((! (false))), (((! (false)))) && true), bool(bvec4(((_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true, true)))) || false) && true)))), ((! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), _GLF_IDENTITY((((_GLF_IDENTITY(! (false), false || (! (false)))))) || false, ! (! ((((_GLF_IDENTITY(! (false), false || (! (false)))))) || false)))) && true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(((! (false))), (_GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), false, true, true)))) || false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) << 0u))) / 1u)) / 1u) | 0u) + (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u | 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) << (0u | 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) - 0u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.209)), vec2(_GLF_FUZZED(-1704.8301), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.209)), vec2(_GLF_FUZZED(-1704.8301), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.209)), vec2(_GLF_FUZZED(-1704.8301), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-384.209)), vec2(_GLF_FUZZED(-1704.8301), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))) && true) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicOr(subgroup_size, workgroup_id)))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), (_GLF_DEAD(false)) || false)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-7.1))))).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), true)))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter ++ : _GLF_FUZZED(-73242))))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), false))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), true)))))))), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false, false || (false)), false, true))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))) && true))), true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7244.7756, 5321.3571)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7244.7756, 5321.3571))))) / vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))) || false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(728.197))), 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))))))))))))), (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(9.8)), (float(_GLF_FUZZED(9.8))) / 1.0), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9.8)), bool(false))), round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))))) && true)) && true)))))) || false)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), 1.0 * (length(normalize(1.0))))) - abs(0.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), 1.0 * (length(normalize(1.0))))) - abs(0.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)))))) || false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(12.82, -9.8)) : (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))), false || (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(12.82, -9.8)) : (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0)))))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))) && true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), 0.0 + (round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))))))) && true))), true && ((bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(919.426))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.313)), float(0.0), bool(true))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), 0.0 + (round(length(normalize(1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))))))) && true)))))))) || false)), false, false, false))), false, false))))))), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))) * (min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED(-889.980), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)), mix(vec2((vec2(mat4x3(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(-4.6)), vec2(_GLF_FUZZED(35.16), _GLF_IDENTITY((vec2(mat4x3(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))[1], min((vec2(mat4x3(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))[1], (vec2(mat4x3(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (min(injectionSwitch, injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (min(injectionSwitch, injectionSwitch)))))).y) || false)))))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.3, -3.3)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.3, -3.3)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.3, -3.3))))))) * vec2(1.0, 1.0)), injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-77.91), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-95.33, 104.231)) : injectionSwitch)).x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.8) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(_GLF_FUZZED(1.4)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.8) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), bool(true)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-77.91), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(vec2(-95.33, 104.231)) : injectionSwitch)).x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y) || false))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), sin(0.0), 1.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), ((bool(injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)), true, false, false)), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bool((bool(injectionSwitch.x > injectionSwitch.y))), (bool((bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) && true)), true, false, false)), false, true)))))))) || false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-4357.1488, -8.6)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.7) : -4.7))), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-4357.1488, -8.6)), vec2(_GLF_IDENTITY(mat3x2(true ? injectionSwitch : _GLF_FUZZED(vec2(-4357.1488, -8.6)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), sqrt(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), clamp(_GLF_IDENTITY(vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), min(vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))), _GLF_IDENTITY(vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), min(vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))), vec3(mat3x2(vec3(1.0, 0.0, 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))))))), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.7) : 0.0)), 1.0, 1.0), transpose(transpose(mat3x2(true ? injectionSwitch : _GLF_FUZZED(vec2(-4357.1488, -8.6)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-470.458)), float(0.0), bool(true))) : _GLF_FUZZED(-33.05), max(true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-470.458)), float(0.0), bool(true))) : _GLF_FUZZED(-33.05), true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-470.458)), float(0.0), bool(true))) : _GLF_FUZZED(-33.05))))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - sqrt(0.0)))))))))[1]), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4357.1488, -8.6)), min(_GLF_FUZZED(vec2(-4357.1488, -8.6)), _GLF_FUZZED(vec2(-4357.1488, _GLF_IDENTITY(-8.6, (-8.6) + abs(sin(0.0))))))), clamp(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4357.1488, -8.6)), min(_GLF_FUZZED(vec2(-4357.1488, -8.6)), _GLF_FUZZED(vec2(-4357.1488, -8.6)))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4357.1488, -8.6)), min(_GLF_FUZZED(vec2(-4357.1488, -8.6)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-4357.1488, mix(float(_GLF_IDENTITY(-4357.1488, min(-4357.1488, -4357.1488))), float(_GLF_FUZZED((-48.14 * vec2(-6468.8300, -1.9).t))), bool(false))), -8.6)))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4357.1488, -8.6)), min(_GLF_FUZZED(vec2(-4357.1488, -8.6)), _GLF_FUZZED(vec2(-4357.1488, -8.6)))))))[0], _GLF_FUZZED(-0.2)), bvec2(true, false))))).x > injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))))) || false), true, false, true)))) && true)))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), true, false, false))))) ? injectionSwitch : _GLF_FUZZED(vec2(-4357.1488, -8.6)))).x > injectionSwitch.y))), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(vec2(-7114.5397, -9.4).x), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(-2.4)), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(46.80), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), 1.0)), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.6) : 1.0)))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.1) : 0.0)), 0.0))), 1.0))))).y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0), 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))))))), ((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0), 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1)))))))) - 0), (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))))), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(findLSB(workgroup_size)))))))), bool(bool(_injected_loop_counter < (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), min(clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))))), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), 1 & _GLF_IDENTITY(1, max(1, 1))), clamp(1 & _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1))))), (0 ^ 0) ^ (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, max(1, 1)), int(int(1 & _GLF_IDENTITY(1, max(1, 1)))))))) | (0 << _GLF_IDENTITY(int(7), int(7)))), 1 & _GLF_IDENTITY(1, max(1, 1))))))))))) && true)); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(524.509)), bool(false))), 1.0, 1.0, 0.0, 1.0, sqrt(0.0)))))), mix(float(_GLF_FUZZED(6305.0282)), float(injectionSwitch.y), bool(true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
