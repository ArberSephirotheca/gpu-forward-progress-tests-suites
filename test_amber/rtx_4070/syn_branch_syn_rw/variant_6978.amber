#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 ivec4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 mat2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_36 {
 vec2 _f0;
 mat4x2 _f1;
 mat4 _f2;
 mat3x4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_38 {
 mat2 _f0;
 mat3 _f1;
 _GLF_struct_36 _f2;
 _GLF_struct_37 _f3;
} ;

struct _GLF_struct_34 {
 vec2 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 float _f4;
 vec3 _f5;
} ;

struct _GLF_struct_33 {
 mat4x3 _f0;
} ;

struct _GLF_struct_35 {
 _GLF_struct_33 _f0;
 _GLF_struct_34 _f1;
} ;

struct _GLF_struct_31 {
 mat3 _f0;
 mat3x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_30 {
 uvec4 _f0;
 bool _f1;
 mat4 _f2;
 bvec2 _f3;
 bvec2 _f4;
 uvec3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_28 {
 uint _f0;
 mat4x2 _f1;
 uvec2 _f2;
 mat3 _f3;
 float _f4;
 mat3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_29 _f0;
 _GLF_struct_32 _f1;
 uvec3 _f2;
 _GLF_struct_35 _f3;
 bvec3 _f4;
 _GLF_struct_38 _f5;
 uint workgroup_id;
} ;

struct _GLF_struct_26 {
 uvec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 mat3x4 _f1;
 float _f2;
 int _f3;
 bool _f4;
} ;

struct _GLF_struct_23 {
 bvec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_25 {
 bvec3 _f0;
 mat3 _f1;
 _GLF_struct_23 _f2;
 uint subgroup_base;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_27 {
 _GLF_struct_25 _f0;
 mat3x2 _f1;
 _GLF_struct_26 _f2;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 uint _f1;
 int _f2;
 mat4x3 _f3;
 uvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_18 {
 bool _f0;
 mat3 _f1;
 uvec3 _f2;
 mat3x4 _f3;
 uvec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_21 {
 mat2x4 _f0;
 mat4x2 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 mat2 _f1;
 uvec4 _f2;
 uvec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_15 {
 float _f0;
 bvec3 _f1;
 mat3 _f2;
 mat3x4 _f3;
 float _f4;
 vec2 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 uint workgroup_base;
 vec3 _f2;
 vec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_17 _f0;
 ivec4 _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_14 {
 bool _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 int _f1;
 bool _f2;
 vec4 _f3;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 mat3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 uvec3 _f2;
 mat3x2 _f3;
 _GLF_struct_10 _f4;
 uint read;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 vec3 _f1;
 ivec2 _f2;
 uint _f3;
 ivec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec3 _f1;
 mat2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 vec2 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 bvec4 _f1;
 uvec4 _f2;
 mat4 _f3;
 ivec2 _f4;
 vec3 _f5;
 int _f6;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 uvec2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 vec3 _f1;
 mat4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 mat4x3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_12 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(_GLF_FUZZED(-175.431)), float(float(float(injectionSwitch.x))), bool(true)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false)))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6152.2096)), bool(false))) : _GLF_FUZZED(-72.25))))), true, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) * 1.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-55.53)), _GLF_FUZZED(-9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (false ? _GLF_FUZZED(smoothstep(vec2(22.77, -5576.2950), injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])))))).x, float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-55.53)), _GLF_FUZZED(-9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (false ? _GLF_FUZZED(smoothstep(vec2(22.77, -5576.2950), injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])))))).x, mix(float(_GLF_FUZZED(float(79149u))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-55.53)), _GLF_FUZZED(-9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (false ? _GLF_FUZZED(smoothstep(vec2(22.77, -5576.2950), injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])))))).x), bool(true)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, sqrt(1.0), 1.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8445.4131)), float(0.0), bool(true))), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0)))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0))))) > injectionSwitch.y) && true)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))) : _GLF_FUZZED(vec2(52.76, -598.089)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x), (~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))).x)) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))) * 1u)));
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_29(_GLF_struct_28(1u, mat4x2(1.0), uvec2(1u), mat3(1.0), 1.0, mat3(1.0), mat4(1.0))), _GLF_struct_32(_GLF_struct_30(uvec4(1u), true, mat4(1.0), bvec2(true), bvec2(true), uvec3(1u), mat3x4(1.0)), _GLF_struct_31(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(6471.3904, -231.999, -1881.1844, -0.1, 671.636, 5.5, 4.2, -1.2, 88.42)) : mat3(1.0))), mat3x2(1.0), uvec4(1u)), mat3(1.0)), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(49602u)))) | 0u)), _GLF_struct_35(_GLF_struct_33(mat4x3(1.0)), _GLF_struct_34(vec2(1.0), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(43245u, 188710u, _GLF_IDENTITY(105322u, min(105322u, _GLF_IDENTITY(105322u, (105322u) - 0u))))) : _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) - uvec3(0u, 0u, 0u)))), mat2x3(1.0), mat3x2(1.0), 1.0, vec3(1.0))), bvec3(true), _GLF_struct_38(mat2(1.0), mat3(1.0), _GLF_struct_36(vec2(1.0), mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))))), mat4(1.0), mat3x4(1.0), bvec4(true)), _GLF_struct_37(ivec4(1), uvec3(1u), mat4x3(1.0), mat3x2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))), (mat2(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat4x3(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> (0u | 0u)))), gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u)), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u)), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u)), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u)), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u)), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), min(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u), uvec3(0u, 0u, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_17(_GLF_struct_15(1.0, bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), mat3(_GLF_IDENTITY(mat4x3(transpose(mat3(1.0))), transpose(transpose(mat4x3(transpose(mat3(1.0)))))))))), (mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), mat3x4(1.0), 1.0, vec2(1.0)), _GLF_struct_16(bvec4(true), mat2(1.0), uvec4(1u), uvec2(1u), mat4x2(1.0)), workgroup_size * _GLF_struct_replacement_39.workgroup_id, vec3(1.0), vec2(1.0), 1u), ivec4(1), _GLF_struct_21(mat2x4(1.0), mat4x2(1.0), _GLF_struct_18(true, mat3(1.0), uvec3(1u), mat3x4(1.0), uvec3(1u), mat4x3(1.0)), _GLF_struct_19(mat4x3(1.0), bvec2(true)), _GLF_struct_20(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(1u))), 1u, 1, mat4x3(1.0), uvec2(1u), mat2x4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_25(bvec3(true), mat3(1.0), _GLF_struct_23(bvec4(true), ivec2(1)), GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, _GLF_struct_24(ivec2(1), mat3x4(1.0), 1.0, 1, true)), mat3x2(1.0), _GLF_struct_26(_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), min(~ (uvec2(1u)), ~ (uvec2(1u)))))), uvec2(1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22._f0.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_27._f0.subgroup_base, max(_GLF_struct_replacement_27._f0.subgroup_base, _GLF_struct_replacement_27._f0.subgroup_base)), (true ? _GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[3]))), (_GLF_IDENTITY(_GLF_struct_replacement_22._f0.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_27._f0.subgroup_base, max(_GLF_struct_replacement_27._f0.subgroup_base, _GLF_struct_replacement_27._f0.subgroup_base)), (true ? _GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[3])))) | (_GLF_IDENTITY(_GLF_struct_replacement_22._f0.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_27._f0.subgroup_base, max(_GLF_struct_replacement_27._f0.subgroup_base, _GLF_struct_replacement_27._f0.subgroup_base)), (true ? _GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[3]))))), clamp(_GLF_struct_replacement_22._f0.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_27._f0.subgroup_base, uint(uint(_GLF_struct_replacement_27._f0.subgroup_base))), _GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base, (_GLF_struct_replacement_22._f0.workgroup_base + _GLF_struct_replacement_27._f0.subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) << 0u)))) + ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).y, _GLF_IDENTITY(0u + (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y), (false ? _GLF_FUZZED((-- workgroup_size)) : 0u + (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).y, 0u + (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y)))) << 0u)), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).y, 0u + (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y))))))), (0u & 145200u) ^ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).y, 0u + (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y))))))) + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_1(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-81.84) : 1.0), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-81.84) : 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-976.299, 7.9, 45.15, 1.5, -917.403, -389.176, 6295.5495, 7.3))))), (false ? _GLF_FUZZED(9.2) : float(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-976.299, 7.9, 45.15, 1.5, -917.403, -389.176, 6295.5495, 7.3)))))))), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-81.84) : 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-976.299, 7.9, 45.15, 1.5, -917.403, -389.176, 6295.5495, 7.3))))), (false ? _GLF_FUZZED(9.2) : float(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat2x4((false ? _GLF_FUZZED(-81.84) : 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-976.299, 7.9, 45.15, 1.5, -917.403, -389.176, 6295.5495, 7.3)))))))), 1.0)))))), 1.0, 1.0))), transpose(transpose(mat4(1.0)))), _GLF_struct_0(mat4x2(1.0), vec3(1.0), mat4(1.0), mat4x3(1.0))), _GLF_struct_4(_GLF_struct_2(uvec3(1u), vec3(1.0)), uvec2(1u), _GLF_struct_3(bvec3(true), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false)))))), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))), (false ? _GLF_FUZZED(mat4(-18.17, -19.73, -6.8, -90.38, -5.0, -7.5, -488.846, _GLF_IDENTITY(3062.5942, (_GLF_IDENTITY(3062.5942, clamp(3062.5942, 3062.5942, 3062.5942))) - determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sin(0.0), sin(0.0), 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))), 74.97, -473.968, -7.2, 404.910, 12.12, 2.7, 6431.2844, -2119.4560)) : _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))), (mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true))))) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-634.550, min(_GLF_IDENTITY(-634.550, float(mat4x2(_GLF_IDENTITY(-634.550, mix(float(_GLF_FUZZED(75.15)), _GLF_IDENTITY(float(-634.550), float(_GLF_IDENTITY(mat2x3(float(-634.550), 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(float(-634.550), 0.0, 1.0, 0.0, 0.0, 1.0)))))), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), -634.550)))), float(1.0), bool(true)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-18.17, -19.73, -6.8, -90.38, -5.0, -7.5, -488.846, 3062.5942, 74.97, -473.968, -7.2, 404.910, 12.12, 2.7, 6431.2844, -2119.4560), mat4(1.0) * (_GLF_IDENTITY(mat4(-18.17, -19.73, -6.8, -90.38, -5.0, -7.5, -488.846, 3062.5942, 74.97, -473.968, -7.2, 404.910, 12.12, 2.7, 6431.2844, -2119.4560), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-51.96, 1.5, 804.445, -2.3, 7.8, -437.814, -6100.5092, 900.154, 420.244, -143.401, 84.69, 0.7, -4.6, -32.37, 7930.8058, -981.764)) : mat4(-18.17, -19.73, -6.8, _GLF_IDENTITY(-90.38, min(_GLF_IDENTITY(-90.38, (-90.38) - 0.0), -90.38)), -5.0, -7.5, -488.846, 3062.5942, 74.97, -473.968, -7.2, 404.910, 12.12, 2.7, 6431.2844, -2119.4560)))))) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))), mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-634.550), (_GLF_FUZZED(-634.550)) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, exp(0.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, exp(0.0)))))), float(1.0), bool(true)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)))))))), _GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + ((_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-634.550), (_GLF_FUZZED(-634.550)) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, exp(0.0)))))), float(1.0), bool(true)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true))))))), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-634.550), (_GLF_FUZZED(_GLF_IDENTITY(-634.550, mix(float(-634.550), float(_GLF_FUZZED(-75.98)), bool(false))))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, exp(0.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, exp(0.0)))))), float(1.0), bool(true)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(-634.550)), float(1.0), bool(true)), 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, sqrt(1.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), sqrt(1.0)))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 0.0))))))))))) : _GLF_FUZZED((mat4(-6.6, 0.5, 27.88, 161.074, 3.5, 3939.7484, 580.375, -2.5, 31.75, 7760.2383, -96.90, -280.237, 867.955, -72.91, -4330.7669, 745.240) - mat4(7.1, 1582.9399, 761.640, 1.6, 8.2, 33.61, 876.072, 90.50, 9893.7178, 3148.0276, -270.432, 773.599, 418.481, -6123.4709, -121.320, -42.12)))))))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0)))))), ivec2(1), vec3(1.0), 1)), mat4x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.5)), float(1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.5)), float(1.0), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.5)), float(1.0), bool(true))), mix(float(_GLF_FUZZED(423.789)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.5)), float(1.0), bool(true)))), bool(true))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, log(1.0), 0.0, 0.0, abs(1.0), 0.0)))) / 1.0)))), _GLF_struct_7(_GLF_struct_5(vec2(1.0), vec3(1.0), mat2(1.0), ivec2(1)), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-928.648 / 14.44))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0)), _GLF_struct_6(bvec3(true), vec3(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), clamp((ivec2(1)), (ivec2(1)), (ivec2(1)))) | ivec2(0, 0)), 1u, ivec3(1), vec2(1.0))), _GLF_struct_12(_GLF_struct_8(1u, mat3x4(1.0)), _GLF_struct_9(mat2(1.0), vec2(1.0)), uvec3(1u), mat3x2(1.0), _GLF_struct_10(mat3x2(1.0), mat3(1.0), vec3(1.0)), atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid) | (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).w], 4, 64, 2), _GLF_struct_11(vec3(1.0), 1, _GLF_IDENTITY(true, true && (true)), vec4(1.0))), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), mix(float(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), float(_GLF_FUZZED(float(false))), bool(false))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(524.834), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(524.834), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true)), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(524.834), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), ((mix(vec2(_GLF_FUZZED(524.834), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * mat2(1.0)) * vec2(1.0, 1.0))))).x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(3.7)) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), mix(float(_GLF_FUZZED(-30.43)), float((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x)), bool(true)))) + 0.0)) - 0.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), mix(float(_GLF_FUZZED(-30.43)), float((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x)), bool(true)))) + 0.0)) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), mix(float(_GLF_FUZZED(-30.43)), float((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x)), bool(true)))) + 0.0)) - 0.0), mix(float(_GLF_FUZZED(826.305)), float(_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x), mix(float(_GLF_FUZZED(-30.43)), float((false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x)), bool(true)))) + 0.0)) - 0.0)), bool(true)))), float(_GLF_FUZZED(0.3)), bool(false)))))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(_GLF_IDENTITY(3.7, (true ? 3.7 : _GLF_FUZZED(4252.5250))))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9620.5570) : injectionSwitch.x)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3686.3500) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, clamp(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid))) | (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).y % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (false))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_14.next_virtual_gid], _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(virtual_gid) : uint(1))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-7829.9473, 42.44, -3.2, -4.0, 855.237, 268.844, 6119.4508, -5756.6707, 65.46, -6743.4991, -52.41, 9.0, -7.9, -885.388, 9.9, -1.7)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0)), ((mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-5.4) : injectionSwitch.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(-5.4) : injectionSwitch.x), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-5.4) : injectionSwitch.x), min((false ? _GLF_FUZZED(-5.4) : injectionSwitch.x), (false ? _GLF_FUZZED(-5.4) : injectionSwitch.x))) : _GLF_FUZZED(-2.6)))) / 1.0))) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(0.7, max(_GLF_IDENTITY(0.7, (0.7) + 0.0), 0.7)))), bool(false))))) > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_DEAD(false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[_GLF_struct_replacement_14.next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3397.0541) : injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false), bvec2(bvec4(bvec2(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 1.0, exp(0.0)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(0.5))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], _GLF_struct_replacement_13._f4.read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
