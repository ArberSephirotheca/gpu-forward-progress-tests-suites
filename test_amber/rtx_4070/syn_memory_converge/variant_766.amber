#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-63.94, mix(float(-63.94), float(_GLF_FUZZED(38.44)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), _GLF_FUZZED(9.8)), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-7.0, 2.4)) : (injectionSwitch)))))[0], _GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), true))))) ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, _GLF_IDENTITY(-5.5, float(float(-5.5)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(737.126), _GLF_FUZZED(-2.9)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), true))))) ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, _GLF_IDENTITY(-5.5, float(float(-5.5)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(737.126), _GLF_FUZZED(-2.9)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), true))))) ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, _GLF_IDENTITY(-5.5, float(float(-5.5)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(737.126), _GLF_FUZZED(-2.9)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))))))) : (injectionSwitch)))[1]), bvec2(true, true))), injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-63.94, mix(float(-63.94), float(_GLF_FUZZED(38.44)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(false || (bool(bool(bool(false)))), true && (false || (bool(bool(bool(false))))))))))))), _GLF_FUZZED(_GLF_IDENTITY(9.8, (9.8) * 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), vec2(1.0, 1.0) * (min((injectionSwitch), (injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), vec2(1.0, 1.0) * (min((injectionSwitch), (injectionSwitch)))))))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x4((injectionSwitch), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), 0.0, 0.0), mat2x4(mat2x4(mat2x4((injectionSwitch), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), 0.0, 0.0)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (true ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, -5.5), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), 0.0))) : _GLF_FUZZED(injectionSwitch)))) : (injectionSwitch)))[1]), bvec2(true, true))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-63.94, mix(float(-63.94), _GLF_IDENTITY(float(_GLF_FUZZED(38.44)), min(float(_GLF_FUZZED(38.44)), float(_GLF_FUZZED(38.44)))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))))), _GLF_FUZZED(9.8)), vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (vec2(mat2x4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) - vec2(0.0, 0.0))), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (true ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, -5.5), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) : (injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (true ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, -5.5), _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) * vec2(1.0, 1.0))))[1]), bvec2(true, true))), injectionSwitch)) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-63.94, mix(float(_GLF_IDENTITY(-63.94, min(-63.94, -63.94))), float(_GLF_FUZZED(38.44)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))))), _GLF_FUZZED(9.8)), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.2, -5.5), (true ? _GLF_IDENTITY(vec2(7.2, -5.5), vec2(mat2x4(vec2(7.2, -5.5), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-6885.7759))), injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0)))[0] : _GLF_FUZZED(-6885.7759))), injectionSwitch[1])).x) / 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp2(-219.820)) : 0.0))))) : _GLF_FUZZED(injectionSwitch)))) : (injectionSwitch)))[1]), bvec2(true, true))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_FUZZED((true ? -77.75 : -6.5))), (true ? float(_GLF_FUZZED((true ? -77.75 : -6.5))) : _GLF_FUZZED(vec3(-444.520, -4.8, 93.68).z))), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) * mat2(1.0)), injectionSwitch)).y), clamp((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0))), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(9.4, -20.56, -1162.3841, -543.913)) : mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0))), 1.0), mat2(mat4x3(false ? _GLF_FUZZED(mat2(9.4, -20.56, -1162.3841, -543.913)) : mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(1.0, 0.0, 1.0))), 1.0)))))))).y), (injectionSwitch.y)))), bool(true))) - 0.0))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y), mix(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y)), float(_GLF_FUZZED(6.7)), bool(false))) + 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((injectionSwitch.y) + 0.0) * 1.0))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)))) || false)), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0)))))), bool(_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), (_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), bool(bvec3(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), false, true)))) && true))), false, false), bvec3(bvec3(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false)))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), sin(0.0) + ((injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))) + 0.0)))))), false, false), bvec3(bvec3(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y), mix(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y)), float(_GLF_FUZZED(6.7)), bool(false))) + 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((injectionSwitch.y) + 0.0) * 1.0)))))))), ! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y), mix(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y)), float(_GLF_FUZZED(6.7)), bool(false))) + 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((injectionSwitch.y) + 0.0) * 1.0)))))))), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y, mix(float(_GLF_FUZZED((-6.7 + (-6.4 + -62.24)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y, mix(float(_GLF_FUZZED(8.7)), float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-7868.4823, 4354.2435)))).y), bool(true)))), bool(true)))), mix(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-7868.4823, float(vec4(_GLF_IDENTITY(-7868.4823, clamp(-7868.4823, -7868.4823, -7868.4823)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), 4354.2435)))).y)), float(_GLF_FUZZED(6.7)), bool(false))) + 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(12.11) : (injectionSwitch.y)))) / 1.0) + 0.0, ((injectionSwitch.y) + 0.0) * 1.0)))))))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) || false), false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), true)))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) || false), false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, _GLF_IDENTITY(false, ! (! (false))), false))) && true), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)), false || (bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(227.258, 56.96)))))).y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), true, false), bvec3(bvec4(bvec3(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))), true, false), _GLF_IDENTITY(true, true && (true))))))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))), ! (! ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, true)))), bool(bvec3(bool(bool(bool(bvec4(false, true, false, true)))), true, true))))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(315.963))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(abs(-8.5)) : injectionSwitch.x)))) < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(22.95)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0)))))), bool(_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), (_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), bool(bvec3(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), false, true)))) && true))), false, false), bvec3(bvec3(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(-3121.5974)), bool(false)))))) + 0.0) / 1.0))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(-3121.5974)), bool(false)))))) + 0.0) / 1.0))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bool(_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), bool(bvec3(bool(! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))) + 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))) + 0.0))))))))), false, true)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), bool(bvec3(bool(! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))) + 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))) + 0.0))))))))), false, true)))), _GLF_IDENTITY(true, (true) && true), true, true)), true && (bool(bvec4((_GLF_IDENTITY(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))) + 0.0))))))), bool(bvec3(bool(! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))) + 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))) + 0.0))))))))), false, true)))), _GLF_IDENTITY(true, (true) && true), true, true))))) && true))), false, false), bvec3(bvec3(bvec3(! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))) || false)))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(655.642)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-1280.2679)))))))), (_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), sin(0.0) + ((injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))) + 0.0)))))), false, false), bvec3(bvec3(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), sin(0.0) + ((injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))) + 0.0)))))), false, false), bvec3(bvec3(bvec3(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), (vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0)) * mat4(1.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(vec2(-38.21, 9.6)) : _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 1.0, 1.0))))))), vec2(0.0, sqrt(1.0))), dot(vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), length(0.0), 0.0, 0.0))))), 1.0), vec2(0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0))) * 1.0), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 0.0)), (true ? float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0))) * 1.0), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 0.0)) : _GLF_FUZZED(-61.38))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 0.0))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0))) * 1.0), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 0.0)), (true ? float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0))) * 1.0), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 0.0)) : _GLF_FUZZED(-61.38))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, log(1.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), abs(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 0.0))))))))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(workgroup_size, 1u, 0u, 1u))))), (workgroup_size) * 1u)) >> 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 1), clamp(ivec4(64, 1, 0, 1), ivec4(64, 1, 0, 1), ivec4(64, 1, 0, 1))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 1), clamp(ivec4(64, 1, 0, 1), ivec4(64, 1, 0, 1), ivec4(64, 1, 0, 1))))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 1), clamp(ivec4(64, 1, 0, 1), ivec4(64, 1, 0, 1), ivec4(64, 1, 0, 1))))), 1)))))), 64, 64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
