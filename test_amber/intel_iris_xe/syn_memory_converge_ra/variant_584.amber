#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), 0u ^ (~ ((gl_NumWorkGroups.x)))))), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), 0u | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))), min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))) | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))))))) ^ 0u, ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), 0u ^ (~ ((gl_NumWorkGroups.x)))))), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), 0u | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))), min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))) | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))))))) ^ 0u) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 0u | ((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), 0u ^ (~ ((gl_NumWorkGroups.x)))))), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), 0u | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))), min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))) | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))))))) ^ 0u, ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), 0u ^ (~ ((gl_NumWorkGroups.x)))))), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), 0u | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))), min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), _GLF_IDENTITY(min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)), (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))) | (min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))))))) ^ 0u) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(783.398)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(783.398)), bool(false))))) && true)), false || (false || ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(783.398)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(783.398)), bool(false))))) && true)), false || (false || ((injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))) && true), bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true), true))))), bool(bvec4(_GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-780.221), _GLF_FUZZED(4435.3289)), bvec2(false, false)))) - vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) || (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.7) : injectionSwitch.y))) / 1.0))))), false, true, true))), ! (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED((subgroup_local_id --)) : (workgroup_id))), 0u | (_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) - 0u), (workgroup_id))) | (workgroup_id))))) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u + (uint(6u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) ^ 0u, (_GLF_IDENTITY((uint(6u)) ^ 0u, (_GLF_IDENTITY((uint(6u)) ^ 0u, uint(uvec2((uint(6u)) ^ 0u, 1u)))) | ((uint(6u)) ^ 0u))) >> 0u), max(_GLF_IDENTITY((uint(6u)) ^ 0u, max(_GLF_IDENTITY((uint(6u)) ^ 0u, min((uint(6u)) ^ 0u, (uint(6u)) ^ 0u)), (uint(6u)) ^ 0u)), _GLF_IDENTITY((uint(6u)) ^ 0u, ~ (~ (_GLF_IDENTITY((uint(6u)) ^ 0u, ((uint(6u)) ^ 0u) + 0u)))))))) - 0u), uint(6u))) * (8u), 1u * (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) ^ 0u, (_GLF_IDENTITY((uint(6u)) ^ 0u, _GLF_IDENTITY(((uint(6u)) ^ 0u) | ((uint(6u)) ^ 0u), (_GLF_IDENTITY(((uint(6u)) ^ 0u) | ((uint(6u)) ^ 0u), (((uint(6u)) ^ 0u) | ((uint(6u)) ^ 0u)) << 0u)) | (((uint(6u)) ^ 0u) | ((uint(6u)) ^ 0u))))) >> 0u), max((uint(6u)) ^ 0u, _GLF_IDENTITY((uint(6u)) ^ 0u, ~ (~ (_GLF_IDENTITY((uint(6u)) ^ 0u, ((uint(6u)) ^ 0u) + 0u)))))))) - 0u), uint(6u))) * (8u), (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) ^ 0u, (_GLF_IDENTITY((uint(6u)) ^ 0u, ((uint(6u)) ^ 0u) | ((uint(6u)) ^ 0u))) >> 0u), max((uint(6u)) ^ 0u, _GLF_IDENTITY((uint(6u)) ^ 0u, ~ (~ (_GLF_IDENTITY((uint(6u)) ^ 0u, ((uint(6u)) ^ 0u) + 0u)))))))) - 0u), uint(6u))) * (8u)) >> (0u ^ 0u)))))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ((_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))) | 0u)))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (~ (6u)) ^ 0u)))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * _GLF_IDENTITY((8u), clamp(_GLF_IDENTITY((8u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((8u), 0u ^ ((8u))))), (8u), (8u))))))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u)) | 0u), uint(6u))), uint(uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, min(8u, 8u))) | 0u, 0u ^ ((_GLF_IDENTITY(8u, min(8u, 8u))) | 0u))))), (_GLF_IDENTITY(8u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u)) | 0u), uint(6u))), uint(uint((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8u, min(8u, 8u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8u, (8u) - 0u), min(8u, 8u)))))) | 0u, 0u ^ ((_GLF_IDENTITY(8u, min(8u, 8u))) | 0u)))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ((_GLF_IDENTITY(0u, (0u) * 1u) >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), uint(6u))) * (8u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))), uint(6u))) / 1u)))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (8u))))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))), uint(6u))) / 1u)))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (8u))))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))), uint(6u))) / 1u)))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (8u)))))) | ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))), uint(6u))) / 1u)))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (8u))))))))), min((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, uint(_GLF_IDENTITY(uvec3(8u, 1u, 0u), (uvec3(8u, 1u, 0u)) >> uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)), uint(6u)), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(6u))), uint(6u))) / 1u)), 1u * (min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u))))))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - 0u)))) << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u))), 6u)))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))), 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)), uint(6u)), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(6u))), uint(6u))) / 1u)), 1u * (min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u))))))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - 0u)))) << _GLF_IDENTITY(uint(6u), uint(6u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u))), 6u)))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))), 0u, 1u))))) >> 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u | (uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, 0u + (6u))) * 1u)) | (_GLF_IDENTITY(6u, uint(uint(6u))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(6u))) * (_GLF_IDENTITY(8u, (8u) | 0u)))))), (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 0u ^ (6u)), _GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(num_workgroup))), 6u)))), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)), max(min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)) * 1u), uint(6u), uint(6u))), uint(6u))) * _GLF_IDENTITY((8u), clamp(_GLF_IDENTITY((8u), ((8u)) / 1u), (8u), (8u))), uint(uvec2(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 0u ^ (6u)), _GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(num_workgroup))), 6u)))), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)), max(min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)), min(1u << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)) * 1u), uint(6u), uint(6u))), uint(6u))) * _GLF_IDENTITY((8u), clamp(_GLF_IDENTITY((8u), ((8u)) / 1u), (8u), (8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-21.04))))))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-564.175) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (1 ^ 0) * (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)))), clamp(vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 0.0)))), vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)))), vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0))))))), (float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)))), clamp(vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)))), vec4(mix(float(_GLF_FUZZED((- 1.3))), float(0.0), bool(true)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.3)), float(1.0), bool(true))))), vec3(0.0, 0.0, 0.0)))), vec4(mix(float(_GLF_FUZZED((- 1.3))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)))))))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) * 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                      {
                       do
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))), min(int(int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))), int(int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))))))])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, float(_GLF_IDENTITY(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0)), (mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - length(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), min(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), max(max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]))), max(injectionSwitch[1], injectionSwitch[1])))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-31.96)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1]), min(max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))))), mix(float(_GLF_FUZZED(3200.8881)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - length(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), min(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), max(max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]))), max(injectionSwitch[1], injectionSwitch[1])))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-31.96)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1]), min(max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))))))), bool(true))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))], injectionSwitch[1])))))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(injectionSwitch[0]))) > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(2002.3355)), vec2(_GLF_FUZZED(-575.433), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), max(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)))), 1.0, 0.0, 0.0)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), (int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), clamp(int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0))))))))))), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))) - vec2(0.0, 0.0))[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))], max(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), clamp(int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))))))], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(2002.3355)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-575.433, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, abs(1.0), 0.0))) * (-575.433))), (injectionSwitch)[1]), bvec2(false, true))))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), mix(vec2(_GLF_FUZZED(986.588), _GLF_FUZZED(float((22476u / 160661u)))), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))[0], float(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))[0], 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))[1]), bvec2(true, true))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.75, -438.089))))[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) | 0) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), injectionSwitch[1])), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.1), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(-6.1), (true ? _GLF_FUZZED(-6.1) : _GLF_FUZZED(-44.27))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat2x3(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(-6.1), (true ? _GLF_FUZZED(-6.1) : _GLF_FUZZED(-44.27))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, sqrt(0.0), 1.0, abs(0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), _GLF_IDENTITY(vec2(vec4(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), 1.0, 1.0)), (vec2(vec4(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), 1.0, 1.0))) * mat2(1.0))), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0))))))))[_GLF_IDENTITY(0, 0 + (0))], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), max(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, max(-6.1, _GLF_IDENTITY(-6.1, max(-6.1, -6.1)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), max(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), float(mat4x2(max(injectionSwitch[1], injectionSwitch[1]), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[1]))), max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-50.05)), vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), mix(float(_GLF_FUZZED((311.045 + -6.1))), float(_GLF_FUZZED(1.1)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), float(_GLF_IDENTITY(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x2(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), (vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), float(_GLF_IDENTITY(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x2(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0))))))))))) - vec2(0.0, 0.0))).x), bool(true)))), 1.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(2002.3355)), vec2(_GLF_FUZZED(-575.433), (injectionSwitch)[1]), bvec2(false, true))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), max(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)))), 1.0, 0.0, 0.0)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), (int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), clamp(int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0)))), int(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0))))))))))), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))) - vec2(0.0, 0.0))[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))], max(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), clamp(int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))))))], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(2002.3355)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-575.433, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, abs(1.0), 0.0))) * (-575.433))), (injectionSwitch)[1]), bvec2(false, true))))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), mix(vec2(_GLF_FUZZED(986.588), _GLF_FUZZED(float((22476u / 160661u)))), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))[0], float(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))[0], 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))[1]), bvec2(true, true))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.75, -438.089))))[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) | 0) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), injectionSwitch[1])), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.1), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(-6.1), (true ? _GLF_FUZZED(-6.1) : _GLF_FUZZED(-44.27))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat2x3(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(-6.1), (true ? _GLF_FUZZED(-6.1) : _GLF_FUZZED(-44.27))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, sqrt(0.0), 1.0, abs(0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), _GLF_IDENTITY(vec2(vec4(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), 1.0, 1.0)), (vec2(vec4(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), 1.0, 1.0))) * mat2(1.0))), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0, 1.0))))))))[_GLF_IDENTITY(0, 0 + (0))], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), max(mix(float(_GLF_FUZZED(1.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, max(-6.1, _GLF_IDENTITY(-6.1, max(-6.1, -6.1)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), max(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), float(mat4x2(max(injectionSwitch[1], injectionSwitch[1]), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[1]))), max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-50.05)), vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), mix(float(_GLF_FUZZED((311.045 + -6.1))), float(_GLF_FUZZED(1.1)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), float(_GLF_IDENTITY(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x2(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), (vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch))))[1], max(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-0.8)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)), vec2((injectionSwitch)[0], _GLF_FUZZED(9350.0554)))), bvec2(true, false)))[1], max(injectionSwitch[1], injectionSwitch[1]))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), float(_GLF_IDENTITY(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x2(mat3x2(max(injectionSwitch[1], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 0.0))))))))))) - vec2(0.0, 0.0))).x), bool(true)))), 1.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))));
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))), false, false))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[1], (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), min(min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(98.94)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))))))).x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((3.6 - 5.2), mix(float(_GLF_FUZZED(5.7)), float((3.6 - 5.2)), bool(true))))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) / 1)), (true ? min(0, _GLF_IDENTITY(0, (0) / 1)) : _GLF_FUZZED(_injected_loop_counter))))) / 1), _GLF_IDENTITY(bool(bvec3(_injected_loop_counter > 0, true, true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(0, (0) | 0) | (0))))), true, true)), ! (! (bool(bvec3(_injected_loop_counter > 0, true, true)))))), bool(bvec4((_GLF_IDENTITY(bool(bvec3(_injected_loop_counter > _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), _GLF_IDENTITY((~ (0)), ~ (~ ((~ (0)))))))))), true, true)), ! (! (bool(bvec3(_injected_loop_counter > 0, true, true)))))), true, false, true))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0))), true, true)), ! (! _GLF_IDENTITY((bool(bvec3(_injected_loop_counter > 0, true, true))), false || ((bool(bvec3(_injected_loop_counter > 0, true, true))))))), true && (_GLF_IDENTITY(bool(bvec3(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) + 0)))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_injected_loop_counter > 0, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec3(_injected_loop_counter > 0, true, true))), (false || (bool(bvec3(_injected_loop_counter > 0, true, true)))) && true), (_GLF_IDENTITY(false || (bool(bvec3(_injected_loop_counter > 0, true, true))), (false || (bool(bvec3(_injected_loop_counter > 0, true, true)))) && true)) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1))) | 0)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).y)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 do
  {
   atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) * 1))))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_val = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, min(write_val, write_val)), (_GLF_IDENTITY(_GLF_IDENTITY(write_val, min(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) / 1u) : _GLF_FUZZED(uint(78.57)))))), max(_GLF_IDENTITY(write_val, min(write_val, write_val)), _GLF_IDENTITY(write_val, _GLF_IDENTITY(min(write_val, write_val), uint(uint(_GLF_IDENTITY(min(write_val, write_val), _GLF_IDENTITY((min(write_val, write_val)), 0u ^ ((min(write_val, write_val)))) << 0u)))))))) >> _GLF_IDENTITY(0u, (0u) | (0u))), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, 1 * (64)), 64, 64))), ((_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, 1 * (64)), 64, 64)))) | 0) | (64)))), 2);
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
