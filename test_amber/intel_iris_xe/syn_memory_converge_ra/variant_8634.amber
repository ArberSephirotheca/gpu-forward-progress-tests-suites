#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), sin(0.0))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), sin(0.0))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), sin(0.0))), (false ? _GLF_FUZZED(-2099.0577) : float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), sin(0.0))))), float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), sin(0.0)))))) - 0.0)), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))), bool(true)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(12.60)), bvec2(false, false))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false, true))))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), _GLF_IDENTITY(false, ! (! (false))), true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false))), (! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((false), ! (! ((false))))))), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))) && true), (! (! (false))) || false), false, _GLF_IDENTITY(true, bool(bool(true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), clamp(vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), clamp(vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0))), (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), clamp(vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))))), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(8.3)), bvec2(false, false)))) / exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)))), injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(dot(_GLF_IDENTITY(vec4(-7.5, -9028.7722, 2299.6135, -75.51), clamp(_GLF_IDENTITY(vec4(-7.5, -9028.7722, 2299.6135, -75.51), mix(vec4(_GLF_IDENTITY((vec4(-7.5, -9028.7722, 2299.6135, -75.51)), (true ? (vec4(-7.5, -9028.7722, 2299.6135, -75.51)) : _GLF_FUZZED(exp2(vec4(16.96, 9.6, -807.882, 7.5)))))[0], (vec4(-7.5, -9028.7722, 2299.6135, -75.51))[1], (vec4(-7.5, -9028.7722, 2299.6135, -75.51))[2], (vec4(-7.5, -9028.7722, 2299.6135, -75.51))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(-0.8), _GLF_FUZZED(-535.150), _GLF_FUZZED(-199.796), _GLF_FUZZED(6.2)), (vec4(_GLF_FUZZED(-0.8), _GLF_FUZZED(-535.150), _GLF_FUZZED(-199.796), _GLF_FUZZED(6.2))) - vec4(0.0, 0.0, 0.0, 0.0)), bvec4(false, false, false, false))), vec4(-7.5, -9028.7722, 2299.6135, -75.51), vec4(_GLF_IDENTITY(-7.5, (true ? _GLF_IDENTITY(-7.5, min(-7.5, -7.5)) : _GLF_FUZZED(dot(injectionSwitch, roundEven(injectionSwitch))))), -9028.7722, 2299.6135, -75.51))), vec4(3.3, 4.5, 268.086, 6383.4012)))), 1.0 * ((true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, length(vec3(0.0, 0.0, 0.0))), clamp(vec2(0.0, length(vec3(0.0, 0.0, 0.0))), vec2(0.0, length(vec3(0.0, 0.0, 0.0))), vec2(0.0, length(vec3(0.0, 0.0, 0.0))))))) : _GLF_FUZZED(dot(_GLF_IDENTITY(vec4(-7.5, -9028.7722, 2299.6135, -75.51), clamp(_GLF_IDENTITY(vec4(-7.5, -9028.7722, 2299.6135, -75.51), mix(vec4((vec4(-7.5, -9028.7722, 2299.6135, -75.51))[0], (vec4(-7.5, -9028.7722, 2299.6135, -75.51))[1], (vec4(-7.5, -9028.7722, 2299.6135, -75.51))[2], (vec4(-7.5, -9028.7722, 2299.6135, -75.51))[3]), vec4(_GLF_FUZZED(-0.8), _GLF_FUZZED(-535.150), _GLF_FUZZED(-199.796), _GLF_FUZZED(6.2)), bvec4(false, false, false, false))), vec4(-7.5, -9028.7722, 2299.6135, -75.51), vec4(-7.5, -9028.7722, 2299.6135, -75.51))), vec4(3.3, 4.5, 268.086, 6383.4012))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, log(1.0), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0)), mix(float(float(mat3(0.0, 1.0, log(1.0), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), exp(0.0)))), 1.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-5547.3440)), (float(_GLF_FUZZED(-5547.3440))) - 0.0), bool(false)))), mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(216.617)))), float(_GLF_FUZZED(_GLF_IDENTITY(float(172113u), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(float(172113u), mix(float(float(172113u)), float(_GLF_FUZZED(-3155.2907)), bool(false))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(91.61) : float(mat2x4(_GLF_IDENTITY(float(172113u), mix(float(float(172113u)), float(_GLF_FUZZED(-3155.2907)), bool(false))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))))) * (injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), injectionSwitch)).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1])), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), clamp(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)), _GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))))) * (injectionSwitch)), injectionSwitch)).x, (false ? _GLF_FUZZED(-29.97) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : vec2(0.0, 0.0)))) * (injectionSwitch)), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec2(0.0, 0.0)))) * (injectionSwitch)), injectionSwitch)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))))) * (injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-8551.5755, -3.8)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8350.5581, (true ? -8350.5581 : _GLF_FUZZED(68.02)))), _GLF_FUZZED(-78.93)), bvec2(false, false))), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false)))), _GLF_IDENTITY(0.0 + (abs(0.0)), max(0.0 + (abs(0.0)), 0.0 + (abs(0.0))))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), injectionSwitch)).x) + 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(mat2x4(((injectionSwitch))[0], 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0)))))), _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED((-3.4 + 0.1)), ((injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(95.60) : injectionSwitch.x)) < injectionSwitch.y, true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(95.60) : injectionSwitch.x)) < injectionSwitch.y, true)))))))))), true, false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true, false))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 1.0, 1.0))))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true, false)))))), ! (! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), ! (! (false))), true, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED((+ -8.4))), bvec2(false, false))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (subgroup_id * subgroup_size) >> 0u)))), min(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u)))) >> 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (subgroup_id * subgroup_size) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u) >> 0u)))))))))), _GLF_IDENTITY(0u, ~ (~ (0u))) + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u ^ 0u)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), (subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), min(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), (0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) << 0u), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + 0u)), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | _GLF_IDENTITY(0u, 0u | (0u))) >> 0u))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true), false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), false), true)))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(false, false || (false)), true)), (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec3(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(false, false || (false)), true)))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))), uint(uvec3(uint(workgroup_base), 0u, 1u))))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) ^ 0u)) * 1u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) ^ 0u)) * 1u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) - 0u), 0u, 0u, 1u)))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) | ((subgroup_local_id) << 0u))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id)))))) ^ 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << 0u)))))) | _GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), uint(uvec2((min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) << 0u))), 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id))))))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), (subgroup_local_id) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_base) : 0u)), 0u, 0u))), clamp((0u | 0u), (0u | 0u), (0u | 0u))), (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u)))) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))), 1u, (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))) << 0u)), 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, min(0u, 0u))), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))), 1u, (0u | 0u), 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))), 1u, (0u | 0u), 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))), 1u, (0u | 0u), 0u)))))))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))), min((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), 0u + (uint(uint(1u))))))), (0u | 0u), 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_base))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))), 1u, (0u | 0u), 0u)))), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))), 1u, (0u | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) << 0u), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))))))) >> 0u)))) : _GLF_FUZZED(subgroup_id))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) ^ (1u ^ 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id)))), 0u)))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), 0u, 0u, 1u)))) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u) << 0u) / 1u), ~ (~ ((subgroup_local_id) << 0u))))), (min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) | (min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), ~ (~ (~ ((subgroup_local_id))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u) << 0u) / 1u), ~ (~ ((subgroup_local_id) << 0u))))), (min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << 0u))))), max(uint(uint(_GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << 0u))))), uint(uint(_GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << 0u))))))))))) | (min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), ~ (~ (~ ((subgroup_local_id))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))), 0u | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)))), (subgroup_local_id) << 0u)))), (0u | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u)), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << 0u))))), (min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (1u ^ 1u)), min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), (0u | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u), (_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u)) - 0u)) << 0u)) | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))))) + 0u)) : _GLF_FUZZED(subgroup_id))), 1u, 1u, (_GLF_IDENTITY(0u | 0u, min(_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((0u | 0u), (true ? (0u | 0u) : _GLF_FUZZED(workgroup_base))) ^ 0u), 0u | 0u))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(bvec2(bool(true), false)))))))), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(205.175, 969.773)))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(205.175, 969.773)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(205.175, 969.773)))).x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(205.175, 969.773)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(205.175, 969.773)))).x > injectionSwitch.y)))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true))) && true)), false, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(2.3)), bool(false)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (1.0 * (injectionSwitch.x)) + 0.0)), injectionSwitch.x)) > injectionSwitch.y))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true)))))))) && _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), true, false))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), true, false))))) || false)) || false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(false, true, false))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(false, true, false))))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))) && true))))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-41714) : _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4)))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), true)))))))), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (2) * 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-87435) : 0))], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(-22.05), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(58450))), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))), false || (bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) << 0u)))) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
