#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3314.6169, 9.0))))[0], float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))), (false ? _GLF_FUZZED(-457.287) : float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(9917.1152))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0]))))))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (bool(bool(_GLF_DEAD(false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (bool(bool(_GLF_DEAD(false))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (bool(bool(_GLF_DEAD(false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true), true, false, _GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true), true, false, _GLF_IDENTITY(true, false || (true)))))), true && (! (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(2.0)), float(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true), true, false, _GLF_IDENTITY(true, false || (true))))))))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(false, false)), true, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false))))))))))))))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), true && (! (false))))))))))))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))))))))))))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (! (bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))))))))))))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))) && true)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5518.6933)), float(injectionSwitch.x), bool(true)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(245.489)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), float(_GLF_FUZZED(-8467.6836)), bool(false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false, (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false) && true))))), false, true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), true)))))), true)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))))), false, true, false))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, false))), true), false, false))), true)))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, false || (false)), true)), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, false || (false)), true)), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, false || (false)), true)), _GLF_IDENTITY(true, (true) && true))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), true))))))), true))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0))).y), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(126.661, 44.19)) : injectionSwitch)), abs(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)) * (injectionSwitch)).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), bvec2(false, true))).y))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(4390.4769, 893.286))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) : _GLF_FUZZED(uvec3(24240u, 156120u, 15942u)))).x, max(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) : _GLF_FUZZED(uvec3(24240u, 156120u, 15942u)))).x, _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) : _GLF_FUZZED(uvec3(24240u, 156120u, 15942u)))).x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true, bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(1.0)), (true ? vec3(injectionSwitch.y, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat4(mat2(1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4(mat2(1.0, 0.0, 0.0, 1.0)))))))), abs(1.0)) : _GLF_FUZZED(vec3(-4330.1929, _GLF_IDENTITY(-0.0, (_GLF_IDENTITY(-0.0, max(-0.0, -0.0))) - 0.0), 83.39))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat3x2(injectionSwitch[1], 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.6)))) * 1.0))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0)), (false ? _GLF_FUZZED(0.3) : float(mat3x2(injectionSwitch[1], 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x < injectionSwitch.y) && true)) || false))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false, true && ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, false || ((injectionSwitch.x < injectionSwitch.y) && true)))) || false)))))), ! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sin(vec2(0.0, 0.0)))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.45), _GLF_FUZZED((+ 8.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.x < injectionSwitch.y) && true)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-8136.2250 / -16.49)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.3)), bvec2(true, false))).x < injectionSwitch.y) && true)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.9))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))))))), false || (! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y) && true)) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false), false)), true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || false))))))))), false, false))))))), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, true, true))) && _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false || (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(false, true && (false)), false)))))))))) || false)))), true && ((_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec3(! (injectionSwitch.x < injectionSwitch.y), false, true))))))))) && (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))), true && ((! (! (false))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! (false))), true && ((! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))), ! (! (bool(_GLF_IDENTITY((! (! (false))), true && ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY((! (! (false))), true && ((! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bool(false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false))))), true && ((! (! (false)))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 703.722))), float(0.0), bool(true))), 0.0))), injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, mix(float(_GLF_FUZZED(-16.55)), float(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, float(float((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, 0.0 + ((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0))))))), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), mat2(1.0) * _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))))), ((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))))) / cos(vec2(0.0, 0.0))))), injectionSwitch)).x), bool(true)), mix(float(_GLF_FUZZED(vec2(53.66, -92.44).r)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, mix(float(_GLF_FUZZED(-16.55)), float(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, float(float((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, 0.0 + ((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0))))))), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), mat2(1.0) * _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))))), ((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))))) / cos(vec2(0.0, 0.0))))), injectionSwitch)).x), bool(true)), max(mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, mix(float(_GLF_FUZZED(-16.55)), float(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, float(float((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, 0.0 + ((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0))))))), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), mat2(1.0) * _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))))), ((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))))) / cos(vec2(0.0, 0.0))))), injectionSwitch)).x), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, mix(float(_GLF_FUZZED(-16.55)), float(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, float(float((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0, 0.0 + ((_GLF_IDENTITY((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), clamp((_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-6.9))), abs(1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(_GLF_IDENTITY(6.8, (_GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8))) - 0.0), -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-677.010, mix(float(_GLF_FUZZED(7045.5959)), float(_GLF_IDENTITY(-677.010, (-677.010) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8336.1340)), float(0.0), bool(true))), 0.0, 0.0)), 1.0))))) - vec3(6.8, -4634.0356, 336.246).z), (_GLF_IDENTITY(-677.010, _GLF_IDENTITY(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-677.010, abs(1.0), 0.0, 1.0, 0.0, 1.0))))) - vec3(6.8, -4634.0356, 336.246).z)))) * 1.0))))))), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0)))))) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), mat2(1.0) * _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))))), ((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))))) / cos(vec2(0.0, 0.0))))), injectionSwitch)).x), bool(true))))), bool(true)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec3(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true))))) ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(-29291))), float(0.0), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.9))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), 0.0 + (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), (true ? float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))) : _GLF_FUZZED(768.634)))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), 0.0 + (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), (true ? float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))) : _GLF_FUZZED(768.634)))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), 0.0 + (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), (true ? float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))) : _GLF_FUZZED(768.634)))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))) - 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), 0.0 + (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))), (true ? float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 0.0, abs(0.0), 1.0, 1.0, abs(cos(0.0)))) : _GLF_FUZZED(768.634)))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))) + 0.0), 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4927.0568))), 1.0)), 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0)))))))).y : _GLF_FUZZED(5.6)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-152.828), _GLF_IDENTITY(max(_GLF_FUZZED(-152.828), _GLF_FUZZED(-152.828)), mix(float(max(_GLF_FUZZED(-152.828), _GLF_FUZZED(-152.828))), float(_GLF_FUZZED(-884.261)), bool(false))))), bool(false))) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), false, false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true)))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true)))), max(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true)))))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true)))))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))))))) < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.0)), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.0)), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8454.3100)), bool(false))), injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : injectionSwitch.y))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * sqrt(vec2(1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), abs(1.0))))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), true, true)))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), false)))), bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) || (! (false)), false || (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, ! (! (false))))), (false || (! (false))) && true)))) || false))))))), false, true), true)))), _GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true)))))))))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true)))))))))))))), _GLF_IDENTITY(false, (false) || false), true))), (false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), (false || (bool(bool(false)))) && true)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))))))), false, true))), false, _GLF_IDENTITY(true, (true) || false)))), ((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false)))))), false)))), false, true)))) || false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(true, (true) || false)))), true))) || false))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.9, 12.70)))), injectionSwitch, injectionSwitch))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) < injectionSwitch.y))), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)), -821.733)))).x < injectionSwitch.y))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-81393)))) - 0, min((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-81393)))) - 0, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-81393)))) - 0))), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(2, 2))))), ((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(2, 2)))))) << _GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (0) / (_GLF_IDENTITY(0, (0) | (0)) ^ 1))))) - 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
