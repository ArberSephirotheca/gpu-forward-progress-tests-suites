#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(! (false), false))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))) || false))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec3((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (false), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (false), false))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0))) : _GLF_FUZZED(599.043))))))), bool(bvec2(! (false), false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), false), false), bvec3(bvec3(bvec3(bvec2(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), false), false)))))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (false), false)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, false || (false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true), false || ((true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true)))) && true))))), bool(bvec2(! (false), false))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (false), false)))))) || false), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, false || (false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true), false || ((true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true)))) && true))))), bool(bvec2(! (false), false))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (false), false)))))) || false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))))) || false)))), false, true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! _GLF_IDENTITY((false), bool(bool((false)))))))))) || false), false)), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false))))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! _GLF_IDENTITY((false), bool(bool((false)))))))))) || false), false)), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), false))))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)))))), true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))), true, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))), true, true, true))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * 1u))), uint(5u))) | (gl_NumWorkGroups.x), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (gl_NumWorkGroups.x), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], ~ (~ (gl_NumWorkGroups[1]))), gl_NumWorkGroups[2])).x), ~ (~ ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (gl_NumWorkGroups.x)))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), uint(uint(subgroup_base)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(subgroup_base)), (true ? uint(uint(subgroup_base)) : _GLF_FUZZED(workgroup_base))))), min(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-6.6))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), max((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(subgroup_base)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_base))), 0u ^ (_GLF_IDENTITY(~ (uint(uint(subgroup_base))), (true ? ~ (uint(uint(subgroup_base))) : _GLF_FUZZED(virtual_gid)))))))), 0u + (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(subgroup_base)), ~ (~ (uint(uint(subgroup_base)))))))) ^ 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY((uint(subgroup_base)), (_GLF_IDENTITY((uint(subgroup_base)), uint(uvec2((uint(subgroup_base)), 0u)))) | (_GLF_IDENTITY((uint(subgroup_base)), ((uint(subgroup_base))) / 1u))) | (uint(subgroup_base))))))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) | 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) | 0u))) | ((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) | 0u))))))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(subgroup_base)), (uint(uint(subgroup_base))) / 1u)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), ~ (~ ((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)), min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) + 0u)) << _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u ^ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_base)), max(uint(uint(subgroup_base)), uint(uint(subgroup_base)))), _GLF_IDENTITY(max(uint(uint(subgroup_base)), uint(uint(subgroup_base))), (max(uint(uint(subgroup_base)), uint(uint(subgroup_base)))) | 0u))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(atomicAdd(workgroup_base, workgroup_size)) : ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), min(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), 0u ^ (uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))))))), (uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)))) | (uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))))) : _GLF_FUZZED(subgroup_base)))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size), (198442u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))) : _GLF_FUZZED(subgroup_id)))) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u)))))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)), min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + sqrt(0.0)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) + 0u)) << _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u ^ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_base)), max(uint(uint(subgroup_base)), uint(uint(subgroup_base)))), _GLF_IDENTITY(max(uint(uint(subgroup_base)), uint(uint(subgroup_base))), (max(uint(uint(subgroup_base)), uint(uint(subgroup_base)))) | 0u))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(atomicAdd(workgroup_base, workgroup_size)) : ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), min(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), 0u ^ (uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))))))), (uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)))) | (uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))))) : _GLF_FUZZED(subgroup_base)))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size), (198442u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))) : _GLF_FUZZED(subgroup_id)))) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY((max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, (0u ^ 1u)))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))), 0u ^ (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))))))) << 0u)), (true ? max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))))) << 0u)) : _GLF_FUZZED(num_workgroup)))), virtual_gid)))), ((max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))))) << 0u))), virtual_gid), (min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))))) << 0u))), virtual_gid)) << ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(8u), uint(8u)))))))) >> 0u) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)))))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944)))), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(1, 1, 0), (true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944))))))), (int(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY(_GLF_IDENTITY((true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944))), ((true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944)))) * ivec3(1, 1, 1)), min(_GLF_IDENTITY((true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944))), ((true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944)))) * ivec3(1, 1, 1)), _GLF_IDENTITY((true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944))), ((true ? ivec3(1, 1, 0) : _GLF_FUZZED(ivec3(-2697, -34813, -38944)))) * ivec3(1, 1, 1))))))) + 0))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), int(ivec3((4), 1, (0 ^ 1))))))), 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (_GLF_IDENTITY(4, (4) * 1)) / 1)))));
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(86407)))), ((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(86407))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)))))
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-85.52) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3733.4709))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3733.4709))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))))), 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))))), 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), min(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))))), 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))))), 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), min(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))))), 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))))), 0.0))))))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(521.762), _GLF_FUZZED(6307.0326)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).y, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) / 1u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0]), mix(float(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), float(_GLF_FUZZED(77.40)), bool(false)))), injectionSwitch[1])))), (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))))))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0]), mix(float(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), float(_GLF_FUZZED(77.40)), bool(false)))), injectionSwitch[1])))), (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))))))).y, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0]), mix(float(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), float(_GLF_FUZZED(77.40)), bool(false)))), injectionSwitch[1])))), (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0]), mix(float(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), float(_GLF_FUZZED(77.40)), bool(false)))), injectionSwitch[1])))), (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0]), mix(float(max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), float(_GLF_FUZZED(77.40)), bool(false)))), injectionSwitch[1])))), (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))))))).y))), bool(true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), ~ (~ (_GLF_IDENTITY(0, (0) - 0)))))))) + (2))), (0 & 85390) | _GLF_IDENTITY(((_GLF_IDENTITY(2, 0 + (2)))), _GLF_IDENTITY(0 | (((_GLF_IDENTITY(2, 0 + (2))))), min(0 | (((_GLF_IDENTITY(2, 0 + (2))))), 0 | (((_GLF_IDENTITY(2, 0 + (2))))))))))), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) * 1u), _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
