#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-4.5, 4.7, -273.587, -55.24, 7.5, -86.20, -3.3, -3455.0549, 5.6)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(119937u) : 0u)))))) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) + (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u))))), (uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)))))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u))))), (uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)))))) >> 0u), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u))))), (uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)))))) >> 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u))))), (uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)))))) >> 0u)))))), (uint(uint(_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u))))), (uint(_GLF_IDENTITY(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), clamp(uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | 0u), 0u, 0u, (0u ^ 0u)), uvec4((0u | _GLF_IDENTITY(0u, min(0u, 0u))), 0u, 0u, (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_id - subgroup_local_id)) : 0u)))))))) >> 0u))))) | 0u))), _GLF_IDENTITY(0u, (0u) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u)))) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(0u, 0u, 0u) + ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) | (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u | 0u)), 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), max(uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uvec3(0u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), ((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u), uvec3(0u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u), uvec3(0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u), uvec3(0u)))))))))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))) >> uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u)))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))), ((_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))) ^ uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6995.1726))))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u | 0u)), 0u)))) >> uvec3(0u, 0u, 0u))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false)), false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(smoothstep(24.94, step(1.2, -3.0), dot(vec2(25.93, -8.3), vec2(-8.5, -3.9)))) : (injectionSwitch)[0])), _GLF_FUZZED(-1883.4942)), vec2(_GLF_FUZZED(69.30), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(vec2(vec3(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(smoothstep(24.94, step(1.2, -3.0), dot(vec2(25.93, -8.3), vec2(-8.5, -3.9)))) : (injectionSwitch)[0])), _GLF_FUZZED(-1883.4942)), vec2(_GLF_FUZZED(69.30), (injectionSwitch)[1]), bvec2(false, true)), 0.0)), (vec2(vec3(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(smoothstep(24.94, step(1.2, -3.0), dot(vec2(25.93, -8.3), vec2(-8.5, -3.9)))) : (injectionSwitch)[0])), _GLF_FUZZED(-1883.4942)), vec2(_GLF_FUZZED(69.30), (injectionSwitch)[1]), bvec2(false, true)), 0.0))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))))), true, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), true))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(false, (false) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true))), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)))))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (workgroup_base + subgroup_base + subgroup_local_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) >> 0u)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uint(workgroup_base + subgroup_base + subgroup_local_id))) : _GLF_FUZZED(subgroup_base)))) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uint(workgroup_base + subgroup_base + subgroup_local_id))) : _GLF_FUZZED(subgroup_base)))) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | ((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uint(workgroup_base + subgroup_base + subgroup_local_id))) : _GLF_FUZZED(subgroup_base)))) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) - 0u)) + (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))), max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))))), workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))) | 0u)) | 0u)) + subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u))) >> 0u))), clamp(uint(uint(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u))) >> 0u))), uint(uint(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u))) >> 0u))), uint(uint(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u, 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) - 0u))) >> 0u))))))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_base)))) + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_base))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))) - 0u)))) : _GLF_FUZZED(subgroup_size)))) * (1u ^ 0u)) : _GLF_FUZZED(subgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((1578.8812 * -179.136)), _GLF_FUZZED(5.1)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-897.746)), vec2(_GLF_FUZZED(2.8), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)) * 1.0)), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), 0.0 + (_GLF_FUZZED(injectionSwitch[0])))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(2299.5308) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch))))), min(injectionSwitch, injectionSwitch)))))).x)))), injectionSwitch.x), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), true)))))) || false)), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)), false, true))), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), true)))))) || false)))) ? _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) / cos(0.0)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), clamp(_GLF_FUZZED(injectionSwitch[0]), _GLF_FUZZED(injectionSwitch[0]), _GLF_FUZZED(injectionSwitch[0]))), 0.0, 1.0, 1.0, length(0.0), 1.0, abs(0.0), round(length(normalize(vec2(1.0, 1.0)))))))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, false || (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, max((subgroup_local_id + 1) - 0u, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1) - 0u)))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, max((subgroup_local_id + 1) - 0u, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1) - 0u)))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, max((subgroup_local_id + 1) - 0u, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1) - 0u)))))) % subgroup_size)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), (subgroup_local_id + 1) - 0u)) % subgroup_size, ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), (subgroup_local_id + 1) - 0u)) % subgroup_size)), 0u + _GLF_IDENTITY(((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), (subgroup_local_id + 1) - 0u)) % subgroup_size))), 0u | (((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), (subgroup_local_id + 1) - 0u)) % subgroup_size)))))))) / 1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false)) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, false || ((! (_GLF_IDENTITY(false, ! (! (false))))) || false))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false)) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, false || ((! (_GLF_IDENTITY(false, ! (! (false))))) || false))))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))))), false, true, false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false)) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) || false)))))))) || false))))) || false)))))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) >> 0)), 0 + (min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774)))))))), ((0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))) | ((0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))))), ~ (~ (_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), int(ivec4(_GLF_IDENTITY(4, (4) - 0), 1, 0, 0))), max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(virtual_gid)))), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * _GLF_IDENTITY((4), ((4)) | 0))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) * 1), 4)) : _GLF_IDENTITY(_GLF_FUZZED(12774), min(_GLF_IDENTITY(_GLF_FUZZED(12774), (false ? _GLF_FUZZED(67138) : _GLF_FUZZED(12774))), _GLF_IDENTITY(_GLF_FUZZED(12774), int(int(_GLF_FUZZED(12774))))))))))))))))), (4) >> 0)))), (_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) >> 0)), 0 + (min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), (false ? _GLF_FUZZED(-14220) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(5), int(5))) ^ (4)), 4)) << 0)) ^ 0)) : _GLF_FUZZED(12774))))))))), (4) >> 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) >> 0)), 0 + (min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), min(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774)))))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774)))))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774)))))))))), (clamp(_GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))), _GLF_IDENTITY(4, (0 ^ 0) ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(12774))))))))))) << 0)) >> 0)) | 0)))), (4) >> 0)))), ~ (~ (_GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), (4) >> _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))) - 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))) - 0, ((_GLF_IDENTITY(0, ~ (~ (0)))) - 0) / 1)))))), 0 + (min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, min((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) >> 0)) : _GLF_FUZZED(12774)) << 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + (0 ^ 0)) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 0.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch))))).y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774)) << 0)) + (0 | 0))))))))), clamp((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, min((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) >> 0)) : _GLF_FUZZED(12774)) << 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + (0 ^ 0)) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 0.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch))))).y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774)) << 0)) + (0 | 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, min((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) >> 0)) : _GLF_FUZZED(12774)) << 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + (0 ^ 0)) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 0.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch))))).y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774)) << 0)) + (0 | 0))))))))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, min((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) >> 0)) : _GLF_FUZZED(12774)) << 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + (0 ^ 0)) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 0.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch))))).y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774)) << 0)) + (0 | 0))))))))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, min((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) >> 0)) : _GLF_FUZZED(12774)) << 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + (0 ^ 0)) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 0.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch))))).y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774)) << 0)) + (0 | 0)))))))))) >> 0), 0))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, min((_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0, (_GLF_IDENTITY(4, (0 ^ 1) * (4))) >> 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) >> 0)) : _GLF_FUZZED(12774)) << 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + (0 ^ 0)) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 0.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch))))).y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))) : _GLF_FUZZED(sign(-20858)))) : _GLF_FUZZED(12774)) << 0)) + (0 | 0)))))))))))), (4) >> 0)))))))))), 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, false || ((subgroup_local_id % 2) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))))))))
  {
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, _GLF_IDENTITY(min(17186, -51441), 1 * (min(17186, -51441))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(_GLF_IDENTITY(46499, min(46499, _GLF_IDENTITY(46499, clamp(_GLF_IDENTITY(46499, int(ivec2(46499, 0))), 46499, 46499)))), min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), true && (bool(bool(bvec2(true, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, min((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0)))) | 0) : 4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, _GLF_IDENTITY(min(17186, -51441), 1 * (min(17186, -51441))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(_GLF_IDENTITY(46499, min(46499, _GLF_IDENTITY(46499, clamp(_GLF_IDENTITY(46499, int(ivec2(46499, 0))), 46499, 46499)))), min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), true && (bool(bool(bvec2(true, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, min((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0)))) | 0) : 4, clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, _GLF_IDENTITY(min(17186, -51441), 1 * (min(17186, -51441))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(_GLF_IDENTITY(46499, min(46499, _GLF_IDENTITY(46499, clamp(_GLF_IDENTITY(46499, int(ivec2(46499, 0))), 46499, 46499)))), min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), true && (bool(bool(bvec2(true, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, min((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0)))) | 0) : 4, false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, _GLF_IDENTITY(min(17186, -51441), 1 * (min(17186, -51441))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(_GLF_IDENTITY(46499, min(46499, _GLF_IDENTITY(46499, clamp(_GLF_IDENTITY(46499, int(ivec2(46499, 0))), 46499, 46499)))), min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), true && (bool(bool(bvec2(true, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, min((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0)))) | 0) : 4, false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, _GLF_IDENTITY(min(17186, -51441), 1 * (min(17186, -51441))), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(_GLF_IDENTITY(46499, min(46499, _GLF_IDENTITY(46499, clamp(_GLF_IDENTITY(46499, int(ivec2(46499, 0))), 46499, 46499)))), min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0), (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), true && (bool(bool(bvec2(true, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))), false, false), true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, min((_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0, (_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false))))), (_GLF_FUZZED(mix(46499, min(17186, -51441), _GLF_IDENTITY(true, bool(bvec2(true, false)))))) / 1)) | 0)))) | 0) : 4))) >> (0 << _GLF_IDENTITY(int(8), int(8)))))), (false ? _GLF_FUZZED(-76086) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, ((4) ^ 0) << 0)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mix(_GLF_IDENTITY(46499, (true ? 46499 : _GLF_FUZZED(bitfieldExtract(-83358, int(_GLF_IDENTITY(false, false || (false))), -85892)))), min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true)), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, _GLF_IDENTITY((17186) | (17186), min(_GLF_IDENTITY((17186) | (17186), max((17186) | (17186), _GLF_IDENTITY((17186) | (17186), ((17186) | (17186)) | ((17186) | (17186))))), _GLF_IDENTITY((17186) | (17186), ((17186) | (17186)) | 0)))), -51441), true)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(56560), (_GLF_FUZZED(56560)) - _GLF_IDENTITY(0, int(ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) / 1))) ^ 0))))) : _GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(56560), (_GLF_FUZZED(56560)) - _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) : _GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true)))) / 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))) : 4, (false ? _GLF_IDENTITY(_GLF_FUZZED(mix(_GLF_IDENTITY(46499, (true ? 46499 : _GLF_FUZZED(bitfieldExtract(-83358, int(_GLF_IDENTITY(false, false || (false))), -85892)))), min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true)), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, _GLF_IDENTITY((17186) | (17186), min(_GLF_IDENTITY((17186) | (17186), max((17186) | (17186), _GLF_IDENTITY((17186) | (17186), ((17186) | (17186)) | ((17186) | (17186))))), _GLF_IDENTITY((17186) | (17186), ((17186) | (17186)) | 0)))), -51441), true)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(56560), (_GLF_FUZZED(56560)) - _GLF_IDENTITY(0, int(ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) / 1))) ^ 0))))) : _GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(56560), (_GLF_FUZZED(56560)) - _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) : _GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true)))) / 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))) : 4) | (false ? _GLF_IDENTITY(_GLF_FUZZED(mix(_GLF_IDENTITY(46499, (true ? 46499 : _GLF_FUZZED(bitfieldExtract(-83358, int(_GLF_IDENTITY(false, false || (false))), -85892)))), min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true)), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, _GLF_IDENTITY((17186) | (17186), min(_GLF_IDENTITY((17186) | (17186), max((17186) | (17186), _GLF_IDENTITY((17186) | (17186), ((17186) | (17186)) | ((17186) | (17186))))), _GLF_IDENTITY((17186) | (17186), ((17186) | (17186)) | 0)))), -51441), true)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(56560), (_GLF_FUZZED(56560)) - _GLF_IDENTITY(0, int(ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) / 1))) ^ 0))))) : _GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(56560), (_GLF_FUZZED(56560)) - _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) : _GLF_FUZZED(mix(46499, min(_GLF_IDENTITY(17186, (17186) | (17186)), -51441), true)))) / 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))) : 4)))))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(72.09)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.8)), bool(false)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(72.09)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), ! (! (false || ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(72.09)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
