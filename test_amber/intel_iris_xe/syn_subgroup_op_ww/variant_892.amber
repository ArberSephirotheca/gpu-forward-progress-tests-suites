#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(8626))), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(8626))), _injected_loop_counter))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_IDENTITY(_GLF_FUZZED(8626), 1 * (_GLF_FUZZED(8626))))), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(8626))), _GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - _GLF_IDENTITY(0, (0) >> 0)), _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), max((ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - _GLF_IDENTITY(0, (0) >> 0)), _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - _GLF_IDENTITY(0, (0) >> 0)), _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - _GLF_IDENTITY(0, (0) >> 0)), _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - _GLF_IDENTITY(0, (0) >> 0)), _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (ivec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) - _GLF_IDENTITY(0, (0) >> 0)), _injected_loop_counter, _injected_loop_counter)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) ^ ivec4(0, 0, 0, 0))))))) << 0))), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0)); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) * 1))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, false)))))));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-194.967), _GLF_FUZZED(-11.81)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(vec2(-215.857, 8.6)))), injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) ^ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) ^ (workgroup_id)))))))) / 1u), workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(191765u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size))), ~ (~ ((false ? _GLF_FUZZED(191765u) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false) ? _GLF_FUZZED(191765u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, uint(uvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 1u)))))), min((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, uint(uvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 1u)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, uint(uvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 1u))))))))))) + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id))))), min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, min(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) * 1)) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))) : _GLF_FUZZED((+ (subgroup_local_id))))), uint(2u))))) ^ uvec2(0u, 0u))), uint(uvec2(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id))))))) + 0u) + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) >> 0u)) : subgroup_local_id)))))) + 1) % subgroup_size)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), uint(2u)))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-921.425)), vec2(_GLF_FUZZED(108.742), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id), min(_GLF_IDENTITY(0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id), (0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) << 0u), 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))))) + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u)) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))))) + 1) % subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec2(0u, 0u))), 1u))))), ~ (~ ((false ? _GLF_FUZZED(191765u) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) + 1) % subgroup_size)))) : _GLF_FUZZED(virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), uint(uint(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), uint(uint(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), uint(uint(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), uint(uint(uint(uint((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))) ? _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_id)) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(102778u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u))), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u))), 1u))))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 1u, 1u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 1u, 1u)))))) << 0u), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | ((subgroup_size) / 1u))), 1u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | ((subgroup_size) / 1u))), 1u, 1u, 1u)))))))))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), (subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))))))))) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY((! (false)), true && ((! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY((! (false)), true && ((! (false))))))), (bool(_GLF_IDENTITY(true && (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY((! (false)), true && ((! (false)))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY((! (false)), true && ((! (false))))))), (bool(_GLF_IDENTITY(true && (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY((! (false)), true && ((! (false)))))))) && true))))))))) ? _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_id)) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) + 0u) + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), (uint(uint((subgroup_local_id + 1) % subgroup_size))) << 0u)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), uint(uint((subgroup_local_id + 1) % subgroup_size)))))))))))))) : _GLF_FUZZED(num_workgroup))) ^ 0u));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (1 ^ 1) | (int(1))))))), (0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), int(ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 1, 1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) * 1))) | _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))) | (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))), ! (_GLF_IDENTITY(! (_injected_loop_counter != (0 | 1)), ! (! (! (_injected_loop_counter != (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))) | 1)))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0))) << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5)))))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_GLF_IDENTITY(findLSB(workgroup_id), (findLSB(workgroup_id)) | (_GLF_IDENTITY(findLSB(workgroup_id), (findLSB(workgroup_id)) | (findLSB(workgroup_id)))))) : 5))))))) && true)) || false); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), (_GLF_IDENTITY(0, (0) + (0 >> _GLF_IDENTITY(int(4), int(4)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), _GLF_IDENTITY(int(4), int(ivec3(int(4), 1, 0))))) ^ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), 1), (ivec2(1, 1) ^ ivec2(1, 1)) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), (~ (0)) | 0)) | (~ (0))), ~ (~ (~ (0)))), 1)) - (ivec2(59912, -7108) & ivec2(0, 0))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) >> (-74668 & 0)), ~ (~ (~ (0)))), 1)) + ivec2(0, 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) * (0 | ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(40536))), int(0)))))), clamp(int(_GLF_IDENTITY(8, (8) | (8))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), clamp(int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8))))), int(_GLF_IDENTITY(8, (8) | (8))), int(_GLF_IDENTITY(8, (8) | (8)))))) | 0))), int(_GLF_IDENTITY(8, (8) | (8))))), int(8))) | (4))) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-57629))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id % 2))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2)))) | (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u))))))) == 0, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, (0u) | (0u)) | ((subgroup_local_id % 2))))) == 0, ! (! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(0u, uint(uint(0u))) | (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, max(0u, 0u)) | ((subgroup_local_id % 2))))) == 0))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u)))))), clamp(_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u)))))), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY((subgroup_local_id % 2), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u)))))), _GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u)))))))))) == 0, ! (! (_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u)))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u | ((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) ? _GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(77498))), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) : _GLF_FUZZED(-19441)))))))) == 0)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u | (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))), max(clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))))))), max(0u | (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))), max(clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))))))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))), max(clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u))), clamp(_GLF_IDENTITY((subgroup_local_id % 2), (1u ^ 1u) + ((subgroup_local_id % 2))), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)), (uint(uvec4((subgroup_local_id % 2), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u))) ^ 0u)))))))))))) == 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u)))))))), clamp(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(5.0)), bool(_GLF_IDENTITY(false, ! (! (false))))))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (true ? _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(atomicExchange(subgroup_local_id, next_virtual_gid))))))) / uvec4(1u, 1u, 1u, 1u))))))), 0u | ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) : _GLF_FUZZED(-19441))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) - 0))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) : _GLF_IDENTITY(_GLF_FUZZED(-19441), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(-19441))))) : _GLF_FUZZED(69995)))))))) == 0), bool(bool((_GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((subgroup_id & virtual_gid))))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(workgroup_base))))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED((false ? 0.4 : (-3.1 - 9.5)))), bool(false))))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec4(subgroup_local_id % 2, 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)) * 1.0), 1.0, 1.0, 1.0)))), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) ^ 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) / uvec4(1u, 1u, 1u, 1u))))))), 0u | ((subgroup_local_id % _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (true ? (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(-58871))))) : _GLF_FUZZED(-19441)))))))) == 0))))))))))))), ((subgroup_local_id % 2) == 0) && true))
    {
     subgroupAll(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(6.5, _GLF_IDENTITY(876.999, max(876.999, 876.999)))), (_GLF_FUZZED(vec2(6.5, _GLF_IDENTITY(876.999, (876.999) / abs(exp(0.0)))))) - vec2(0.0, 0.0))), clamp((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, float(mat4x2(6.5, 1.0, 1.0, tan(0.0), exp(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), 1.0, 1.0))), _GLF_IDENTITY(876.999, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(876.999, max(876.999, 876.999))), bool(true))))), _GLF_IDENTITY((_GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, float(mat4x2(6.5, 1.0, 1.0, tan(0.0), exp(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), 1.0, 1.0))), _GLF_IDENTITY(876.999, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(876.999, max(876.999, 876.999))), bool(true)))))) * mat2(1.0), min(_GLF_IDENTITY((_GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, float(mat4x2(6.5, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(47.86) : exp(0.0))), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), 1.0, 1.0))), _GLF_IDENTITY(876.999, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(876.999, max(876.999, 876.999))), bool(true)))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(-7.8)), vec2(((_GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, float(mat4x2(6.5, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), exp(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), 1.0, 1.0))), _GLF_IDENTITY(876.999, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.1, min(_GLF_IDENTITY(0.1, clamp(0.1, _GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(8650.0742))), 0.1)), 0.1)))), float(_GLF_IDENTITY(876.999, max(_GLF_IDENTITY(876.999, (876.999) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(1.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(1.0))), 1.0)), max(dot(vec2(0.0, 0.0), vec2(round(length(normalize(1.0))), 1.0)), dot(vec2(0.0, 0.0), vec2(round(length(normalize(1.0))), 1.0)))))), 876.999))), bool(true)))))) * mat2(1.0))[0], ((_GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, float(mat4x2(6.5, 1.0, 1.0, tan(0.0), exp(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(876.999, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(876.999, max(876.999, 876.999))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true))))))))))) * mat2(1.0))[1]), bvec2(true, true))), (_GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, float(mat4x2(6.5, 1.0, 1.0, tan(0.0), exp(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), 1.0, 1.0))), _GLF_IDENTITY(876.999, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(876.999, max(876.999, 876.999))), bool(true)))))) * mat2(1.0))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.5, (6.5) / 1.0), _GLF_IDENTITY(876.999, (876.999) + 0.0)))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(6.5, float(mat3x4(_GLF_IDENTITY(6.5, _GLF_IDENTITY((6.5), max((6.5), (6.5))) * 1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec2(0.0, 0.0))), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))), 876.999), (vec2(_GLF_IDENTITY(6.5, float(mat3x4(_GLF_IDENTITY(6.5, (6.5) * 1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec2(0.0, 0.0))), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))), 876.999)) * vec2(1.0, 1.0)))), ((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)))))) || false)))) ? injectionSwitch : _GLF_FUZZED(vec2(6.5, 876.999)))) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), _GLF_IDENTITY(min(float(vec2(0.0, 1.0)), _GLF_IDENTITY(float(vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4883.6981) : 1.0)))), (float(vec2(0.0, 1.0))) / 1.0)), clamp(min(float(vec2(0.0, 1.0)), _GLF_IDENTITY(float(vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4883.6981) : 1.0)))), (float(vec2(0.0, 1.0))) / 1.0)), min(float(vec2(0.0, 1.0)), _GLF_IDENTITY(float(vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4883.6981) : 1.0)))), _GLF_IDENTITY((float(vec2(0.0, 1.0))) / 1.0, mix(float((float(vec2(0.0, 1.0))) / 1.0), float(_GLF_FUZZED(1.2)), bool(false))))), min(float(vec2(0.0, 1.0)), _GLF_IDENTITY(float(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-4883.6981), (_GLF_FUZZED(-4883.6981)) * 1.0) : 1.0)))), (float(vec2(0.0, 1.0))) / 1.0))))))))))).y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 0, 0))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)) < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.y))))) || false)), true))))))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
                {
                }
               else
                {
                 subgroupAll(false);
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (true)))), true, false))), false))))));
          }
         else
          {
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) / 1), (_GLF_IDENTITY(7, (7) / 1)) | (_GLF_IDENTITY(7, (7) / 1)))))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), int(7)))), (0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), int(7))))) << 0)), int(7), int(7))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), int(7))))), int(7), int(7))))), (_GLF_IDENTITY(int(7), min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) | (7)))), min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(6888) : 7))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), ~ (~ (clamp(int(7), int(7), int(7)))))), (int(7)) >> 0), int(7))))), int(7), int(7)))))) - 0))), min((_GLF_IDENTITY(0, 1 * (0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7), int(7))), int(7))), _GLF_IDENTITY((int(7)) >> 0, (_GLF_IDENTITY((int(7)) >> 0, ((int(7)) >> 0) ^ 0)) / 1)), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), int(7), int(7)))), (0 << _GLF_IDENTITY(int(0), int(0))) | _GLF_IDENTITY((min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(bitCount(-49377))))))))), int(7), int(7))))), int(ivec4((min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(bitCount(-49377))))))))), int(7), int(7))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, 1 * _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), int(ivec2(~ ((0)), (0 << _GLF_IDENTITY(int(4), int(4))))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)) ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), int(7))))), int(7), int(7))))))), max((_GLF_IDENTITY(0, 1 * (0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (int(7)) >> 0), _GLF_IDENTITY(int(7), min(int(7), int(7))))))), int(7), int(7))))))), (_GLF_IDENTITY(0, 1 * (0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, (7) / 1)))), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, (7) - 0))) >> 0, min((int(_GLF_IDENTITY(7, (7) - 0))) >> 0, (int(_GLF_IDENTITY(7, (7) - 0))) >> 0))), int(7))))), int(7), int(7))))))))))))) & 26814); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY(-37520 & 0, max(-37520 & 0, -37520 & 0))) | 0) ^ 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
      {
       do
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
