#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_26 {
 vec4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 ivec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
} ;

struct _GLF_struct_27 {
 uint subgroup_local_id;
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
} ;

struct _GLF_struct_22 {
 vec2 _f0;
 mat2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 bool _f4;
 bool _f5;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
 mat4x2 _f1;
 vec3 _f2;
 int _f3;
 mat2x3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_15 {
 int _f0;
} ;

struct _GLF_struct_21 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 vec3 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_28 {
 mat4 _f0;
 _GLF_struct_21 _f1;
 mat3x4 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
 _GLF_struct_27 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_14 {
 uint subgroup_id;
 mat3 _f0;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 vec4 _f1;
 mat3x4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 vec2 _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 ivec2 _f1;
 vec4 _f2;
 bvec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 ivec2 _f1;
 mat3 _f2;
 bool _f3;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 bvec2 _f4;
 _GLF_struct_8 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 ivec3 _f1;
 int _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 mat4 _f3;
 bvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 uint next_virtual_gid;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 int _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_12 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(gl_SubgroupID, mat3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))).y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)))).y))))) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))).y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x2(vec2(1.0, 1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)), log(1.0), _GLF_ONE(1.0, injectionSwitch.y))))).y)) || false))) || false), false, true))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), _GLF_struct_21(_GLF_struct_15(1), _GLF_struct_16(vec4(1.0), mat4x2(1.0), vec3(1.0), 1, mat2x3(1.0), mat2(1.0)), _GLF_struct_17(mat4x3(1.0), mat4x3(1.0), ivec4(1)), vec3(1.0), _GLF_struct_18(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) - uvec4(0u, 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((uvec4(1u)) - uvec4(0u, 0u, 0u, 0u)), (~ ((uvec4(1u)) - uvec4(0u, 0u, 0u, 0u))) | (~ ((uvec4(1u)) - uvec4(0u, 0u, 0u, 0u))))))), bvec3(_GLF_IDENTITY(true, (true) || false)), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(-88227, -84861, -26608)) : _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))))), max(_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(-88227, -84861, -26608)) : _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))))), _GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(-88227, -84861, -26608)) : _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))))))), true, true), _GLF_struct_19(mat2x3(1.0), mat3x4(1.0), mat4x3(1.0), mat4x2(1.0), uvec2(1u)), _GLF_struct_20(mat2x4(1.0), mat3x4(1.0))), mat3x4(1.0), _GLF_struct_23(_GLF_struct_22(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2(1.0), mat4x2(1.0))), _GLF_struct_24(uvec2(1u)), _GLF_struct_27(gl_SubgroupInvocationID, _GLF_struct_25(vec4(1.0)), _GLF_struct_26(vec4(1.0), mat2x3(1.0), uvec2(1u), ivec4(1), mat2x3(1.0))), uvec4(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_14.subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, sqrt(sqrt(1.0)), 0.0)))), false || ((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), true)), true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(true, false || (true))) || false))), true)), true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))), (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), true)), true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, false || (true))) || false))), true)), true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)), true)))))))) && true))), false, false))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_28._f5.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec2(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-47300))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), true, false)), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))))))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_2(_GLF_struct_0(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) / 1)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uvec3(1u, _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), (false ? _GLF_FUZZED(53615u) : _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_FUZZED(virtual_gid)), (_GLF_IDENTITY(uint(_GLF_FUZZED(virtual_gid)), max(uint(_GLF_FUZZED(virtual_gid)), _GLF_IDENTITY(uint(_GLF_FUZZED(virtual_gid)), (uint(_GLF_FUZZED(virtual_gid))) | (uint(_GLF_FUZZED(virtual_gid))))))) - 0u))) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(5.4, -99.29).r)), bool(false))))) ^ 1u)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_FUZZED(virtual_gid)), (_GLF_IDENTITY(uint(_GLF_FUZZED(virtual_gid)), max(uint(_GLF_FUZZED(virtual_gid)), _GLF_IDENTITY(uint(_GLF_FUZZED(virtual_gid)), (uint(_GLF_FUZZED(virtual_gid))) | (uint(_GLF_FUZZED(virtual_gid))))))) - 0u))) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(5.4, -99.29).r)), bool(false))))) ^ 1u))) << 0u)))), 1u)))), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), clamp(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))) >> uvec3(0u, 0u, 0u)))), min(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), clamp(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), clamp(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))) >> uvec3(0u, 0u, 0u))))))) | (uvec3(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), (uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))) ^ 0u)), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), clamp(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))))))))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))) >> uvec3(0u, 0u, 0u))))) | (uvec3(1u))), ~ (~ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 0u)))), uvec3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(97631u)))), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))))) | (uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))))))), clamp(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), uvec3(1u), uvec3(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, _GLF_IDENTITY(167229u, (167229u) + 0u), 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (_GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, _GLF_IDENTITY(167229u, (167229u) + 0u), 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (_GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), clamp(max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, _GLF_IDENTITY(167229u, (167229u) + 0u), 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), max(false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), uvec3(1u), uvec3(1u))), false ? _GLF_FUZZED(uvec3(36974u, 167229u, 73558u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))))))), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (_GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)) >> uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u))))) | _GLF_IDENTITY((uvec3(1u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + ((uvec3(1u))))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) ^ _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(15.63)), bool(false)))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * cos(0.0)) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(-8619.8640)), bool(false)))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(15.63)), bool(false)))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(-8619.8640)), bool(false))))))), max(uvec3(1u), uvec3(1u))))), mat2x4(1.0), mat4(1.0), bvec2(true), bvec2(true)), mat4(1.0), workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), 0u | (_GLF_IDENTITY(max(subgroup_base, subgroup_base), _GLF_IDENTITY(~ (~ (max(subgroup_base, subgroup_base))), ~ (~ (~ (~ (max(subgroup_base, subgroup_base)))))))))) + (_GLF_IDENTITY((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_28._f5.subgroup_local_id + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_28._f5.subgroup_local_id, (_GLF_struct_replacement_28._f5.subgroup_local_id) ^ 0u) + 1), ((_GLF_IDENTITY(_GLF_struct_replacement_28._f5.subgroup_local_id, (_GLF_struct_replacement_28._f5.subgroup_local_id) ^ 0u) + 1)) >> 0u), (_GLF_struct_replacement_28._f5.subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_28._f5.subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_struct_replacement_28._f5.subgroup_local_id + 1))) % subgroup_size), clamp(((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size)) / 1u, min((((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size)) / 1u, (((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size)) / 1u))), ((_GLF_IDENTITY(_GLF_struct_replacement_28._f5.subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_28._f5.subgroup_local_id), 0u ^ (_GLF_IDENTITY(uint(_GLF_struct_replacement_28._f5.subgroup_local_id), clamp(_GLF_IDENTITY(uint(_GLF_struct_replacement_28._f5.subgroup_local_id), uint(uint(uint(_GLF_struct_replacement_28._f5.subgroup_local_id)))), uint(_GLF_struct_replacement_28._f5.subgroup_local_id), _GLF_IDENTITY(uint(_GLF_struct_replacement_28._f5.subgroup_local_id), 0u ^ (_GLF_IDENTITY(uint(_GLF_struct_replacement_28._f5.subgroup_local_id), (uint(_GLF_struct_replacement_28._f5.subgroup_local_id)) | (uint(_GLF_struct_replacement_28._f5.subgroup_local_id))))))))))) + 1) % subgroup_size))) | (_GLF_IDENTITY((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size, ((_GLF_struct_replacement_28._f5.subgroup_local_id + 1) % subgroup_size) >> 0u))) : _GLF_FUZZED(186675u)))), _GLF_struct_1(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-25.47) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))), ivec3(1), 1, _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)), (true ? ivec3(1) : _GLF_FUZZED(ivec3(85353, 52289, -35725)))), ivec3(1), ivec3(1))), (_GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(85353, 52289, -35725)))), ivec3(1), ivec3(1)))) / ivec3(1, 1, 1)))), _GLF_struct_3(vec2(1.0), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1, _GLF_struct_9(_GLF_struct_4(mat2x3(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)) * (1.0), (false ? _GLF_FUZZED(-9643.6108) : _GLF_IDENTITY(determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)) * (1.0), (determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)) * (1.0)) * 1.0)))))), _GLF_struct_5(true, uvec3(_GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_struct_6(ivec4(1), ivec2(1), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), true), _GLF_struct_7(ivec2(1), ivec2(_GLF_IDENTITY(1, (1) - 0)), vec4(1.0), bvec4(true), mat4(1.0)), bvec2(true), _GLF_struct_8(vec3(1.0), vec2(1.0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (1)))), bvec4(_GLF_IDENTITY(true, true && (true)))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u))))), clamp(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | (uint(1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((uint(1u)) | (uint(1u)), (false ? _GLF_FUZZED(subgroup_size) : (uint(1u)) | _GLF_IDENTITY((uint(1u)), ((uint(1u))) + 0u)))))), uint(uvec2(uint(1u), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))), 1u * (uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u)))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), _GLF_IDENTITY(1u, (1u) / 1u)))))))))))) - 0u))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u)))))))) | _GLF_IDENTITY((1u), min((1u), (1u)))))), _GLF_struct_12(_GLF_struct_10(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 0, 1))), mat2x4(1.0)), _GLF_struct_11(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(1.0), mat3x4(1.0), bvec4(true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) / 1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((_GLF_struct_replacement_28._f5.subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))), bool(bvec4(bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))), true, false, true)))), _GLF_IDENTITY(true, (true) || false), false, true)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_13._f0.next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), int(ivec2(4, 1))), 4)), _GLF_IDENTITY(4, (4) | 0))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4742.4687) : injectionSwitch.y)), injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4742.4687) : injectionSwitch.y)), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4742.4687) : injectionSwitch.y)), injectionSwitch.y)) - 0.0))))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4742.4687) : injectionSwitch.y)), injectionSwitch.y)))))), bool(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4742.4687) : injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4742.4687) : injectionSwitch.y)), injectionSwitch.y)))))))))))))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_13._f0.next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
