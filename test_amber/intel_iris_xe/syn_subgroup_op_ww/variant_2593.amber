#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, true), bvec3(bvec4(bvec3(! (! (false)), true, true), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))
      {
       return;
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, sin(0.0), 1.0))).x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-64498))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              break;
             break;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-62.40), _GLF_FUZZED(2700.8118)), bvec2(false, false))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)), false)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(116283u, 33700u, 197276u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, -8.7, 0.3))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), uvec3(0u, 0u, 0u) + ((false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, -8.7, 0.3))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(116283u, 33700u, 197276u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, -8.7, 0.3))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))), max((false ? _GLF_FUZZED(uvec3(116283u, 33700u, 197276u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, -8.7, 0.3))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(116283u, 33700u, 197276u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, -8.7, 0.3))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))), ((false ? _GLF_FUZZED(uvec3(116283u, 33700u, 197276u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, -8.7, 0.3))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicExchange(subgroup_local_id, num_workgroup)) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u)))))))), 0u) | (gl_WorkGroupID)))))) | ((false ? _GLF_FUZZED(uvec3(116283u, 33700u, 197276u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(floatBitsToUint(vec3(-6871.0229, _GLF_IDENTITY(-8.7, abs(0.0) + (-8.7)), 0.3))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-8.7)))) * 1.0)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) + 0.0) < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) + 0.0) < injectionSwitch.y)))), false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4046.9038), _GLF_FUZZED(-9.0)), bvec2(false, false))).y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(4.1), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(4.1)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0))) & 92068); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                {
                 return;
                }
              }
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (subgroup_id * subgroup_size) / 1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true, true))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, 0.0, 1.0, exp(0.0), 1.0, abs(0.0))))) / 1.0), injectionSwitch.x))))))), ~ (_GLF_IDENTITY(~ (uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, 0.0, 1.0, exp(0.0), 1.0, abs(0.0))))) / 1.0), injectionSwitch.x)))))))), (~ (uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, 0.0, 1.0, exp(0.0), 1.0, abs(0.0))))) / 1.0), injectionSwitch.x))))))))) - uvec4(0u, 0u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) << (127597u & 0u)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base))) * 1u))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(-74.93)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)))))), (_GLF_IDENTITY(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) << (127597u & 0u)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base))) * 1u))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(-74.93)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)))))), min(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) << (127597u & 0u)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base))) * 1u))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(-74.93)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)))))), uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) << (127597u & 0u)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base))) * 1u))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(-74.93)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))))))))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uint(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), injectionSwitch.x)))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (0u | 0u)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0), injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) >> 0u), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2223.2472)), bool(false))), injectionSwitch.x)))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1.5)), bool(false))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), (uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1.5)), bool(false))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))) | (0u ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u)), 0u | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size)))) + 0u))), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base)), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), (float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))))) + log(1.0))), injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base)), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), (float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))))) + log(1.0))), injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base)), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), (float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))))) + log(1.0))), injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base)), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), (float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))))) + log(1.0))), injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(subgroup_local_id))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base)), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), (float(mat4(0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(108.202) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))))), exp(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))))) + log(1.0))), injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(56.54)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))) : _GLF_FUZZED(663.632))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(559.447) : 0.0)), injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))) : _GLF_FUZZED(96.39)))))) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(139664u) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0))))))) - 0.0)), 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))) : _GLF_FUZZED(96.39)))))) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(139664u) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0))))))) - 0.0)), 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u)), (true ? _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))) : _GLF_FUZZED(96.39)))))) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(139664u) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0))))))) - 0.0)), 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))) : _GLF_FUZZED(96.39)))))) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(139664u) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0))))))) - 0.0)), 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u))))) : _GLF_FUZZED(max(subgroup_local_id, workgroup_size)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))) : _GLF_FUZZED(96.39)))))) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(139664u) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0))))))) - 0.0)), 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u)), (uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0)), (mat4x3(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, sqrt(1.0))) * mat4(1.0))) : _GLF_FUZZED(96.39)))))) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(139664u) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0))))))) - 0.0)), 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))), 1u))) >> 0u)))) / 1u)), uint(uvec4(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), 1.0 * (float(mat4x3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0)))), sin(vec2(0.0, 0.0)) + (max(vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))))))), injectionSwitch.x)))))), 1u), min(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), 1.0 * (float(mat4x3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0)))), sin(vec2(0.0, 0.0)) + (max(vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))))))), injectionSwitch.x)))))), 1u), uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(workgroup_size))), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), 1.0 * (float(mat4x3(1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0)))), sin(vec2(0.0, 0.0)) + (max(vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))))))), injectionSwitch.x)))))), 1u)))), (uint(uvec2(_GLF_IDENTITY(uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(190507u))), 1u, 1u))) + 0u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED(workgroup_size)))))), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x))))), (clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))) | (clamp(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) >> 0u) + subgroup_base, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, 0.0))))))), injectionSwitch.x)))))))), 1u))) / 1u)), 1u, 0u, 0u)))))))))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), uint(_GLF_IDENTITY(uvec4(min(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (uvec4(min(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)) << (uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), min(uvec4(0u), uvec4(0u)))) * (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))), uvec4(0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, true, true))))))), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true)), true, true))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) - 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) * 1), 2)), (2) + 0), (0 ^ 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8)))), (ivec3(_GLF_IDENTITY(2, (2) + 0), (0 ^ 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))))) * ivec3(1, 1, 1)))), _GLF_IDENTITY(0 + (2), _GLF_IDENTITY(0, int(ivec2(0, 0))) | (0 + (2)))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY(2, 0 + (2)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) >> 0))), (false ? _GLF_FUZZED((ivec4(-97073, -39813, -19738, 5612) + 5458)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) + 0), (0 ^ 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8)))), (ivec3(_GLF_IDENTITY(2, (2) + 0), (0 ^ 1), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))))) * ivec3(1, 1, 1)))), (false ? _GLF_FUZZED(-68789) : _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) + 0), (0 ^ 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(8, 0, 1, 0), max(ivec4(8, 0, 1, 0), ivec4(8, 0, 1, 0)))), min(int(_GLF_IDENTITY(ivec4(8, 0, 1, 0), max(ivec4(8, 0, 1, 0), ivec4(8, 0, 1, 0)))), int(_GLF_IDENTITY(ivec4(8, 0, 1, 0), max(ivec4(8, 0, 1, 0), ivec4(8, 0, 1, 0))))))), 8))), int(8)))), (ivec3(_GLF_IDENTITY(2, (2) + 0), (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 ^ 1))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, 0.0)))) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, float(mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? 869.628 : 6811.6226))), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0))), injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))))) * ivec3(1, 1, 1)))))), _GLF_IDENTITY(0 + (2), 0 | (0 + (2)))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY(2, 0 + (2)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) >> ivec4(0, 0, 0, 0))))), 0 ^ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0, ~ (~ (0))) + (2)), (false ? _GLF_FUZZED(findLSB(18841u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0 + (2), (0 + (2)) | 0), 0 ^ (_GLF_IDENTITY(0 + (2), (0 + (2)) | 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 + _GLF_IDENTITY((2), max(_GLF_IDENTITY((2), ((2)) / (1 | 1)), (2)))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (false ? _GLF_FUZZED(17550) : _GLF_IDENTITY(2, _GLF_IDENTITY(0, (0) - 0) + _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ~ (~ ((2)))), _GLF_IDENTITY((2), ((2)) >> (0 << _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY((2), ((2)) << 0)))))), _GLF_IDENTITY(2, 0 + (2)))))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), min(_GLF_IDENTITY(2, 0 + (2)), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) * 1))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) >> ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) | 0)))))) == 0)
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-34967) : _injected_loop_counter ++)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
             barrier();
            }
          }
         continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))) || (false))));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9771.9761)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), abs(1.0), 0.0))).y))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))) || false))
          {
           do
            {
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(11.06)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) && true)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(4), int(4))) | 0)) - 0))); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), ! (! (bool(_GLF_WRAPPED_IF_TRUE(true))))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(-3881.6455)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0))), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0))))))), bool(true)))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (! (((_GLF_IDENTITY(false, ! (! (false)))))))))))))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
