#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y = subgroup_size, 0u | (GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y = subgroup_size));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y, (GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y) * 1u), GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y))) | (GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 | 1), ((0 | 1)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> (1 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(true ? int(4) : _GLF_FUZZED(_injected_loop_counter), min(true ? int(4) : _GLF_FUZZED(_injected_loop_counter), true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))); _injected_loop_counter ++)
        {
         do
          {
           GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.y = _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups) | (gl_NumWorkGroups), (0u ^ 1u))))) | ((gl_NumWorkGroups) | (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x) | 0u)))), 1u)), 0u | (uint(uvec2(gl_NumWorkGroups.x, 1u))))) | 0u)), gl_NumWorkGroups.x));
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.x = num_workgroup, (GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.x = num_workgroup) - 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))), bool(bvec3(bool(bool(injectionSwitch.x < injectionSwitch.y)), false, true))))))))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))); _injected_loop_counter --)
                  {
                   do
                    {
                     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(0.0), log(1.0), 1.0, 1.0, 1.0, 0.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, max(2.8, 2.8)))), float(mat2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, max(2.8, 2.8)))), 1.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, _GLF_IDENTITY(float(_GLF_IDENTITY(float(2.8), (float(2.8)) * 1.0)), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(float(2.8), (float(2.8)) * 1.0)), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0)), (_GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(float(2.8), (float(2.8)) * 1.0)), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0)), mix(float(_GLF_FUZZED(9.7)), float(float(mat4x2(float(_GLF_IDENTITY(float(2.8), _GLF_IDENTITY((float(2.8)) * 1.0, ((float(2.8)) * 1.0) - abs(0.0)))), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0))), bool(true)))) / 1.0))))), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(-34.00)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), mix(float(_GLF_FUZZED(-7714.6169)), float(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), (true ? float(_GLF_FUZZED(2.8)) : _GLF_FUZZED(-646.669)))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), bool(true)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), mix(float(_GLF_FUZZED(173.943)), float(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), 1.0 * (float(_GLF_FUZZED(2.8))))), float(_GLF_FUZZED(9.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec2(bool(bvec4(true, false, true, false)), true))))))))))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(7.9) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true)))) : _GLF_FUZZED(-1.0)))) / 1.0))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((_GLF_IDENTITY(-9.9, _GLF_IDENTITY(float(mat2x4(-9.9, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x4(-9.9, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + sin(0.0)) : _GLF_FUZZED(-1.1))), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + sin(0.0)) : _GLF_FUZZED(-1.1))), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), float(_GLF_FUZZED(15.76)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), round(length(normalize(abs(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 1.0)), 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(3.2)), bool(false)))) + float(true)))), float(_GLF_FUZZED(2.9)), bool(true))))) < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), true)))) && true) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((-9.9 + _GLF_IDENTITY(float(true), mix(float(_GLF_FUZZED((1.2 * -541.398))), float(float(true)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat4(2.9, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true)))), (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)) ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(vec3(float(_GLF_FUZZED(2.8)), 1.0, 0.0))), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat4(_GLF_IDENTITY(2.9, min(2.9, 2.9)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true)))) : _GLF_FUZZED(-8811.4948))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), true)))) && true) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((-9.9 + _GLF_IDENTITY(float(true), mix(float(_GLF_FUZZED((1.2 * -541.398))), float(float(true)), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat4(2.9, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true)))), (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)) ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(vec3(float(_GLF_FUZZED(2.8)), 1.0, 0.0))), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat4(_GLF_IDENTITY(2.9, min(2.9, 2.9)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true)))) : _GLF_FUZZED(-8811.4948))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0))))), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat4(2.9, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true))))) * 1.0)) < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (true))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED(2.9)), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))))) < injectionSwitch.y)), true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))), float(_GLF_FUZZED(2.9)), bool(true))))) < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))), float(_GLF_FUZZED(2.9)), bool(true))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))), float(_GLF_FUZZED(2.9)), bool(true))))) < injectionSwitch.y)))))) && true), _GLF_IDENTITY(true, bool(bvec2(true, false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.x), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(2.9), mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((-9.9 + float(true))), (true ? _GLF_FUZZED((-9.9 + float(true))) : _GLF_FUZZED(cosh(-76.82))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), float(vec3(float(_GLF_FUZZED((-9.9 + float(true)))), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), clamp(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), float(vec3(float(_GLF_FUZZED((-9.9 + float(true)))), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), clamp(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), float(vec3(float(_GLF_FUZZED((-9.9 + float(true)))), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), clamp(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))))), float(float(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), float(vec3(float(_GLF_FUZZED((-9.9 + float(true)))), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), clamp(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true))))))))))), _GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), float(vec3(float(_GLF_FUZZED((-9.9 + float(true)))), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-9.9 + float(true)))), clamp(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))))))), max(float(_GLF_FUZZED((-9.9 + float(true)))), float(_GLF_FUZZED((-9.9 + float(true)))))))), max(float(_GLF_FUZZED((-9.9 + float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))), true)))))))), float(_GLF_FUZZED((-9.9 + float(true)))))), float(_GLF_FUZZED(2.9)), bool(true))))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(636.018, -39.54).g)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.8)), bool(false))))))), true), false))), false))))), _GLF_IDENTITY(false, ! (! (false)))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y))), false, false))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y), float(_GLF_FUZZED(-379.148)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-8317.2423), _GLF_FUZZED(-7.8)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))))[1]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-64.96) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))))), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5477.0583))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5477.0583))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), false || ((_GLF_IDENTITY(true, (true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true)))), false, true, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((true), ! (! ((true)))) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false, ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), false))))), ((bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (injectionSwitch.x < injectionSwitch.y)))) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-28.91)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true)))))), float(_GLF_FUZZED(-4.0)), bool(false))), injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false), true, false), false))))))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), true, false)))))), bool(bvec3(! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), true, false)))))), false, false))))))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(0.2, 463.853, 3.1, 74.14, 9.0, -5.1, -7.8, 0.8, 5.2, -6697.4173, -87.83, 223.154)) : _GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(428.775))), 1.0, 1.0)) * mat3(1.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(0.2, 463.853, 3.1, 74.14, 9.0, -5.1, -7.8, 0.8, 5.2, -6697.4173, -87.83, 223.154)) : _GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0)) * mat3(1.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(0.2, 463.853, 3.1, 74.14, 9.0, -5.1, -7.8, 0.8, 5.2, -6697.4173, -87.83, 223.154)) : _GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (mat3x4(vec2(1.0, 0.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-450.635))), 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0)) * mat3(1.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) - 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5477.0583))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))))), (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, true, false)))), (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), false)))))) || false)), bool(bvec2((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y))), false, false))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y), float(_GLF_FUZZED(-379.148)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-8317.2423), _GLF_FUZZED(-7.8)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))))[1]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-64.96) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))))), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5477.0583))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5477.0583))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), false || ((_GLF_IDENTITY(true, (true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec3((true) || false, false, true)))), false, true, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((true), ! (! ((true)))) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true))))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false, ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), false))))), ((bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (injectionSwitch.x < injectionSwitch.y)))) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-28.91)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true)))))), float(_GLF_FUZZED(-4.0)), bool(false))), injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false), true, false), false))))))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), true, false)))))), bool(bvec3(! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false || (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x)) > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), false, false)), false, true, false)), true, false)))))), false, false))))))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(0.2, 463.853, 3.1, 74.14, 9.0, -5.1, -7.8, 0.8, 5.2, -6697.4173, -87.83, 223.154)) : _GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(428.775))), 1.0, 1.0)) * mat3(1.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(0.2, 463.853, 3.1, 74.14, 9.0, -5.1, -7.8, 0.8, 5.2, -6697.4173, -87.83, 223.154)) : _GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0)) * mat3(1.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(0.2, 463.853, 3.1, 74.14, 9.0, -5.1, -7.8, 0.8, 5.2, -6697.4173, -87.83, 223.154)) : _GLF_IDENTITY(mat3x4(vec2(1.0, 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0), (mat3x4(vec2(1.0, 0.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-450.635))), 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0)) * mat3(1.0)))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) - 0.0))), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0)))))).y))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5477.0583))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))))), (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, true, false)))), (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), false)))))) || false)), true)))))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(int(1)))), min((_GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(1, int(int(1)))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
                              {
                               do
                                {
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2), (clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2)) | _GLF_IDENTITY(0, (0) | 0))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2), (clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2)) | _GLF_IDENTITY(0, (0) | 0)))))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2), (clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2)) | _GLF_IDENTITY(0, (0) | 0))))), max(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2), (clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2)) | _GLF_IDENTITY(0, (0) | 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2), (clamp(_GLF_IDENTITY(2, (2) << 0), 2, 2)) | _GLF_IDENTITY(0, (0) | 0)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(0.0), log(1.0), 1.0, 1.0, 0.0))).x < injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id;
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 + (_GLF_IDENTITY(1, (1) / 1))), 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), min((0), (0)))) | 0)); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) + 0)))))), min(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) + 0)))))), min(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) + 0)))))), min(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))))))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) + 0)))))), min(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1))))))))))))) ^ 0) : _GLF_FUZZED(_injected_loop_counter)))), 1 & 1))), clamp((_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1))))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))))))), ~ (~ (_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))), ~ (~ (_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1))))))))))))) & _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ (~ (1)))))))), 1 & 1))), (_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, ~ (~ (_GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) | (1)))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << 0)))), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ _GLF_IDENTITY((1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) : _GLF_FUZZED(_injected_loop_counter))))) | ((0 | 0) << _GLF_IDENTITY(int(3), int(3)))))))))), 1 & 1))), (_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, ~ (~ (_GLF_IDENTITY(1, (0 ^ 1) * _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? (1) | (1) : _GLF_FUZZED(_injected_loop_counter))))), min((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? (1) | (1) : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (1), (true ? (1) | (1) : _GLF_FUZZED(_injected_loop_counter)))))))) & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) : _GLF_FUZZED(_injected_loop_counter)), ((true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(0, (0) << 0))))), _GLF_IDENTITY(1, ~ (~ (1)))))))), 1 & 1)))))); _injected_loop_counter ++)
                                        {
                                         for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) : _GLF_IDENTITY(1, (1) | (1))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) : _GLF_IDENTITY(1, (1) | (1)))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) : _GLF_IDENTITY(1, (1) | (1))))))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))) | (1))))), false, false, true))); _injected_loop_counter ++)
                                          {
                                           do
                                            {
                                             do
                                              {
                                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))), false, true, true)), true, false, false)))))
                                                {
                                                }
                                               else
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
                                                  {
                                                   do
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         do
                                                          {
                                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                                                                {
                                                                 do
                                                                  {
                                                                   GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.w, max(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.w, GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.w));
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                }
                                                              }
                                                            }
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(false));
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z, clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z, 0u | (GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z))) ^ 0u), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size, ~ _GLF_IDENTITY((~ (GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size)), ((~ (GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))).z, GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z)) * GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.y;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.604), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], _GLF_FUZZED(-84.82)), bvec2(true, false))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0)))))))), clamp(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(tanh(-2.0)) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.604), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.82)), bvec2(true, false))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.604), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.82)), bvec2(true, false))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0)))), float(float(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0))))))))))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.604), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.82)), bvec2(true, false))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0)))), float(float(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0)))))))))))) >> (0 << _GLF_IDENTITY(int(7), int(7)))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.604), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(9.1, -4812.1981)) : false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))[0], _GLF_FUZZED(-84.82)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.0))))))))))); _injected_loop_counter --)
              {
               GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))));
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 1)), 1))); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(int(_GLF_IDENTITY(int(1), int(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(int(_GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(1), int(1)))), min(int(int(_GLF_IDENTITY(int(1), int(1)))), int(int(_GLF_IDENTITY(int(1), int(1))))))))) : _GLF_FUZZED(bitCount(_injected_loop_counter))))) | 0)) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1047.4618))) > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
                                                {
                                                }
                                               else
                                                {
                                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                  {
                                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)).y))))
                                                        {
                                                         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
                                                          {
                                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                            {
                                                             for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                              {
                                                               _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.w = GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.z, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.w = GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_12num_workgroupsubgroup_sizeworkgroup_baseworkgroup_id.z) >> 0u);
                                                              }
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, max(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, max(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)), min(_GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, max(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)), _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, max(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))) >> 0u);
 do
  {
   GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x = subgroup_base;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base))) << (uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)) & uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> 0u), 1u)), 1u)) * (uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)))), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) + 0u), 0u))) / 1u)), 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base))) << (uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)) & uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> 0u), 1u)), 1u)) * (uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base))) << (uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))), min(~ ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))), ~ ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))))) >> uvec4(0u, 0u, 0u, 0u)) & uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> 0u), 1u)), 1u)) * (uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)))))).w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x) * _GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x), 1u * ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x))) ^ 0u)))), (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x)) | (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x))))), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x)) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) + uvec4(0u, 0u, 0u, 0u)))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(0u, (0u) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) - 0u))), 1u) * _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)) << uvec4(0u, 0u, 0u, 0u))), (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) + uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) : ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)))) << uvec4(0u, 0u, 0u, 0u))), (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) + uvec4(0u, 0u, 0u, 0u)))))).y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)) << uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), max((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base))) + uvec4(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(1u, 1u, 1u, 1u) * _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)) << uvec4(0u, 0u, 0u, 0u))), (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) + uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u, 0u)))).y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)))), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u, 1u) * _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)) << uvec4(0u, 0u, 0u, 0u))), (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) + uvec4(0u, 0u, 0u, 0u)))).y)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) + uvec4(0u, 0u, 0u, 0u)))).y));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)).w))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x + (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z), (true ? _GLF_IDENTITY(min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z), (min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)) | (min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))) : _GLF_FUZZED(subgroup_base))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))), 0u + (_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))), (clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)))) ^ 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)))))))).z))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u + (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) + 0u))) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, 1u, 0u, 0u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), max((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, max(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z) * 1u))), 0u, 1u))), clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)))))))))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z) - 0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))))) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z), (_GLF_IDENTITY(min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z), (min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)) | (min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)))) - 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))) ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, min(false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z, false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z))))))))))) - 0u))), 1u))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1.6) : _GLF_ZERO(0.0, injectionSwitch.x)))) ^ ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.y + 1) % GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z)));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
          {
           do
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), _GLF_IDENTITY(1, (1) >> 0) * (int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
              {
               GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.y % 2) == 0)
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false))), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (1)))))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (0 ^ 0) | (~ (_injected_loop_counter ++))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     subgroupAll(true);
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                  }
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
                  {
                   atomicStore(buf[GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x], uint(2), 4, 64, 4);
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
            }
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 subgroupAll(false);
                }
               else
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)))));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(0 ^ 0, min(0 ^ 0, 0 ^ 0)))), (1) >> 0)))) - 0), 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), 1), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0), 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), 1)) | ivec4(0, 0, 0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, (0 | 0)), (ivec3(0, 1, (0 | 0))) >> ivec3(0, 0, 0))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(ivec3(0, 1, (0 | 0)), (ivec3(0, 1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), clamp((0 | 0), (0 | 0), (0 | 0)))) ^ 0))) >> ivec3(0, 0, 0))), 0, 0)), clamp(int(ivec3(int(_GLF_IDENTITY(ivec3(0, 1, (0 | 0)), (ivec3(0, 1, (0 | 0))) >> ivec3(0, 0, 0))), 0, 0)), int(ivec3(int(_GLF_IDENTITY(ivec3(0, 1, (0 | 0)), (ivec3(0, 1, (0 | 0))) >> ivec3(0, 0, 0))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) | (ivec4(0, 1, 0, 1)))))) | 0))), int(ivec3(int(_GLF_IDENTITY(ivec3(0, 1, (0 | 0)), (ivec3(0, 1, (0 | 0))) >> ivec3(0, 0, 0))), 0, 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) < 1); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))))) - 0) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0)))); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       do
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           do
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                {
                                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false)))))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                                                    {
                                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((1 ^ 1), 1 * ((1 ^ 1)))); _injected_loop_counter --)
                                                      {
                                                       atomicStore(buf[GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x], uint(2), 4, 64, 4);
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         else
                                          {
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
