#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-9.1) : (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(20.58), _GLF_FUZZED(3.9)), bvec2(false, false))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || false)))) || false)) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat3x4(float(injectionSwitch.x), 0.0, 1.0, exp(abs(0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), (determinant(mat2(1.0, 1.0, 0.0, 1.0))) / 1.0))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), float(vec2(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(5907.2621) : float(mat3x4(float(injectionSwitch.x), 0.0, 1.0, exp(abs(0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), float(_GLF_FUZZED(6304.5130)), bool(false))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(vec2(-38.42, 91.04), injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(clamp(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u + (uint(uvec3(0u, 1u, 0u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(clamp(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u + (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | 0u)))), (clamp(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), _GLF_IDENTITY(max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))), clamp(_GLF_IDENTITY(max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))), (_GLF_IDENTITY(max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))), 0u + (max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))) * 1u), max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))), max(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u + (uint(uvec3(0u, 1u, 0u)))))) | 0u))))), max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u) + (gl_NumWorkGroups), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(66242u, 55168u, 35776u)) : uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), min(max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), 0u) + (gl_NumWorkGroups))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, sin(0.0))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(-2759.3544)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(-2759.3544)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.61)))), 1.0, 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(-2759.3544)), bvec2(false, false))))).x), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-177.819, (true ? -177.819 : _GLF_FUZZED(-4.3)))) : 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.10))))), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0))).x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(0.0), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.9))), 0.0))))))).x)), float(_GLF_FUZZED(22.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(log(1.0), 1.0, 0.0), mix(vec3((vec3(log(1.0), 1.0, 0.0))[0], _GLF_FUZZED(vec2(-1102.1790, 11.71).y), (vec3(log(1.0), 1.0, 0.0))[2]), vec3(_GLF_FUZZED(-599.572), (vec3(log(1.0), 1.0, 0.0))[1], _GLF_FUZZED(4662.8748)), bvec3(false, true, false))), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0))).x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (false)), true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))), bool(bool(bool(bvec3(_GLF_DEAD(false), false, false))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(bool(bool(bvec3(_GLF_DEAD(false), false, false))))))))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5773.0513), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8006.0587)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5773.0513), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-8006.0587)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5773.0513), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))) * vec2(1.0, 1.0)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8006.0587)), bvec2(true, false))).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) || false))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))), true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id)))))), (workgroup_size) / 1u) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-0.1)), vec2(_GLF_FUZZED((+ 1.2)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (! ((false)))), false || (true && _GLF_IDENTITY((false), ! (! ((false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4((! (_GLF_IDENTITY(false, true && (false)))), false, false, true))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(59.52))), injectionSwitch.x)) > injectionSwitch.y)))) && true)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))) ^ 0u))) - _GLF_IDENTITY((43243u & 0u), clamp(_GLF_IDENTITY((43243u & 0u), (_GLF_IDENTITY((43243u & 0u), min((43243u & 0u), (43243u & 0u)))) >> 0u), _GLF_IDENTITY((43243u & 0u), ~ (~ ((43243u & 0u)))), (43243u & 0u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))) ^ 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY((((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ ((((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u)))) ^ (1u)), 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))) * 1u) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (1u ^ 1u)))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u)), (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u))) / 1u)))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (1u ^ 1u)))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u))), (false ? _GLF_FUZZED(uint(_GLF_IDENTITY(572.878, float(float(572.878))))) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (1u ^ 1u)))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY((((subgroup_base))), clamp((((subgroup_base))), (((subgroup_base))), _GLF_IDENTITY((((subgroup_base))), (_GLF_IDENTITY((((subgroup_base))), ((((subgroup_base)))) >> 0u)) / 1u))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))), 0u + ((false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))))) * 1u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (1u ^ 1u)))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (1u ^ 1u)))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))), (0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u)))) * (uint(_GLF_ONE(1.0, injectionSwitch.y)) | 1u)))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((_GLF_IDENTITY(subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u) * (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))))))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, min(0u, 0u))), (max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) * 1u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(572.878)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(uint(572.878)), 0u, 1u), (false ? _GLF_FUZZED(uvec3(127392u, 127401u, 54729u)) : uvec3(_GLF_FUZZED(uint(572.878)), 0u, 1u))))) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ (1u ^ 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_base) ^ (1u ^ 1u) : _GLF_FUZZED(subgroup_id)))))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ (1u ^ 1u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_base) ^ (1u ^ 1u), min(_GLF_IDENTITY((subgroup_base) ^ (1u ^ 1u), ((subgroup_base) ^ (1u ^ 1u)) - 0u), (subgroup_base) ^ (1u ^ 1u))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), (uvec4(_GLF_IDENTITY((subgroup_base) ^ (1u ^ 1u), min(_GLF_IDENTITY((subgroup_base) ^ (1u ^ 1u), ((subgroup_base) ^ (1u ^ 1u)) - 0u), (subgroup_base) ^ (1u ^ 1u))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)) >> uvec4(0u, 0u, 0u, 0u))))))))), 1u, 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, 0u, 0u))))))), (_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), 1u, 0u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u))), (false ? _GLF_FUZZED(uint(572.878)) : 0u ^ (uint(uvec4(((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), min(_GLF_IDENTITY(0u ^ (0u), clamp(0u ^ (0u), 0u ^ (0u), 0u ^ (0u))), 0u ^ (0u)))), 0u)))))))) * 1u))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(4u), uint(4u)))) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(((subgroup_base)), 1u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(((subgroup_base)), 1u, 0u, _GLF_IDENTITY(0u, (0u) / (((1u ^ 0u) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), clamp(uint(uvec4(((subgroup_base)), 1u, 0u, _GLF_IDENTITY(0u, (0u) / (((1u ^ 0u) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(uvec4(((subgroup_base)), 1u, 0u, _GLF_IDENTITY(0u, (0u) / (((1u ^ 0u) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(uvec4(((subgroup_base)), 1u, 0u, _GLF_IDENTITY(0u, (0u) / (((1u ^ 0u) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec2(4u, 0u)), clamp(_GLF_IDENTITY(uint(uvec2(4u, 0u)), (uint(uvec2(4u, 0u))) ^ 0u), uint(uvec2(4u, 0u)), uint(uvec2(4u, 0u)))))), (uint(4u)) >> 0u)) + 0u, min((_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, min(4u, 4u)))) >> 0u)) + 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (_GLF_IDENTITY(4u, max(4u, 4u))))), (uint(4u)) >> 0u)) + 0u))), uint(4u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(((subgroup_base)), 1u, 0u, 0u)), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), min((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), _GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), 0u + ((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), min((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), _GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), 0u + ((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))))))), uint(uvec4(_GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), min((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), _GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), 0u + ((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))))))), 1u, 1u, 0u)))) - 0u), uint(uvec3((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(4u), uint(4u)))), ~ (~ ((_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY(uint(uvec4(((subgroup_base)), 1u, 0u, 0u)), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), min((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), _GLF_IDENTITY((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), 0u + ((uint(uvec4(((subgroup_base)), 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), uint(uvec3((uint(uvec4(((subgroup_base)), 1u, 0u, 0u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), 0u))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))))) : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))))), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (1u ^ 1u)))), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u)))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec4(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (1u | 1u), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + (61175u & 0u))) - 0u), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))))))), subgroup_local_id, subgroup_local_id))) / 1u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uvec2((subgroup_local_id) | (subgroup_local_id), 1u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, (0) / (0 ^ 1))], _GLF_FUZZED(_GLF_IDENTITY(-781.105, (_GLF_IDENTITY(-781.105, mix(float(-781.105), float(_GLF_FUZZED(-1.0)), bool(false)))) / 1.0))), vec2(_GLF_FUZZED(-65.17), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + _GLF_ZERO(0.0, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 ^ (0))), 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))[0], _GLF_FUZZED(-3510.9677)), vec2(_GLF_FUZZED((+ -528.258)), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, ~ (~ (1))))), 1u * (~ (uint(1)))), ~ (uint(1)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 0.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(0.0), 0.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, sin(tan(0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 0.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, abs(0.0), 0.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, sin(tan(0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x))) % _GLF_IDENTITY(2, max(2, 2)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) / (1u ^ 0u))) >> 0u), (subgroup_local_id) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)) % 2))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) ^ 0u, (_GLF_IDENTITY(((subgroup_local_id)) ^ 0u, max(((subgroup_local_id)) ^ 0u, ((subgroup_local_id)) ^ 0u))) ^ 0u))), min(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), min(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), min(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), min(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u | (subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) >> 0u), min(subgroup_local_id, subgroup_local_id))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)) % 2))) / 1u)))) == 0)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, false)))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.77)), float(injectionSwitch.y), bool(true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), min(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), vec4(mat3x2(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), 1.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.77)), float(injectionSwitch.y), bool(true)))))))) && true), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.77)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)).y), bool(true))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.77)), float(injectionSwitch.y), bool(true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), min(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), vec4(mat3x2(vec4(injectionSwitch.x, 0.0, exp(0.0), 0.0), 1.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.77)), float(injectionSwitch.y), bool(true)))))))) && true), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.77)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)).y), bool(true)))))))))))) || false), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -150.760 : -3.9))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8092.4165)), vec2(_GLF_FUZZED(-705.854), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), injectionSwitch)).y), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-627.180) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y))))
      return;
     return;
    }
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, 0u, 0u), (uvec4(virtual_gid, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))), virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) / 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))), virtual_gid))))))], buf[virtual_gid])), 4, 64, 2)) ^ 0u), (read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (false ? _GLF_FUZZED((num_workgroup & num_workgroup)) : buf[virtual_gid])), max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), clamp(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))], buf[virtual_gid])), 4, 64, 2), uint(uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))], buf[virtual_gid])), 4, 64, 2)))), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))], buf[virtual_gid])), 4, 64, 2)) / 1u)) ^ _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))))) ^ 0u);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-475.610, -5.7)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   _GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) | (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)))), uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))))) - 0u), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) ^ 0u))))) << num_workgroup)) : _GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)))), (_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5u, 0u + (5u)), (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), max((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))))) - 0u)), uint(5u)) : _GLF_FUZZED(read))) : _GLF_FUZZED(workgroup_size)))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u))))) / 1u))))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) | (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)))), uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))))) - 0u), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) ^ 0u))))) << num_workgroup)) : _GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)))), (_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5u, 0u + (5u)), (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), max((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))))) - 0u)), uint(5u)) : _GLF_FUZZED(read))) : _GLF_FUZZED(workgroup_size)))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u))))) / 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) | (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)))), uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))))) - 0u), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) ^ 0u))))) << num_workgroup)) : _GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)))), (_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5u, 0u + (5u)), (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), max((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))))) - 0u)), uint(5u)) : _GLF_FUZZED(read))) : _GLF_FUZZED(workgroup_size)))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u))))) / 1u))))), 0u ^ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) | (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u)))), uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))))) - 0u), (uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))) ^ 0u))))) << num_workgroup)) : _GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)))), (_GLF_IDENTITY((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))) - 0u)), uint(5u)), (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5u, 0u + (5u)), (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), max((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))), (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(81594u)))) | (5u))))) - 0u)), uint(5u)) : _GLF_FUZZED(read))) : _GLF_FUZZED(workgroup_size)))) ^ (0u)), 0u | ((max(virtual_gid, virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u))))) / 1u)))))))))], 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : virtual_gid))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), max(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), virtual_gid)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 1u, 0u), max(uvec4(virtual_gid, 1u, 1u, 0u), uvec4(virtual_gid, 1u, 1u, 0u)))))) | (0u | 0u)))), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_local_id))))), max(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), virtual_gid))))))))) - (19611u & 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))))))))))], (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), uint(uvec3(max(virtual_gid, virtual_gid), 0u, 0u)))), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), virtual_gid))), (clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), virtual_gid)))) ^ 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), virtual_gid)))))))))))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(max(virtual_gid, virtual_gid), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_local_id, min(workgroup_id, read), workgroup_size)) : max(virtual_gid, virtual_gid)))), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)), _GLF_IDENTITY(max(virtual_gid, virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, min(workgroup_id, read), workgroup_size)), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, min(workgroup_id, read), workgroup_size))) << _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) : max(virtual_gid, virtual_gid)))), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))))))))]) << 0u), 4, 64, 2)) / _GLF_IDENTITY(1u, 0u ^ (1u)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true))))) && true) && true)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))) && true)))), (injectionSwitch.x > injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5541.2202)), float(injectionSwitch.y), bool(true))))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5541.2202)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true))))) && true) && true)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, true, true)))) && true)))), (injectionSwitch.x > injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5541.2202)), float(injectionSwitch.y), bool(true))))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5541.2202)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))) && true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((_GLF_IDENTITY(false, true && (false)))))) && true))), ! (! (! (! (false)))))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true), true), false)))))))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4) * vec2(-0.5, -407.739))) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(float(injectionSwitch.y))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), max(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))))))), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))), sin(0.0), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.8)), bool(false))), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(1.0), 1.0, abs(0.0), cos(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * 1.0)), 0.0))).y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), bool(true))) > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(123.304)), float(injectionSwitch.y), bool(true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], read, _GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(ivec4(-14236, 49125, 64588, 37480).y))), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0))))) ^ (64))), 0 | (~ (_GLF_IDENTITY(64, 0 ^ (64))))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.y), bool(true)))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(log(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
