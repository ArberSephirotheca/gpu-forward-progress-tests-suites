#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid;
 uvec4 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid;
 uvec4 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec4 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread;
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gid;
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz = GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz = GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1757.4628)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.7, -813.315)) : injectionSwitch)))).x, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.7, -813.315)) : injectionSwitch)))).x, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), (true ? vec4(1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(1.4, -0.6, -74.34, 8263.1369))))), dot(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, sqrt(0.0), 1.0, sin(sin(0.0)), 1.0), (true ? mat3x2(0.0, 0.0, sqrt(0.0), 1.0, sin(sin(0.0)), 1.0) : _GLF_FUZZED((-6.6 / mat3x2(7.3, -806.099, -9.8, -2.0, 3.6, 8619.9257))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(length(vec3(-87.68, -27.13, -3.9))))), injectionSwitch[1])).y)))) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399)), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399)), min(true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399)), true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399)))), true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399)), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399)), (true ? injectionSwitch : _GLF_FUZZED(vec2(8.6, 224.399))) + vec2(0.0, 0.0)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z = GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || _GLF_IDENTITY(false, (false) && true))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.9)), vec2(_GLF_FUZZED(-5020.3846), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)), GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)).x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)), GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)).x) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)), GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)).x), ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)), GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)).x) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)), GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)).x)) / 1u));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z = _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(6.8)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), bool(true))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))) || false), _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (false ? _GLF_FUZZED(vec2(9153.1380, 71.84)) : vec2(injectionSwitch.x, 0.0)))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (false ? _GLF_FUZZED(vec2(9153.1380, 71.84)) : vec2(injectionSwitch.x, 0.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (false ? _GLF_FUZZED(vec2(9153.1380, 71.84)) : vec2(injectionSwitch.x, 0.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (false ? _GLF_FUZZED(vec2(9153.1380, 71.84)) : vec2(injectionSwitch.x, 0.0))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], cos(0.0), 1.0))))).y, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.x = GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8957.2099) : injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.3, -3.2)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false || (! (_GLF_DEAD(false))), (_GLF_IDENTITY(false || (! (_GLF_DEAD(false))), (false || (! (_GLF_DEAD(false)))) && true)) || false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y = GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.z = _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y, (_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y, (GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y) << 0u)) >> 0u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.z = _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x, (GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5721.2924))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1527.9066)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1527.9066)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1527.9066)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1527.9066)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))).y)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.z * GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z, ~ (~ (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z) ^ 0u), (false ? _GLF_FUZZED(GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y) : _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z) ^ 0u))), GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z)), (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z) ^ 0u)) | (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.z)) * GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / cos(vec2(0.0, 0.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / cos(vec2(0.0, 0.0))).y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / cos(vec2(0.0, 0.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / cos(vec2(0.0, 0.0))).y) || false))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / cos(vec2(0.0, 0.0))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / cos(vec2(0.0, 0.0))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.y = subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.y = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.y, (GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.xyz.y) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 uint virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(uvec4(82738u, 57826u, _GLF_IDENTITY(85762u, (85762u) * 1u), 55881u)) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid)))).y + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z;
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.w = virtual_gid;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idvirtual_gid.w;
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.z = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, false)), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, false)), false, true)), true))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))), ((bool(bvec2(false, true)))) && true)), false || (true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, true)))))))), ((bool(bvec2(false, true)))) && true))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))), _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), true, false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))), _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), true, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))), _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), true, false))), false), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false)) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (_GLF_IDENTITY(true, ! (! (true)))), false, false, true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))), true && (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))))))))) && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))) || false), false), true, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.w = GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.z;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)).z + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.y + ((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z + 1) % GLF_merged2_0_2_51_2_2_52GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x);
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.w = next_virtual_gid;
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.x = GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.w;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.x = GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.x, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.x = GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.x) * 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && _GLF_IDENTITY(((bool(_GLF_DEAD(false)))), true && (((bool(_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && _GLF_IDENTITY(((bool(_GLF_DEAD(false)))), true && (((bool(_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && _GLF_IDENTITY(((bool(_GLF_DEAD(false)))), true && (((bool(_GLF_DEAD(false))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && _GLF_IDENTITY(((bool(_GLF_DEAD(false)))), true && (((bool(_GLF_DEAD(false)))))))))))))))))), false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, abs(0.0), 1.0), transpose(transpose(mat2(injectionSwitch, abs(0.0), 1.0)))))).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, true, true))), false, true))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, true, true))), false, true))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! _GLF_IDENTITY((false), ((false)) || false)))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint read = _GLF_IDENTITY(0, int(int(0)));
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.w = read;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread, ~ (~ (GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread))).w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)))))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.x = GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidread.xyz.y;
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size, uvec3(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size[0], GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size[1], GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size[2])).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true) || false))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), true), false, true)))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x, 0u | (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x)), _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x)), 1u * (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)), _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz) | (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)), GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz))), (true ? uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid) | uvec4(0u, 0u, 0u, 0u)).xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_id)))).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, min(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x) | 0u))), clamp(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid)))).xyz, _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) + (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)).x, clamp(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)).x, _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) + _GLF_IDENTITY((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz), max((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz), (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)))).x, _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz, uvec3(0u, 0u, 0u) + (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)).x)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid)).xyz, uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) + (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz)).x)))))], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), clamp(_GLF_IDENTITY(64, int(int(64))), _GLF_IDENTITY(64, int(int(64))), _GLF_IDENTITY(64, int(int(64))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0)) * 1.0) / 1.0), (false ? _GLF_FUZZED(61.74) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(((injectionSwitch))[1], float(mat2x4(((injectionSwitch))[1], 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0)), float(vec4(float(mat2x4(_GLF_IDENTITY(((injectionSwitch))[1], float(mat2x4(((injectionSwitch))[1], 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0)), 1.0, 0.0, 1.0))))), vec2(_GLF_FUZZED(-3248.3168), _GLF_FUZZED(50.29)), bvec2(false, false))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0)), 1.0, abs(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0)), max(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0)), 1.0, abs(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) : _GLF_FUZZED(uintBitsToFloat(96396u)))), (injectionSwitch.x) / 1.0)) / 1.0)), 1.0, abs(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0))))))) * 1.0) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-3.1) : (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), float(vec4((injectionSwitch.x), 0.0, 0.0, 1.0))))) / 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))) / 1.0)) / 1.0), 0.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : determinant(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -899.326))), float(0.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (0.0) / 1.0)) / 1.0), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(56.69)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))), 1.0, 0.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), abs(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), abs(1.0)))) + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((false ? injectionSwitch : vec2(6.0, 951.462))) : injectionSwitch)).y), false || (bool(injectionSwitch.x > injectionSwitch.y))), true, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), true && ((bool(injectionSwitch.x > injectionSwitch.y)))), false || (false || _GLF_IDENTITY(_GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(injectionSwitch.x > injectionSwitch.y))))), true && ((bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), true && ((bool(injectionSwitch.x > injectionSwitch.y)))), false || (false || _GLF_IDENTITY(_GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(injectionSwitch.x > injectionSwitch.y))))), true && ((bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), true && ((bool(injectionSwitch.x > injectionSwitch.y)))), false || (false || _GLF_IDENTITY(_GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(injectionSwitch.x > injectionSwitch.y))))), true && ((bool(injectionSwitch.x > injectionSwitch.y))))))) && true), false, true, false)))), true, true))), true && (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || (bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), false || (false || (bool(injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), false || (false || (bool(injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), false || (false || (bool(injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), false || (false || (bool(injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), false || (false || (bool(injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && true)), false || (false || (bool(injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), true && (false || (bool(injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || false))))))))), true, true)))))), false || ((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))))), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), true && ((bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && ((bool(injectionSwitch.x > injectionSwitch.y)))))))), true, true))), true && (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false || (bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(false || (bool(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), true, false))))))))))), true, true))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.8) : 1.0)), 1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0), determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-673.564))), 1.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(degrees(-5.5)))), 0.0)), 0.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0)))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, cos(0.0)))))) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false))))), true, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(vec2(0.0, 77.77).g), _GLF_FUZZED(3548.5377)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))))), 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(vec2(0.0, 77.77).g), _GLF_FUZZED(3548.5377)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))))), 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0))).y), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))))), false, false))) || (bool(injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_IDENTITY(bool(bool(! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true)))), true, true))))), bool(bvec4(bool(bool(! (bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), true, true))))), false, false, true)))), true && (! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))) || false), (false || _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), ((bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), mix(float(_GLF_FUZZED(-766.314)), float(_GLF_FUZZED(-0.9)), bool(true)))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))) || false)) && true)), _GLF_IDENTITY(true, false || (true)), true))))))))))))))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2), max(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2), ((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2)) >> 0u), (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2)))) | ((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2))) - 0u)) + 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid) >> uvec4(0u, 0u, 0u, 0u)).z % 2, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2) - 0u)) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2) - 0u)) + 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2) - 0u)) + 0u) >> 0u)) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) == 0, false || ((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.z % 2) == 0)))
  {
   GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.y = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)).w], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4643.5057)), bool(false))))))))) && true))), false)))))
    return;
   GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.y = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.w], _GLF_IDENTITY(0u, (0u) | (0u)) ^ (buf[GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.w])), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) ^ 0)) >> (76535 & 0)), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_11num_workgroupsubgroup_basesubgroup_local_idvirtual_gid.w], GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadsubgroup_idnext_virtual_gid.xyz.y, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
