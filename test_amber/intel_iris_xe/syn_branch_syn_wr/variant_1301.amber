#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 uvec2 _f0;
 uint _f1;
 mat2x3 _f2;
 uvec2 _f3;
 bvec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 uint _f1;
 mat4x3 _f2;
 uvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 ivec2 _f1;
 vec4 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_20 {
 ivec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_18 {
 mat4 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 mat4 _f3;
 uvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
} ;

struct _GLF_struct_16 {
 int _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 _GLF_struct_16 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 _GLF_struct_17 _f1;
 uint next_virtual_gid;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_23 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
} ;

struct _GLF_struct_11 {
 float _f0;
 ivec4 _f1;
 mat3x4 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 float _f1;
 bvec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 uvec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 mat3 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat3 _f1;
 ivec4 _f2;
 mat3x2 _f3;
 ivec3 _f4;
 bvec3 _f5;
 uint _f6;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_5 {
 int _f0;
 vec4 _f1;
 bvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_8 {
 bool _f0;
 bvec2 _f1;
 vec4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 mat4x2 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uvec4 _f1;
 bvec4 _f2;
 vec2 _f3;
 mat4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_0 {
 float _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 mat4 _f4;
 int _f5;
 uint _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 vec4 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_4 _f0;
 mat2x4 _f1;
 uint subgroup_base;
 int _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_14 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) || false)), true, false, false))), true))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || false))), true && ((bool(_GLF_IDENTITY(false, (false) || false)))))))) || _GLF_IDENTITY(false, true && (false))), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), (bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))) && true))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, false || (false))) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), (false) || _GLF_IDENTITY(false, ! (! (false))))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false))))))))))), (_GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! _GLF_IDENTITY((bool(false)), ! (_GLF_IDENTITY(! ((bool(false))), false || (! ((bool(false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY(! (! (bool(false))), (! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bool(! (bool(false))), ! (! _GLF_IDENTITY((bool(! (bool(false)))), ! (_GLF_IDENTITY(! ((bool(! (bool(false))))), bool(bvec3(! ((bool(! (bool(false))))), false, true))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bool(! (bool(false))), ! (! (bool(! (bool(false)))))))), false), true, false))))))) || false))) && true)))) || false))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (bool(false))))))) || false))), bool(bvec4((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (bool(false))))))) || false))), true, false, false)))))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, ! (! (false))))))), true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, false || (true))), true)))))))))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), bool(bvec3(! (! (bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ((false) || false) || false))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))))), ! (! ((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), true))), false, true))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true)))))))))), ! (! (_GLF_IDENTITY((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ((false) || false) || false))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(_GLF_FUZZED(38.58)), float(float(float(injectionSwitch.x))), bool(true)))) < injectionSwitch.y)), true))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))))), ! (! ((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true && (bool(bvec2(false, false))), false || (true && (bool(bvec2(false, false))))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)))))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)))))), _GLF_IDENTITY((false) || false, ((false) || false) || false)))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)))))), _GLF_IDENTITY((false) || false, ((false) || false) || false))))))))), true))), false, true))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED((false ? 5.6 : 7.3))), bool(false))))).y)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))))))))))))), bool(bvec3((_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, false || (true))), true)))))))))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), bool(bvec3(! (! (bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ((false) || false) || false))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))))), ! (! ((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), true))), false, true))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true)))))))))), ! (! (_GLF_IDENTITY((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ((false) || false) || false))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(_GLF_FUZZED(38.58)), float(float(float(injectionSwitch.x))), bool(true)))) < injectionSwitch.y)), true))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))))), ! (! ((! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true && (bool(bvec2(false, false))), false || (true && (bool(bvec2(false, false))))))) && true))), (! (false)) && true))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)))))), _GLF_IDENTITY((false) || false, ((false) || false) || false))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)))))), _GLF_IDENTITY((false) || false, ((false) || false) || false)))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)))) && true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true))), (! (false)) && true)))))), _GLF_IDENTITY((false) || false, ((false) || false) || false))))))))), true))), false, true))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED((false ? 5.6 : 7.3))), bool(false))))).y)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))) || false), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, ! (! (false))))), true))))))))))))))), true, true))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_4(_GLF_struct_0(1.0, mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))) : _GLF_FUZZED(5.0))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) : _GLF_FUZZED(5.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(5.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(5.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)), (true ? clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)) : _GLF_FUZZED(-915.368))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)), (true ? clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)) : _GLF_FUZZED(-915.368))), (true ? _GLF_IDENTITY(clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)), (true ? clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)) : _GLF_FUZZED(-915.368))) : _GLF_FUZZED(-2.0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)), (true ? clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)) : _GLF_FUZZED(-915.368))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)), (true ? clamp(_GLF_FUZZED(5.0), _GLF_FUZZED(5.0), _GLF_FUZZED(5.0)) : _GLF_FUZZED(-915.368)))), bool(true)))))) : _GLF_FUZZED(_GLF_IDENTITY(-4.5, max(-4.5, -4.5))))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5.0, min(5.0, 5.0)))))))), mat2x3(1.0), bvec4(_GLF_IDENTITY(true, ! (! (true)))), mat4(1.0), 1, 1u), _GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0)), _GLF_struct_1(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) << _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) | (uvec2(0u, 0u)))), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), bvec4(true), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec2(-4642.7105), vec2(4373.9357, 766.796)))))), mat4(1.0), mat4(1.0)), _GLF_struct_2(1u, mat2(1.0)), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(max(vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), mix(vec4((vec4(932.808, 28.60, -16.86, -704.704))[0], (vec4(932.808, 28.60, -16.86, -704.704))[1], (vec4(932.808, 28.60, -16.86, -704.704))[2], (vec4(932.808, 28.60, -16.86, -704.704))[3]), vec4(_GLF_IDENTITY(_GLF_FUZZED((9209.6179)), max(_GLF_IDENTITY(_GLF_FUZZED((9209.6179)), min(_GLF_FUZZED((9209.6179)), _GLF_FUZZED((9209.6179)))), _GLF_FUZZED((9209.6179)))), _GLF_FUZZED(9071.9788), _GLF_FUZZED(4.2), _GLF_FUZZED(-29.25)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) : vec4(1.0)))), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5412.0928)), bool(false))), 1.0)), 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5660.0028) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0) * (max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), mix(vec4((vec4(932.808, 28.60, -16.86, -704.704))[0], (vec4(932.808, 28.60, -16.86, -704.704))[1], (vec4(932.808, 28.60, -16.86, -704.704))[2], (vec4(932.808, _GLF_IDENTITY(28.60, 1.0 * (28.60)), -16.86, -704.704))[3]), vec4(_GLF_FUZZED((9209.6179)), _GLF_FUZZED(9071.9788), _GLF_FUZZED(4.2), _GLF_FUZZED(-29.25)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), (true ? _GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), mix(vec4((vec4(932.808, 28.60, -16.86, -704.704))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))], (vec4(932.808, 28.60, -16.86, -704.704))[1], (vec4(932.808, 28.60, -16.86, -704.704))[2], (_GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), max(vec4(932.808, 28.60, -16.86, -704.704), vec4(932.808, 28.60, -16.86, -704.704))))[3]), vec4(_GLF_FUZZED((9209.6179)), _GLF_FUZZED(9071.9788), _GLF_FUZZED(4.2), _GLF_FUZZED(-29.25)), bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false)), false || (bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false)))))) && true)), false, false, false))) : _GLF_FUZZED(vec4(7.4, -218.937, 6419.8839, -9.0)))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), mix(vec4((vec4(932.808, 28.60, -16.86, -704.704))[0], (vec4(932.808, 28.60, -16.86, -704.704))[1], (vec4(932.808, 28.60, -16.86, -704.704))[2], (vec4(932.808, _GLF_IDENTITY(28.60, 1.0 * (28.60)), -16.86, -704.704))[3]), vec4(_GLF_FUZZED((9209.6179)), _GLF_FUZZED(9071.9788), _GLF_FUZZED(4.2), _GLF_FUZZED(-29.25)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), (true ? _GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), mix(vec4((vec4(932.808, 28.60, -16.86, -704.704))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))], (vec4(932.808, 28.60, -16.86, -704.704))[1], (vec4(932.808, 28.60, -16.86, -704.704))[2], (_GLF_IDENTITY(vec4(932.808, 28.60, -16.86, -704.704), max(vec4(932.808, 28.60, -16.86, -704.704), vec4(932.808, 28.60, -16.86, -704.704))))[3]), vec4(_GLF_FUZZED((9209.6179)), _GLF_FUZZED(9071.9788), _GLF_FUZZED(4.2), _GLF_FUZZED(-29.25)), bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false)), false || (bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false)))))) && true)), false, false, false))) : _GLF_FUZZED(vec4(7.4, -218.937, 6419.8839, -9.0))))))) : vec4(1.0)))))), max(max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(_GLF_IDENTITY(932.808, mix(float(_GLF_FUZZED((9337.7456 / 4653.2522))), float(932.808), bool(true))), 28.60, -16.86, -704.704)), max(_GLF_FUZZED(vec4(_GLF_IDENTITY(932.808, mix(float(_GLF_FUZZED((9337.7456 / 4653.2522))), float(932.808), bool(true))), 28.60, -16.86, -704.704)), _GLF_IDENTITY(_GLF_FUZZED(vec4(_GLF_IDENTITY(932.808, mix(float(_GLF_FUZZED((9337.7456 / 4653.2522))), float(932.808), bool(true))), 28.60, -16.86, -704.704)), (_GLF_FUZZED(vec4(_GLF_IDENTITY(932.808, mix(float(_GLF_FUZZED((9337.7456 / 4653.2522))), float(932.808), bool(true))), 28.60, -16.86, -704.704))) * mat4(1.0)))) : vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0)), ((false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(932.808, _GLF_IDENTITY(28.60, clamp(28.60, _GLF_IDENTITY(28.60, mix(float(28.60), float(_GLF_FUZZED(-983.411)), bool(false))), 28.60)), -16.86, -704.704)) : vec4(1.0)), ((false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(normalize(vec4(-536.212, 8588.8521, 28.05, 1.1))))) * mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0)) * mat4(1.0), (false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0)) * mat4(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0)) * mat4(1.0), min((false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (_GLF_IDENTITY(transpose(mat4(1.0)), (true ? transpose(mat4(1.0)) : _GLF_FUZZED(mat4(4921.8070, -10.86, -43.57, -6.6, -8379.7721, -9.8, -267.942, -6368.0641, 5.0, 7.6, -2.9, 65.94, -2.5, 6.9, 4.6, -427.258))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, -704.704)) : vec4(1.0)) * mat4(1.0), ((false ? _GLF_FUZZED(vec4(932.808, 28.60, -16.86, _GLF_IDENTITY(-704.704, clamp(-704.704, -704.704, -704.704)))) : vec4(1.0)) * mat4(1.0)) * mat4(1.0)))))))))), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(932.808, 28.60, _GLF_IDENTITY(-16.86, clamp(_GLF_IDENTITY(-16.86, max(_GLF_IDENTITY(-16.86, (true ? -16.86 : _GLF_FUZZED(198.230))), -16.86)), -16.86, _GLF_IDENTITY(-16.86, (-16.86) / 1.0))), _GLF_IDENTITY(-704.704, (-704.704) - 0.0))) : vec4(1.0))))))), _GLF_struct_3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (true))))))), mat2x4(1.0), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) ^ 0u)) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) : _GLF_FUZZED((false ? subgroup_local_id : 195564u))))) * subgroup_size, 1, _GLF_struct_8(true, bvec2(true), _GLF_IDENTITY(vec4(1.0), min(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-226.931), (vec4(1.0))[1], _GLF_FUZZED(-5527.8236), _GLF_FUZZED(79.32)), vec4((vec4(1.0))[0], _GLF_FUZZED(-7.6), (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(true, false, true, true))))), _GLF_struct_5(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))), (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), _GLF_IDENTITY(int(ivec3(~ (~ (~ (1))), 0, 0)), max(int(ivec3(~ (~ (~ (1))), 0, 0)), int(ivec3(~ (~ (~ (1))), 0, 0)))))))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))), vec4(1.0), bvec2(true), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), clamp((ivec3(1)) << ivec3(0, 0, 0), (ivec3(1)) << ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), ((ivec3(1)) << ivec3(0, 0, 0)) | (_GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), (true ? (ivec3(1)) << ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(-55462, -21526, 52104))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), (false ? _GLF_FUZZED((ivec3(-7259, _GLF_IDENTITY(-91621, int(ivec4(-91621, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0))), 78785) / ivec3(-4349, -86593, -86505))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(95479, 1796, -56932))))) | (ivec3(1))), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))))))), clamp(max(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), clamp((ivec3(1)) << ivec3(0, 0, 0), (ivec3(1)) << ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), ((ivec3(1)) << ivec3(0, 0, 0)) | (_GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), (true ? (ivec3(1)) << ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(-55462, -21526, 52104))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), (false ? _GLF_FUZZED((ivec3(-7259, _GLF_IDENTITY(-91621, int(ivec4(-91621, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0))), 78785) / ivec3(-4349, -86593, -86505))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(95479, 1796, -56932))))) | (ivec3(1))), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))))))), max(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), clamp((ivec3(1)) << ivec3(0, 0, 0), (ivec3(1)) << ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), ((ivec3(1)) << ivec3(0, 0, 0)) | (_GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), (true ? (ivec3(1)) << ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(-55462, -21526, 52104))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), (false ? _GLF_FUZZED((ivec3(-7259, _GLF_IDENTITY(-91621, int(ivec4(-91621, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0))), 78785) / ivec3(-4349, -86593, -86505))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(95479, 1796, -56932))))) | (ivec3(1))), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), clamp((ivec3(1)) << ivec3(0, 0, 0), (ivec3(1)) << ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), ((ivec3(1)) << ivec3(0, 0, 0)) | (_GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), (true ? (ivec3(1)) << ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(-55462, -21526, 52104))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), (false ? _GLF_FUZZED((ivec3(-7259, _GLF_IDENTITY(-91621, int(ivec4(-91621, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0))), 78785) / ivec3(-4349, -86593, -86505))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(95479, 1796, -56932))))) | (ivec3(1))), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))))))), (false ? _GLF_FUZZED(ivec3(-25203, -29134, -78659)) : max(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), clamp((ivec3(1)) << ivec3(0, 0, 0), (ivec3(1)) << ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), ((ivec3(1)) << ivec3(0, 0, 0)) | (_GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), (true ? (ivec3(1)) << ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(-55462, -21526, 52104))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), (false ? _GLF_FUZZED((ivec3(-7259, _GLF_IDENTITY(-91621, int(ivec4(-91621, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0))), 78785) / ivec3(-4349, -86593, -86505))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(95479, 1796, -56932))))) | (ivec3(1))), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))))))))))))), _GLF_struct_6(bvec3(true), mat2x3(1.0), mat4x2(1.0), mat2x3(1.0), vec2(1.0)), mat4x2(1.0), _GLF_struct_7(mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(1.0, 1.0) * (normalize(vec2(1.0, 1.0)))))) + 0.0))) + 0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(-5115.1839)), bool(false)))))), mat3(1.0), ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), ~ (~ (_GLF_IDENTITY(min(1, 1), 1 * (min(1, 1))))))), 1)), 1))), mat3x2(1.0), ivec3(1), bvec3(true), 1u)), _GLF_struct_14(_GLF_struct_9(mat2x4(1.0), uvec2(1u), mat2x3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))), (_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(587.499, 60.10, 850.863, -1.3, 0.8, -79.97, 8.3, 9.9, -9.3))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(82.52), _GLF_FUZZED(3376.2268)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_10(mat4(1.0), 1.0, bvec4(true), mat4(1.0)), _GLF_struct_11(1.0, ivec4(1), mat3x4(1.0), ivec3(1), uvec2(1u)), _GLF_struct_12(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), (_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0))) - 0.0))), _GLF_struct_13(mat2(1.0))), mat4x2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))), false, false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true)))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false)), false)), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, (workgroup_base + _GLF_struct_replacement_15.subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 0u | (workgroup_base + _GLF_struct_replacement_15.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, min(workgroup_base + _GLF_struct_replacement_15.subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u * (workgroup_base + _GLF_struct_replacement_15.subgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, min(workgroup_base + _GLF_struct_replacement_15.subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u * (workgroup_base + _GLF_struct_replacement_15.subgroup_base)))), (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, min(workgroup_base + _GLF_struct_replacement_15.subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u * (workgroup_base + _GLF_struct_replacement_15.subgroup_base))))) >> 0u), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, min(workgroup_base + _GLF_struct_replacement_15.subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u * (workgroup_base + _GLF_struct_replacement_15.subgroup_base)))))), uint(uvec2(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, min(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, (workgroup_base + _GLF_struct_replacement_15.subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u * (workgroup_base + _GLF_struct_replacement_15.subgroup_base)))), uint(uvec2(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, min(workgroup_base + _GLF_struct_replacement_15.subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u * (workgroup_base + _GLF_struct_replacement_15.subgroup_base)))), uint(uvec2(workgroup_base + _GLF_struct_replacement_15.subgroup_base, 1u))))), workgroup_base + _GLF_struct_replacement_15.subgroup_base)), workgroup_base + _GLF_struct_replacement_15.subgroup_base, workgroup_base + _GLF_struct_replacement_15.subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false))))))
  barrier();
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_struct_17(uvec2(1u), _GLF_struct_16(1, mat3x4(1.0)), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((1) | 0, ~ _GLF_IDENTITY((~ ((1) | 0)), (_GLF_IDENTITY((~ ((1) | 0)), (false ? _GLF_FUZZED(99806) : (~ ((1) | 0))))) >> 0))))), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_15.subgroup_base, (_GLF_struct_replacement_15.subgroup_base) / 1u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)))) ^ 0u)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_local_id)))), ((subgroup_local_id + 1)) ^ 0u)) << 0u)), (true ? ~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)) << 0u)) : _GLF_FUZZED(subgroup_size))))) % subgroup_size), _GLF_struct_19(_GLF_struct_18(mat4(1.0), mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec4(1u), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-81.06, -49.69, 1794.9250, 8.9, -8950.9173, 4.6, 0.1, -9719.6517, -957.423, -3.6, -9.4, _GLF_IDENTITY(-242.760, float(float(-242.760))), 629.192, 7.8, 514.393, -8.8)) : mat4(1.0))) * (mat4(1.0))), uvec3(1u), mat4x2(1.0))), _GLF_struct_20(ivec2(1), vec3(1.0)), _GLF_struct_23(uvec3(1u), ivec2(1), vec4(1.0), _GLF_struct_21(mat2x3(1.0), 1u, mat4x3(1.0), uvec4(1u), vec4(1.0)), _GLF_struct_22(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | 0u)), (uvec2(1u)) | (uvec2(1u))), 1u, mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2763.0155) : 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.9) : 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81.66) : _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-1.1)), _GLF_IDENTITY(bool(false), false || (bool(false))))))))), uvec2(1u), bvec4(true), uvec3(1u))), mat2x4(_GLF_IDENTITY(1.0, (1.0) * 1.0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(1.5, 7621.7524, 42.99, -3138.9730).x), _GLF_FUZZED(242.555)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))), true && (bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))))))))))))
    return;
   barrier();
  }
 uint read = _GLF_IDENTITY(0, (0) - 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_24.next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (4) | 0), 1, 0, (1 | 0))), clamp(int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)) | 0, ((4) | 0) | 0)), 1, 0, (1 | 0))), int(ivec4(_GLF_IDENTITY(4, (4) | 0), 1, 0, (1 | 0))), int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))), (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) ^ 0)) | 0), 1, 0, (1 | 0)))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4))))) | 0), 64, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) << 0)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0)], 0.0 + (injectionSwitch[1])), injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
