#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-277.267)), bool(false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-277.267)), bool(false))))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec2(0.0, 0.0))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0)))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0)), abs(0.0), 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)), (true ? vec2(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0)), abs(0.0), 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(vec2(-2.2, -2.7)))), max(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0)), abs(0.0), 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)), (true ? vec2(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0)), abs(0.0), 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(vec2(-2.2, -2.7)))), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0)), abs(0.0), 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)), (true ? vec2(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0)), abs(0.0), 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(vec2(-2.2, -2.7))))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x) - length(vec2(0.0, 0.0))) > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.15)), bool(false)), (false ? _GLF_FUZZED((-5.6 - -2.9)) : _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.15)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.15)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.15)), bool(false))))))) > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-175.932)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.7)))), bool(true))))) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))), false))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))), false))))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false)), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))), false))))), true))))))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(-41.23), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))) && true))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? 48.53 : -6.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.91), _GLF_FUZZED(49.29)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)))), false), false, false)))))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))), false), false))))))))))), true)))))))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))))), vec2(mat2x3(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))))), 1.0, 0.0, 1.0, 1.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(! (! (! ((false)))), (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(! (! (! ((false)))), (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(! (! (! ((false)))), (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6452.6568), _GLF_FUZZED(9989.2500)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6452.6568), _GLF_FUZZED(9989.2500)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6452.6568), _GLF_FUZZED(9989.2500)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6452.6568), _GLF_FUZZED(9989.2500)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true)))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(-5.4, -269.772, 3.8), float(mat4x3(_GLF_IDENTITY(smoothstep(-5.4, -269.772, 3.8), _GLF_IDENTITY(float(vec3(smoothstep(-5.4, -269.772, 3.8), 0.0, 1.0)), mix(float(float(vec3(smoothstep(-5.4, -269.772, 3.8), 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(false)))), cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(0.0), 1.0, tan(0.0), 0.0))))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(smoothstep(-5.4, -269.772, 3.8))) : injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, 0u ^ ((workgroup_base + subgroup_base) ^ 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)), min(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec2(35652u, 147929u)) : uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * 1u)) - 0u)) ^ 0u)))), min(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)) ^ 0u, (true ? ((workgroup_base + subgroup_base)) ^ 0u : _GLF_FUZZED(num_workgroup)))) ^ 0u, (true ? _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, clamp(_GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, ((workgroup_base + subgroup_base) ^ 0u) | 0u), _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, max((workgroup_base + subgroup_base) ^ 0u, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base) ^ 0u)), _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, max((workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) ^ 0u, (workgroup_base + subgroup_base) ^ 0u)))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), workgroup_base + subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))))))), workgroup_base + subgroup_base), _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u))), min((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u))))) << 0u)), 0u | ((_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))), ((uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)) * (uvec3(workgroup_base + subgroup_base, 1u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) >> 0u)), 1u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))), workgroup_base + subgroup_base), (max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), uint(8u)))))), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u))) << 0u)))) | (max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base) ^ _GLF_IDENTITY(0u, 0u | (0u)))))))), 0u ^ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) * 1u)), ((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) * 1u))) ^ 0u)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) * 1u)) * 1u)), min(~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) * 1u)) * 1u)), ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) * 1u)) * 1u))))) + subgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) * 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (_GLF_IDENTITY((~ (workgroup_base)) * 1u, min(_GLF_IDENTITY((~ (workgroup_base)) * 1u, clamp((~ (workgroup_base)) * 1u, (~ (workgroup_base)) * 1u, (~ (workgroup_base)) * 1u)), (~ (workgroup_base)) * 1u))))))) + subgroup_base))) ^ 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 0u ^ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), min(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec2((subgroup_base), 0u)), min(uint(uvec2((subgroup_base), 0u)), uint(uvec2((subgroup_base), 0u))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) * 1u)) ^ _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 0u ^ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), min(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec2((subgroup_base), 0u)), min(uint(uvec2((subgroup_base), 0u)), uint(uvec2((subgroup_base), 0u))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) * 1u)) ^ _GLF_IDENTITY(0u, (0u) - 0u)))), (false ? _GLF_FUZZED(subgroup_id) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 0u ^ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), min(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec2((subgroup_base), 0u)), min(uint(uvec2((subgroup_base), 0u)), uint(uvec2((subgroup_base), 0u))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) * 1u)) ^ _GLF_IDENTITY(0u, (0u) - 0u))))))) | 0u) << 0u))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), mix(float(float(vec2(injectionSwitch.y, 0.0))), float(_GLF_FUZZED(421.490)), bool(false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | ((subgroup_local_id % 2))))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.y) - 0.0))), sqrt(1.0) * (injectionSwitch.y))), (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), sqrt(1.0) * (injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) || false))) && _GLF_IDENTITY(true, true && (true)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))), mix(float(_GLF_FUZZED(-1.6)), float(float(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), bool(true))))), injectionSwitch[1])), (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-6718.0543), _GLF_FUZZED(27.11)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, exp(0.0), sqrt(0.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 0.0, 0.0, 1.0, exp(0.0), sqrt(0.0))))))))) / vec2(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) / exp(_GLF_ZERO(0.0, injectionSwitch.x))), 1.0)) - vec2(0.0, _GLF_IDENTITY(0.0, float(float(0.0)))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-38.76)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y))), false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false)))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec4(false, false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(exp(-6.4))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(sinh(exp(-6.4)), (true ? sinh(exp(-6.4)) : _GLF_FUZZED(20.34)))))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(exp(-6.4))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(exp(-6.4))))) > injectionSwitch.y))))))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), max(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))))], min(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), max(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))))], buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), max(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))))])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), virtual_gid))]))) >> 0u), 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? uvec3(virtual_gid, 0u, 1u) : _GLF_FUZZED(uvec3(65937u, 17841u, 139020u)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u))), (virtual_gid) / 1u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? uvec3(virtual_gid, 0u, 1u) : _GLF_FUZZED(uvec3(65937u, 17841u, 139020u)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u))), (virtual_gid) / 1u)))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))) >> 0u), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))) >> 0u)))) / 1u)), min(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(subgroup_size, _GLF_IDENTITY(65445, _GLF_IDENTITY(_GLF_IDENTITY((65445), ~ (~ (_GLF_IDENTITY((65445), ((65445)) | ((65445)))))) | (_GLF_IDENTITY(65445, ~ _GLF_IDENTITY((~ (65445)), max((~ (65445)), _GLF_IDENTITY((~ (65445)), 0 | ((~ (65445)))))))), ((65445) | (_GLF_IDENTITY(65445, ~ (~ (65445))))) >> (0 | 0))), (98777 ^ _GLF_IDENTITY(-46682, 0 | (-46682))))) : virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) + 0u) | (1u)), 1u)), (uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)), 1u))) | (uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (true ? uvec3(virtual_gid, 0u, 1u) : _GLF_FUZZED(uvec3(65937u, 17841u, _GLF_IDENTITY(139020u, (_GLF_IDENTITY(139020u, (139020u) * 1u)) | (139020u)))))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((virtual_gid) / 1u, (true ? _GLF_IDENTITY((virtual_gid) / 1u, 1u * (_GLF_IDENTITY((virtual_gid) / 1u, ((virtual_gid) / 1u) ^ 0u))) : _GLF_FUZZED(read))))) - 0u), min(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(650.437)), bool(false))))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(subgroup_size, _GLF_IDENTITY(65445, (65445) | (_GLF_IDENTITY(65445, ~ (~ (65445))))), (98777 ^ _GLF_IDENTITY(-46682, 0 | (-46682))))) : virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), (uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)), 1u))) | (uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)), 1u))))))))))))], _GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY((read) >> 0u, max((read) >> 0u, (read) >> 0u))), (_GLF_IDENTITY(read, (read) >> 0u)) << _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
