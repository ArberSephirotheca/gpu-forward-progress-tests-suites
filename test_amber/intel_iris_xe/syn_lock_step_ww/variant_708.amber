#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id;
 for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | 0)), (0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | 0))) | (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | 0)), max(0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | 0)), 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | 0)))))))), _GLF_IDENTITY(int(2), (int(2)) + 0))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), min(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-15699) : int(6))), int(6))))), 0 | (_GLF_IDENTITY(int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 1 * (int(6))))), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) << (0 & 20850)), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) | 0), int(6))))))))), (_GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), min(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-15699) : int(6))), int(6))))), 0 | (_GLF_IDENTITY(int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 1 * (int(6))))), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) << (0 & 20850)), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) | 0), int(6)))))))))) | (_GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), min(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-15699) : int(6))), int(6))))), 0 | (_GLF_IDENTITY(int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 1 * (int(6))))), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) << (0 & 20850)), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) | 0), int(6)))))))))))))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), min(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-15699) : int(6))), int(6))))), 0 | (_GLF_IDENTITY(int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 1 * (int(6))))), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) << (0 & 20850)), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) | 0), int(6))))))))), (_GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), min(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-15699) : int(6))), int(6))))), 0 | (_GLF_IDENTITY(int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 1 * (int(6))))), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) << (0 & 20850)), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) | 0), int(6)))))))))) | (_GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), min(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) >> 0) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-15699) : int(6))), int(6))))), 0 | (_GLF_IDENTITY(int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(int(6), 1, 0, 0))))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(0, ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 1 * (int(6))))), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) << (0 & 20850)), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) | 0), int(6)))))))))))))), false, true, false))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5734.3953)), vec2(_GLF_FUZZED(7.1), ((injectionSwitch))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_IDENTITY(false, (false) || false), true))) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5734.3953)), vec2(_GLF_FUZZED(7.1), ((injectionSwitch))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_IDENTITY(false, (false) || false), true))) * vec2(1.0, 1.0)).x) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      continue;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.y = num_workgroup;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(14.91)), vec2((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[1], ((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[1]) / 1.0)), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED((+ -3.7)), (vec2(0.0, 1.0))[1]), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], 1.0 * (_GLF_IDENTITY((vec2(0.0, 1.0))[0], ((vec2(0.0, 1.0))[0]) / 1.0))), _GLF_FUZZED(7641.3437)), bvec2(true, false)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec3(vec2(0.0, 1.0), 0.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(mat3(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))) : _GLF_FUZZED(vec2(-40.61, -35.23))))) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(14.91)), vec2((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[1], ((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[1]) / 1.0)), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED((+ -3.7)), (vec2(0.0, 1.0))[1]), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], 1.0 * (_GLF_IDENTITY((vec2(0.0, 1.0))[0], ((vec2(0.0, 1.0))[0]) / 1.0))), _GLF_FUZZED(7641.3437)), bvec2(true, false)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec3(vec2(0.0, 1.0), 0.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(mat3(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))) : _GLF_FUZZED(vec2(-40.61, -35.23))))) + vec2(0.0, 0.0)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(14.91)), vec2((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[1], ((vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))[1]) / 1.0)), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED((+ -3.7)), (vec2(0.0, 1.0))[1]), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], 1.0 * (_GLF_IDENTITY((vec2(0.0, 1.0))[0], ((vec2(0.0, 1.0))[0]) / 1.0))), _GLF_FUZZED(7641.3437)), bvec2(true, false)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), clamp(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec3(vec2(0.0, 1.0), 0.0)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(mat3(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0))))))) : _GLF_FUZZED(vec2(-40.61, -35.23))))) + vec2(0.0, 0.0)).y)))))))))
      continue;
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))
        continue;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.z = workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.z = workgroup_size));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.z = workgroup_id;
    }
  }
 uint workgroup_base = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.z * GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.z;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y) | 0u)) << 0u), min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y) | 0u)) << 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y, (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.y) | 0u)) << 0u)))))) * (1u | 1u))) / 1u) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.x = subgroup_base;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1871.9958)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))) / 1.0), injectionSwitch[1])).x), float(_GLF_FUZZED(-9.0)), bool(false)))), bool(true))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1871.9958)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))) / 1.0), injectionSwitch[1])).x), float(_GLF_FUZZED(-9.0)), bool(false)))), bool(true))) > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1871.9958)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))) / 1.0), injectionSwitch[1])).x), float(_GLF_FUZZED(-9.0)), bool(false)))), bool(true))) > injectionSwitch.y)), false))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), max((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), workgroup_base)), workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), clamp(clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))), clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))))) + _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, clamp(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, clamp(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id)))).x, (true ? GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.x : _GLF_FUZZED(56805u)))))), max(workgroup_base + GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.x, _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.x, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id.x)))) + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))) | (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 85430)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))) | 0) : _GLF_FUZZED(_injected_loop_counter)), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))) ^ ((true ? _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))) | 0) : _GLF_FUZZED(_injected_loop_counter))))), _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), true && ((false)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id) / uvec2(1u, 1u)), (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id) << uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, uvec2(1u, 1u) * (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id))) / uvec2(1u, 1u), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, uvec2(1u, 1u) * (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id))) / uvec2(1u, 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, uvec2(1u, 1u) * (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id))) / uvec2(1u, 1u), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id, uvec2(1u, 1u) * (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id))) / uvec2(1u, 1u)) - uvec2(0u, 0u))))), (GLF_merged2_0_1_13_1_1_11subgroup_basesubgroup_id) << uvec2(0u, 0u))) + uvec2(0u, 0u)).x + (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1) % subgroup_size, ((GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1) % subgroup_size) << 0u));
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.x = next_virtual_gid;
 do
  {
   atomicStore(buf[GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), uint(uvec4(uint(1), 1u, 1u, 0u))), _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(64, (64) | (64)), 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) || false))))))), true, false))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) && true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (true), ! (! (false || (true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     do
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(mix(-8152, mix(-37536, 12992, false), false)) : _GLF_IDENTITY(6, int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(false ? _GLF_FUZZED(mix(-8152, mix(-37536, 12992, false), false)) : _GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)), (_GLF_IDENTITY(int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)), (true ? int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)) : _GLF_FUZZED(-77527)))) << 0)), min(false ? _GLF_FUZZED(mix(-8152, mix(-37536, 12992, false), false)) : _GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)), (_GLF_IDENTITY(int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)), (true ? int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)) : _GLF_FUZZED(-77527)))) << 0)), false ? _GLF_FUZZED(mix(-8152, mix(-37536, 12992, false), false)) : _GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)), (_GLF_IDENTITY(int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)), (true ? int(ivec4(6, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)) : _GLF_FUZZED(-77527)))) << 0))))))))))) / ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 0, 1))))) >> _GLF_IDENTITY(int(5), int(5)))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) | 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 1), ~ (~ (ivec3((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(0, (0) << 0), 1)))))), max((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(_GLF_IDENTITY(6, (6) << 0)), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(int(_GLF_IDENTITY(int(6), (int(6)) | (int(6))))))), ~ (~ (1 << _GLF_IDENTITY(int(6), int(6)))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), int(ivec3(_GLF_IDENTITY(int(6), min(int(6), int(6))), (0 << _GLF_IDENTITY(int(8), int(8))), 0)))), _GLF_IDENTITY(min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) << (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-64218))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(min(int(6), int(6)), (min(int(6), int(6))) | 0))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416))))) / 1)))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))), (min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) << (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-64218))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(min(int(6), int(6)), (min(int(6), int(6))) | 0))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416))))) / 1)))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))) | (min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) << (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-64218))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(min(int(6), int(6)), (min(int(6), int(6))) | 0))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), (true ? _GLF_IDENTITY(int(6), 0 | (int(6))) : _GLF_FUZZED(19416))))) / 1)))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          continue;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != 0), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), ! (! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter != 0, true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter != 0, true), true)), true))))), (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter != 0, true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter != 0, true), true)), true)))))) || false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))), true && (! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), ! (! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))))))), false, false), bvec3(bvec3(bvec3(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(75.40))))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), bool(bvec3(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), true, true)))), ! (! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))))))), false, false)))))))); _injected_loop_counter --)
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.x], uint(_GLF_IDENTITY(2, ~ (~ (2)))), 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 1.0, 0.0, 1.0)))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, cos(0.0), 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, cos(0.0), 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, cos(0.0), 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, cos(0.0), 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))))))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))
          {
          }
         else
          {
           return;
          }
        }
       do
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
