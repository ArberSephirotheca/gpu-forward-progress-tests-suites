#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bool _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_16 {
 ivec4 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_12 {
 float _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 vec2 _f3;
 uvec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 bvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 vec2 _f1;
 ivec4 _f2;
 vec3 _f3;
 vec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 bvec3 _f1;
 float _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 mat3x4 _f1;
 uint _f2;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 bvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 int _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 vec2 _f1;
 vec4 _f2;
 mat4x3 _f3;
 uvec4 _f4;
 vec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat3x2 _f1;
 vec4 _f2;
 ivec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 ivec2 _f1;
 bool _f2;
 ivec3 _f3;
 mat3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_id;
 ivec4 _f2;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 vec2 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_13 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(1.0), _GLF_struct_2(_GLF_struct_0(ivec2(1), uvec3(1u)), _GLF_struct_1(uvec2(1u), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 1, 0))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1))), clamp(min(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 1, 0))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1))), min(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 1, 0))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 1, 0))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1))), (min(_GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 1, 0))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1)))) >> ivec2(0, 0))))), true, ivec3(1), mat3(1.0), mat2(1.0)), gl_SubgroupID, ivec4(1)), _GLF_struct_5(uvec2(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true)), false || (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(_GLF_IDENTITY(bvec3(((true)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(((true)), false, false), bvec3(bvec4(bvec3(((true)), false, false), false))), true)))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, true))))) || false)))), bool(bvec3(((true)), false, false)))))) && true)), false || (_GLF_IDENTITY(true, true && _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))), (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false))))) || false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true), bool(bvec4(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true), true, false, true)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false))))), ! (! (! (! (_GLF_IDENTITY(((true)), bool(bvec3(((_GLF_IDENTITY(true, true && (true)))), false, false))))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(_GLF_IDENTITY(((true)), _GLF_IDENTITY(bool(bvec2(((true)), false)), ! (! (bool(bvec2(((true)), false)))))), false, false)))))) && true), true, false, true)), (bool(bvec4(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(_GLF_IDENTITY(((true)), _GLF_IDENTITY(bool(bvec2(((true)), false)), ! (! (bool(bvec2(((true)), false)))))), false, false)))))) && true), true, false, true))) && true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && true, false || (_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, false)))))) && _GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec4(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, _GLF_IDENTITY(false, true && (false)))))))) && true), true, false, true)))))))), true, false, false))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))), mat3x2(1.0), vec4(1.0), ivec4(1), vec2(1.0)), _GLF_struct_4(bvec4(true), vec2(1.0), vec4(1.0), mat4x3(1.0), uvec4(1u), vec2(1.0), bvec2(true)), mat3x4(1.0)), _GLF_struct_11(_GLF_struct_6(mat2(1.0)), _GLF_struct_7(mat4(1.0), bvec3(true), mat3x4(1.0)), _GLF_struct_8(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec2(true, false)), false, false)))), (true) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) || false), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) || false), true, false, false))) || false))))))))))), mat3x4(1.0), 1u), 1, _GLF_struct_9(uvec4(1u), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, false, false)))) && true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false))), _GLF_IDENTITY(true, bool(bool(true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true))), bvec3(bvec4(bvec3(bvec3(true)), true))))), false)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))))), false)))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), false)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))))), true))))), _GLF_IDENTITY(false, (false) && true))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))), true))))), true))))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))))))), true)), true))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), true)), true)))))))))))))), true)), true))))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))), false)))), false)))), 1.0, mat2x3(1.0)), _GLF_struct_10(bvec3(true), vec2(1.0), ivec4(1), vec3(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(7.2), (vec4(1.0))[_GLF_IDENTITY(1, (1) - 0)], _GLF_FUZZED(69.59), (vec4(1.0))[3]), vec4((vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0))))))[0], _GLF_IDENTITY(_GLF_FUZZED(0.1), (true ? _GLF_FUZZED(0.1) : _GLF_FUZZED(abs(-9514.3930)))), (vec4(1.0))[2], _GLF_FUZZED(float(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), bvec4(true, false, true, false))))), mat4x2(1.0)), mat3(1.0)), _GLF_struct_13(_GLF_struct_12(1.0, mat4x3(1.0), mat2x3(1.0), vec2(1.0), uvec3(1u), uvec4(1u)), bvec3(true), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((uvec3(1u)) / uvec3(1u, 1u, 1u), clamp((uvec3(1u)) / uvec3(1u, 1u, 1u), (uvec3(1u)) / uvec3(1u, 1u, 1u), (uvec3(1u)) / uvec3(1u, 1u, 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5193.8916)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(-5193.8916)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5193.8916)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-5193.8916)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), float(mat3(float(injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0))), float(injectionSwitch.y))), bool(true)), mix(float(_GLF_FUZZED(-5193.8916)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(-5193.8916)), float(injectionSwitch.y), bool(true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9291.8877))), injectionSwitch.x, injectionSwitch.x)), 1.0)))) / sqrt(1.0)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, -4.4)) : injectionSwitch)).y) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, (true) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_struct_replacement_14._f2.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), subgroup_size, subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(171359u) : (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) * 1u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) * 1u, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) * 1u)), 0u | (_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (1u ^ 1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_size, subgroup_size))) * 1u)), uint(uvec2(uint(uint((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) * 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? 12650u : workgroup_id)) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), clamp(subgroup_size, subgroup_size, subgroup_size)))) * 1u)))))) / 1u);
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) + (ivec4(1))), mat4x2(_GLF_IDENTITY(1.0, (1.0) + log(1.0))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(((_GLF_IDENTITY(-48395, clamp(-48395, -48395, -48395)) + ivec3(-96830, _GLF_IDENTITY(19555, _GLF_IDENTITY((19555) | 0, max((19555) | 0, (19555) | 0))), -26607)) >> ivec3(86436, -32328, 3221))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(74529))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))), (clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((ivec3(1)), min((ivec3(1)), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(74529))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))), (clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((ivec3(1)), min((ivec3(1)), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0, 0)), (false ? _GLF_FUZZED(ivec3(-53485, -76405, -16255)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(74529))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))), (clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((ivec3(1)), min((ivec3(1)), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0, 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(74529))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))), (clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((ivec3(1)), min((ivec3(1)), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0, 0))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(74529))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))), (clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((ivec3(1)), min((ivec3(1)), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0, 0)))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(74529))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))), (clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((ivec3(1)), min((ivec3(1)), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0, 0)))), (false ? _GLF_FUZZED(((-48395 + ivec3(-96830, 19555, -26607)) >> ivec3(86436, -32328, 3221))) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), clamp(int(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), (int(_GLF_IDENTITY(1, (1) | 0))) >> 0), int(1)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))))), clamp(min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))))))))), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))))))), _GLF_IDENTITY((ivec3(1)), min((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0))), (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))) | (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0))), (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))) | (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0))), (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))) | (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0))), (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))) | (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0))), (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0)))) | (max(_GLF_IDENTITY(ivec4(ivec3(1), (0 | 0)), max(ivec4(ivec3(1), (0 | 0)), ivec4(ivec3(1), (0 | 0)))), ivec4(ivec3(1), (0 | 0))))))))))), (ivec3(1)))) - ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(5), int(5)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, min(_GLF_IDENTITY((0) | 0, max((0) | 0, _GLF_IDENTITY((0) | 0, ~ (~ ((0) | 0))))), _GLF_IDENTITY((0) | 0, _GLF_IDENTITY(0 ^ ((0) | 0), clamp(_GLF_IDENTITY(0 ^ ((0) | 0), (0 ^ ((0) | 0)) | (0 ^ ((0) | 0))), 0 ^ ((0) | 0), 0 ^ ((0) | 0))))))))), 0, 0))) - _GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, (0) << 0)), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(0, (0) << 0))))))), _GLF_struct_15(true, workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 0u))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) / 1u)) + 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), clamp(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + ((subgroup_local_id + 1) % subgroup_size)), ~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))), min(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), clamp(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + ((subgroup_local_id + 1) % subgroup_size)), ~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), clamp(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + ((subgroup_local_id + 1) % subgroup_size)), ~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))), uint(uint(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), clamp(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + ((subgroup_local_id + 1) % subgroup_size)), ~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))))))))))) / 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))) || (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(68.84)))))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), false))), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), false)))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(68.84)))))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), false))), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), false)))), true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(68.84)))))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), false))), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), false)))), true))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(68.84)))))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), false))), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), false)))), true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(68.84)))))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))), false))), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), false)))), true))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_16._f3.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, true, true))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, true, true))))), bool(bool((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, true, true))))))))) && true))))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(660.868), (max(injectionSwitch, injectionSwitch))[1]), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(3.9)), bvec2(true, false)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (vec2(vec3(injectionSwitch, 1.0))) - vec2(0.0, 0.0))))))).x))) - 0.0)))) * 1.0) > injectionSwitch.y))) && true, ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) && true), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), vec2(_GLF_FUZZED(-7273.6155), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), vec2(_GLF_FUZZED(-7273.6155), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(932.295, 5.9), (vec2(932.295, 5.9)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) && true), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), vec2(_GLF_FUZZED(-7273.6155), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), vec2(_GLF_FUZZED(-7273.6155), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(932.295, 5.9), (vec2(932.295, 5.9)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)), true && (! (((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) && true), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), vec2(_GLF_FUZZED(-7273.6155), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), vec2(_GLF_FUZZED(-7273.6155), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(932.295, 5.9), (vec2(932.295, 5.9)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))))))), ! (! ((! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), (vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-7273.6155), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), min((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), (vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-7273.6155), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), min((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), (vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-7273.6155), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), min((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), (vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-7273.6155), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), min((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(_GLF_IDENTITY(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01)), (vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-78.01))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-7273.6155), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), min((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true)))))) * mat2(1.0))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
