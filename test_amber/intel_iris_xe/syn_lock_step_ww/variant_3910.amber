#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec4 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) + uvec2(0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) + uvec2(0u, 0u)) : _GLF_FUZZED(clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 39202u, 159575u))))) << uvec2(0u, 0u))) << uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), (true ? _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) / uvec2(1u, 1u)))))) : _GLF_FUZZED(uvec2(116354u, 2851u))))) << uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), max((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy = GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id.xy;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     continue;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id.w = subgroup_id;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-66.14)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-66.14)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))
      barrier();
    }
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0)) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), 0.0, sqrt(0.0), exp(0.0), 0.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-250.386) : 0.0)), 0.0)), 0.0)), 1.0), min(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-250.386) : 0.0)), 0.0)), 0.0)), 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-250.386) : 0.0)), 0.0)), 0.0)), 1.0), (vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-250.386) : 0.0)), 0.0)), 0.0)), 1.0)) * mat4(1.0)))), vec4(0.0, 1.0, 1.0, 0.0)))))))).y)), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))[0], injectionSwitch[1])).y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.91), _GLF_FUZZED((-36.19))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-8025.2629) : (injectionSwitch)[1]))), bvec2(true, true))), (injectionSwitch) * vec2(1.0, 1.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-85.53)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), true)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-85.53)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), true))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, 0 | (0)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) | (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))) / 1))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.z;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, (7) ^ 0)))), int(7)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))) || false))
            break;
           barrier();
          }
        }
       else
        {
        }
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.y = _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(155211u)));
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    return;
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x = GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.y;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (2) | (2))))))), int(2))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) / 1)), int(_GLF_IDENTITY(2, (2) * 1))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
  {
   GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy.x = GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(int(7), int(7)), 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))))))), ~ (~ (~ (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))))))))))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))) && true));
  }
 else
  {
  }
 do
  {
   GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false, true))));
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1))) ^ 0))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.xy.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43872) : _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(false, true, true, _GLF_IDENTITY(false, false || (false))))), ! (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))))))))))
  return;
 uint subgroup_base = GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)))))), max((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) << uvec4(0u, 0u, 0u, 0u)), (true ? (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id))), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x) : GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))) ^ 0u), clamp(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)))))), max((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) << uvec4(0u, 0u, 0u, 0u)), (true ? (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id))), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x) : GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))) ^ 0u), _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)))))), max((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) << uvec4(0u, 0u, 0u, 0u)), (true ? (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id))), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x) : GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)))))), max((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) << uvec4(0u, 0u, 0u, 0u)), (true ? (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id))), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x) : GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)))))), max((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) << uvec4(0u, 0u, 0u, 0u)), (true ? (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id))), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x) : GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))) ^ 0u), (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)))))), max((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) << uvec4(0u, 0u, 0u, 0u)), (true ? (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id))), (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).zw.y, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.x) : GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))) ^ 0u)) + 0u)) + 0u)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x = subgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(_GLF_IDENTITY(false, ! (! (false))))))))) || false), false || _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))))), ! (! ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false))))))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), float(_GLF_FUZZED(4113.1907)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false))))), (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))))) && true), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4113.1907), max(_GLF_IDENTITY(_GLF_FUZZED(4113.1907), mix(float(_GLF_FUZZED(-0.7)), float(_GLF_FUZZED(4113.1907)), bool(true))), _GLF_FUZZED(4113.1907)))), bool(false)))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))))))))), (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4113.1907)), bool(false)))))) && true), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(4113.1907, min(4113.1907, 4113.1907)))), bool(false)))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, min(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id) * uvec4(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), 1u, 1u), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id) * uvec4(1u, 1u, 1u, 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id), ((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)) | uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, min(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id))), (false ? _GLF_FUZZED((subgroup_local_id & GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base)) : _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id), ((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id)) >> uvec4(0u, 0u, 0u, 0u))) | ((GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id))))) * uvec4(1u, 1u, 1u, 1u), (GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id) * uvec4(1u, 1u, 1u, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, min(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id))) * uvec4(1u, 1u, 1u, 1u)))) / uvec4(1u, 1u, 1u, 1u))))).z + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x + GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))) || false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, uint(uvec4(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))), 0u, 0u))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, (GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z) / 1u)) | (_GLF_IDENTITY(1u ^ 1u, uint(uint(1u ^ 1u))))), 1u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, uint(uvec4(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, 1u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, uint(uvec4(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, 1u, 0u, 0u)))) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (uint(3u)))))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id.z, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_14_3_1_12num_workgroupsubgroup_local_idworkgroup_baseworkgroup_id) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))))))).z, 1u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_base.x + (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + 1) % GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw : _GLF_FUZZED((GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size << subgroup_size)))).x + 1) % GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, ~ (~ ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.x + 1) % _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y, 0u | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.zw.y))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2750.9281), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), bvec2(true, false))).y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id.z = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (~ (64)) / 1)) | (~ (64))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))))), bool(bvec2(bool(bvec2(false, false)), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-904.168)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2441.9940), float(mat3x4(_GLF_FUZZED(-2441.9940), abs(0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, tan(0.0), round(length(normalize(1.0))), 1.0))), (max(injectionSwitch, injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) - sin(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1))), min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (-72795 & 0), false || (_injected_loop_counter > (-72795 & 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0))).x) - 0.0), injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)))).y))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0)))) - 0.0), float(_GLF_FUZZED(-9.7)), bool(false))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, (0) >> 0)))], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(_GLF_IDENTITY(442.953, min(_GLF_IDENTITY(442.953, min(442.953, 442.953)), _GLF_IDENTITY(442.953, min(442.953, 442.953)))))), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y : _GLF_FUZZED(-2.4))), false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch[1]) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(37.24), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.3)), bvec2(true, false)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))) / 1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))) * 1.0)), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false))))))))), true)))), true && ((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch[1]) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(37.24), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.3)), bvec2(true, false)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))) / 1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))) * 1.0)), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false))))))))), true)))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1)))))], (injectionSwitch[1]) / 1.0)))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1))))))], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)) : _GLF_FUZZED(6.2))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y : _GLF_FUZZED(5891.3712))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_FUZZED(8.2)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), bool(true)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) * 1)))], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, cos(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(determinant(mat3(-485.663, -2.4, 5645.7849, 0.8, 834.673, 8773.9022, -1.4, -2.5, 6.9)))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(3.3)), bvec2(false, false))))).y)), false)))))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, cos(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(determinant(mat3(-485.663, -2.4, 5645.7849, 0.8, 834.673, 8773.9022, -1.4, -2.5, 6.9)))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(3.3)), bvec2(false, false))))).y)), false))))))) && true), true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1)))))], (injectionSwitch[1]) / 1.0)))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1))))))], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)) : _GLF_FUZZED(6.2))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y : _GLF_FUZZED(5891.3712))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_FUZZED(8.2)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), bool(true)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) * 1)))], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, cos(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(determinant(mat3(-485.663, -2.4, 5645.7849, 0.8, 834.673, 8773.9022, -1.4, -2.5, 6.9)))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(3.3)), bvec2(false, false))))).y)), false)))))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, cos(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(determinant(mat3(-485.663, -2.4, 5645.7849, 0.8, 834.673, 8773.9022, -1.4, -2.5, 6.9)))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(3.3)), bvec2(false, false))))).y)), false))))))) && true), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1)))))], (injectionSwitch[1]) / 1.0)))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1))))))], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)) : _GLF_FUZZED(6.2))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y : _GLF_FUZZED(5891.3712))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_FUZZED(8.2)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), bool(true)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) * 1)))], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, cos(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(determinant(mat3(-485.663, -2.4, 5645.7849, 0.8, 834.673, 8773.9022, -1.4, -2.5, 6.9)))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(3.3)), bvec2(false, false))))).y)), false)))))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(cos(4.1)) : injectionSwitch[1])), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, cos(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(determinant(mat3(-485.663, -2.4, 5645.7849, 0.8, 834.673, 8773.9022, -1.4, -2.5, 6.9)))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(3.3)), bvec2(false, false))))).y)), false))))))) && true), true))))))))), true, true, true))))) || false)), bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.7)), bool(false)), 0.0 + (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.7)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((true ? -5.9 : -3.6))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-21.26)))))), bool(true)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((true ? -5.9 : -3.6))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-21.26)))))), bool(true)))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((true ? -5.9 : -3.6))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-21.26)))))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((true ? -5.9 : -3.6))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-21.26)))))), bool(true))))))) - 0.0))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), true, true))), false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), true, true))), false))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x4(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), float(_GLF_FUZZED(-60.29)), bool(false))))), float(_GLF_FUZZED((-34.40))), bool(false)))))))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false), true, true))), false))))), true), false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0))), (injectionSwitch[1]) / 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), mix(vec2((vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)))[0], _GLF_FUZZED(-488.619)), vec2(_GLF_FUZZED(-2.9), (vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)))[1]), bvec2(false, true)))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-989.750))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(8006.1322) : injectionSwitch[1])), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-5555.1963), _GLF_FUZZED(775.665)), bvec2(false, false)))) - vec2(0.0, 0.0))))).y, false)))))), true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), true, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))))), true, true)))))) || false)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false))), 1.0 * (_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))))))), float(_GLF_FUZZED(442.953)), bool(false)))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36.56) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]))) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y, false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))))))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false))), mix(float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(442.953)), bool(false)))), float(_GLF_FUZZED(78.56)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, false))))))))), true)))), true, true, true))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.7)), float(0.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              barrier();
             continue;
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))
              barrier();
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))) || false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     atomicStore(buf[GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidsubgroup_id.z], uint(2), 4, 64, 4);
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
