#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uvec4 _f0;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat2 _f1;
 vec3 _f2;
 vec3 _f3;
 bvec2 _f4;
 mat2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_1 {
 int _f0;
 mat3x2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 vec4 _f1;
 ivec3 _f2;
 int _f3;
 float _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 ivec3 _f2;
 _GLF_struct_1 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_7 {
 uint _f0;
 uint subgroup_base;
 ivec3 _f1;
 mat2 _f2;
 ivec3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(bool(bvec4(false, false, false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, sqrt(1.0), 1.0, 0.0, 0.0))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) * 1.0), 1.0, 0.0, 0.0)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(714.727) : _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(_GLF_IDENTITY(mat4(vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), mat4(1.0) * (mat4(vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(0.9), (vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))[1]), vec2(_GLF_IDENTITY((vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))[0], ((vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))[0]) - 0.0), _GLF_FUZZED(6.7)), bvec2(true, false))), vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), vec2(0.0, 0.0) + (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))).y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(82.82), _GLF_FUZZED(-1.1)), bvec2(false, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (mat2(1.0) * (injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(68.93) : 1.0))) + 0.0)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9332.2534, 3308.7751, 66.01, 8.6)) : mat2(1.0))))))) + mat2(0.0, 0.0, 0.0, 0.0)), ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)) + vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(mix(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)) : (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1], clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1]))))), vec2(_GLF_FUZZED(-732.964), _GLF_FUZZED(_GLF_IDENTITY(vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(_GLF_IDENTITY(1.2, max(_GLF_IDENTITY(1.2, clamp(1.2, 1.2, 1.2)), 1.2)), 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(1.2, min(1.2, 1.2)))), 1937.6249, 267.999), mix(_GLF_IDENTITY(vec4((vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(_GLF_IDENTITY(1.2, (_GLF_IDENTITY(1.2, (1.2) - log(1.0))) / 1.0), min(1.2, 1.2)))), 1937.6249, _GLF_IDENTITY(267.999, clamp(_GLF_IDENTITY(267.999, (267.999) * 1.0), _GLF_IDENTITY(267.999, float(_GLF_IDENTITY(mat2x4(267.999, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(67.81, 70.44, 44.14, -6.5, 2.6, 724.113, 1.6, -88.86)) : mat2x4(267.999, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 267.999))))[0], (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(_GLF_IDENTITY(1.2, max(1.2, 1.2)), 1.2)), _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), max(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), mix(float(_GLF_FUZZED(4.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.2, min(1.2, 1.2)) : _GLF_FUZZED(-68.30)), mix(float((true ? _GLF_IDENTITY(1.2, min(1.2, 1.2)) : _GLF_FUZZED(-68.30))), float(_GLF_FUZZED(3.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true))))))), 1937.6249, 267.999))[1], (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, _GLF_IDENTITY(min(1.2, 1.2), max(_GLF_IDENTITY(min(1.2, 1.2), (false ? _GLF_FUZZED(67.68) : min(1.2, 1.2))), _GLF_IDENTITY(min(1.2, 1.2), float(mat2x3(min(1.2, 1.2), 1.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.2, min(1.2, 1.2)))), 1937.6249, 267.999))[2], (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(1.2, min(_GLF_IDENTITY(1.2, clamp(1.2, 1.2, 1.2)), 1.2)))), 1937.6249, 267.999))[3]), (vec4((_GLF_IDENTITY(vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(_GLF_IDENTITY(1.2, (_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2), _GLF_IDENTITY(float(vec2((1.2), 0.0)), mix(float(_GLF_FUZZED(4.0)), _GLF_IDENTITY(float(float(vec2((1.2), 0.0))), clamp(float(float(vec2((1.2), 0.0))), float(float(vec2((1.2), 0.0))), float(float(vec2((1.2), 0.0))))), bool(true)))) - log(1.0))) / 1.0), min(1.2, 1.2)))), 1937.6249, 267.999), (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(_GLF_IDENTITY(1.2, (_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2), _GLF_IDENTITY(float(vec2((1.2), 0.0)), mix(float(_GLF_FUZZED(4.0)), float(float(vec2((1.2), 0.0))), bool(true)))) - log(1.0))) / 1.0), min(1.2, 1.2)))), 1937.6249, 267.999)) / vec4(1.0, 1.0, 1.0, 1.0)))[0], (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), mix(float(_GLF_FUZZED(959.390)), float(_GLF_IDENTITY(1.2, min(1.2, 1.2))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), max(_GLF_IDENTITY(1.2, min(_GLF_IDENTITY(1.2, max(1.2, 1.2)), 1.2)), _GLF_IDENTITY(1.2, _GLF_IDENTITY(min(1.2, 1.2), (true ? min(1.2, 1.2) : _GLF_FUZZED(322.574)))))), _GLF_IDENTITY(1.2, min(1.2, 1.2)))), 1937.6249, 267.999))[1], (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(1.2, min(1.2, 1.2)))), 1937.6249, 267.999))[2], (vec4(-4.6, _GLF_IDENTITY(_GLF_IDENTITY(1.2, min(1.2, 1.2)), min(_GLF_IDENTITY(1.2, min(1.2, 1.2)), _GLF_IDENTITY(1.2, min(_GLF_IDENTITY(1.2, clamp(1.2, 1.2, 1.2)), 1.2)))), 1937.6249, 267.999))[3])) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_FUZZED(vec3(-817.797, -47.96, 6.5).t), _GLF_FUZZED(float(67908u)), _GLF_FUZZED(-8013.9691), _GLF_FUZZED(5394.6480)), bvec4(false, false, false, false))).x)), bvec2(false, false))).y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, false || (true))))) || false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))))) * vec2(1.0, 1.0))), mix(vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(-4.7)), bvec2(false, false)))) + vec2(0.0, 0.0)) * mat2(1.0))).y)), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y)), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y))))))))))), false, _GLF_IDENTITY(true, true && (true)))), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(546.259)), bool(false)))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y) - 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0))))).y))), false, true))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && _GLF_IDENTITY(true, false || (true))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) && true)), (! (_GLF_IDENTITY(false || (false), (false || (false)) && true))) || false)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), true))), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-15.44, -40.05)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.69)), vec2(_GLF_FUZZED(5325.8557), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))) || false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)))), 0.0))).y)))))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)))), 0.0))).y)))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, false))))))))), (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x, mix(float(_GLF_FUZZED(3396.3131)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), _GLF_IDENTITY(false, (false) && true), true))), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))))))))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), false)), true, false))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))))))))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), false)), true, false))), false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))))))))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))), false, true))), true, true))), false, true))), false)), true, false))), false))), true)), true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true, false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true, false))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(1u, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, ivec3(1), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2(mat3x2(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), ivec3(1), _GLF_struct_2(_GLF_struct_0(mat4(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat3(_GLF_IDENTITY(vec4(1.0), vec4(mat3x2(vec4(1.0), 1.0, 1.0))), tan(0.0), 0.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0)))))), ivec3(1), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((1), (1), (1))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) | _GLF_IDENTITY((1), clamp((1), (1), (1)))) << 0)), 1.0, mat3x4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true)))), false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true)))), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY(true, (true) && true))))), ((! (! (! (_GLF_IDENTITY(true, (true) && true)))))) && true), (_GLF_IDENTITY((! (! (! (true)))), ((! (! (! (true))))) && true)) && true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! (! (true)))), (_GLF_IDENTITY((! (! (! (true)))), ((! (! (! (true))))) && true)) && true)), false, false)))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(bool((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (true)), bool(bool((! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bool(true)))), true && (bool(_GLF_IDENTITY(true, bool(bool(true)))))))))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))), bool(bvec4(true && (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), bool(bool((! (true)))))), false, false, true)))) || false)))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), bvec3(bvec4(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), bvec3(bvec4(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), bvec3(bvec4(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), false), false))))))))))))), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), false))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true && (false)), false))) || false)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), true))))))), true, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), ! (! (true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && true))), false, false), false))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY(false, bool(bool(false)))), true))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(bvec3(! ((! (true))), true, false)))))), ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(bvec3(! ((! (true))), true, false)))))), ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(bvec3(! ((! (true))), true, false)))))), ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))), true, true)))))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec4(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false), false)))))))) || false, bool(bvec2((_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)))))) || false, true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (false)), false))) || false)), false, true)))), true))))))), true, _GLF_IDENTITY(true, (true) && true)))))))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, false)), (bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, false))) || false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))))))))), false, false))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bool((! (true))))), ! (! (! _GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), false, true)))), true))))))), true, true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, false))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true)))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! _GLF_IDENTITY((! (true)), bool(bool((! (_GLF_IDENTITY(true, true && (true))))))))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), false || (_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false)), ! (! (_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), false)))))))))), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false))))), false, true)))), true))))))), true, true)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, false))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true)))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), false, true)))), true))))))), true, true)))), true)), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, false))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true)))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false)), (bool(bvec3(! (! (false)), _GLF_IDENTITY(false, true && (false)), false))) || false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(true, ! (! (true))))))), true))))))), true, true))))))), true, true))), true, true))), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (1)))), max(~ _GLF_IDENTITY((~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (1)))), ~ _GLF_IDENTITY((~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (1)))))))) / 1)), _GLF_struct_1(1, mat3x2(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 1.0)), max(float(vec4(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 1.0)), float(vec4(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 1.0, 0.0, 1.0))))))), ivec4(1)), mat4x3(1.0)), _GLF_struct_5(_GLF_struct_3(mat4x2(1.0), mat2(1.0), vec3(1.0), vec3(1.0), bvec2(true), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-1315.0079 * -28.86), (true ? (-1315.0079 * -28.86) : _GLF_FUZZED(injectionSwitch.r)))) : 1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(9.9, -84.07, -35.46, 7.7))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! (! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), mat3x4(1.0), mat4x2(1.0), bvec2(true), _GLF_struct_4(uvec4(1u), mat2x4(1.0))), _GLF_struct_6(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.3)), vec2(_GLF_FUZZED(60.55), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(80.38)), bool(false)))), bvec2(false, true))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))).y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false), false, true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))) : _GLF_FUZZED(3283.6126))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))) : _GLF_FUZZED(3283.6126))), (false ? _GLF_FUZZED(63.31) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(true))) : _GLF_FUZZED(3283.6126))))) : _GLF_FUZZED(-0.1)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_struct_replacement_7.subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), true && (bool(false))), false)))) && true))) || false))) || false)) && true)), bool(bvec2(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)) && true)), true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, true, false)))))) || false))) || false)) && true)), bool(bvec2(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true)), true))))))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7.subgroup_base, clamp(workgroup_base + _GLF_struct_replacement_7.subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_7.subgroup_base), (_GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_7.subgroup_base), ~ (~ ((workgroup_base + _GLF_struct_replacement_7.subgroup_base))))) * 1u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)) + _GLF_struct_replacement_7.subgroup_base, (false ? _GLF_FUZZED(43673u) : _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))), (uint(workgroup_base)) >> 0u)) >> (0u | 0u)))) + _GLF_struct_replacement_7.subgroup_base)), (true ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7.subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(43673u, uint(uvec4(43673u, 1u, 0u, 0u)))) : workgroup_base + _GLF_struct_replacement_7.subgroup_base)) : _GLF_FUZZED(bitfieldReverse(uint(false))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(69.60)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)) || false)), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))).x, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((vec2(_GLF_IDENTITY(92.55, mix(float(_GLF_FUZZED(-9.8)), float(92.55), bool(true))), 2049.5890) + -558.628)) : injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-0.8, -6561.9381, -9.6, -454.171)) : mat2(1.0), transpose(transpose(false ? _GLF_FUZZED(mat2(-0.8, -6561.9381, -9.6, -454.171)) : mat2(1.0)))))) * (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-0.8, -6561.9381, -9.6, -454.171)), transpose(transpose(_GLF_FUZZED(mat2(-0.8, -6561.9381, -9.6, -454.171))))) : mat2(1.0))) * (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : injectionSwitch)) - vec2(0.0, 0.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(92.55, 2049.5890) + -558.628, (false ? _GLF_FUZZED(injectionSwitch) : vec2(92.55, 2049.5890) + -558.628)))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(92.55, 2049.5890) + -558.628), max((vec2(92.55, 2049.5890) + -558.628), _GLF_IDENTITY((vec2(92.55, 2049.5890) + -558.628), ((vec2(92.55, 2049.5890) + -558.628)) * mat2(1.0))))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(92.55, 2049.5890) + -558.628)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)), injectionSwitch))), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)), injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))))).y)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(2.4)), bool(false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(742.126)), bool(false))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(sin(8383.5797))))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat4x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0))), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(742.126)), bool(false))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-55.47, 2.3, 590.002, -7.9, -302.259, -3.1))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
