#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) / vec2(1.0, 1.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-2343.7564)), bvec2(false, false)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(mix(vec2(6.0, -8.3), vec2(-472.993, 982.433), bvec2(false, false))))))).y)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(0.7) : (injectionSwitch)[0])), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED(7.2), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(6.1)))), bvec2(false, true))), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED(7.2), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(6.1)))), bvec2(false, true))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED(7.2), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(6.1)))), bvec2(false, true))), injectionSwitch)).y)))), true))))))).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * mat2(1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0)))))) < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)).y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9381.2469), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(0.7) : (injectionSwitch)[0])), (true ? _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], float(mat4x3((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(875.654))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))).y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.9))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true)))), true)))), (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true)))), true))))) || false))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, false)), (bool(bvec3(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, false))) && true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, false)), _GLF_IDENTITY((bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), true && (! (bool(bvec2(false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, false))), ((bool(bvec3(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0)), (true ? float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-2205.6359))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0))))), true, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(true, (true) && true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)))))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, false), false))))), true))))))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), false, false), false)), true))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(false || (_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)))))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))), false))))))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)))))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))), true))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true))), false)), true))))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), true, false))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), true, false)))))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true)), false)))))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), false), false)), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))), true))))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y))))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec4((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) && true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.8, 6.3)) : injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))) && true)), _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(808.737)), bool(false))))), false)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(log(vec2(1.0, 1.0))) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(179019u))), bool(false))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! (! (! (bool(_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4x2(6598.9686, 2539.3914, -4951.2494, -760.570, -25.85, 88.20, _GLF_IDENTITY(32.61, 0.0 + (_GLF_IDENTITY(32.61, clamp(32.61, 32.61, 32.61)))), -43.12)[_GLF_IDENTITY(2, (2) ^ (0 | 0))], min(_GLF_IDENTITY(mat4x2(6598.9686, 2539.3914, -4951.2494, -760.570, -25.85, 88.20, _GLF_IDENTITY(32.61, 0.0 + (_GLF_IDENTITY(32.61, clamp(32.61, 32.61, 32.61)))), -43.12)[_GLF_IDENTITY(2, (2) ^ (0 | 0))], vec2(vec4(mat4x2(6598.9686, 2539.3914, -4951.2494, -760.570, -25.85, 88.20, _GLF_IDENTITY(32.61, 0.0 + (_GLF_IDENTITY(32.61, clamp(32.61, 32.61, 32.61)))), -43.12)[_GLF_IDENTITY(2, (2) ^ (0 | 0))], 1.0, 1.0))), _GLF_IDENTITY(mat4x2(6598.9686, 2539.3914, -4951.2494, -760.570, -25.85, 88.20, _GLF_IDENTITY(32.61, 0.0 + (_GLF_IDENTITY(32.61, clamp(32.61, 32.61, 32.61)))), -43.12)[_GLF_IDENTITY(2, (2) ^ (0 | 0))], (mat4x2(6598.9686, 2539.3914, -4951.2494, -760.570, -25.85, 88.20, _GLF_IDENTITY(32.61, 0.0 + (_GLF_IDENTITY(32.61, clamp(32.61, 32.61, 32.61)))), -43.12)[_GLF_IDENTITY(2, (2) ^ (0 | 0))]) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))), false, false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 1u, 0u)))))) + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), clamp(_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1)))), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))), uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + 1)), clamp(_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1)))), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))), 0u, (0u ^ 0u), 0u))) << _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))))), ((subgroup_local_id + 1)) << 0u)) - _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(virtual_gid), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) - 0u)))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base)))))) - 0u)))) / 1u)))) + 0u)), bitfieldReverse(virtual_gid))), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u, ~ (~ (_GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) / uvec3(1u, 1u, 1u))))) - 0u)))) + 0u)), bitfieldReverse(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))) >> 0u), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid) - 0u, ((virtual_gid) - 0u) / (1u & 1u)), (virtual_gid) - 0u)))) + 0u)), _GLF_IDENTITY(bitfieldReverse(virtual_gid), (bitfieldReverse(virtual_gid)) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), false))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x))) * sqrt(1.0)) < injectionSwitch.y))))) ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), 0u + (bitfieldReverse(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (0u & 46816u) | (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(_GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (bitfieldReverse(virtual_gid)))) : _GLF_FUZZED(subgroup_base))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false)) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)), ~ (~ ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), 0u + (_GLF_FUZZED(subgroup_base))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base))))))))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, 43330, 71396)), (true ? _GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, 43330, 71396))) | 0u))), max(bitfieldReverse(virtual_gid), bitfieldReverse(virtual_gid)))))))) / 1u))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1)))), ((subgroup_local_id + 1)), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(7), int(7)))))))))) << _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 1, 1)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))))), ((subgroup_local_id + 1)) << 0u)) - _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) - 0u)))) / 1u)) + 0u)), bitfieldReverse(virtual_gid))), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) / uvec3(1u, 1u, 1u))))) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) >> 0u), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) - 0u)))) / 1u)) + 0u)), bitfieldReverse(virtual_gid))), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) / uvec3(1u, 1u, 1u))))) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) >> 0u), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) - 0u)))) / 1u)) + 0u)), bitfieldReverse(virtual_gid))), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) / uvec3(1u, 1u, 1u))))) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) >> 0u), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) - 0u)))) / 1u)) + 0u)), bitfieldReverse(virtual_gid))), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) / uvec3(1u, 1u, 1u))))) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) >> 0u), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), false))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x))) * sqrt(1.0)) < injectionSwitch.y))))) ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), 0u + (bitfieldReverse(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (0u & 46816u) | (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(_GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (bitfieldReverse(virtual_gid)))) : _GLF_FUZZED(subgroup_base))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)), ~ (~ ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base))))))))), 0u + (_GLF_IDENTITY(bitfieldReverse(virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(_GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (bitfieldReverse(virtual_gid)))) : _GLF_FUZZED(subgroup_base))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (uint(bitfieldReverse(virtual_gid))) | (uint(bitfieldReverse(virtual_gid)))), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)), ~ (~ ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (uint(bitfieldReverse(virtual_gid))) | 0u) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(_GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (bitfieldReverse(virtual_gid)))) : _GLF_FUZZED(subgroup_base))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (uint(bitfieldReverse(virtual_gid))) | (uint(bitfieldReverse(virtual_gid)))), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)), ~ (~ ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (uint(bitfieldReverse(virtual_gid))) | 0u) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)))))))) : _GLF_FUZZED(workgroup_size)))))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, 43330, 71396)), (true ? _GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, 43330, 71396))) | 0u))), max(bitfieldReverse(virtual_gid), bitfieldReverse(virtual_gid)))))))) / 1u))) % subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(ivec2(ivec2(ivec2(1, 1))), min(ivec2(ivec2(ivec2(1, 1))), ivec2(ivec2(ivec2(1, 1)))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1)))), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) << _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))))), ((subgroup_local_id + 1)) << 0u)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(virtual_gid), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) - 0u)))) / 1u)) + 0u)), bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : virtual_gid))))), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))), (virtual_gid))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, 1u), (uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))) / uvec3(1u, 1u, 1u))))) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) >> 0u), (_GLF_IDENTITY(bitfieldReverse(virtual_gid), max(bitfieldReverse(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) - 0u, (virtual_gid) - 0u)))) + 0u)), bitfieldReverse(virtual_gid)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))), false))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x))) * sqrt(1.0)) < injectionSwitch.y))))) ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), 0u + (bitfieldReverse(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (0u & 46816u) | (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(_GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (bitfieldReverse(virtual_gid)))) : _GLF_FUZZED(subgroup_base))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))))) : _GLF_FUZZED(subgroup_base)), ~ (~ ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true, (true) && true) ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (_GLF_IDENTITY(true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base), min(_GLF_IDENTITY(true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base), uint(uint(true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)))), _GLF_IDENTITY(true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base), (true ? _GLF_IDENTITY(true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base)) ^ 0u) : _GLF_FUZZED(workgroup_id)))))))))) : _GLF_FUZZED(subgroup_base))))))))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, 43330, 71396)), (true ? _GLF_IDENTITY(bitfieldReverse(virtual_gid), uint(_GLF_IDENTITY(uint(bitfieldReverse(virtual_gid)), (true ? uint(bitfieldReverse(virtual_gid)) : _GLF_FUZZED(subgroup_base))))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, 43330, 71396))) | 0u))), max(bitfieldReverse(virtual_gid), bitfieldReverse(virtual_gid)))))))) / 1u))) % subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(int(int(min(4, 4))), _GLF_IDENTITY(~ (~ (int(int(min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, 0)), (int(ivec4(4, 0, 1, 0))) >> 0))) + 0), 4))))), ~ (~ (~ (~ (int(int(min(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, 0)), (int(ivec4(4, 0, 1, 0))) >> 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, 0)), (int(ivec4(4, 0, 1, 0))) >> 0))) : _GLF_FUZZED(-60807))) + 0), 4))))))))))), 64, _GLF_IDENTITY(4, min(4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
