#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat4x2 _f0;
} ;

struct _GLF_struct_12 {
 uint subgroup_id;
 uint _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 int _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_10 {
 int _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 uvec3 _f1;
 _GLF_struct_8 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 uvec4 _f1;
 mat3x4 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat4x2 _f1;
 mat3 _f2;
 mat3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 uvec4 _f1;
 mat2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 uvec2 _f5;
 int _f6;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 int _f1;
 _GLF_struct_0 _f2;
 ivec3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 bool _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(uvec2(1u), _GLF_IDENTITY(1, min(1, 1)), _GLF_struct_0(vec4(1.0)), ivec3(1), _GLF_IDENTITY(vec3(1.0), min(vec3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(42.09)))), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(1.0 * (1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (true ? float(mat2(1.0 * (1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) : _GLF_FUZZED(-4.6))), (false ? _GLF_FUZZED(1072.3915) : _GLF_IDENTITY(float(mat2(1.0 * (1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (true ? float(mat2(1.0 * (1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) : _GLF_FUZZED(-4.6))))))), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * (_GLF_IDENTITY(1.0, 0.0 + (1.0)))) * round(length(normalize(1.0)))))), clamp((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(float(mat2(1.0 * (1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (true ? float(mat2(1.0 * _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))), float(mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) : _GLF_FUZZED(-4.6))))), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(float(mat2(1.0 * (1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (true ? float(mat2(1.0 * (1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.01)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) : _GLF_FUZZED(-4.6))))), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), clamp((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * 1.0))))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), float(_GLF_FUZZED(5.8)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (false)))))))))), vec3(mat4x2(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(float(mat2(1.0 * (1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (true ? float(mat2(1.0 * (1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(82.09)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / sqrt(1.0))), bool(true)))), float(_GLF_FUZZED(64.01)), bool(false))))), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1652.9952)), float(0.0), bool(true))))), injectionSwitch.x), 0.0)) : _GLF_FUZZED(-4.6))))), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0))))), 1.0 * (1.0))), clamp((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * 1.0))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), log(1.0) + (_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), float(1.0))), clamp(float(1.0), float(1.0), float(1.0))), float(_GLF_FUZZED(5.8)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))), true && (false)))))))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0)))))))), true, _GLF_struct_5(_GLF_IDENTITY(vec3(1.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0))), mat2x3(1.0), _GLF_struct_2(mat2x4(1.0), uvec4(1u), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3x2(1.0), mat2x3(1.0), uvec2(1u), 1), _GLF_struct_3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_struct_4(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sin(0.0), round(length(normalize(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, length(0.0), tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(sqrt(0.0), 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, length(0.0), tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(sqrt(0.0), 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, length(0.0), tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(sqrt(0.0), 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)))))))), 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_FUZZED((5889.3295))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), mix(float(clamp(1.0, 1.0, 1.0)), float(_GLF_FUZZED(9.3)), bool(false))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7130.8310)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7130.8310)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7130.8310)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(85.69))), max(clamp(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(intBitsToFloat(34726)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(intBitsToFloat(34726)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) - determinant(mat2(0.0, 0.0, 0.0, 0.0))), (float(mat4x2(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(cos(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0))) * 1.0)))), 1.0, 1.0), clamp(1.0, 1.0, 1.0))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))) + determinant(mat2(0.0, 0.0, 0.0, 0.0))), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(85.69))), max(clamp(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0)))) / 1.0), 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.2)))))), 0.0, 1.0, 0.0, 0.0, 0.0))) * 1.0)))), 1.0, 1.0), clamp(1.0, 1.0, 1.0))), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(6.5)), bool(false)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0)), (true ? float(mat2x3(0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(55.32)))), 0.0)), 1.0, 0.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) + 0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED((5889.3295))), mix(float(_GLF_FUZZED((652.952 / -37.61))), float(float(_GLF_FUZZED((5889.3295)))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), (false ? _GLF_FUZZED(15.16) : _GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))))), _GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), mix(float(_GLF_FUZZED(78.12)), float(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true)))), bool(true))))))), bool(false))), float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), (max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(vec2(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED((-6133.8373 - 295.242))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(994.776)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(76.35)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(76.35)), float(0.0), bool(true))) - 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4809.5418) : 1.0)), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, abs(1.0), determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))), 0.0))))) * mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))))), _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0))), float(_GLF_FUZZED(-24.50)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4809.5418) : 1.0)), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, abs(1.0), determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))), 0.0))))) * mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))))), _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0))), float(_GLF_FUZZED(-24.50)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), bool(true))))))), bool(true))))) + 0.0, max((_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED((5889.3295))), mix(float(_GLF_FUZZED((652.952 / -37.61))), float(float(_GLF_FUZZED((5889.3295)))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), (false ? _GLF_FUZZED(15.16) : _GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))))), _GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), mix(float(_GLF_FUZZED(78.12)), float(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true)))), bool(true))))))), bool(false))), float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), (max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(vec2(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED((-6133.8373 - 295.242))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(994.776)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(76.35)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(76.35)), float(0.0), bool(true))) - 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4809.5418) : 1.0)), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, abs(1.0), determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))), 0.0))))) * mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))))), _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0))), float(_GLF_FUZZED(-24.50)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4809.5418) : 1.0)), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, abs(1.0), determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))), 0.0))))) * mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))))), _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0))), float(_GLF_FUZZED(-24.50)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), bool(true))))))), bool(true))))) + 0.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED((5889.3295))), mix(float(_GLF_FUZZED((652.952 / -37.61))), float(float(_GLF_FUZZED((5889.3295)))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), (false ? _GLF_FUZZED(15.16) : _GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))))), _GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true))), mix(float(_GLF_FUZZED(78.12)), float(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(-59.38)), float(9.3), bool(true)))), bool(true))))))), bool(false))), float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), (max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(vec2(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED((-6133.8373 - 295.242))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(994.776)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(76.35)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(76.35)), float(0.0), bool(true))) - 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4809.5418) : 1.0)), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, abs(1.0), determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))), 0.0))))) * mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))))), _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0))), float(_GLF_FUZZED(-24.50)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4809.5418) : 1.0)), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, abs(1.0), determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))), 0.0))))) * mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))))), _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), tan(tan(0.0)), 0.0, 0.0, sqrt(1.0), 0.0))), float(_GLF_FUZZED(-24.50)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), bool(true))))))), bool(true))))) + 0.0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED((5889.3295))), mix(float(_GLF_FUZZED((652.952 / -37.61))), float(float(_GLF_FUZZED((5889.3295)))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(clamp(1.0, 1.0, 1.0)), float(_GLF_FUZZED(9.3)), bool(false))), float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), (max(clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, log(sqrt(1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), abs(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), 0.0, 0.0))))), 1.0), clamp(1.0, 1.0, 1.0))) - 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED((-6133.8373 - 295.242))), bool(false))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-14.12) : 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-142.096)), float(1.0), bool(true))), 1.0)), (1.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-142.096)), float(1.0), bool(true))), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-142.096)), float(1.0), bool(true))), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-142.096)), float(1.0), bool(true))), 1.0)), (1.0) - 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(994.776)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), float(mat2x3(float(float(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-35.36)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(0.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0))))), min(float(_GLF_IDENTITY(mat3x4(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0))))), float(_GLF_IDENTITY(mat3x4(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0))))))))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.7))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3411.7458)), float(0.0), bool(true))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), abs(0.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(true))))))), bool(true))))) + 0.0, mix(float((_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED((5889.3295))), mix(float(_GLF_FUZZED((652.952 / -37.61))), float(float(_GLF_FUZZED(_GLF_IDENTITY((5889.3295), float(vec2((5889.3295), 0.0)))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(clamp(1.0, 1.0, 1.0)), float(_GLF_FUZZED(9.3)), bool(false))), float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), (max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))) - 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED((-6133.8373 - 295.242))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(994.776)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-13.16)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-46.53, -686.541, 311.598, 6.9, -2806.2589, -6974.7846)) : _GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0))))))) * mat4(1.0))), 1.0, 0.0, cos(0.0), 1.0, 0.0), (mat2x3(float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0), ((_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) * mat4(1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0, 0.0, cos(0.0), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 0.0, determinant(mat2(1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0)), exp(0.0), 0.0, 1.0)))), bool(true))))))), bool(true))))) + 0.0), float(_GLF_FUZZED(-8689.5576)), bool(false))) : _GLF_FUZZED(3.9))), 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), sqrt(0.0), 0.0, 0.0), (mat4x2((_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_FUZZED(-8.4)), float(clamp(1.0, 1.0, 1.0)), bool(true))), mix(float(_GLF_FUZZED((5889.3295))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(6943.6080) : _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) + abs(0.0)))), mix(float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / exp(0.0))), float(_GLF_FUZZED(9.3)), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((true ? float(-84581) : 122.967)) : 1.0)), 1.0, 1.0))), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))) * (1.0))), 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0)))))), bool(true))))) + 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - tan(0.0)), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(556.990)), bool(false))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), mat4x2(1.0), mat3(1.0), mat3(1.0), mat4x3(1.0)), mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_7(mat4x3(1.0), uvec4(1u), mat3x4(1.0), _GLF_struct_6(mat2x4(1.0), vec3(1.0))), _GLF_struct_9(uvec3(1u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, (1u) | 0u)), (clamp(1u, 1u, 1u)) - 0u))), _GLF_struct_8(mat4x2(1.0)), mat3x4(1.0)), _GLF_struct_10(1, uvec2(1u)), _GLF_struct_14(_GLF_struct_11(1u, 1), _GLF_struct_12(gl_SubgroupID, 1u), _GLF_struct_13(mat4x2(1.0)), bvec4(true)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-3426.9507)), bool(false))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fract(injectionSwitch)))).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(0.6))))), clamp(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-573.211))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.2))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0, 0.0))) * 1.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-9266.8930)), vec2(_GLF_FUZZED(-0.7), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))), false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0), _GLF_IDENTITY(mat2(mat2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0))), (mat2(mat2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat3x2(mat2(injectionSwitch, 1.0, 1.0)))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), true, true)))) && true)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(asin(vec2(0.7, -4.6))))).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))) ? injectionSwitch : _GLF_FUZZED((mat4x2(116.696, 27.41, 677.829, -34.91, -9.6, 9.9, 890.361, -1595.5101) * vec4(-14.37, -7401.3561, 4.6, -1.2))))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))) ? injectionSwitch : _GLF_FUZZED((mat4x2(116.696, 27.41, 677.829, -34.91, -9.6, 9.9, 890.361, -1595.5101) * vec4(-14.37, -7401.3561, 4.6, -1.2))))).y, _GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(9565.1416)))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) > injectionSwitch.y))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_15._f6._f1.subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), false, false))) || (false))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, clamp(2, 2, 2)));
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
