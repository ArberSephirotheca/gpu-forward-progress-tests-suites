#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((0u), ((0u)) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x))), (true ? 0u ^ (0u) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) << 0u), _GLF_IDENTITY(0u ^ (0u), clamp(0u ^ (0u), 0u ^ (0u), 0u ^ (0u)))), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u))))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), _GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(workgroup_size) : uint(7u)))))))), 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))), _GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupID)), (uvec3((gl_WorkGroupID))) | (uvec3((gl_WorkGroupID)))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) + uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 1u))))))) | (gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))), gl_WorkGroupID)), (gl_WorkGroupID) | (gl_WorkGroupID))) + uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(103241u))), 0u, 0u))[0], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(0, (0) / 1) | (1))], gl_WorkGroupID[2])))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))), (workgroup_size) - 0u)))), 0u))) * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), subgroup_id))) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u, (0u) + 0u) ^ (_GLF_IDENTITY(uint(3u), uint(3u)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), min(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, max(3u, 3u))))), uint(3u)), (false ? _GLF_FUZZED(workgroup_base) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) * ((subgroup_id) | (subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | (subgroup_id), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id), min(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id), _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id)))))), (subgroup_id) | (subgroup_id)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_id, uint(uvec4(false ? _GLF_FUZZED(workgroup_size) : subgroup_id, 0u, 0u, 0u))))), (subgroup_id) * _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id))) - 0u), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), subgroup_id))) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(uint(3u), uint(3u)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), min(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec3(_GLF_IDENTITY(uint(3u), uint(3u)), 1u, 1u))), (false ? _GLF_FUZZED(workgroup_base) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) * ((subgroup_id) | (subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ _GLF_IDENTITY((~ ((subgroup_id))), min(_GLF_IDENTITY((~ ((subgroup_id))), max((~ ((subgroup_id))), (~ ((subgroup_id))))), (~ ((subgroup_id)))))) | (subgroup_id), max(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id), (subgroup_id) | (subgroup_id)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_id, uint(uvec4(false ? _GLF_FUZZED(workgroup_size) : subgroup_id, 0u, 0u, 0u))))), (subgroup_id) * _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id))) - 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), subgroup_id))) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(25315u) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), min(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_base) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) * ((subgroup_id) | (subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) | (subgroup_id), max(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) | (subgroup_id), (subgroup_id) | (subgroup_id)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_id, uint(uvec4(false ? _GLF_FUZZED(workgroup_size) : subgroup_id, 0u, 0u, 0u))))), (subgroup_id) * _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id))) - 0u), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, 0u + ((subgroup_id) * 1u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id))) - 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ 0u, min((subgroup_id) ^ 0u, (subgroup_id) ^ 0u))) ^ 0u)), subgroup_id))) - 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id))) - 0u)))) << 0u) * subgroup_size, (subgroup_id * subgroup_size) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ _GLF_IDENTITY((~ (4u)), uint(uvec3((~ _GLF_IDENTITY((4u), 0u + ((4u)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) ^ 0u)), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ (~ (4u)))) | (4u)))), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ _GLF_IDENTITY((~ (4u)), uint(uvec3((~ (4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) ^ 0u)), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ (~ (4u)))) | (4u)))), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ _GLF_IDENTITY((~ (4u)), uint(uvec3((~ (4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) ^ 0u)), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ (~ (4u)))) | (4u))))))), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((_GLF_IDENTITY(4u, ~ _GLF_IDENTITY((~ (4u)), uint(uvec3((~ (4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))), ((_GLF_IDENTITY(4u, ~ _GLF_IDENTITY((~ (4u)), uint(uvec3((~ (4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) ^ 0u)), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ (~ (4u)))) | (4u)))), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ _GLF_IDENTITY((~ (4u)), uint(uvec3((~ (4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) ^ 0u)), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, ~ (~ (4u)))) | (4u))))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)) + subgroup_base, _GLF_IDENTITY(0u, ((106933u / 58507u) & 0u) | (0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))), (0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base))))))) | (0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), max(uint(uvec4(_GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))), (0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base))))))) | (0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))), (0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base))))))) | (0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))) | (subgroup_base)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | (0u)))) ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))), min((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))))), 0u + (uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)))), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_base), (0u ^ (workgroup_base + subgroup_base)) | (0u ^ (workgroup_base + subgroup_base)))), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(workgroup_size))) : 0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u) - 0u, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u) - 0u) >> 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))))) - 0u, (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), ~ (~ (~ ((0u)))))))))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), min((_GLF_IDENTITY(subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)) : _GLF_FUZZED(workgroup_size)))), (subgroup_base))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u)))))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), ~ (~ (~ ((0u)))))))))))) - 0u)), clamp((workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u))))), 0u | (_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u))))))), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u))))), 0u | (_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u))))))), 1u, 0u))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), ~ (~ ((0u))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))) + _GLF_IDENTITY((0u), ~ (~ ((0u)))))))))))) / 1u) - 0u) ^ (1u ^ 1u))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && true)) && true)) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_base), (true ? _GLF_IDENTITY(bitfieldReverse(subgroup_base), clamp(bitfieldReverse(subgroup_base), bitfieldReverse(subgroup_base), bitfieldReverse(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, false))) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))))), (bitfieldReverse(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))))) | (_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))) << 0u))))))), max(bitfieldReverse(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), ((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))))), ((~ (_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), ((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))))) | ((~ (_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), ((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))))))))), bitfieldReverse(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), max(~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))), ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))))))))))))))))), uint(uint((_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))) / 1u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))), uint(uint((_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))), (0u & 5959u) ^ ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))) ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_base)), clamp(_GLF_FUZZED(bitfieldReverse(subgroup_base)), _GLF_FUZZED(bitfieldReverse(subgroup_base)), _GLF_FUZZED(bitfieldReverse(subgroup_base))))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base)))))) | ((_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))))))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))), uint(uint((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(true, true, false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && true)))), (injectionSwitch.x < injectionSwitch.y)))), false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false)))))))), false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((bool(bvec3(bool(bvec3(true, _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))), min((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))), uint(uint((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(true, true, false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && true)))), (injectionSwitch.x < injectionSwitch.y)))), false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false)))))))), false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((bool(bvec3(bool(bvec3(true, _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))), uint(uint((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(true, true, false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && true)))), (injectionSwitch.x < injectionSwitch.y)))), false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false)))))))), false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((bool(bvec3(bool(bvec3(true, _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))) ? workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))))) / 1u)))) + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))), (min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, (1) / 1)))) % subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u))))), 0u + ((_GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u)))))))), (~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, (6u) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), false, false, false))) ? uint(6u) : _GLF_FUZZED(workgroup_id))), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (false ? _GLF_FUZZED(34140u) : _GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (true ? _GLF_IDENTITY(6u, ~ (~ (6u))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), uvec2(0u, 0u) | (uvec2(~ (6u), 1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(_GLF_IDENTITY(true ? uint(6u) : _GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(subgroup_base) : true ? uint(6u) : _GLF_FUZZED(workgroup_id))), (true ? uint(6u) : _GLF_FUZZED(workgroup_id)) | (true ? uint(6u) : _GLF_FUZZED(workgroup_id))))), uint(6u))), uint(6u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec2((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id))), uint(6u))), uint(6u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id))), uint(6u))), uint(6u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id)))) >> 0u), uint(6u))), uint(6u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), (0u ^ _GLF_IDENTITY(1u, (1u) ^ 0u)))))), ~ (~ (_GLF_IDENTITY(min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))), (min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) ^ (0 & ivec4(-79201, -63444, -63707, 56979).b)))))) % subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u))))), 0u + ((_GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u)))))))), (~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, (6u) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), false, false, false)))) && true) ? uint(6u) : _GLF_FUZZED(workgroup_id))), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(34140u) : _GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (true ? _GLF_IDENTITY(6u, ~ (~ (6u))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(34140u) : _GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (true ? _GLF_IDENTITY(6u, ~ (~ (6u))) : _GLF_FUZZED(subgroup_id)))) / 1u))), _GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), uint(_GLF_IDENTITY(uvec2(~ (6u), 1u), uvec2(0u, 0u) | (uvec2(~ (6u), 1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(_GLF_IDENTITY(true ? uint(6u) : _GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(subgroup_base) : true ? uint(6u) : _GLF_FUZZED(workgroup_id))), (true ? uint(6u) : _GLF_FUZZED(workgroup_id)) | (true ? uint(6u) : _GLF_FUZZED(workgroup_id))))), uint(6u))), uint(6u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec2((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id))), uint(6u))), uint(6u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id))), uint(6u))), uint(6u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_id)))) >> 0u), uint(6u))), uint(6u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) ^ 0u))))))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 1u), min(_GLF_IDENTITY(uvec2(virtual_gid, 1u), (false ? _GLF_FUZZED(uvec2(76713u, 189048u)) : uvec2(virtual_gid, 1u))), _GLF_IDENTITY(uvec2(virtual_gid, 1u), clamp(uvec2(virtual_gid, 1u), uvec2(virtual_gid, 1u), uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(workgroup_id)))], 4, 64, 2);
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), (true ? (virtual_gid) : _GLF_FUZZED(subgroup_id)))))], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), clamp(~ (_GLF_IDENTITY(~ (4), ~ (~ (~ (4))))), ~ (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(-79238) : ~ (4)))), _GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY((~ (~ (4))) * 1, max((~ (~ (4))) * _GLF_IDENTITY(1, 0 ^ (1)), (~ (~ (4))) * 1)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), 0 | (~ (~ (4)))))), (true ? ~ (_GLF_IDENTITY(4, ~ (~ (4)))) : _GLF_FUZZED(33350))))), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), min(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(64, (64) * 1)))))), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
