#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bvec2 _f0;
 mat2x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 bvec3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_12 {
 uint workgroup_size;
 mat2 _f0;
 ivec3 _f1;
 mat4 _f2;
 bool _f3;
 ivec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 bvec2 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat2 _f1;
 uvec3 _f2;
 uint _f3;
 vec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 uvec4 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 bvec2 _f1;
 vec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_9 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_16 _f2;
 mat3x4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 bvec2 _f1;
 int _f2;
 uint subgroup_size;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 _GLF_struct_5 _f1;
 vec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_3 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 uvec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 vec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 bool _f2;
 bool _f3;
 mat2x3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(576.323)), vec2(_GLF_FUZZED(-3408.4373), _GLF_IDENTITY((injectionSwitch)[1], cos(0.0) * ((injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, sqrt(0.0), log(1.0), 1.0), mat3(mat3(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, sqrt(0.0), log(1.0), 1.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_4(_GLF_struct_0(vec4(1.0), vec2(1.0), 1u), _GLF_struct_1(uvec3(1u), ivec2(1)), _GLF_struct_2(mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.7)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), (bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(false)), ((bool(false))) && true))))))), 1.0)), _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), ((1.0)) - 0.0))))), uvec3(1u), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_struct_3(true)), _GLF_struct_6(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), _GLF_struct_5(mat4x2(1.0), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, (true) && true))), true)), (_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, (true) && true))), true)), true && (bool(bvec2((! (_GLF_IDENTITY(true, (true) && true))), true))))) || false)))))))), _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((true), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), false || (_GLF_IDENTITY((true), ! (! ((true)))))))), ! (! (false || (true))))), false || (! (_GLF_IDENTITY(false || (true), ! (! (false || (true))))))))))), 1, gl_SubgroupSize, _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-1013.8704), _GLF_FUZZED(float(75090))), bvec2(false, false))), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, cos(tan(0.0)), exp(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)), length(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, cos(tan(0.0)), exp(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)), length(0.0), 0.0))))), 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))), vec2(1.0, 1.0))), float(mat2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-1013.8704), _GLF_FUZZED(float(75090))), bvec2(false, false))), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, cos(tan(0.0)), exp(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)), length(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, cos(tan(0.0)), exp(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)), length(0.0), 0.0))))), 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))), vec2(1.0, 1.0))), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) + (1.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(9355.4313)))), 0.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(9355.4313)))), 0.0))))), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))[0], (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))[1]), vec2(_GLF_FUZZED(45.87), _GLF_FUZZED(20.90)), bvec2(false, false)), min(mix(vec2((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))[0], (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))[1]), vec2(_GLF_FUZZED(45.87), _GLF_FUZZED(20.90)), bvec2(false, false)), mix(vec2((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))[0], (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))[1]), vec2(_GLF_FUZZED(45.87), _GLF_FUZZED(20.90)), bvec2(false, false))))))), vec2(1.0, 1.0))) + (1.0))), 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))), min(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))), min(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))))), vec2(1.0, 1.0))) + (1.0))))) : _GLF_FUZZED(-5.7))) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), dot(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-176.541))), min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-176.541))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-176.541))))), 0.0))[0], (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-6.0)), bvec2(false, false))), vec2(0.0, 0.0))), vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(-860.900)), bool(false))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.6)), float(1.0), bool(true))), 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-176.541))), 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-6.0)), bvec2(false, false))), vec2(0.0, 0.0))), vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) + (1.0))))) / 1.0) - 0.0)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.4)), bool(false))), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(64.31) : 0.0)), 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0)))) : _GLF_FUZZED(6118.0243))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(788.676) : 1.0)) * (0.0)))), 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-166.548) : (1.0)))) / 1.0) / 1.0), length(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0)))))), min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-166.548) : _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), min((1.0), (1.0))), (1.0)))))))) / 1.0) / 1.0), length(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), mix(float(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))), float(_GLF_FUZZED(5144.5008)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-166.548) : (1.0)))) / 1.0) / 1.0), length(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (vec2(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0)))))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (1.0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(850.604)), float(0.0), bool(true))), 1.0 * (0.0)))), 0.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-166.548) : (1.0)))) / 1.0) / 1.0), length(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), mat2(1.0) * (vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), mat2(1.0) * (vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.4))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))) + (1.0)))) - 0.0) + 0.0)) / 1.0, ((_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0))) + 0.0), 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], clamp((vec2(0.0, 0.0))[1], (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))[1], _GLF_IDENTITY((vec2(0.0, 0.0))[1], mix(float((_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)))[1]), float(_GLF_FUZZED(-9.1)), bool(false)))))), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-6.0)), bvec2(false, false))), vec2(0.0, 0.0))), vec2(1.0, 1.0))) + (1.0))) / 1.0) - 0.0)) : _GLF_FUZZED(-0.5)))), ivec4(1)), true, true, mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-9.8) : 1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? false ? _GLF_FUZZED(-9.8) : 1.0 : _GLF_FUZZED(576.850)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)).y)) || (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_IDENTITY(false, false || (false)), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))).y)))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(vec2(-2.8, -1.6), 1835.5399, 6.6)) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(1.0), 1.0)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true))), true, true, true))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, true)))), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))))))))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_9(_GLF_struct_8(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false))))))), bvec2(true), vec2(_GLF_IDENTITY(1.0, (1.0) * abs(1.0))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) * 1)))))), _GLF_struct_14(uvec4(1u), uvec4(1u), _GLF_struct_10(bvec3(true), mat2(1.0), uvec3(_GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(vec3(1.0), vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)), 1.0), clamp(vec4(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(30.12)), bool(false)))), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)), 1.0), vec4(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)), 1.0), vec4(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, cos(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(1.0))), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(0.0, 0.0, cos(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(1.0))), 0.0), mat2x4(mat2x4(mat2x4(0.0, 0.0, cos(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(1.0))), 0.0))))))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 1.0))))), uvec2(1u)), _GLF_struct_11(mat3x2(1.0), bvec2(true), ivec2(1), bvec3(true)), _GLF_struct_12(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED((++ subgroup_local_id)))), mat2(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-56496), clamp(true ? 1 : _GLF_FUZZED(-56496), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-56496), min(true ? 1 : _GLF_FUZZED(-56496), true ? 1 : _GLF_FUZZED(-56496))), true ? 1 : _GLF_FUZZED(-56496)))))), (ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))))) - _GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), int(0)))), 0, 0), clamp(ivec3(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))))))), 0, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(0), int(0)))), 0, 0), (ivec3(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(0), int(0)))), 0, 0)) | (ivec3(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(0), int(0)))), 0, 0))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) - (0 >> _GLF_IDENTITY(int(0), int(0)))), 0, 0), max(ivec3(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(0), int(0)))), 0, 0), ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(int(0), int(0))), (false ? _GLF_FUZZED(11683) : _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((0) - (0 >> _GLF_IDENTITY(int(0), int(0))), (0) - (0 >> _GLF_IDENTITY(int(0), int(0))), (0) - (0 >> _GLF_IDENTITY(int(0), int(0)))))))), 0, 0)))))), mat4(1.0), true, ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))))), ivec2(1)), _GLF_struct_13(ivec2(1), bvec3(true), vec2(1.0))), _GLF_struct_16(_GLF_struct_15(bvec2(true), mat2x3(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), mat3x4(1.0), ivec4(1));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_17._f1._f4.workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_17._f1._f4.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_17._f1._f4.workgroup_size) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), uint(uvec2((_GLF_struct_replacement_17._f1._f4.workgroup_size) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0u)))), 0u))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(6.8))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-86.89), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], (false ? _GLF_FUZZED(-937.753) : (injectionSwitch)[0])), _GLF_FUZZED(-98.70)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))) && true))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)) || false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (0 | 1) * (1))])).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size))), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size))) : _GLF_FUZZED(62240u), (true ? ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f1._f1.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_7._f1._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_7._f1._f1.subgroup_size, (_GLF_struct_replacement_7._f1._f1.subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u)))) : _GLF_FUZZED(62240u)) << 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(atomicOr(workgroup_id, subgroup_id))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(atomicOr(workgroup_id, subgroup_id)))) ^ 0u)) + subgroup_base, 1u, 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))), false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + sqrt(0.0), max((injectionSwitch.x) + sqrt(0.0), _GLF_IDENTITY((injectionSwitch.x) + sqrt(0.0), max((injectionSwitch.x) + sqrt(0.0), (injectionSwitch.x) + sqrt(0.0)))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(injectionSwitch.y), bool(true))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - vec2(0.0, 0.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - vec2(0.0, 0.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)) || false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) | (workgroup_base)), workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) % _GLF_struct_replacement_7._f1._f1.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))), false))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))) && true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(2.3, float(float(2.3))))) : injectionSwitch, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(2.3, float(float(2.3))))) : injectionSwitch, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(2.3, float(float(2.3))))) : injectionSwitch, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(2.3, float(float(2.3))))) : injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(log(vec2(1.0, 1.0)))).y)))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) | 0u)], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), max(int(64), int(64))), (false ? _GLF_FUZZED(-18593) : _GLF_IDENTITY(int(64), max(int(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-12270) : 64))) << 0, 1 * ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-12270) : 64))) << 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-12270) : 64))) << 0) : _GLF_FUZZED(-71229)))), int(64)))))), max(int(int(64)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), (ivec4(_GLF_IDENTITY(int(int(64)), clamp(int(int(64)), int(int(64)), _GLF_IDENTITY(int(int(64)), (int(int(64))) >> 0))), 0, 1, _GLF_IDENTITY(0, 0 | (0)))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(4), ivec4(4))))), (int(_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), (ivec4(int(int(64)), 0, 1, 0)) - (_GLF_IDENTITY(ivec4(0, 0, 0, 0), ~ (~ (ivec4(0, 0, 0, 0)))) << _GLF_IDENTITY(ivec4(4), ivec4(4)))))) - 0), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), _GLF_IDENTITY(max(int(64), int(64)), ~ (_GLF_IDENTITY(~ (max(int(64), int(64))), (~ (max(int(64), int(64)))) - (0 >> _GLF_IDENTITY(int(4), int(4)))))))), max(int(int(64)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, (64) - (0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(int(ivec4(int(int(_GLF_IDENTITY(64, 0 | (64)))), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, clamp(64, 64, 64)) : _GLF_FUZZED(-41621))))), 0, 1, 0)))))))) | 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(16046)))))), 0, 1, 0)))))))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(_GLF_IDENTITY(64, 0 + (64))), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(_GLF_IDENTITY(64, (64) | 0))), 0, 1, 0))))))))) * 1) | 0))) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), (false ? _GLF_FUZZED(-43337) : int(int(64)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(_GLF_IDENTITY(64, 0 ^ (64)))))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(15100) : int(_GLF_IDENTITY(ivec4(int(int(64)), 0, _GLF_IDENTITY(1, (1) >> 0), 0), ~ (~ (ivec4(int(int(64)), 0, 1, 0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(15100) : int(_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), ~ (~ (ivec4(int(int(_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-66086))))))), 0, 1, 0))))), (false ? _GLF_FUZZED(15100) : int(_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), ~ (~ (ivec4(int(int(64)), 0, 1, 0)))))) ^ 0)) | (false ? _GLF_FUZZED(15100) : int(_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), ~ (~ (ivec4(int(int(64)), 0, 1, 0))))))))))))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0))) ^ 0, ((_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0))) ^ 0) ^ (0 & 29195))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), _GLF_IDENTITY(max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, _GLF_IDENTITY(0, (0) | (0)))))))), (max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0))))))) >> 0))) | 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(_GLF_IDENTITY(int(64), (int(64)) >> 0), int(64)))), _GLF_IDENTITY(max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))), 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, _GLF_IDENTITY(0, (0) | (0)))))))), (max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(int(64), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(64), (int(64)) * 1)))), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), (ivec4(int(int(64)), 0, 1, 0)) | (_GLF_IDENTITY(ivec4(int(int(64)), 0, 1, 0), (ivec4(int(int(64)), 0, 1, 0)) + ivec4(0, 0, 0, 0)))))))))) >> 0))) | 0))))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 0 ^ (64))))))), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0)) << 0, _GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))) ^ ((_GLF_IDENTITY(int(int(64)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), max(int(64), int(64)))), max(int(int(64)), _GLF_IDENTITY(int(int(64)), _GLF_IDENTITY(int(ivec4(int(int(64)), 0, 1, 0)), (false ? _GLF_FUZZED(15100) : int(ivec4(int(int(64)), 0, 1, 0)))))))) | 0)) << 0)))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
