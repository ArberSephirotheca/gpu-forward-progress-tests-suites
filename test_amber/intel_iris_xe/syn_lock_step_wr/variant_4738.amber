#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3 _f0;
 mat2 _f1;
 mat3 _f2;
 uvec3 _f3;
 ivec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 uvec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 vec2 _f1;
 bvec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 mat2x4 _f1;
 uint subgroup_base;
 _GLF_struct_2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 float _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_0 {
 uint read;
 int _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (_GLF_IDENTITY(! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)), true))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)))) && true), false, true)))))), (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) && true), false, true))))))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), max(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0))))).y)))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), max(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0))))).y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), max(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 1.0))))).y)))))), true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.2))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(312.641), _GLF_FUZZED(7.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))))))))))), true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false)), true && (bool(bvec4(! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-1.3), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))) - vec2(0.0, 0.0)))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-28.86)), bvec2(true, false)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(46.17, -6747.9475, -97.09).x), _GLF_FUZZED(vec3(7.7, 833.638, -3049.6503).y)), bvec2(false, false))).y))))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), true)))), false, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, true && (true)))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-3198.3640))), 1.0, exp(0.0), abs(0.0))), (float(mat2(injectionSwitch.y, 1.0, exp(0.0), abs(0.0)))) - 0.0))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false))), false || (! (false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))) || false) || false)))))), ! (! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (false)))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))) && true))))))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || false))))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.5), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-44.40, -548.127)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), max(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true, ! (! (true))) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? gl_NumWorkGroups.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED((subgroup_id + 163383u)) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (_GLF_IDENTITY(true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id), (true ? true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true))))) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id), (true ? true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(subgroup_local_id)))))))))) >> 0u)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(_GLF_struct_1(mat4x3(1.0), _GLF_IDENTITY(vec2(1.0), vec2(vec3(vec2(1.0), 1.0))), bvec4(true), vec4(1.0)), mat2x4(1.0), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) ^ _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (false ? _GLF_FUZZED(118002u) : _GLF_IDENTITY(((subgroup_size)), 1u * (((subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u), 1u)), (uint(uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))))) * 1u), 1u))) * 1u), _GLF_IDENTITY(clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u), (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) + 0u)) * 1u), 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u), 1u))), (clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), 1u))), (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ ((subgroup_size)), _GLF_IDENTITY((~ ((subgroup_size))), ((~ ((subgroup_size)))) - 0u) * 1u), 1u), (uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u), 1u)) >> uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u), 1u), (uvec2(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) * 1u), 1u)) / (uvec2(0u, 0u) | uvec2(1u, 1u)))))) - 0u)))))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.9)), float(injectionSwitch.x), bool(true)))))), injectionSwitch.x, injectionSwitch.x)))), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))), subgroup_size, subgroup_size)), 0u ^ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) | (0u)) ^ ((subgroup_size))))) + 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) : _GLF_FUZZED(num_workgroup))))) >> 0u) / 1u))))), _GLF_struct_2(mat2x3(1.0), vec4(1.0), mat4x2(1.0), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - log(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(109.737) : 0.0))) - 0.0), 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), uvec3(1u), mat3x4(1.0)), ivec3(1)), mat2x3(1.0), mat4x2(1.0), 1.0, _GLF_struct_5(_GLF_struct_4(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2(1.0), mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED((8819.4354 / (9.8 * 35.17)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)), transpose(_GLF_IDENTITY(transpose(mat3x2(1.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-463.907, 3409.1162)), min(true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-463.907, 3409.1162)), true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-463.907, 3409.1162))))))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(cosh(injectionSwitch.s)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0)), mat2x3(mat2x4(transpose(mat3x2(1.0, determinant(_GLF_IDENTITY(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(1.0, 1.0) * (normalize(vec2(1.0, 1.0)))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3x4(_GLF_IDENTITY(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0), max(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0))))), (mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? mat3(mat3x4(_GLF_IDENTITY(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(step(872.351, -7344.1628)) : 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0))), (mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED((mat4x3(0.7, -405.736, 6.0, 977.229, -37.09, -0.3, -1161.6694, 0.6, -6.3, -6620.3115, 8.4, -7759.1293) * mat3x4(-466.542, 6.6, -2.0, -465.563, 452.125, -82.71, -46.19, 8.3, -53.61, 62.87, -644.278, -389.127))))), mat3(mat4(_GLF_IDENTITY(mat3(mat3x4(_GLF_IDENTITY(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0), max(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0))))), (mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? mat3(mat3x4(_GLF_IDENTITY(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(step(872.351, -7344.1628)) : 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : 1.0)), 1.0))), (mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4671.5292) : _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED((mat4x3(0.7, -405.736, 6.0, 977.229, -37.09, -0.3, -1161.6694, 0.6, -6.3, -6620.3115, 8.4, -7759.1293) * mat3x4(-466.542, 6.6, -2.0, -465.563, 452.125, -82.71, -46.19, 8.3, -53.61, 62.87, -644.278, -389.127)))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), sqrt(0.0), 0.0)))))))))), uvec3(1u), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) | (0 << _GLF_IDENTITY(int(0), int(0)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(ivec4(_GLF_IDENTITY(int(1), min(int(1), int(1))), 0, (1 ^ 0), 0)))), ~ (~ (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))))), int(_GLF_IDENTITY(int(1), min(int(1), int(1))))))))))))), (ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), (int(1)) - 0), int(1))), min(int(1), int(1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(_GLF_IDENTITY(1, ~ (~ (1)))))))) - 0), min(int(1), int(1)))), int(_GLF_IDENTITY(int(1), min(int(1), int(1)))))))))))))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) >> 0))))))), clamp(int(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))) / 1)) * 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) ^ 0), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) / 1))), min(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))), min(int(1), int(1)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), 0 + (int(1)))) ^ 0))), min(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec2(int(1), 1), ivec2(0, 0) | (ivec2(int(1), 1))))), _GLF_IDENTITY(int(1), 0 ^ (int(1)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(1)) ^ 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y))), min(int(1), int(1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | (clamp(0, 0, 0)))) | 0))))), min(int(1), int(1))))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) ^ 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((int(1)) ^ 0))))), min(int(1), int(_GLF_IDENTITY(1, (1) << 0))))))), int(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(1))))))))))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> 0)), int(1)))), clamp(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1)))))))) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1)))))))))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) ^ 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) ^ 0)) / 1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) ^ 0)))))))))))), (ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (int(1))), min(int(1), int(1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) ^ 0))))))))))) - ivec3(0, 0, 0))) / ivec3(1, 1, 1)))), uvec3(1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_6._f0.subgroup_base + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))) || false), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false)), ! (! (false))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3((false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true), true))))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3((false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true), true)))))))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3((false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true), true)))))))))))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)) && true)), ! (! ((false))))), ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))) && true))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))) && true))), (bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))) && true)))) || false))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), ! (! (false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))))))))))) || false)))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x) + 0.0, max((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x) + 0.0, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x) + 0.0)), max((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x) + 0.0, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED(3.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))) || false)), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))) || false)), false, true))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, bool(bool(true))))), bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, bool(bool(true))))), true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_6._f0.subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), _GLF_IDENTITY(uint(uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), 1u, 0u, 0u)), (uint(uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), 1u, 0u, 0u))) << 0u))) - (0u | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(276.189), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(31.72), (_GLF_IDENTITY(_GLF_FUZZED(31.72), _GLF_IDENTITY(float(vec3(_GLF_FUZZED(31.72), 1.0, 0.0)), mix(float(float(vec3(_GLF_FUZZED(31.72), 1.0, 0.0))), float(_GLF_FUZZED(vec3(7.4, 5415.6985, -68.77).r)), bool(false))))) + 0.0)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), false || (bool(bvec3((false), false, false))))) || _GLF_IDENTITY(false, true && (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-794.596, 6.8)) : injectionSwitch)).x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, 0u ^ (_GLF_IDENTITY(90287u, (90287u) - 0u))), 15676u)))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8.2), clamp(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2))), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4726.1744)), float(0.0), bool(true))), 0.0)), abs(0.0), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0)))) * 1.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), max(_GLF_IDENTITY(uvec2(90287u, 15676u), (true ? _GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) / uvec2(1u, 1u)) : _GLF_FUZZED(uvec2(192198u, 133568u)))), uvec2(90287u, 15676u))))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((9.1 / -2.5)), _GLF_FUZZED(-7012.2864)), bvec2(false, false))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), mix(vec2(_GLF_FUZZED(-4148.3564), (_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))[1]), vec2((_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))[0], _GLF_FUZZED(177.404)), bvec2(true, false)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.2), ((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), (vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1])) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u))))))[0], (false ? _GLF_FUZZED(-43.05) : ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u))))))[0])), _GLF_FUZZED(119.586)), bvec2(true, false)))).x)), mix(float(_GLF_FUZZED(-43.47)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), (true ? _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(uvec2(90287u, 15676u)), (_GLF_IDENTITY(uintBitsToFloat(uvec2(90287u, 15676u)), vec2(vec2(uintBitsToFloat(uvec2(90287u, 15676u)))))) - log(vec2(1.0, 1.0)))) : _GLF_FUZZED((atomicAnd(virtual_gid, subgroup_local_id) , injectionSwitch))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY(((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : injectionSwitch)) : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]), vec2((_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), vec2(vec3(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), sqrt(vec2(0.0, 0.0)) + ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))), determinant(mat4(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0)))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(uvec2(90287u, 15676u)), min(uintBitsToFloat(uvec2(90287u, 15676u)), _GLF_IDENTITY(uintBitsToFloat(uvec2(90287u, 15676u)), mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(-508.123)), vec2((uintBitsToFloat(uvec2(90287u, 15676u)))[0], (uintBitsToFloat(uvec2(90287u, 15676u)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), (vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), min(_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(1u), uvec2(1u))) | (uvec2(90287u, 15676u))), uvec2(90287u, 15676u)))))))[1])) / vec2(1.0, 1.0)), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0)), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]), vec2(((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), max(true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, uint(uvec4(90287u, 0u, 1u, 0u))), 15676u))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, uint(uvec4(90287u, 0u, 1u, 0u))), 15676u))), (false ? _GLF_FUZZED(vec2(-3.2)) : true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, uint(uvec4(90287u, 0u, 1u, 0u))), 15676u))))), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, uint(uvec4(90287u, 0u, 1u, 0u))), 15676u))), (false ? _GLF_FUZZED(vec2(-3.2)) : true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, uint(uvec4(90287u, 0u, 1u, 0u))), 15676u))))), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))) / vec2(1.0, 1.0)))))[0], _GLF_FUZZED(119.586)), bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(194859u)), _GLF_FUZZED(-67.44)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), (vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1])) / vec2(1.0, 1.0)), vec2(((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), false, false)), ! (! (bool(bvec3(bool(true), false, false)))))))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) + uvec2(0u, 0u))))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) - 0)], _GLF_FUZZED(119.586)), bvec2(true, false)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-14175))) : _GLF_FUZZED(16128)))]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8.2), min(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2))), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), clamp(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), (false ? _GLF_FUZZED(vec2(-86.38, -56.50)) : ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(_GLF_IDENTITY(90287u, min(90287u, 90287u)), 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), (vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1])) / vec2(1.0, 1.0)), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[_GLF_IDENTITY(1, (1) | (1))]), vec2((_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), (_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))) * vec2(1.0, 1.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), mix(vec2((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))[0], _GLF_FUZZED(-80.67)), vec2(_GLF_FUZZED(-6398.1583), (true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))[1]), bvec2(false, true)))), mix(vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), (false ? _GLF_FUZZED((27.62 * injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), max(_GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))), mat2(1.0) * (_GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))))), vec2(_GLF_IDENTITY(mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0))) * mat3(1.0))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.2, (-8.2) - 0.0)), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), (vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1])) / vec2(1.0, 1.0)), vec2((_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u))))), ((_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u)))))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, _GLF_IDENTITY(15676u, (15676u) | (15676u)))))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), mix(vec2(_GLF_FUZZED(-3372.0135), (((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))[1]), vec2((((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))[0], _GLF_FUZZED(9877.1436)), bvec2(true, false))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]), mix(vec2(_GLF_FUZZED(1720.8299), _GLF_FUZZED(9033.7528)), vec2((vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), mix(vec2(_GLF_FUZZED(-3372.0135), (((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))[1]), vec2((((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))[0], _GLF_FUZZED(9877.1436)), bvec2(true, false))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]))[0], (vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), mix(vec2(_GLF_FUZZED(-3372.0135), (((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))[1]), vec2((((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))))[0], _GLF_FUZZED(9877.1436)), bvec2(true, false))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0), (mat3x4(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u))))), 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0)) * mat3(1.0))))[1]))[1]), bvec2(true, true))), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false))), max(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.2), ((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1]), (vec2(_GLF_FUZZED(-8.2), ((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(uintBitsToFloat(uvec2(90287u, 15676u)))))[1])) / vec2(1.0, 1.0)), vec2(((true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec2(90287u, 15676u), (_GLF_IDENTITY(uvec2(90287u, _GLF_IDENTITY(15676u, (15676u) ^ 0u)), (_GLF_IDENTITY(uvec2(90287u, 15676u), max(_GLF_IDENTITY(uvec2(90287u, 15676u), min(uvec2(90287u, 15676u), uvec2(90287u, 15676u))), _GLF_IDENTITY(uvec2(90287u, 15676u), (uvec2(90287u, 15676u)) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u))) + uvec2(0u, 0u))))))[0], _GLF_FUZZED(119.586)), bvec2(true, false)))).x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_size) : uint(1)))) | (uint(1))), (uint(1)) | 0u)) >> 0u), (_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | 0) : _GLF_FUZZED(_GLF_IDENTITY(93728, max(93728, 93728))))))) >> 0u)) / 1u)) ^ 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], max(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], max(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)])))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))) / 1u)]) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)]))) | _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) / 1u)]), ((buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) / 1u)])) + (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(workgroup_id) : uint(2u))))))), min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)])), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) >> 0u)) / 1u)])), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0))) + _GLF_IDENTITY((buf[virtual_gid]), 0u | ((buf[virtual_gid])))), 4, 64, _GLF_IDENTITY(2, (2) >> 0)), uint(uvec4(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)]) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)]))) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)])), min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)])), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) >> 0u)) / 1u)])), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (buf[virtual_gid])), 4, 64, 2), _GLF_IDENTITY(0u, 1u * (0u)), 1u, 1u))), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)), true))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)), true))), true)), true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (! (true && ((false)))))), false, false, true)), _GLF_IDENTITY(true, true && (true)) && (bool(bvec4(! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (! (true && ((false)))))), false, false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), ! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))))), false || (bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false)))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))))), false || (bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))))), false || (bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false)))))))) || false)))))) || false)), true, true, true)), (bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true, true, true))) && true))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_0.read, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) / 1))), (_GLF_IDENTITY(4, 0 | (4))) >> 0), 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), (4) | 0))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), _GLF_IDENTITY((4) | 0, (_GLF_IDENTITY((4) | 0, (true ? (4) | 0 : _GLF_FUZZED(43055)))) | ((4) | 0)))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), (4) | 0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), (4) | 0))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), _GLF_IDENTITY((4) | 0, (_GLF_IDENTITY((4) | 0, (true ? (4) | 0 : _GLF_FUZZED(43055)))) | ((4) | 0)))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), (4) | 0))))))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) | (4)), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-37336) : _GLF_IDENTITY((4), min((4), (4))))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) | 0, 0 ^ ((4) | 0)), ~ (~ ((4) | 0)))))), (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) + 0)), _GLF_IDENTITY(4, (4) | 0)))) | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))), _GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (4) | 0))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))))), (((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))))) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))))))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (4)))), (4) | 0))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))))), min(((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))))))))) + 0), (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, int(ivec3(_GLF_IDENTITY(8, (8) + (0 >> _GLF_IDENTITY(int(5), int(5)))), 0, 0)))))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), min(~ (4), ~ (4))), (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, (4) - 0))))) + 0), min(~ (4), ~ (_GLF_IDENTITY(4, (4) / 1))))) - 0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(488.487)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, log(1.0), 0.0, tan(0.0), 1.0, 1.0, tan(0.0)))).x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 0.0, cos(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec3(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0)), mix(float(_GLF_FUZZED(-2894.5914)), float(float(vec3(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0))), bool(true))))), tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7803.9095)), bool(false))), (false ? _GLF_FUZZED(-2.8) : 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))), true)), false || (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))) ? injectionSwitch.y : _GLF_FUZZED(-4.8)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7093.3280)), vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), bvec2(false, true))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(-82.30)), vec2(_GLF_FUZZED(-8777.4546), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))[1], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(1, clamp(1, 1, 1))]) - 0.0)), bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
