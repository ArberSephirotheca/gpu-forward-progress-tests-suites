#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), false, false)))))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (false)), false, _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(bvec3(bvec3((! (false)), false, _GLF_IDENTITY(true, ! (! (true))))))))))), false || (bool(_GLF_IDENTITY(bvec3((! (false)), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (false)), false, _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(bvec3(bvec3((! (false)), false, _GLF_IDENTITY(true, ! (! (true)))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.1, 1427.4534)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0), (mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0)) * mat4(1.0)))))).x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), bool(bool(false)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, false)))) && true))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x)), _GLF_IDENTITY((min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), (true ? _GLF_IDENTITY((min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), max(_GLF_IDENTITY((min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), 0u | ((min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))))), (min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))))) : _GLF_FUZZED(subgroup_local_id))) << 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(196493u, 96786u, 3727u) ^ uvec3(155356u, 731u, 143734u))))).x, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(196493u, 96786u, 3727u) ^ uvec3(155356u, 731u, 143734u))))).x, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(196493u, 96786u, 3727u) ^ uvec3(155356u, 731u, 143734u))))).x)), 1u * (gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(97642u) : gl_NumWorkGroups.x)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(97642u) : gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(97642u) : gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(97642u) : gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(97642u) : gl_NumWorkGroups.x)))), (0u | 0u))))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(sqrt(1.0)), 0.0))), mat2(1.0) * (injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     switch(_GLF_SWITCH(0))
      {
       case 77:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_IDENTITY(_GLF_SWITCH(0), clamp(_GLF_IDENTITY(_GLF_SWITCH(0), ~ (~ (_GLF_IDENTITY(_GLF_SWITCH(0), clamp(_GLF_SWITCH(0), _GLF_SWITCH(0), _GLF_SWITCH(0)))))), _GLF_SWITCH(0), _GLF_SWITCH(0))))
          {
           case 8:
           isnan(vec4(3005.6662, 8591.5443, _GLF_IDENTITY(1.6, _GLF_IDENTITY(mix(float(1.6), float(_GLF_FUZZED((_GLF_IDENTITY(-0.2 + 9.3, (false ? _GLF_FUZZED(mix(dot(vec4(-9828.4768, 3.4, 3663.3897, 9.8), vec4(-3.9, 3.6, 312.997, 307.964)), -62.87, -4.6)) : -0.2 + 9.3))))), bool(false)), (mix(float(1.6), float(_GLF_FUZZED((-0.2 + 9.3))), bool(false))) / 1.0)), 64.79));
           if(_GLF_DEAD(false))
            return;
           case 0:
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch))))).y)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (true) && true)))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           case 60:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.6)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))))) - 0.0))) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           mat3x4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))));
           while(true)
            {
             (_GLF_IDENTITY(uvec3(125833u, 149530u, 38315u) << (_GLF_IDENTITY(uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u), max(uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u), uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)))), clamp(uvec3(125833u, 149530u, 38315u) << _GLF_IDENTITY((_GLF_IDENTITY(uvec3(58444u, _GLF_IDENTITY(121701u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(121701u, 1u * (121701u))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + (~ (_GLF_IDENTITY(121701u, 1u * (121701u))))))), 74289u) - uvec3(83499u, _GLF_IDENTITY(9159u, ~ (~ (9159u))), 138843u), uvec3(0u, 0u, 0u) ^ (uvec3(58444u, _GLF_IDENTITY(121701u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(121701u, 1u * (121701u))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + (~ (_GLF_IDENTITY(121701u, 1u * (121701u))))))), 74289u) - uvec3(83499u, 9159u, 138843u)))), max((uvec3(58444u, _GLF_IDENTITY(121701u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(121701u, 1u * (121701u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (5u) / 1u)))), uint(5u))) + (~ (_GLF_IDENTITY(121701u, _GLF_IDENTITY(1u * (121701u), (1u * (121701u)) | (1u * (121701u))))))))), 74289u) - uvec3(83499u, 9159u, 138843u)), (uvec3(58444u, _GLF_IDENTITY(121701u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(121701u, 1u * (121701u))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + (~ (_GLF_IDENTITY(121701u, 1u * (121701u))))))), 74289u) - uvec3(83499u, 9159u, 138843u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), ~ (~ _GLF_IDENTITY((uvec3(125833u, 149530u, 38315u) << _GLF_IDENTITY((uvec3(58444u, 121701u, _GLF_IDENTITY(74289u, (74289u) ^ 0u)) - uvec3(83499u, 9159u, 138843u)), ((uvec3(58444u, 121701u, _GLF_IDENTITY(74289u, (74289u) ^ 0u)) - uvec3(83499u, 9159u, 138843u))) ^ uvec3(0u, 0u, 0u))), ((uvec3(125833u, 149530u, 38315u) << (uvec3(_GLF_IDENTITY(58444u, (58444u) * 1u), 121701u, _GLF_IDENTITY(74289u, (74289u) ^ 0u)) - uvec3(83499u, 9159u, 138843u)))) | uvec3(0u, 0u, 0u)))), (false ? _GLF_FUZZED(uvec3(63675u, 172994u, 167523u)) : _GLF_IDENTITY(uvec3(125833u, 149530u, 38315u) << _GLF_IDENTITY((uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), ((uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u))) << uvec3(0u, 0u, 0u)), ~ (~ (uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - _GLF_IDENTITY(uvec3(_GLF_IDENTITY(83499u, (83499u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))), ((_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))) | ((_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, (83499u) << 0u), 83499u, 83499u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(83499u, uint(_GLF_IDENTITY(uvec3(83499u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))), (uvec3(83499u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))) - uvec3(0u, 0u, 0u)))), clamp(83499u, 83499u, 83499u))), ((_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))), max(_GLF_IDENTITY((_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))), 0u ^ ((_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))))), (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))) + 0u)), 9159u, _GLF_IDENTITY(138843u, (138843u) + 0u)), _GLF_IDENTITY((uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, (138843u) + 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), ~ (~ (_GLF_IDENTITY((uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, (138843u) + 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), max((uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, (138843u) + 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u), (uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, (138843u) + 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u))))))))))))), _GLF_IDENTITY(uvec3(125833u, 149530u, _GLF_IDENTITY(38315u, _GLF_IDENTITY((38315u), ((38315u)) | ((38315u))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-8.6)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))))) << (uvec3(_GLF_IDENTITY(58444u, clamp(58444u, 58444u, _GLF_IDENTITY(58444u, _GLF_IDENTITY(clamp(58444u, 58444u, 58444u), max(_GLF_IDENTITY(clamp(58444u, 58444u, 58444u), min(clamp(58444u, 58444u, 58444u), clamp(58444u, 58444u, 58444u))), _GLF_IDENTITY(clamp(58444u, 58444u, 58444u), (clamp(58444u, 58444u, 58444u)) ^ 0u)))))), 121701u, 74289u) - _GLF_IDENTITY(uvec3(83499u, 9159u, 138843u), ~ (~ (_GLF_IDENTITY(uvec3(83499u, 9159u, 138843u), (_GLF_IDENTITY(uvec3(83499u, 9159u, 138843u), uvec3(uvec4(uvec3(83499u, 9159u, 138843u), 0u)))) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(125833u, max(125833u, 125833u)), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), clamp(_GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))), 9159u, 138843u)), 0u), (uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, _GLF_IDENTITY(38315u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38315u : _GLF_FUZZED(workgroup_size)))) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, _GLF_IDENTITY(9159u, clamp(9159u, 9159u, 9159u)), 138843u)), 0u), (false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))), uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))), uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(125833u, max(125833u, 125833u)), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), clamp(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(125833u, clamp(125833u, 125833u, 125833u)), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))), 9159u, 138843u)), 0u), (uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), (false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, _GLF_IDENTITY(76379u, (true ? 76379u : _GLF_FUZZED(virtual_gid))))) : uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))), uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - _GLF_IDENTITY(uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, clamp(138843u, 138843u, 138843u))), clamp(_GLF_IDENTITY(uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, clamp(138843u, 138843u, 138843u))), (uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, clamp(138843u, 138843u, 138843u)))) << uvec3(0u, 0u, 0u)), uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, clamp(138843u, 138843u, 138843u))), uvec3(83499u, 9159u, _GLF_IDENTITY(138843u, clamp(138843u, 138843u, 138843u)))))), 0u))), clamp(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(125833u, max(125833u, 125833u)), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), clamp(_GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))), 9159u, 138843u)), 0u), (uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), (false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(_GLF_IDENTITY(uvec3(125833u, _GLF_IDENTITY(149530u, (149530u) - 0u), 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), (uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u))) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), (uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u))) | uvec3(0u, 0u, 0u)))), uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)))), 0u))), uvec4(uvec3(_GLF_IDENTITY(125833u, 0u ^ (_GLF_IDENTITY(125833u, max(125833u, 125833u)))), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))), _GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(125833u, max(125833u, 125833u)), max(_GLF_IDENTITY(_GLF_IDENTITY(125833u, max(125833u, 125833u)), (_GLF_IDENTITY(125833u, max(125833u, 125833u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(125833u, max(125833u, 125833u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(125833u, max(125833u, 125833u)), (_GLF_IDENTITY(125833u, max(125833u, 125833u))) + _GLF_IDENTITY(0u, (0u) << 0u)))))), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << _GLF_IDENTITY((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u)), ((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u))) | ((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u)))), 0u), (_GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << _GLF_IDENTITY((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u)), ((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u))) | ((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u)))), 0u), (uvec4(uvec3(125833u, 149530u, 38315u) << _GLF_IDENTITY((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u)), ((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u))) | ((uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), max(_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)), _GLF_IDENTITY(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, min(83499u, 83499u)), 83499u, 83499u)), 0u ^ (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))))))), 9159u, 138843u)))), 0u)) >> uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u)), ~ (~ (~ ((uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u)))))))), _GLF_IDENTITY(uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, _GLF_IDENTITY(9159u, min(_GLF_IDENTITY(9159u, (9159u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 9159u)), 138843u)), 0u), (false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(uvec3(125833u, _GLF_IDENTITY(149530u, (_GLF_IDENTITY(149530u, (_GLF_IDENTITY(149530u, (true ? 149530u : _GLF_FUZZED(num_workgroup)))) | 0u)) | (149530u)), 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))), uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))), _GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(125833u, max(125833u, 125833u)), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(_GLF_IDENTITY(83499u, (83499u) << 0u), 83499u, 83499u)), 9159u, 138843u)), 0u), clamp(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(125833u, ~ (~ (125833u))), 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(_GLF_IDENTITY(83499u, clamp(83499u, _GLF_IDENTITY(_GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u))) >> 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, clamp(83499u, 83499u, _GLF_IDENTITY(83499u, (_GLF_IDENTITY(83499u, 0u | (83499u))) << 0u)))) >> 0u))), _GLF_IDENTITY(83499u, clamp(83499u, 83499u, 83499u)))), 9159u, 138843u)), 0u), (uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(125833u, 149530u, 38315u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(125833u, 149530u, 38315u)), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(125833u, 149530u, 38315u)), (uvec3(0u, 0u, 0u) ^ (uvec3(125833u, 149530u, 38315u))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(125833u, 149530u, 38315u))))) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(_GLF_IDENTITY(uvec3(125833u, 149530u, 38315u), ~ (_GLF_IDENTITY(~ (uvec3(125833u, 149530u, 38315u)), (~ (uvec3(125833u, 149530u, 38315u))) >> uvec3(0u, 0u, 0u)))) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u)), ((false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(uvec3(125833u, 149530u, 38315u) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))) | ((false ? _GLF_FUZZED(uvec4(56284u, 3311u, 132494u, 76379u)) : uvec4(_GLF_IDENTITY(uvec3(125833u, _GLF_IDENTITY(149530u, uint(_GLF_IDENTITY(uvec2(149530u, 1u), uvec2(uvec2(uvec2(149530u, 1u)))))), 38315u), (uvec3(125833u, _GLF_IDENTITY(149530u, uint(_GLF_IDENTITY(uvec2(149530u, 1u), uvec2(uvec2(uvec2(149530u, 1u)))))), 38315u)) | uvec3(0u, 0u, 0u)) << (uvec3(58444u, 121701u, 74289u) - uvec3(83499u, 9159u, 138843u)), 0u))))))), uvec4(uvec3(125833u, 149530u, 38315u) << (_GLF_IDENTITY(uvec3(58444u, 121701u, 74289u), _GLF_IDENTITY(uvec3(uvec3(uvec3(58444u, 121701u, 74289u))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(uvec3(58444u, 121701u, 74289u))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(uvec3(58444u, 121701u, 74289u))))))))) - uvec3(83499u, 9159u, 138843u)), 0u))))))))))));
             if(_GLF_DEAD(false))
              continue;
             if(false)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               bool _GLF_SWITCH_0_2v[7], _GLF_SWITCH_0_3v;
               _GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), true && (((false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! ((false)))), true && (! ((! ((false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), ! (! (! (true && (! (false))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), true && (((false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! ((false)))), true && (! ((! ((false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), ! (! (! (true && (! (false))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)))), true, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), true && (((false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! ((false)))), true && (! ((! ((false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), ! (! (! (true && (! (false))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)))), true, true), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), true && (((false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! ((false)))), true && (! ((! ((false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))), true && _GLF_IDENTITY((! ((! ((false))))), _GLF_IDENTITY(bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! ((! ((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), ! (! (! (true && (! (false))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)))), true, true), false))), true))))));
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 clamp(_GLF_IDENTITY(abs((46196 * ivec2(-51428, _GLF_IDENTITY(77164, (77164) | (77164))))), _GLF_IDENTITY((abs((46196 * ivec2(-51428, _GLF_IDENTITY(77164, (77164) | (77164)))))), ((abs((46196 * ivec2(-51428, _GLF_IDENTITY(77164, (77164) | (77164))))))) - ivec2(0, 0)) - ivec2(0, 0)), ivec2(ivec4(-48935, 8321, 60923, -51934)), _GLF_IDENTITY(ivec2(15300, -77941), max(_GLF_IDENTITY(ivec2(15300, -77941), max(ivec2(15300, -77941), ivec2(15300, -77941))), _GLF_IDENTITY(ivec2(15300, -77941), ivec2(ivec2(_GLF_IDENTITY(ivec2(15300, -77941), (true ? ivec2(15300, -77941) : _GLF_FUZZED(ivec2(-46894, 12152))))))))));
                }
               else
                {
                }
               mod(vec4(_GLF_IDENTITY(-0.8, float(mat4x3(-0.8, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 4.3, -65.36, 2.1).yyyy, _GLF_IDENTITY(determinant(mat3(518.982, 3.1, 5867.5487, _GLF_IDENTITY(4953.7389, 0.0 + (4953.7389)), 3.4, 3327.3142, 3.4, 9.1, 2.6)), (determinant(mat3(518.982, 3.1, 5867.5487, _GLF_IDENTITY(4953.7389, _GLF_IDENTITY(0.0 + (4953.7389), min(0.0 + (4953.7389), 0.0 + (4953.7389)))), 3.4, 3327.3142, 3.4, 9.1, 2.6))) + 0.0));
               ;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  return;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               int _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[46], _GLF_SWITCH_0_6v;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  continue;
                }
               else
                {
                 mat4(_GLF_IDENTITY(555.664, clamp(_GLF_IDENTITY(555.664, 1.0 * (555.664)), _GLF_IDENTITY(555.664, clamp(_GLF_IDENTITY(555.664, mix(float(_GLF_FUZZED(-2.3)), float(555.664), bool(_GLF_IDENTITY(true, ! (! (true)))))), 555.664, _GLF_IDENTITY(555.664, _GLF_IDENTITY(clamp(555.664, 555.664, _GLF_IDENTITY(555.664, (555.664) / 1.0)), _GLF_IDENTITY(float(mat2x3(clamp(555.664, 555.664, _GLF_IDENTITY(555.664, (555.664) / 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), min(float(mat2x3(clamp(555.664, 555.664, _GLF_IDENTITY(555.664, (555.664) / 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), float(mat2x3(clamp(555.664, 555.664, _GLF_IDENTITY(555.664, (555.664) / 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(555.664, min(555.664, 555.664)), min(_GLF_IDENTITY(_GLF_IDENTITY(555.664, min(555.664, 555.664)), max(_GLF_IDENTITY(_GLF_IDENTITY(555.664, min(555.664, 555.664)), min(_GLF_IDENTITY(555.664, min(555.664, 555.664)), _GLF_IDENTITY(555.664, min(555.664, 555.664)))), _GLF_IDENTITY(555.664, min(555.664, 555.664)))), _GLF_IDENTITY(_GLF_IDENTITY(555.664, min(555.664, 555.664)), (_GLF_IDENTITY(555.664, min(555.664, 555.664))) / 1.0))))), _GLF_IDENTITY(7.0, _GLF_IDENTITY(clamp(7.0, _GLF_IDENTITY(7.0, (_GLF_IDENTITY(7.0, mix(float(_GLF_FUZZED(-6.2)), _GLF_IDENTITY(float(7.0), (false ? _GLF_FUZZED(21.69) : _GLF_IDENTITY(float(7.0), (true ? float(7.0) : _GLF_FUZZED(-680.894))))), bool(true)))) - 0.0), 7.0), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(7.0, 7.0, 7.0), mix(float(_GLF_FUZZED(-64.12)), float(clamp(7.0, 7.0, 7.0)), bool(true))), mix(float(_GLF_FUZZED(7158.4286)), float(clamp(7.0, 7.0, 7.0)), _GLF_IDENTITY(bool(true), false || (bool(true))))), _GLF_IDENTITY(clamp(7.0, 7.0, 7.0), (clamp(7.0, 7.0, 7.0)) * 1.0)))), 5.3, -71.08, 361.610, -4.4, 3.4, 70.58, 7908.4662, 972.562, -1.2, -23.58, 0.0, -6724.8522, _GLF_IDENTITY(-200.569, 0.0 + (-200.569)), 1607.9369);
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               uvec3(138163u, 143732u, 134927u);
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false))))))))))
                break;
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               return;
              }
             return;
            }
           case 59:
           _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-5344.6633, mix(float(_GLF_FUZZED(57.37)), float(-5344.6633), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))))))), (_GLF_IDENTITY(-5344.6633, mix(float(_GLF_FUZZED(57.37)), float(-5344.6633), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.4)))), float(_GLF_FUZZED(471.207)), bool(false)))), float(_GLF_FUZZED((+ -82.39))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), bvec2(bvec2(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.4)))), float(_GLF_FUZZED(471.207)), bool(false)))), float(_GLF_FUZZED((+ -82.39))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), bvec2(bvec2(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.4)))), float(_GLF_FUZZED(471.207)), bool(false)))), float(_GLF_FUZZED((+ -82.39))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), bvec2(bvec2(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))), bool(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))))))))) * 1.0), (_GLF_IDENTITY(-5344.6633, mix(float(_GLF_FUZZED(57.37)), float(-5344.6633), bool(true)))) - 0.0);
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
                  break;
                 return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            return;
           vec3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           mat2x4 _GLF_SWITCH_0_9v;
           break;
           default:
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
              }
             else
              {
               return;
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0)))))) - vec2(0.0, 0.0)).y))))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            return;
           do
            {
             1;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 99:
       do
        {
         mat3(-2746.3966, 3.4, 5.1, -801.318, 3.9, -95.29, 8780.5699, _GLF_IDENTITY(801.564, mix(float(801.564), float(_GLF_FUZZED(-6376.5759)), bool(false))), -7.4);
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       case 0:
       case 21:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       case 81:
       case 53:
       case 37:
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          {
          }
         else
          {
           return;
          }
        }
       case 10:
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
              continue;
            }
          }
         return;
        }
       case 94:
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true)))) * (injectionSwitch)).x > injectionSwitch.y)), true)))), true, false)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true)))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true)))), true, false)))))))))))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       case 72:
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)))))))
        return;
       case 58:
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 4, 64, 4);
       break;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))
                return;
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       case 36:
       (ivec3(54154, _GLF_IDENTITY(_GLF_IDENTITY(-89161, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(35990) : -89161)), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) >> 0))) ^ (_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1) - (-93900 & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(47503) : 0))), ((1) - (-93900 & 0)) | ((1) - (_GLF_IDENTITY(-93900, clamp(-93900, -93900, -93900)) & _GLF_IDENTITY(0, (0) - 0))))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1) - (-93900 & 0), ((1) - (-93900 & 0)) | (_GLF_IDENTITY((1) - (_GLF_IDENTITY(-93900, clamp(-93900, -93900, -93900)) & 0), ~ (~ ((1) - _GLF_IDENTITY((_GLF_IDENTITY(-93900, clamp(-93900, -93900, -93900)) & 0), ((_GLF_IDENTITY(-93900, clamp(-93900, -93900, -93900)) & 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(-93900, clamp(-93900, -93900, -93900)) & 0), ((_GLF_IDENTITY(-93900, clamp(-93900, -93900, -93900)) & 0)) >> 0))))))))), 1, 0))))))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(-89161, 0 ^ (-89161)), 1)), clamp(_GLF_IDENTITY(int(ivec2(-89161, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))) * 1))))), (int(ivec2(-89161, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))) * 1)))))) | (int(ivec2(-89161, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))) * 1))))))), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(-93900, (-93900) * 1) & 0)))))))), ~ (_GLF_IDENTITY(~ (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (-93900 & 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (-93900 & 0)), max(_GLF_IDENTITY(1, (1) - (-93900 & 0)), _GLF_IDENTITY(1, (1) - (-93900 & 0))))) ^ 0)))))), max(_GLF_IDENTITY(-89161, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (-93900 & 0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (-93900 & 0)))))), (_GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, _GLF_IDENTITY((1) - (-93900 & 0), (_GLF_IDENTITY((1) - (-93900 & 0), min((1) - (-93900 & 0), (1) - (-93900 & 0)))) / 1))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), clamp(~ (_GLF_IDENTITY(1, (1) / 1)), ~ (_GLF_IDENTITY(1, (1) / 1)), ~ (_GLF_IDENTITY(1, (1) / 1)))))), 1)))), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (-93900 & 0))))))), (_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(_GLF_IDENTITY(ivec2(-89161, 1), (ivec2(-89161, 1)) | (ivec2(-89161, 1)))), int(ivec2(_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec3(-89161, 1, 1)), (int(ivec3(-89161, 1, 1))) | (_GLF_IDENTITY(int(ivec3(-89161, 1, 1)), int(ivec2(int(ivec3(-89161, 1, 1)), 1)))))), 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))) - (-93900 & 0)))))))) | _GLF_IDENTITY(0, min(0, 0))))))), clamp(~ (0 ^ (_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(-89161, 1)), _GLF_IDENTITY(clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) ^ ((55273 ^ 63558) & 0)))), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (-93900 & 0))))), (0 | 0) + (clamp(int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) ^ ((55273 ^ 63558) & 0)))), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (-93900 & 0))))))))))), ~ (0 ^ (_GLF_IDENTITY(-89161, _GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(-89161, 1), ivec2(0, 0) | _GLF_IDENTITY((ivec2(-89161, 1)), ((ivec2(-89161, 1))) | (ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(bitCount(88433)) : int(ivec2(-89161, 1)))), int(ivec2(-89161, 1)), int(ivec2(-89161, _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) << 0, int(ivec2(((1)) << _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0))))) - (_GLF_IDENTITY(-93900, (_GLF_IDENTITY(true ? -93900 : _GLF_FUZZED(-69644), 1 * (true ? -93900 : _GLF_FUZZED(-69644))))) & 0))))))))), ~ (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(-89161, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(-89161, (_GLF_IDENTITY(-89161, (-89161) << 0)) * 1), 1)), (false ? _GLF_FUZZED(31541) : int(ivec2(_GLF_IDENTITY(-89161, (_GLF_IDENTITY(-89161, (-89161) << 0)) * 1), 1)))), min(int(ivec2(_GLF_IDENTITY(-89161, (_GLF_IDENTITY(-89161, (-89161) << 0)) * 1), 1)), int(ivec2(_GLF_IDENTITY(-89161, (_GLF_IDENTITY(-89161, (-89161) << 0)) * 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 0)))))), _GLF_IDENTITY(int(ivec2(-89161, 1)), clamp(int(ivec2(-89161, 1)), int(ivec2(_GLF_IDENTITY(-89161, (false ? _GLF_FUZZED((-98058 * 10170)) : -89161)), 1)), int(ivec2(-89161, _GLF_IDENTITY(1, (1) - (-93900 & 0)))))))))))))) / 1)), -33268) * 73247);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 56:
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
        return;
       uvec2 _GLF_SWITCH_0_10v;
       default:
       if(_GLF_DEAD(false))
        return;
       1;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) << 0)), (~ (4)) | (~ (4))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) << 0)), (~ (4)) | (~ (4)))) / 1))), 64, 2);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
