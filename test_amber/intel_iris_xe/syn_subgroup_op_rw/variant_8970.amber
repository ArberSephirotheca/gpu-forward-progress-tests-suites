#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x2 _f0;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat4 _f1;
 mat2x4 _f2;
 vec4 _f3;
 uvec2 _f4;
 mat3x4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 mat2 _f1;
 _GLF_struct_3 _f2;
 uvec2 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 vec2 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 uvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_6 {
 bool _f0;
 uint subgroup_base;
 _GLF_struct_1 _f1;
 _GLF_struct_5 _f2;
 uvec2 _f3;
 uvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, true))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(true, subgroup_id * subgroup_size, _GLF_struct_1(_GLF_struct_0(bvec4(true), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))))), mat4x3(1.0), uvec3(1u), uvec4(1u), mat4x2(1.0))), _GLF_struct_5(_GLF_struct_2(mat3x2(1.0), uvec2(1u)), mat2(1.0), _GLF_struct_3(1, mat4(1.0), mat2x4(1.0), vec4(1.0), uvec2(1u), mat3x4(1.0), uvec3(1u)), uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))), 1u))), _GLF_struct_4(mat3x2(1.0))), uvec2(_GLF_IDENTITY(1u, uint(uint(1u)))), uvec3(1u));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_6.subgroup_base + _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_6.subgroup_base, (workgroup_base + _GLF_struct_replacement_6.subgroup_base) + (0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) * 1u))))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uint((subgroup_local_id) | (subgroup_local_id)))), _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u), (subgroup_local_id) | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id))) << 0u)), (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(121864u, ~ (~ (121864u))), -7740, -13281)) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))) / 1u) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-7.8), _GLF_FUZZED(19.88)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))), true, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (64))), 64)), 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false)))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 0.0)))), vec2(vec4(injectionSwitch, 1.0, 0.0))))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) - abs(0.0))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)) << 0u)) ^ 0u)], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), true))), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), true, false, true))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, ((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1)), min(int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), int(0))), (true ? (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(-61764) : int(7))), int(7))), min((0 << _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(0), int(0))) : _GLF_IDENTITY(_GLF_FUZZED(48251), (_GLF_FUZZED(48251)) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), (true ? ((_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))) : _GLF_FUZZED(int(-4.1)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), (true ? (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), min((0 << _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) + 0)) : _GLF_IDENTITY(_GLF_FUZZED(48251), (_GLF_FUZZED(48251)) << 0)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), 1 * (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), (true ? (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), min((0 << _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(0), int(0))) : _GLF_IDENTITY(_GLF_FUZZED(48251), (_GLF_FUZZED(48251)) << 0))))))), 1, 1)), _GLF_IDENTITY(int(ivec4(4, ((0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7, 1 * (7)) : _GLF_FUZZED(56887)))))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1)), max(int(ivec4(4, ((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1)), int(ivec4(4, ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 + (int(7))), ~ (~ (int(7)))), 1, (0 ^ 0))))), max(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | (7)), 7))), int(7)), 0 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1)))))), min(int(ivec4(4, ((_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(74579, clamp(74579, 74579, 74579))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(74579, clamp(74579, 74579, 74579))), (_GLF_FUZZED(_GLF_IDENTITY(74579, clamp(74579, 74579, 74579)))) | 0)) ^ 0) : 0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(74579, clamp(74579, 74579, 74579))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(74579, clamp(74579, 74579, 74579))), (_GLF_FUZZED(_GLF_IDENTITY(74579, clamp(74579, 74579, 74579)))) | 0)) ^ 0) : 0) ^ 0))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))), 1, 1)), int(ivec4(4, (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))) >> 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(7, ~ (~ (7))), (_GLF_IDENTITY(7, ~ (~ (7)))) / 1) : _GLF_FUZZED(-15366))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), (_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366)))) >> (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0)))), _GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) << 0)) | (7)), ~ (~ (7))) : _GLF_FUZZED(-15366))), _GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), 0 | (clamp(1, 1, 1))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1)), clamp(int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1)), (int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))) | (int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1)))), ~ (~ (int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(_GLF_IDENTITY(0, min(0, 0)), 0))))), int(7))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))))) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))))), min(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))))), int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))))), 1, 1), (ivec3(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))))), 1, 1)) - ivec3(0, 0, 0)))))), int(7))), max((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (_GLF_IDENTITY(0, max(0, 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))) ^ 0))) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, ~ (~ (7))))), min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))))), int(7)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ _GLF_IDENTITY((7), ((7)) | ((7))))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) >> 0)) >> (0 << _GLF_IDENTITY(int(4), int(4)))), 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) - 0)))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))) >> (ivec2(3327, -95635) & ivec2(0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), clamp(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), _GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), _GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))) >> (ivec2(3327, -95635) & ivec2(0, 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(591.537)), float(injectionSwitch.y), bool(true)))))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec2(0, 0))) >> _GLF_IDENTITY((ivec2(3327, -95635) & ivec2(0, 0)), ivec2(ivec3((ivec2(3327, -95635) & ivec2(0, 0)), 0)))))) | (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | 0)))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))))), int(7)))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))) >> 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(14235) : 7)))), _GLF_IDENTITY(1, min(1, 1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, _GLF_IDENTITY(min(7, 7), min(min(7, 7), min(7, 7)))), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))).y))), _GLF_IDENTITY(~ (~ (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))))), (~ (~ (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y)))))) << ivec2(0, 0)))))) << ivec2(0, 0)), ivec2(1, 1) * (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (false ? _GLF_FUZZED(14235) : 7)))), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (false ? _GLF_FUZZED(14235) : 7)))), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, ~ (~ (7))) : _GLF_FUZZED(-15366))), int(ivec2(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (false ? _GLF_FUZZED(14235) : 7)))), 1))), int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y)), 0 | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), max(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, min(7, 7)))), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[1]), vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(-9458.3204)), bvec2(false, false))), 0.0, abs(1.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0)), max(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[1]), vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(-9458.3204)), bvec2(false, false))), 0.0, abs(1.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0)), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[1]), vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(-9458.3204)), bvec2(false, false))), 0.0, abs(1.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0))))).y)))) | (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 1))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y)))))) * ivec2(1, 1)), ivec2(0, 0) + (ivec2(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3729)))))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[0], _GLF_FUZZED(-912.591)), vec2(_GLF_FUZZED(977.818), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))[1]), bvec2(false, true)))) * sqrt(vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y) / 1.0)))))))))))) << ivec2(0, 0))))))), int(7)))))) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) >> 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) >> 0))) | 0), (int(4)) | (int(4)))) / 1), int(4)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) - 0)), 1, 1))))));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
