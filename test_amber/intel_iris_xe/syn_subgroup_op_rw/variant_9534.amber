#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.2), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-7251.1783)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false), true, true, false))), true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.2, -9.5)) : injectionSwitch)))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(-7.5, -38.64, _GLF_IDENTITY(-17.61, clamp(-17.61, -17.61, -17.61)), 28.69))))))), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(-7.5, -38.64, _GLF_IDENTITY(-17.61, clamp(-17.61, -17.61, -17.61)), 28.69)))))))))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(-7.5, -38.64, -17.61, 28.69)))))))).x > injectionSwitch.y), true, true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, abs(1.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), true, true, false)))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(3.1, 5999.7577)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.7) : injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))), uint(uvec2((subgroup_local_id), _GLF_IDENTITY(0u, (0u) / 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u)) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size)) << 0u)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4448.5631)), vec2(_GLF_FUZZED(1.2), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), (false) && true)))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(50334, ~ (~ (50334)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))) ? 4 : _GLF_FUZZED(_GLF_IDENTITY(50334, ~ (~ (50334)))), max(true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(50334, ~ (~ (50334)))), true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(50334, ~ (~ (50334)))))) : _GLF_FUZZED(-40405)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? 4 : _GLF_FUZZED(50334)), (false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? 4 : _GLF_FUZZED(50334))) * 1)))))), 64, 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), (_GLF_IDENTITY((_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(50334), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) >> 0), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(50334)), ~ (~ (~ (true ? 4 : _GLF_FUZZED(50334)))))))), ((true ? 4 : _GLF_FUZZED(50334))) << 0)) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)), (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0))) | (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((43974 ^ 44874), ((43974 ^ 44874)) << 0)) : (true ? 4 : _GLF_FUZZED(50334))))))), 64, 2), 1u, 1u, 0u), (true ? _GLF_IDENTITY(uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, min(4, 4)))), min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), (false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? 4 : _GLF_FUZZED(50334))))))), 64, 2), 1u, 1u, 0u), (uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), (_GLF_IDENTITY(false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, ((4) + 0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))))) : _GLF_FUZZED(50334)), (true ? false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? _GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, (0) / 1)) : _GLF_FUZZED(50334)) : _GLF_FUZZED(75177)))))))), 64, 2), 1u, 1u, 0u)) * uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(atomicMax(next_virtual_gid, subgroup_id)), (true ? _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)) : _GLF_FUZZED(atomicMax(next_virtual_gid, subgroup_id))) / 1u))), _GLF_IDENTITY(1u, min(1u, 1u)))) : _GLF_FUZZED(uvec4(172339u, 40251u, 84412u, 2948u))))), 0u + (uint(_GLF_IDENTITY(uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), (false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), max(_GLF_FUZZED(50334), _GLF_FUZZED(50334))))))))), 64, 2), 1u, 1u, 0u), (true ? _GLF_IDENTITY(uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), (false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? 4 : _GLF_FUZZED(50334))))))), 64, 2), 1u, 1u, 0u), (uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), (false ? _GLF_FUZZED((43974 ^ 44874)) : (true ? 4 : _GLF_FUZZED(50334))))))), 64, 2), 1u, 1u, 0u)) * uvec4(1u, 1u, 1u, 1u)) : _GLF_FUZZED(uvec4(172339u, 40251u, 84412u, 2948u)))))))), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(ivec4(64, 1, 0, 0))))), 2), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), 64, 2)) / 1u)) | _GLF_IDENTITY(0u, (0u) << 0u)), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), _GLF_IDENTITY(64, min(64, 64)), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(50334)), max((true ? 4 : _GLF_FUZZED(50334)), (true ? 4 : _GLF_FUZZED(50334))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) || false) ? 4 : _GLF_FUZZED(50334))), min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (1 ^ 0) * (_GLF_IDENTITY((~ (4)), min((~ (4)), (~ (4))))))) : _GLF_FUZZED(50334))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_IDENTITY(_GLF_FUZZED(50334), min(_GLF_FUZZED(50334), _GLF_FUZZED(50334)))) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) ^ 0), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(50334, int(ivec2(_GLF_IDENTITY(50334, (50334) >> 0), 1)))), clamp(_GLF_FUZZED(50334), _GLF_FUZZED(50334), _GLF_FUZZED(50334))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ (0 | 0)))))), ~ (~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.69)), vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))) << (1 ^ 1))))))))), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) ^ 0), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_FUZZED(50334), _GLF_FUZZED(50334), _GLF_FUZZED(50334))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ (0 | 0)))))), ~ (~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.69)), vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))) << (1 ^ 1))))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) ^ 0), int(ivec3(_GLF_FUZZED(_GLF_IDENTITY(50334, (50334) << (0 >> _GLF_IDENTITY(int(4), int(4))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_FUZZED(50334), max(_GLF_FUZZED(50334), _GLF_FUZZED(50334))), _GLF_FUZZED(50334))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ (0 | 0)))))), ~ (~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(_GLF_IDENTITY(50334, (false ? _GLF_FUZZED(-47313) : 50334))), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.69)), vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))) << (1 ^ 1))))))))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(50334), clamp(true ? 4 : _GLF_FUZZED(50334), true ? 4 : _GLF_FUZZED(50334), true ? 4 : _GLF_FUZZED(50334))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) || false) ? 4 : _GLF_FUZZED(50334))), min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(50334))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * int(_GLF_ONE(1.0, injectionSwitch.y))), (true ? 4 : _GLF_FUZZED(50334))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) ^ 0), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec4(_GLF_FUZZED(50334), 0, 0, 0))), _GLF_FUZZED(50334))), _GLF_FUZZED(50334))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ (0 | 0)))))), ~ (~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.69)), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1])), clamp(mat2(1.0) * (vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1])), mat2(1.0) * (vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1])), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1])), (mat2(1.0) * (vec2(_GLF_FUZZED(float(46704u)), (injectionSwitch)[1]))) / vec2(1.0, 1.0))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))) << (1 ^ 1))))))))))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) || false) ? 4 : _GLF_FUZZED(50334))), min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(50334))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) ^ 0), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(50334), 0 + (_GLF_FUZZED(50334))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_FUZZED(_GLF_IDENTITY(50334, (50334) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | (_GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_FUZZED(50334), _GLF_FUZZED(50334), _GLF_FUZZED(50334))))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ (0 | 0)))))), ~ (~ (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(50334), clamp(_GLF_IDENTITY(_GLF_FUZZED(50334), (_GLF_FUZZED(50334)) | 0), _GLF_FUZZED(50334), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(50334), int(ivec3(_GLF_FUZZED(50334), 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.69)), vec2(_GLF_IDENTITY(_GLF_FUZZED(float(46704u)), clamp(_GLF_FUZZED(float(46704u)), _GLF_IDENTITY(_GLF_FUZZED(float(46704u)), (_GLF_FUZZED(float(46704u))) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(float(46704u)), float(float(_GLF_FUZZED(float(46704u))))))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))).y)))))) << (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))))))))))))) >> 0))), 64, 2)))) | (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(50334))))), 64, _GLF_IDENTITY(2, (2) - 0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-179.630, 50.78, 597.292, 1144.3811)) : vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-164.793), _GLF_FUZZED(636.678)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false || (! ((false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false, true, true))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) || false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), int(ivec4(int(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), 0, 1, 0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), clamp(2, 2, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(ivec2(2, 0))))))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2)), (2) / 1)), (true ? (2) : _GLF_FUZZED(50300))) | (2)), 2, 2)), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))) << 0)))))), ~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) ^ 0u), min(subgroup_local_id, subgroup_local_id)))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-95926) : 0)) >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))))), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, (false ? _GLF_FUZZED((25157 << 39754)) : 2))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) >> 0), 2)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, int(ivec3(2, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))), 2, 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), min(clamp(2, 2, 2), clamp(2, 2, 2)))), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(81030) : 2)) : _GLF_FUZZED(28914))))), (0 ^ 0))))) ^ 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), (0 ^ 0))))) ^ 0))))))))))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))) ^ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) / 1), 2)), 2, 2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), max(clamp(2, 2, 2), _GLF_IDENTITY(clamp(2, 2, 2), max(clamp(2, 2, 2), _GLF_IDENTITY(clamp(2, 2, 2), ~ (~ (clamp(2, 2, 2)))))))))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)), 0)))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))) >> ((0 & 54285) << _GLF_IDENTITY(int(5), int(5))))), int(0))), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), 0 ^ (_GLF_IDENTITY(int(0), int(0))))))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), max((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 1u)), (uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 1u))) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))))) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))))))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), 0u + (uint(4u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup))))), (uint(4u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0), ! (! (((_GLF_IDENTITY(subgroup_local_id, ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0)))) || false)), (! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, ~ (~ (2)))))) == 0) || false))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), ivec2(ivec4(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(true, bool(bool(true))) ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), 0, (0 << _GLF_IDENTITY(int(1), int(1)))))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), int(ivec4(int(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-66170)))), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), 0 ^ (_GLF_IDENTITY(int(0), 1 * (int(0))))), int(0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) | 0))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), 0, 1, 0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), clamp(2, 2, 2)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2)), (2) / 1)), _GLF_IDENTITY((true ? _GLF_IDENTITY((2), (false ? _GLF_FUZZED(-26923) : (2))) : _GLF_FUZZED(50300)), ((true ? _GLF_IDENTITY((2), (false ? _GLF_FUZZED(-26923) : (2))) : _GLF_FUZZED(50300))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (2)), 2, 2)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(int(int((0 >> _GLF_IDENTITY(int(0), int(0))))), ~ (~ (int(int((0 >> _GLF_IDENTITY(int(0), int(0))))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))) << 0)))))), ~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) ^ 0u), min(subgroup_local_id, subgroup_local_id)))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1), (false ? _GLF_FUZZED(-95926) : 0)) >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))))), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, 0 ^ (2)))), clamp(2, 2, 2)))), _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), min(clamp(2, 2, 2), clamp(2, 2, 2)))), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), (0 ^ 0))))) ^ 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 1 * (2)), 2, 2)), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), (0 ^ 0))))) ^ 0))))))))))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))) ^ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) / 1), 2)), 2, 2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)), 0)))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(0, max(0, 0)) ^ (int(5))))) | ((0 >> _GLF_IDENTITY(int(0), int(0))))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), max((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))))))))) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), 0u + (uint(4u))), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0), ! (! (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ 0u), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0)))) || false)), (! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), 1 * (int(0)))))) / 1)))), (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), 1 * (int(0)))))) / 1))))) / ivec2(1, 1)), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), int(ivec4(int(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), (false ? _GLF_FUZZED(-63005) : _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))))), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-55436)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec3(int(0), 1, 0)), (int(ivec3(int(0), 1, 0))) | (int(ivec3(int(0), 1, 0)))))) / 1)))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), 0, 1, 0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), clamp(2, 2, 2)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0))))), clamp((int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0))))), ((int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0)))))) >> 0), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0))))), ((int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0)))))) >> 0))) | (int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 1, 0))))))), 0))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2)), (2) / 1)), (true ? (2) : _GLF_FUZZED(50300))) | (2)), 2, 2)), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))) << 0)))))), ~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) ^ 0u), min(subgroup_local_id, subgroup_local_id)))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-95926) : 0)) >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))))), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(2, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)) >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ (~ ((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))), ~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), min(clamp(2, 2, 2), clamp(2, 2, 2)))), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), (0 ^ 0))))) ^ 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-43495) : _GLF_IDENTITY(2, 0 + (2))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0 ^ 0)), (ivec2(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-43495) : _GLF_IDENTITY(2, 0 + (2))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0 ^ 0))) >> ivec2(0, 0))))) ^ 0))))))))))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))) ^ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) / 1), 2)), 2, 2)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)), 0)))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ _GLF_IDENTITY((int(5)), ((int(5))) / 1)))) | ((0 >> _GLF_IDENTITY(int(0), int(0))))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), max((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(65863))), 2))))))), (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))))))))) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, 0u | (4u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u)))))) | 0u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), 0u + (uint(4u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), (uint(4u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0), ! (! (((_GLF_IDENTITY(subgroup_local_id, ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0)))) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false)), true), true)))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), ivec2(ivec4(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), 0, (0 << _GLF_IDENTITY(int(1), int(1)))))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_IDENTITY(_GLF_FUZZED(-14459), min(_GLF_IDENTITY(_GLF_FUZZED(-14459), (_GLF_FUZZED(-14459)) | 0), _GLF_FUZZED(-14459))))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), int(ivec4(int(_GLF_IDENTITY(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-66170)))), (true ? int(0) : _GLF_FUZZED(-14459))), int(0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - 0))))), ivec2(0, 0) + (ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(true, ! (! (true))) ? int(0) : _GLF_FUZZED(-14459))), int(_GLF_IDENTITY(0, 0 ^ (0)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED((48619 | -58220)) : int(0))), _GLF_IDENTITY(int(0), (int(0)) / 1))))))), 0, 1, 0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), clamp(2, 2, 2)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(max(_GLF_IDENTITY(2, 0 | (2)), 2), (max(_GLF_IDENTITY(2, 0 | (2)), 2)) - 0)), (2) / 1)), (true ? (2) : _GLF_FUZZED(50300))) | (2)), 2, 2)), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))) << 0)))))), ~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) ^ 0u), min(subgroup_local_id, subgroup_local_id)))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-95926) : 0), ((false ? _GLF_FUZZED(-95926) : 0)) | 0)) >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))))), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(2, clamp(2, 2, 2))) + 0))), clamp(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (2)), clamp(2, 2, 2)))), _GLF_IDENTITY(2, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0) >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, max(2, 2))))), 2)))), _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), min(clamp(2, 2, 2), clamp(2, 2, 2)))), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), (0 ^ 0))))) ^ 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2)), int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), (0 ^ 0))))) ^ 0))))))))))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))) ^ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) / 1)) / 1), 2)), 2, 2)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)), 0)))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), uint(uint((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)), 0)))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))) | ((0 >> _GLF_IDENTITY(int(0), int(0))))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))) | ((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 | (int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 0))))))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))) * 1u)), max((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_base))) % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), min(~ (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), 0, 0)), 0)))), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))) | ((0 >> _GLF_IDENTITY(int(0), int(0))))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), max((subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), (subgroup_local_id % _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))))))) >> 0u))))) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), 0u + (uint(4u))), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (subgroup_local_id)) % 2) == 0), ! (! (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))) * 1u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(181397u) : 4u))))), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), uint(4u), uint(4u))), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ((_GLF_IDENTITY(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ~ (~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u)), max(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))), clamp((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4u, (4u) ^ 0u))))))))) / 1u) * (subgroup_local_id)) % 2) == 0)))) || false)), (! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false))) || false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(96.42) : injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(550.375)), bool(false))), injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), false || ((! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y))), false, false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY((false ? _GLF_FUZZED(-202.057) : injectionSwitch.y), ((false ? _GLF_FUZZED(-202.057) : injectionSwitch.y)) + tan(0.0)))) - 0.0), injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -502.085)), _GLF_FUZZED(-8.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))), true))).x < injectionSwitch.y)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-202.057) : injectionSwitch.y))) - 0.0), injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(float(subgroup_local_id)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true, true, false))))) && true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7527.1154) : injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(false, false || (false))) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))), injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(942.892)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.8) : 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0]))) - 0.0), injectionSwitch[1])).x > injectionSwitch.y))))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, true))), _GLF_IDENTITY(! (! (! (bool(bvec3(false, true, true))))), true && (! (! (! (bool(bvec3(false, true, true)))))))))), (bool(bvec3(false, true, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(virtual_gid) : virtual_gid))], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false))))), true)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
