#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_38 {
 ivec3 _f0;
} ;

struct _GLF_struct_37 {
 mat3x4 _f0;
 mat4 _f1;
 ivec4 _f2;
 int _f3;
 bvec4 _f4;
 ivec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_36 {
 ivec4 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_36 _f0;
 ivec2 _f1;
 _GLF_struct_37 _f2;
 mat4x2 _f3;
 uvec2 _f4;
 _GLF_struct_38 _f5;
} ;

struct _GLF_struct_34 {
 bool _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_33 {
 vec3 _f0;
 mat4x2 _f1;
 mat4 _f2;
 mat4 _f3;
 mat4 _f4;
 uvec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_35 {
 uvec2 _f0;
 mat2 _f1;
 _GLF_struct_33 _f2;
 mat3x2 _f3;
 bool _f4;
 vec3 _f5;
 _GLF_struct_34 _f6;
} ;

struct _GLF_struct_31 {
 uvec3 _f0;
 uvec2 _f1;
 uvec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_30 {
 vec3 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 ivec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_28 {
 mat4x3 _f0;
 vec4 _f1;
 mat2x4 _f2;
 ivec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
 mat3x4 _f3;
 _GLF_struct_31 _f4;
 float _f5;
 bool _f6;
} ;

struct _GLF_struct_40 {
 _GLF_struct_32 _f0;
 mat4x3 _f1;
 _GLF_struct_35 _f2;
 int _f3;
 uint workgroup_id;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
 mat4 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 bvec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_24 {
 uint _f0;
 mat2 _f1;
 uvec4 _f2;
 float _f3;
 bvec3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 vec4 _f1;
 uvec3 _f2;
 mat3 _f3;
 vec2 _f4;
 mat4x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_21 {
 ivec4 _f0;
 mat4 _f1;
 float _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_23 {
 float _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_19 {
 uint _f0;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 vec2 _f1;
 mat3x2 _f2;
 _GLF_struct_19 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_27 {
 vec3 _f0;
 mat4 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_23 _f3;
 vec2 _f4;
 mat4x2 _f5;
 uint num_workgroup;
 _GLF_struct_26 _f6;
} ;

struct _GLF_struct_16 {
 int _f0;
 mat4x2 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 ivec3 _f4;
 ivec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 uint _f1;
} ;

struct _GLF_struct_15 {
 uvec3 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size;
 vec4 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 _GLF_struct_17 _f1;
 ivec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 uint virtual_gid;
 mat2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_11 _f2;
 bvec3 _f3;
 bool _f4;
 float _f5;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 bvec3 _f1;
 vec4 _f2;
 float _f3;
 vec2 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 uvec3 _f1;
 uvec2 _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 bvec3 _f1;
 mat3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_3 {
 float _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 uint subgroup_size;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat2 _f4;
 mat3x4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id;
 _GLF_struct_18 _GLF_struct_replacement_18;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat3x2(1.0), ivec2(1), mat4x3(1.0), mat4x3(1.0), mat2(1.0), mat3x4(1.0), vec2(1.0)), bvec3(true)), gl_SubgroupID);
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_3(1.0), gl_SubgroupSize, _GLF_struct_4(uvec2(1u), bvec3(true), mat3(1.0), ivec3(1)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y = subgroup_local_id;
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(vec3(1.0), mat4(1.0), _GLF_struct_20(mat2x3(1.0), vec2(1.0), mat3x2(1.0), _GLF_struct_19(1u), uvec2(1u)), _GLF_struct_23(1.0, _GLF_struct_21(ivec4(1), mat4(1.0), 1.0, bvec4(true), vec4(1.0)), _GLF_struct_22(ivec2(1), vec4(1.0), uvec3(1u), mat3(1.0), vec2(1.0), mat4x3(1.0), mat3x4(1.0)), vec3(1.0)), vec2(1.0), mat4x2(1.0), gl_NumWorkGroups.x, _GLF_struct_26(_GLF_struct_24(1u, mat2(1.0), uvec4(1u), 1.0, bvec3(true), bvec2(true)), _GLF_struct_25(ivec3(1), mat4(1.0), uvec4(1u), mat4x3(1.0), bvec3(true), bvec3(true), bvec3(true))));
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size;
 _GLF_struct_40 _GLF_struct_replacement_40 = _GLF_struct_40(_GLF_struct_32(_GLF_struct_28(mat4x3(1.0), vec4(1.0), mat2x4(1.0), ivec2(1), true), _GLF_struct_29(mat2x3(1.0), mat2x3(1.0)), _GLF_struct_30(vec3(1.0), bvec4(true), mat4x3(1.0), ivec4(1), mat4x3(1.0)), mat3x4(1.0), _GLF_struct_31(uvec3(1u), uvec2(1u), uvec2(1u), bvec3(true)), 1.0, true), mat4x3(1.0), _GLF_struct_35(uvec2(1u), mat2(1.0), _GLF_struct_33(vec3(1.0), mat4x2(1.0), mat4(1.0), mat4(1.0), mat4(1.0), uvec4(1u), vec2(1.0)), mat3x2(1.0), true, vec3(1.0), _GLF_struct_34(true, mat3x2(1.0))), 1, gl_WorkGroupID.x, _GLF_struct_39(_GLF_struct_36(ivec4(1)), ivec2(1), _GLF_struct_37(mat3x4(1.0), mat4(1.0), ivec4(1), 1, bvec4(true), ivec4(1), mat3(1.0)), mat4x2(1.0), uvec2(1u), _GLF_struct_38(ivec3(1))));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(_GLF_struct_6(ivec4(1), bvec3(true), vec4(1.0), 1.0, vec2(1.0)), mat4(1.0)), uvec3(1u), uvec2(1u), _GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.z * _GLF_struct_replacement_40.workgroup_id);
 _GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y = _GLF_struct_replacement_8.workgroup_base;
 uint subgroup_base = _GLF_struct_replacement_2.subgroup_id * _GLF_struct_replacement_5.subgroup_size;
 GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.x = subgroup_base;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat3x4(1.0), _GLF_struct_9(mat3(1.0), _GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y + GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.x + GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y, mat2(1.0), vec4(1.0)), _GLF_struct_11(_GLF_struct_10(uvec2(1u), uvec2(1u))), bvec3(true), true, 1.0);
 uint next_virtual_gid = _GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.y + GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.x + ((GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + 1) % _GLF_struct_replacement_5.subgroup_size);
 _GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x = next_virtual_gid;
 uint read = atomicLoad(buf[_GLF_struct_replacement_12._f1.virtual_gid], 4, 64, 2);
 if((GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_18._f0.GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size.x], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[_GLF_struct_replacement_12._f1.virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
