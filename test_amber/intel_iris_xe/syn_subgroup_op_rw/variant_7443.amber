#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)), false))))))) || false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(15.51), _GLF_IDENTITY((injectionSwitch)[1], float(vec2((injectionSwitch)[1], sin(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(9795.0382)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && true, ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true) || false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false)) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id)))))), workgroup_id, workgroup_id)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? workgroup_id : _GLF_FUZZED(num_workgroup))), min(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp(-90.75)) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false, true)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_id)), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_id))))), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_id))) - 0u)))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), max(_GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), (_GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), int(ivec4(_GLF_FUZZED((-93391 + -19181)), 0, 1, 0)))) >> 0), _GLF_FUZZED((-93391 + -19181)))), clamp(_GLF_FUZZED((-93391 + _GLF_IDENTITY(-19181, (_GLF_IDENTITY(-19181, (-19181) >> 0)) - 0))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-93391 + -19181), max((-93391 + -19181), (-93391 + -19181)))), max(_GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), (_GLF_FUZZED((_GLF_IDENTITY(-93391 + -19181, (_GLF_IDENTITY(-93391 + -19181, (_GLF_IDENTITY(-93391, clamp(-93391, -93391, _GLF_IDENTITY(-93391, clamp(-93391, -93391, _GLF_IDENTITY(-93391, int(ivec3(-93391, 0, 1))))))) + -19181) | (-93391 + -19181))) / 1)))) / 1), _GLF_FUZZED((_GLF_IDENTITY(-93391 + -19181, 0 + (-93391 + -19181)))))), _GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), (_GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), (_GLF_IDENTITY(_GLF_FUZZED((-93391 + -19181)), (_GLF_FUZZED((-93391 + -19181))) | (_GLF_FUZZED((-93391 + -19181))))) | (_GLF_FUZZED((-93391 + -19181))))) >> 0))) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), min(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (false ? _GLF_FUZZED(85381) : int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))))), (1) << 0), 1))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), min(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (false ? _GLF_FUZZED(85381) : int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))))), (1) << 0), 1))))), clamp(false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), min(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (false ? _GLF_FUZZED(85381) : int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))))), (1) << 0), 1))))), _GLF_IDENTITY(false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), min(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (false ? _GLF_FUZZED(85381) : int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))))), (1) << 0), 1))))), 0 | (false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), min(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (false ? _GLF_FUZZED(85381) : int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))))), (1) << 0), 1))))))), false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), min(_GLF_IDENTITY(int(ivec3(1, 1, 0)), (false ? _GLF_FUZZED(85381) : int(ivec3(1, 1, 0)))), _GLF_IDENTITY(int(ivec3(1, 1, 0)), max(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))))), (1) << 0), 1)))))))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)))), 1)))), uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(1, 1))), ((false ? _GLF_FUZZED(_GLF_IDENTITY((-93391 + _GLF_IDENTITY(-19181, (true ? -19181 : _GLF_FUZZED(-87618)))), (false ? _GLF_FUZZED(-70156) : (-93391 + _GLF_IDENTITY(-19181, (true ? -19181 : _GLF_FUZZED(-87618))))))) : _GLF_IDENTITY(1, max(1, 1)))) - 0)), 1u)))) * 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)))))), 1)))), uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(1, 1))), ((false ? _GLF_FUZZED(_GLF_IDENTITY((-93391 + _GLF_IDENTITY(-19181, (true ? -19181 : _GLF_FUZZED(-87618)))), (false ? _GLF_FUZZED(-70156) : (-93391 + _GLF_IDENTITY(-19181, (true ? -19181 : _GLF_FUZZED(-87618))))))) : _GLF_IDENTITY(1, max(1, 1)))) - 0)), 1u)))) * 1u) / 1u))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY((-93391 + -19181), int(int((-93391 + -19181))))) : _GLF_IDENTITY(1, max(1, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(1, 1))))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(1, 1)))))))))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1))))), 1)), max(false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), int(_GLF_IDENTITY(int(~ (~ (1))), max(int(~ (~ (1))), _GLF_IDENTITY(int(~ (~ (1))), int(ivec4(int(~ (~ (1))), 1, 1, 0)))))))))), 1)), false ? _GLF_FUZZED((-93391 + -19181)) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1))))), 1))))))) % subgroup_size) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0)), (true ? vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0)) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0)), (true ? vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0)) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0)), (true ? vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0)) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y)) || false)) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-2.5), (max(injectionSwitch, injectionSwitch))[1]), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(1661.7063)), bvec2(true, false)))).y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.3)), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(7905.4793)), bool(false))), bool(true))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    return;
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 1u)), uint(uint(uint(uvec3(virtual_gid, 1u, 1u))))))) | (virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) | (virtual_gid), min((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) | (virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) | (virtual_gid), ((_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) | 0u), 1u, 1u)))) | (virtual_gid)) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u))))))) | ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) | (virtual_gid))))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(5)) * (0 | 1)), int(5)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9125) : 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9125) : 64)), (false ? _GLF_FUZZED(int(workgroup_size)) : _GLF_IDENTITY(64, (false ? _GLF_FUZZED(9125) : 64))))) / 1)), ~ (~ ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9125) : 64)))))) | (64)), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (subgroup_local_id) + 0u), subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) + 0u), subgroup_local_id), (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))), subgroup_local_id)) - _GLF_IDENTITY(0u, (0u) >> 0u)) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) << 0u)), (virtual_gid) + 0u))) * 1u) / 1u)))), 0u | (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) + 0u), subgroup_local_id), (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))), subgroup_local_id)) - _GLF_IDENTITY(0u, (0u) >> 0u)) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) << 0u)), (virtual_gid) + 0u))) * 1u) / 1u))))))))) % 2) == 0, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id))) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) * 1)) == 0), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) * 1)) == 0)), false || (! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) * 1)) == 0, bool(bvec4((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) * 1)) == 0, true, false, false)))))))), (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1)))) == 0)), false || (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicMin(workgroup_size, num_workgroup)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, (2) * 1)) == 0, bool(bvec4((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) - 0) * 1)) == 0, true, false, false))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))))) || (true)))))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false)))))))))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))), (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! ((false))))))))))))))) || false)))) || (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false)))))) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), ((injectionSwitch)) * vec2(1.0, 1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(9451.7164)), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), ((injectionSwitch)) * vec2(1.0, 1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(9451.7164)), bvec2(false, false))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) ^ 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))))), true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (injectionSwitch)).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), true)))))))), true && ((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), true)))))))))), true && (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))), (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), true, true, true)))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), true, true, true)))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), true, true, true)))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false)))))))) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.9))), abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(643.796)), clamp(float(_GLF_FUZZED(643.796)), float(_GLF_FUZZED(643.796)), float(_GLF_FUZZED(643.796)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(643.796)), clamp(float(_GLF_FUZZED(643.796)), float(_GLF_FUZZED(643.796)), float(_GLF_FUZZED(643.796)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) * 1.0), (float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -8.1 : 26.66))), vec2(_GLF_FUZZED(-129.280), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), mat2(mat2(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0)))))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), float(vec4(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-787.715)), bool(false))), exp(0.0), 0.0, 0.0))), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y)))))) || false))), false), true)))))))))), true && ((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(257.710)), float(abs(0.0)), bool(true))), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, tan(0.0))), max(float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, tan(0.0))), float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, tan(0.0)))))), 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (false ? _GLF_FUZZED(mat2(0.6, -9.4, -921.126, -537.643)) : transpose(mat2(1.0)))))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(643.796)), (float(_GLF_FUZZED(643.796))) + 0.0), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(29432))), float(0.0), bool(true)))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(643.796)), min(float(_GLF_FUZZED(643.796)), float(_GLF_FUZZED(643.796)))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))).y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(true))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2266.0958), _GLF_FUZZED(8572.6361)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), cos(0.0) * (mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * 1.0)), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0)))))), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-9.2) : float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)))), float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)))), _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0, float(vec2(_GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0, max((float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0, (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(643.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))) + 0.0)), 1.0)))))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x < injectionSwitch.y) || false)) || false))), false), true)))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log2(vec2(-8111.5749, -77.38))) : injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_IDENTITY(false, ! (! (false))))), true && (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || _GLF_IDENTITY(false, true && (false)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))) && true, _GLF_IDENTITY(bool(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))) && true)), true && (bool(_GLF_IDENTITY(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), true, false))))))) && true), (_GLF_IDENTITY(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), true, false))))))) && true), ! (! (bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), true, false))))))) && true))))) || false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), true, false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(0.0), cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), mat3(1.0) * (mat2x3(injectionSwitch, sqrt(0.0), cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(84.18)), bvec2(false, false))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))), false, true, true)), false), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4x3(max(injectionSwitch.y, injectionSwitch.y), cos(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(5), int(5))) ^ _GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), _GLF_IDENTITY(((1)) | ((1)), min(((1)) | ((1)), (_GLF_IDENTITY((1), min((1), (1)))) | ((1))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-87.00)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)))), (true ? float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-87.00)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(-8.3))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || _GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), false))), true, false, false)))), bool(bvec2((_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), false))), true, false, false)))), false))) && true))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)), bool(bvec2(bool(bvec4(false, true, true, true)), false)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) && true), ! (! (_GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) && true))))))))))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), false || (! (_GLF_IDENTITY(! (false), true && (! (false))))))) && true)))), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), ! (! (bool(bvec4(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), false || (! (_GLF_IDENTITY(! (false), true && (! (false))))))) && true)))), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], read, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) / 1), 64)))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, (4) + 0)))) << 0), 4)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
