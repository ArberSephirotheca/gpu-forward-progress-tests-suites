#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))))), false || (! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, bool(bvec3(((_GLF_DEAD(false))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9033.8593))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(9033.8593), (_GLF_FUZZED(9033.8593)) / 1.0))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.36) : 1.0)), 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(sqrt(0.0), 1.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(sqrt(0.0), 1.0, 1.0))))), 1.0, abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat4x3(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9590.5781)), bool(false))), 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0))))), cos(0.0))), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0), mix(vec3(_GLF_FUZZED(-6030.4510), _GLF_FUZZED(79.85), _GLF_FUZZED(_GLF_IDENTITY(-7.0, (-7.0) * _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0)), dot(vec3(log(1.0), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0)))))), vec3((vec3(_GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0))[0], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[1], clamp((vec3(1.0, 0.0, 0.0))[1], (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-8506.3140), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED((true ? -6923.9483 : 5.4))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], float(_GLF_IDENTITY(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0), transpose(transpose(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0)))))), _GLF_FUZZED(2.0), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec3((mix(vec3(_GLF_FUZZED(-8506.3140), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED((true ? -6923.9483 : 5.4))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], float(_GLF_IDENTITY(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0), transpose(transpose(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0)))))), _GLF_FUZZED(2.0), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], _GLF_FUZZED(2.0), (mix(vec3(_GLF_FUZZED(-8506.3140), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED((true ? -6923.9483 : 5.4))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], float(_GLF_IDENTITY(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0), transpose(transpose(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0)))))), _GLF_FUZZED(2.0), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[2]), vec3(_GLF_FUZZED(-59.95), (mix(vec3(_GLF_FUZZED(-8506.3140), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED((true ? -6923.9483 : 5.4))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], float(_GLF_IDENTITY(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0), transpose(transpose(mat2((vec3(1.0, 0.0, 0.0))[0], 0.0, 0.0, 0.0)))))), _GLF_FUZZED(2.0), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1], _GLF_FUZZED(-79.42)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))[1], (vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))[1])), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[2], (false ? _GLF_FUZZED(-8568.5422) : (vec3(1.0, 0.0, 0.0))[2]))), bvec3(true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), (mat3(1.0) * (vec3(0.0, 1.0, 1.0))) * mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))) / abs(1.0)), injectionSwitch.y)) * (vec3(0.0, 1.0, 1.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0))), cos(0.0))))), (mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(0.0), 1.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-3.5) : dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(sqrt(0.0), 1.0, 1.0))))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(0.0), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) : _GLF_FUZZED(vec2(290.636, -0.9)))).y) * (1.0)), abs(abs(1.0))))), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.053)), float(0.0), bool(true))), mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(169.053)), float(0.0), bool(true)))), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0), (vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) - sin(vec3(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - sin(vec3(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(7908.8146)), float(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - sin(vec3(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))))), cos(0.0))), dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), vec3(0.0, 1.0, 1.0)), (dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, tan(0.0), 1.0))), 0.0, 0.0)))), 0.0), vec3(0.0, 1.0, 1.0))) * 1.0)), cos(0.0)))))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat3(injectionSwitch[0], sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(injectionSwitch[0], sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u)) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) | uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), clamp(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) ? _GLF_FUZZED(subgroup_size) : 1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : 1u, (false ? _GLF_FUZZED(subgroup_size) : 1u) / 1u)))))))), 0u | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), clamp(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, 1u), (true ? uvec4(subgroup_size, 1u, 1u, 1u) : _GLF_FUZZED(uvec4(124357u, 113465u, 140857u, 199861u))))))) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))))))))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) << 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (true ? 1u : _GLF_FUZZED(subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), ~ (_GLF_IDENTITY(~ ((true ? 1u : _GLF_FUZZED(subgroup_id))), clamp(~ ((true ? 1u : _GLF_FUZZED(subgroup_id))), ~ ((true ? 1u : _GLF_FUZZED(subgroup_id))), ~ ((true ? 1u : _GLF_FUZZED(subgroup_id)))))))) << 0u)), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(~ (true ? 1u : _GLF_FUZZED(subgroup_id)), min(~ (true ? 1u : _GLF_FUZZED(subgroup_id)), ~ (true ? 1u : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), ~ (~ (true ? 1u : _GLF_FUZZED(subgroup_id)))), 1u, 1u), (uvec3(_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), ~ (~ (true ? 1u : _GLF_FUZZED(subgroup_id)))), 1u, 1u)) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))))) >> 0u))))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))))), 1u)) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (true ? 1u : _GLF_FUZZED(subgroup_id))))), 1u)), clamp((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), 1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(subgroup_id))))), 1u)), ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u))))) | 0u), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))))))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), 1u))) << uvec2(0u, 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))))), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), 1u))))))), 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))), max(_GLF_IDENTITY(~ (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))), _GLF_IDENTITY(~ (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))))), _GLF_IDENTITY(~ (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))), _GLF_IDENTITY(~ (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ~ (1u))))))), 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u), (uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u), min(false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u), false ? _GLF_FUZZED(uvec3(66821u, 98532u, _GLF_IDENTITY(50392u, (_GLF_IDENTITY(50392u, (_GLF_IDENTITY(50392u, (50392u) + 0u)) | 0u)) | (_GLF_IDENTITY(50392u, (50392u) / (1u | 1u)))))) : uvec3(1u, 1u, 1u))))), uvec3(1u, 1u, 1u)))) | _GLF_IDENTITY((uvec3(1u, 1u, 1u)), (_GLF_IDENTITY((uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (1u)), 1u, 1u)) << uvec3(0u, 0u, 0u))) | (uvec3(1u, 1u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (0u & 37469u) ^ (uint(1u))))), 1u), (uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (0u & 37469u) ^ (uint(1u))))), 1u)) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(((subgroup_size) & num_workgroup)))))), min(_GLF_IDENTITY((uvec3(1u, 1u, 1u)), max((uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uvec3(1u, 1u, 1u)), clamp((uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec3(uvec3(1u, 1u, 1u))))), (uvec3(1u, 1u, 1u)))))), (uvec3(1u, 1u, 1u))))))) << uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))) | uvec3(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)), ((uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u))) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u))))))))) | (uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) | (uvec3(1u, 1u, 1u)))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))))), 0u)))) | uvec3(1u, 1u, 1u)), uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (1u)), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, (0u) + 0u))), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u)), ~ (~ ((false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u)))))), uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) >> 0u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u)), ~ (~ ((false ? _GLF_FUZZED(uvec3(66821u, 98532u, 50392u)) : uvec3(1u, 1u, 1u)))))), uvec3(1u, 1u, 1u)))))) | (uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(141892u) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)))), 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(92947u, (92947u) >> 0u), 17346u, 172035u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))) | (uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))) - uvec3(0u, 0u, 0u)))) | uvec3(1u, 1u, 1u)), 0u)))))) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(111439u, _GLF_IDENTITY(115767u, min(115767u, 115767u)), 71333u), max(_GLF_IDENTITY(uvec3(111439u, _GLF_IDENTITY(115767u, min(115767u, 115767u)), 71333u), (uvec3(111439u, _GLF_IDENTITY(115767u, min(115767u, 115767u)), 71333u)) >> uvec3(0u, 0u, 0u)), uvec3(111439u, _GLF_IDENTITY(115767u, min(115767u, 115767u)), 71333u)))) : min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))) | uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) && _GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), true)))), false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false))))))), (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))))) || false))))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, 0u | ((subgroup_size) ^ 0u))), subgroup_size)) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u)) | (subgroup_size)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))), ((subgroup_size)) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(9123.9082), _GLF_FUZZED(2069.8033)), bvec2(false, false)), clamp(mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(9123.9082), _GLF_FUZZED(2069.8033)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(9123.9082), _GLF_FUZZED(2069.8033)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(9123.9082), _GLF_FUZZED(2069.8033)), bvec2(false, false))))).x))) ^ 0u) | 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) || false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), max(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)))), _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))], 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, 0 ^ (64))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 ^ (64))), ((_GLF_IDENTITY(64, 0 ^ (64)))) ^ 0), 0, 0, 0))))), 2);
 if((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) << (0 << _GLF_IDENTITY(int(3), int(3)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((-78420 & -21917))))), (clamp(4, 4, 4)) * 1)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(_GLF_IDENTITY(84671, min(84671, 84671))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), false, true)), (bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y)))))))) && true), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)))))))))))))) && true)), false, true))) || false))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), false, true)), (bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y)))))))) && true), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)))))))))))))) && true)), false, true))) || false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))))))) && true)))), bool(bvec4(_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))))), ! (! (! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))), bool(bvec4((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) || false, _GLF_IDENTITY((((false) && true) || false), ((((false) && true) || false)) || false) && true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) || false, _GLF_IDENTITY((_GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (((false) && true)), bool(bvec2(! (((false) && true)), true))))) || false), ((((false) && true) || false)) || false) && true)))))))), ! (! (bool(bool((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), ! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) || false)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(63.63, 1.8, 749.622, 5971.8967, 8.9, -260.224, 2262.2156, -4.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(63.63, 1.8, 749.622, 5971.8967, 8.9, -260.224, 2262.2156, -4.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(63.63, 1.8, 749.622, 5971.8967, 8.9, -260.224, 2262.2156, -4.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0))))) * 1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(63.63, 1.8, 749.622, 5971.8967, 8.9, -260.224, 2262.2156, -4.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(63.63, 1.8, 749.622, 5971.8967, 8.9, -260.224, 2262.2156, -4.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.2)))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))))))) && true)), false, true)), (bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)))))))))))))) && true)), false, true))) || false))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), false, true)), (bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(-688.463, 6619.6974))) : injectionSwitch)).x > injectionSwitch.y)))))))) && true), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)))))))))))))) && true)), false, true))) || false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, false))))))), bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))))))) && true)))), bool(bvec4(_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))))), ! (! (! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))), bool(bvec4((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), true && (! ((_GLF_IDENTITY(false, (false) && true)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((((false) && true) || false), ((_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))) || false)) || false) && true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true && (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))) || false, _GLF_IDENTITY((_GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (((false) && true)), bool(bvec2(! (((false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))) || false), ((((false) && true) || false)) || false) && true)))))))), ! (! (bool(bool((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), ! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) || false)))))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), false))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), false))))))), true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), true, false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), false || ((bool(bvec2(_GLF_DEAD(false), true)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), false || ((bool(bvec2(_GLF_DEAD(false), true)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))))))))))) || false), bool(bvec2((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))))), true))), bool(bool((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))))), true)))))))))), true))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))), true))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, sqrt(1.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0)), (vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0))) + tan(vec2(0.0, 0.0)))).x > injectionSwitch.y)), false, false))))))))) && (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))), false, false))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true, ((false) && true) || false), true && (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2((false) && true, true)), bvec2(bvec4(bvec2(bvec2((false) && true, true)), false, true))))))))))), bool(bvec3(! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, false)))))) || false)))) || false))))), bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true, ((false) && true) || false), true && (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2((false) && true, true)), bvec2(bvec4(bvec2(bvec2((false) && true, true)), false, true))))))))))), bool(bvec3(! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, false)))))) || false)))) || false)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false)))), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false)))), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false)))), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))))))))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false)))), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))))))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true), false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) && true)) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-5602))), 4)), 64, 4);
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))), (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bool((_GLF_IDENTITY(false, (false) && true))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))))), bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ (64)))))), 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
