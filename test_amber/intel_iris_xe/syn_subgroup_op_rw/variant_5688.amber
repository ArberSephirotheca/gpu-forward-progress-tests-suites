#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))) - 0.0))), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.8 * 5.6))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(7.9)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], (_GLF_IDENTITY((vec2(0.0, 0.0))[1], float(mat3((vec2(0.0, 0.0))[1], 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))) - 0.0)), bvec2(true, true))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec2(-76.19, _GLF_IDENTITY(7243.6429, 0.0 + (7243.6429))), vec2(926.420, -1048.3268))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0))) / exp(0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0, 0.0))))), clamp(float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), mix(float(_GLF_FUZZED(-929.782)), float(float(float(0.0))), bool(true)))))), dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))) - 0.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0)))), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0)))))))))), max(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(758.830) : 0.0)), 0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.3)), bool(false))), 0.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec3(exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(max(vec3(-16.24, 9.1, 291.983), -4977.5534)) : vec3(exp(0.0), 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.0), min(_GLF_IDENTITY(_GLF_FUZZED(2.0), 1.0 * (_GLF_FUZZED(2.0))), _GLF_IDENTITY(_GLF_FUZZED(2.0), max(_GLF_FUZZED(2.0), _GLF_FUZZED(2.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(exp(0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true)), (mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true))) + 0.0)) - 0.0)), min(_GLF_IDENTITY(float(exp(0.0)), mix(float(_GLF_FUZZED(487.412)), float(_GLF_IDENTITY(float(exp(0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(float(exp(0.0)), min(float(exp(0.0)), float(exp(0.0)))), sqrt(1.0))), (false ? _GLF_FUZZED(-8896.4336) : float(vec2(_GLF_IDENTITY(float(exp(0.0)), min(float(exp(0.0)), float(exp(0.0)))), sqrt(1.0))))))), bool(true))), _GLF_IDENTITY(float(exp(_GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true))))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0, 0.0))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-3763.3357)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1]))) * vec2(1.0, 1.0)))).y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(610.979, 4063.2645, 591.914), clamp(vec3(610.979, 4063.2645, 591.914), _GLF_IDENTITY(vec3(610.979, 4063.2645, 591.914), (false ? _GLF_FUZZED(vec3(5025.9268, -6.4, 90.83)) : vec3(610.979, 4063.2645, 591.914))), vec3(610.979, 4063.2645, 591.914)))) : vec3(1.0, 0.0, 0.0))), vec3(exp(0.0), 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0))), float(_GLF_FUZZED(-6.7)), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0))))))), max(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0))))), max(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(758.830) : 0.0)), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec3(exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(max(vec3(-16.24, 9.1, 291.983), -4977.5534)) : vec3(exp(0.0), 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.0), min(_GLF_IDENTITY(_GLF_FUZZED(2.0), 1.0 * (_GLF_FUZZED(2.0))), _GLF_IDENTITY(_GLF_FUZZED(2.0), max(_GLF_FUZZED(2.0), _GLF_FUZZED(2.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(exp(0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true)), (mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true))) + 0.0)) - 0.0)), min(_GLF_IDENTITY(float(exp(0.0)), mix(float(_GLF_FUZZED(487.412)), float(_GLF_IDENTITY(float(exp(0.0)), float(vec2(_GLF_IDENTITY(float(exp(0.0)), min(float(exp(0.0)), float(exp(0.0)))), sqrt(1.0))))), bool(true))), _GLF_IDENTITY(float(exp(_GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true))))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0, 0.0))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-861.865, 4.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))).y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(610.979, 4063.2645, 591.914), mix(vec3(_GLF_FUZZED(-8.6), (vec3(610.979, 4063.2645, 591.914))[1], (vec3(610.979, 4063.2645, 591.914))[2]), vec3((vec3(610.979, 4063.2645, 591.914))[0], _GLF_FUZZED(839.689), _GLF_FUZZED(-40.17)), bvec3(true, false, false))), clamp(vec3(610.979, 4063.2645, 591.914), _GLF_IDENTITY(vec3(610.979, 4063.2645, 591.914), (false ? _GLF_FUZZED(vec3(5025.9268, -6.4, 90.83)) : vec3(610.979, 4063.2645, 591.914))), vec3(610.979, 4063.2645, 591.914)))) : vec3(1.0, 0.0, 0.0))), vec3(exp(0.0), 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.7, 1.0 * (-6.7)))), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0))))))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), float(float(exp(0.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0))))), max(float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(758.830) : 0.0)), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec3(exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(max(vec3(-16.24, 9.1, 291.983), -4977.5534)) : vec3(exp(0.0), 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.0), min(_GLF_IDENTITY(_GLF_FUZZED(2.0), 1.0 * (_GLF_FUZZED(2.0))), _GLF_IDENTITY(_GLF_FUZZED(2.0), max(_GLF_FUZZED(2.0), _GLF_FUZZED(2.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(exp(0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true)), (mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true))) + 0.0)) - 0.0)), min(_GLF_IDENTITY(float(exp(0.0)), mix(float(_GLF_FUZZED(487.412)), float(_GLF_IDENTITY(float(exp(0.0)), float(vec2(_GLF_IDENTITY(float(exp(0.0)), min(float(exp(0.0)), float(exp(0.0)))), sqrt(1.0))))), bool(true))), _GLF_IDENTITY(float(exp(_GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(_GLF_FUZZED(487.412)), float(float(exp(0.0))), bool(true))))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0, 0.0))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y, mix(float(_GLF_FUZZED(626.102)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y))), bool(true))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(610.979, 4063.2645, 591.914), clamp(vec3(610.979, 4063.2645, 591.914), _GLF_IDENTITY(vec3(610.979, 4063.2645, 591.914), (false ? _GLF_FUZZED(vec3(5025.9268, -6.4, 90.83)) : vec3(610.979, 4063.2645, 591.914))), vec3(610.979, 4063.2645, 591.914)))) : vec3(1.0, 0.0, 0.0))), vec3(exp(0.0), 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), float(_GLF_FUZZED(-6.7)), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2.0)), float(exp(0.0)), bool(true))), 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0))))), clamp(float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), 0.0), vec3(exp(0.0), 0.0, 0.0))))), float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), 0.0, 0.0))))), float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-6.5) : 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(length(vec4(0.0, 0.0, 0.0, 0.0))), exp(0.0)))))), (true ? float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(29.69)))), 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(exp(0.0), 0.0, 0.0))))))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), 0.0, 0.0))))), clamp(float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0))))), 0.0), vec3(exp(0.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)))), dot(vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), (_GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) - 0.0))), 0.0), vec3(exp(0.0), 0.0, 0.0))))), float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), 0.0, 0.0))))), float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.5) : 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(length(vec4(0.0, 0.0, 0.0, 0.0))), exp(0.0)))))), (true ? float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(29.69)))), 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(exp(0.0), 0.0, 0.0)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), 0u))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(false))) > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), max(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u))), uint(uvec4(subgroup_base, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true, true)), true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (! (false)) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true, true))))))))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), bool(bvec2((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) || false))))), false)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5, max(-4.5, -4.5)) - 6.5))), bool(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))).x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(_GLF_IDENTITY(false, bool(bool(false)))))))))), true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))) : _GLF_FUZZED(4.7)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7)))) : _GLF_FUZZED(9.7)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_FUZZED((-4.5 - _GLF_IDENTITY(6.5, clamp(6.5, _GLF_IDENTITY(6.5, clamp(6.5, 6.5, 6.5)), 6.5))))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), ((-4.5 - 6.5)) / 1.0))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))))) : _GLF_FUZZED(4.7)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7)))) : _GLF_FUZZED(9.7)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), float(mat3x2((-4.5 - 6.5), 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0))))), bool(false))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - _GLF_IDENTITY(6.5, clamp(6.5, 6.5, 6.5))))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7)))) : _GLF_FUZZED(9.7)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), (vec2(mat2(injectionSwitch, 1.0, 0.0))) * mat2(1.0))))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((-4.5 - 6.5), ((-4.5 - 6.5)) / 1.0), 0.0 + ((-4.5 - 6.5))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((-4.5 - 6.5), ((-4.5 - 6.5)) / 1.0), 0.0 + ((-4.5 - 6.5))))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((-4.5 - 6.5), ((-4.5 - 6.5)) / 1.0), 0.0 + ((-4.5 - 6.5))))))), bool(false))) : _GLF_FUZZED(4.7)))) : _GLF_FUZZED(_GLF_IDENTITY(9.7, min(9.7, 9.7)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))))))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.9)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), min(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), _GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 1.0, round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))))), float(mat3x4(float(vec4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), min(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5)))), _GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 1.0, round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, abs(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))), bool(false))) : _GLF_FUZZED(4.7)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5, (-4.5) / 1.0) - 6.5))), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(599.770, 7527.7100)) : mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5, (-4.5) / 1.0) - 6.5))), bool(false)))) * exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7)))) : _GLF_FUZZED(9.7)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - _GLF_IDENTITY(6.5, clamp(_GLF_IDENTITY(6.5, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(6.5, (6.5) / 1.0), float(mat4x2(_GLF_IDENTITY(6.5, (6.5) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_IDENTITY(6.5, (_GLF_IDENTITY(6.5, clamp(6.5, 6.5, 6.5))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(6.5, clamp(6.5, 6.5, 6.5))))))))), bool(false))) : _GLF_FUZZED(4.7))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))))))), false || (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - _GLF_IDENTITY(_GLF_IDENTITY(6.5, (6.5) - 0.0), (false ? _GLF_FUZZED(vec4(2211.6016, 69.99, 41.54, -81.77).y) : 6.5))))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5585.3733), _GLF_FUZZED((+ -5.5))), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))))))))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false)))), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5 - 6.5, (-4.5 - 6.5) / exp(0.0))))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5, min(_GLF_IDENTITY(_GLF_IDENTITY(-4.5, float(mat4x3(-4.5, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0))), clamp(-4.5, -4.5, -4.5)), -4.5)) - 6.5))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_FUZZED(4.7))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), mix(float(_GLF_IDENTITY((-4.5 - 6.5), ((-4.5 - 6.5)) + 0.0)), float(_GLF_FUZZED(-5.9)), bool(false))))), bool(false))))))), (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5 - 6.5, (-4.5 - 6.5) / exp(0.0))))), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5 - 6.5, (-4.5 - 6.5) / exp(0.0))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-4.5 - 6.5, (-4.5 - 6.5) / exp(0.0))))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(-4.5, min(_GLF_IDENTITY(-4.5, clamp(-4.5, -4.5, -4.5)), -4.5)) - 6.5))), mix(float(_GLF_FUZZED(vec3(-5860.2517, -487.813, -4.8).p)), float(float(_GLF_FUZZED((_GLF_IDENTITY(-4.5, min(_GLF_IDENTITY(-4.5, clamp(-4.5, -4.5, -4.5)), -4.5)) - 6.5)))), bool(true))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED((-4.5 - 6.5)), 0.0 + (_GLF_FUZZED((-4.5 - 6.5))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1286.5408)), bool(false))), mix(float(injectionSwitch.y), float(_GLF_FUZZED((-4.5 - 6.5))), bool(false))), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), 0.0 + ((-4.5 - 6.5))))), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_FUZZED(4.7)) - 0.0))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((-4.5 - 6.5), mix(float(_GLF_IDENTITY((-4.5 - 6.5), _GLF_IDENTITY(_GLF_IDENTITY(((-4.5 - 6.5)) + 0.0, clamp(((-4.5 - 6.5)) + 0.0, ((-4.5 - 6.5)) + 0.0, ((-4.5 - 6.5)) + 0.0)), max(_GLF_IDENTITY(((-4.5 - 6.5)) + 0.0, float(float(((-4.5 - 6.5)) + 0.0))), _GLF_IDENTITY(((-4.5 - 6.5)) + 0.0, _GLF_IDENTITY(float(vec2(((-4.5 - 6.5)) + 0.0, 1.0)), min(_GLF_IDENTITY(float(vec2(((-4.5 - 6.5)) + 0.0, 1.0)), _GLF_IDENTITY(float(mat4x2(float(vec2(((-4.5 - 6.5)) + 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (float(mat4x2(float(vec2(((-4.5 - 6.5)) + 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) - 0.0)), float(vec2(((-4.5 - 6.5)) + 0.0, 1.0))))))))), float(_GLF_FUZZED(-5.9)), bool(false))))), bool(false)))))))) || false))), true, false)), true))))), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, false)))) || false)), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)))))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)), mat2(mat3x2(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0))))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)), mat2(mat3x2(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0))))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0)), mat2(mat3x2(mat2(injectionSwitch.x, 1.0, 0.0, exp(0.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0)) * mat3(1.0))), min(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0)) * mat3(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(45296u)), _GLF_FUZZED(537.775)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED((-0.8 * -528.683)))), (injectionSwitch)[0])), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(685.009)), bvec2(_GLF_IDENTITY(true, (true) || false), false))))[0], clamp((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(45296u)), _GLF_IDENTITY(_GLF_FUZZED(537.775), mix(float(_GLF_FUZZED(537.775)), float(_GLF_FUZZED(4.5)), bool(false)))), bvec2(false, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)))[0], _GLF_FUZZED(-4.3)), vec2(_GLF_FUZZED(-4.3), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)))[1]), bvec2(false, true))), 0.0, 0.0, exp(0.0), determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, length(0.0), 1.0, abs(0.0)))), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)) : _GLF_FUZZED((vec2(-96.24, 51.01) * mat2(-3.1, 989.920, 6456.9486, -5768.1721))))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))), injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))), injectionSwitch)))), injectionSwitch))) / vec2(1.0, 1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))) && true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec4(uint(1), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec4(uint(1), 1u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (~ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))))) << _GLF_IDENTITY((1u ^ 1u), clamp((1u ^ 1u), (1u ^ 1u), _GLF_IDENTITY((1u ^ 1u), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u) ^ 1u)) >> 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec4(uint(1), 1u, 1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), uint(uvec4(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u)))))) | ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))), 0u, 0u, (1u & 1u)))))), (uint(uvec4(uint(1), 1u, 1u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) << (1u ^ 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(1)))) << 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(72.31)), bool(false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, sqrt(1.0), 1.0)), float(mat4(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, sqrt(1.0), 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-36359) : _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY((ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0), clamp((ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0), (ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0), (ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0)))))), (0 << _GLF_IDENTITY(int(6), int(6))) + (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY((ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0), clamp((ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0), (ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0), (ivec4(4, 1, 0, 0)) + ivec4(0, 0, 0, 0)))))))), 4)))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), 0.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(219.541)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), float(_GLF_FUZZED(3408.1630)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
