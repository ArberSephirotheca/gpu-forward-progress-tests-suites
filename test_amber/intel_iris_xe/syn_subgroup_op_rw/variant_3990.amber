#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec4 GLF_merged2_0_3_61_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizeread;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
 uvec4 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base;
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size;
 GLF_merged2_0_3_61_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizeread.xyz = GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz = GLF_merged2_0_3_61_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizeread.xyz;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z = subgroup_id;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.z = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x = subgroup_local_id;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y = workgroup_id;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y;
 uint workgroup_base = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w;
 uint subgroup_base = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z * GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.z;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.w = subgroup_base;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.y = GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.w;
 uint virtual_gid = workgroup_base + GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.y + ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.z);
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x = next_virtual_gid;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged2_0_3_61_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizeread.w = read;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.x = GLF_merged2_0_3_61_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizeread.w;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y = GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_sizesubgroup_base.xyz.x;
 if((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
