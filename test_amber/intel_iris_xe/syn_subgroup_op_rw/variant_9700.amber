#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 float _f0;
 mat3 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 mat3x4 _f4;
 ivec3 _f5;
 float _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 float _f3;
 mat2x4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 vec4 _f1;
 int _f2;
 mat4x2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 ivec2 _f2;
 mat4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 ivec2 _f1;
 uint _f2;
 mat2x3 _f3;
 ivec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uvec4 _f1;
 bool _f2;
 mat2 _f3;
 mat2 _f4;
 mat2 _f5;
 int _f6;
} ;

struct _GLF_struct_2 {
 uint subgroup_base;
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 uint _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_6 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(false, true)))), bool(bvec3(bool(bool(bool(bvec2(false, true)))), true, true))))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true), bool(bool(bool(bvec2(false, true)))))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(56.05)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))), (false ? _GLF_FUZZED((mat2(8.9, -55.69, 8.5, -16.48))) : transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))))))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[0], _GLF_FUZZED(38.95)), vec2(_GLF_IDENTITY(_GLF_FUZZED(6456.9908), clamp(_GLF_IDENTITY(_GLF_FUZZED(6456.9908), (_GLF_FUZZED(6456.9908)) * 1.0), _GLF_FUZZED(6456.9908), _GLF_IDENTITY(_GLF_FUZZED(6456.9908), max(_GLF_FUZZED(6456.9908), _GLF_FUZZED(6456.9908))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(8.0, -68.28, 84.49, _GLF_IDENTITY(9.2, (true ? 9.2 : _GLF_FUZZED(-15.38))))))) : _GLF_FUZZED(mat2(-38.31, -0.8, -6415.5354, 249.709)))), (injectionSwitch) * mat2(1.0))))[1]), bvec2(false, true)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false || (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), true))), false, true))))), false, false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0) : _GLF_FUZZED(mat4x3(9.5, -7.3, -7.8, 403.548, 0.6, -658.782, 232.393, 9388.2274, -9456.4410, 440.944, 7.7, -2.7)))))), injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.y = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-805.903), _GLF_FUZZED(9.5)), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))))))))))) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(310.857)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, bool(bool(true)))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false)))))) || false)) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, (false) && true))) || false))))), (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((float(false) * 388.863))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.y), bool(true)))) - 0.0)))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(vec2(1.0), 1u, _GLF_struct_2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w) ^ 0u), _GLF_struct_0(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) + 0.0))))), (mat4x2(1.0, abs(1.0), 1.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(min(cos(0.0), cos(0.0)), (true ? min(cos(0.0), cos(0.0)) : _GLF_FUZZED(21.99)))))), 1.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0))))), uvec4(1u), true, mat2(1.0), mat2(1.0), mat2(1.0), 1), _GLF_struct_1(uvec2(1u), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), 0u | (uint(_GLF_IDENTITY(1u, ~ (~ (1u))))))), 0u ^ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), 0u | (uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))))))))), (1u) >> 0u))), (1u) << 0u), mat2x3(1.0), ivec4(1), 1u)), _GLF_struct_6(_GLF_struct_3(mat4(1.0), vec4(1.0), 1, mat4x2(1.0), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))))), true)))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true)), false))))), _GLF_struct_4(mat2x3(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((1u))) << 0u, (_GLF_IDENTITY((1u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << 0u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uint(uint(6u))), clamp(uint(uint(uint(6u))), uint(uint(uint(6u))), uint(uint(uint(6u))))))) << 0u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))), uint(uint(~ (_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << 0u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))))))), uint(6u))) / 1u)) | ((1u))) << 0u) - 0u))), uint(uvec2(max(1u, _GLF_IDENTITY(1u, (1u) << 0u)), 0u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))))), (0u & 122773u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(uint(true))))) / 1u) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, clamp((1u) << 0u, (1u) << 0u, (1u) << 0u))))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))) >> 0u)))))), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(log(_GLF_IDENTITY(611.598, 1.0 * (611.598))), max(log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))) * (611.598))), log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(0.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))) - log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-12.68)), bool(false))))))), 1.0, 1.0))) : _GLF_FUZZED(3433.6412))), 1.0, 1.0)), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, cos(0.0), determinant(mat4(0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(7.2)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0)), 0.0 + (_GLF_IDENTITY(float(mat3x4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, cos(0.0), determinant(mat4(0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(7.2)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0)), 0.0 + (float(mat3x4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, cos(0.0), determinant(mat4(0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(7.2)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0))))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0) + (mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0)))))), dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0), (true ? vec4(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mix(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-6.8, -8.4, 9.9, _GLF_IDENTITY(4331.2138, (false ? _GLF_FUZZED(7195.2477) : 4331.2138))), vec4(mat3x4(_GLF_IDENTITY(vec4(-6.8, -8.4, 9.9, _GLF_IDENTITY(4331.2138, (false ? _GLF_FUZZED(7195.2477) : 4331.2138))), max(vec4(-6.8, -8.4, 9.9, _GLF_IDENTITY(4331.2138, (false ? _GLF_FUZZED(7195.2477) : 4331.2138))), _GLF_IDENTITY(vec4(-6.8, -8.4, 9.9, _GLF_IDENTITY(4331.2138, (false ? _GLF_FUZZED(7195.2477) : 4331.2138))), max(vec4(-6.8, -8.4, 9.9, _GLF_IDENTITY(4331.2138, (false ? _GLF_FUZZED(7195.2477) : 4331.2138))), vec4(-6.8, -8.4, 9.9, _GLF_IDENTITY(4331.2138, (false ? _GLF_FUZZED(7195.2477) : 4331.2138))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(vec4(-6.8, -8.4, 9.9, 4331.2138), vec4(-6.8, -8.4, 9.9, 4331.2138), _GLF_IDENTITY(vec4(-6.8, -8.4, 9.9, 4331.2138), (false ? _GLF_FUZZED(vec4(-874.528, -1361.5299, -6.8, 7.4)) : vec4(-6.8, -8.4, 9.9, 4331.2138))))), vec4(vec2(-0.8, -2839.5990), vec2(7158.6601, 78.30)), max(vec4(5.1, -29.42, -9.2, -46.91), -98.43))))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-63.89) : 0.0))), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))) - tan(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(70.88)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0))) * (611.598)))))))), (true ? _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(log(_GLF_IDENTITY(611.598, 1.0 * (611.598))), max(log(_GLF_IDENTITY(_GLF_IDENTITY(611.598, (true ? 611.598 : _GLF_FUZZED(59.54))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false)))))))) * (611.598))), log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), tan(0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(60461, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(60461, clamp(60461, 60461, 60461))), max(~ (_GLF_IDENTITY(60461, clamp(60461, 60461, 60461))), ~ (_GLF_IDENTITY(60461, clamp(60461, 60461, 60461))))))))) : 0.0)), log(1.0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))), (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))), (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 0.0, 0.0, log(1.0))))))) - log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0))) + (mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(acos(-1.2)) : 1.0))) * (_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), (true ? vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0) : _GLF_FUZZED(vec4(79.10, 0.5, -7.5, 58.86))))))))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), vec4(1.0, 1.0, 1.0, 1.0))), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(sin(-59.32)) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-9.0)), bool(false))))), 0.0, abs(0.0), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-4713.1976, -3195.9553, -7.7, 534.188)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(-4789.4986, 419.041, -646.153, 808.804, 8.0, 46.88, -7.2, -2114.7055, 18.98, 28.29, 6933.7413, -20.26, 177.998, -7.1, -3.7, -9883.7107)))))))))), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0)), determinant(mat3(log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0)), float(mat3x2(float(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0)), determinant(mat3(log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))), 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * (611.598)))))))), max((1.0) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(log(_GLF_IDENTITY(611.598, 1.0 * (611.598))), _GLF_IDENTITY(max(log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) * (611.598))), log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(mat4(1.0, determinant(mat4(0.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))) - log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-55.00)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), max(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, cos(0.0))))), vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0)))))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), min(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * (611.598)))), max(max(log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), false, false)))))) * (_GLF_IDENTITY(611.598, mix(float(_GLF_IDENTITY(611.598, max(611.598, 611.598))), _GLF_IDENTITY(float(_GLF_FUZZED(-79.16)), mix(float(float(_GLF_FUZZED(-79.16))), float(_GLF_FUZZED(((145.541 / 436.107)))), bool(false))), bool(false)))))), log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(0.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))) - log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (0.0) - 0.0))) * (vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.8)), bool(false))))) : _GLF_FUZZED(64.46))), (1.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0)))))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), min(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), (dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))) + 0.0), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), mix(float(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))), float(_GLF_FUZZED(-5.2)), bool(false)))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * (611.598)))), max(log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) * (611.598))), log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(0.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0))))), max(tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0))))), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0))))))), 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-311.848))), 0.0), clamp(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-311.848))), 0.0), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-311.848))), 0.0), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-311.848))), 0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, log(1.0))))) - log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0))), (true ? _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0))) : _GLF_FUZZED(-613.332))) : _GLF_FUZZED(pow(30.08, -2.8)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED((-0.2 * -947.923)) : clamp(1.0, 1.0, 1.0))))) - 0.0)) * (vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0)))))), dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1726.1049)), bool(false))), 1.0, 1.0))) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false))))))) / 1.0), 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * (611.598)))))))))), (1.0) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(log(_GLF_IDENTITY(611.598, 1.0 * (611.598))), max(log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(9089.1527, 1.5).r)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))))))))) * (611.598))), log(_GLF_IDENTITY(611.598, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(0.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))) - log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(-9.2, 6.1, -8.8, -86.32, -73.92, -3.4, -9710.6125, -7.0, -7.5, 763.804, -5923.4482, -9.1, 9.5, -5.6, 74.91, -3.2))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (vec4(1.0, 1.0, 1.0, 1.0)))))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(60.18) : 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(0.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, log(1.0))))) - log(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(60.18) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.2)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), (false ? _GLF_FUZZED(3720.2057) : _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0)), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(60.18) : 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-83.25)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(948.114)), float(1.0), bool(true)))), bool(true)))))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), mix(float(dot(vec4(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(8428.9576, (-2.3)))))), clamp(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(8428.9576, (-2.3)))))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(8428.9576, (-2.3)))))), max(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(8428.9576, (-2.3)))))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(8428.9576, (-2.3)))))))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(8428.9576, (-2.3)))))))), vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(60.18) : 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), abs(0.0), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, abs(0.0), 1.0), max(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))))), float(_GLF_FUZZED(-0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0) * (611.598)))))))))) : _GLF_FUZZED(15.72))))) + 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (1.0)), mat2x4(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) + 0.0, max((1.0) + 0.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)), min((1.0) + 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-884.308)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))), false || (bool(false))), (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-857.330)), float(float(1.0)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), _GLF_IDENTITY(float(_GLF_FUZZED(-884.308)), (true ? float(_GLF_FUZZED(-884.308)) : _GLF_FUZZED(7.1))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || false))), ! (! ((bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))) || false, ((_GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))) || false) && true))) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), max(float(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-884.308)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))))) || false))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.2)))))) + 0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, cos(0.0)))), 0.0, 1.0))), 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-884.308)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || false), (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))))), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false))))))) || false))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(706.407))), 1.0)))))))) + 0.0))))), ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((+ -19365)) : 1))), mat4(1.0), _GLF_struct_5(_GLF_IDENTITY(1.0, (1.0) - 0.0), mat3(1.0), uvec2(1u), mat3x2(1.0), mat3x4(1.0), ivec3(1), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), float(vec2(_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) / 1u, _GLF_IDENTITY(0u, (0u) << 0u) | ((workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) / 1u))) : _GLF_FUZZED(workgroup_id))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false))))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)))))))).w), (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)))), ((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size))))) * uvec4(1u, 1u, 1u, 1u))).w)) >> 0u), (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size))))).w), (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)))), ((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size))))) * uvec4(1u, 1u, 1u, 1u))).w)) >> 0u)) - (0u ^ 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u);
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(64, (64) / 1)), int(ivec3(int(64), 1, 0))), int(64), int(_GLF_IDENTITY(64, int(ivec4(64, 0, 0, 0)))))))), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(64), clamp(int(64), int(64), _GLF_IDENTITY(int(64), ~ _GLF_IDENTITY((~ (int(64))), int(int((~ (int(64))))))))), int(ivec3(int(64), 1, 0))), int(64), int(64))))), 2)) * 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_DEAD(false)) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, ~ (~ (1)))), 0 ^ (min(1, _GLF_IDENTITY(1, ~ (~ (1)))))))))) << 0))), 4, 64, 4);
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))) || false)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-838.537)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-838.537)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-838.537)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-838.537)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, false, true))))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, (0.0) + 0.0)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(-9.5, 1019.2991, 0.5, 8.0))) : injectionSwitch.y)), (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, (0.0) + 0.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, (0.0) + 0.0), mix(float(_GLF_FUZZED(-7433.6983)), float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, (0.0) + 0.0)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, (false ? _GLF_FUZZED(6174.2286) : _GLF_IDENTITY((0.0) + 0.0, max((0.0) + _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), max((0.0), (0.0)))) - 0.0) + 0.0)))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) + 0.0, float(vec4((0.0) + 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(6174.2286) : (0.0) + 0.0)))))), false, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(843.643)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-70.51) : injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), vec2(_GLF_FUZZED(7262.5434), _GLF_FUZZED(-40.55)), bvec2(false, false))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) && true))), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), vec2(_GLF_FUZZED(7262.5434), _GLF_FUZZED(-40.55)), bvec2(false, false))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) && true))), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0))))))), 0.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0))))))), 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0))))))), 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0))))))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0))))))), 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0)), transpose(transpose(mat2x3(1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.8) : 1.0)), 1.0, sqrt(1.0), sqrt(0.0))))))), 0.0))), 0.0, log(1.0))))))) + 0.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
