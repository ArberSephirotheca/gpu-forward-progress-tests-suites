#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), _GLF_FUZZED((-2.9))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.6) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((roundEven(0.8) / 87.29)) : injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(8.8), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_FUZZED(8.8))), (_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_FUZZED(8.8)))) * 1.0), 1.0, 1.0, 1.0))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((roundEven(0.8) / 87.29)) : injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(8.8), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_FUZZED(8.8))), (_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_FUZZED(8.8)))) * 1.0), 1.0, 1.0, 1.0))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((roundEven(0.8) / 87.29)) : injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(8.8), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_FUZZED(8.8))), (_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_FUZZED(8.8)))) * 1.0), 1.0, 1.0, 1.0))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.5)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-63.75, -2062.0341)))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3(false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), bool(bvec4(_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false), _GLF_IDENTITY(false, true && (false)), true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! ((false)), false), bvec2(bvec3(bvec2(! ((false)), false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! ((false)), false), bvec2(bvec3(bvec2(! _GLF_IDENTITY(((false)), ! (! (((false))))), false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(! ((false)), false), bvec2(bvec3(bvec2(! ((false)), false), true))))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4702.0320 + -7.8)), _GLF_FUZZED(-8.1)), bvec2(false, false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4702.0320 + -7.8)), _GLF_FUZZED(-8.1)), bvec2(false, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4702.0320 + -7.8)), _GLF_FUZZED(-8.1)), bvec2(false, false))).x) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4702.0320 + -7.8)), _GLF_FUZZED(-8.1)), bvec2(false, false))).x, mix(float(_GLF_FUZZED((-1051.5950 - 2.0))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4702.0320 + -7.8)), _GLF_FUZZED(-8.1)), bvec2(false, false))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4702.0320 + -7.8)), _GLF_FUZZED(-8.1)), bvec2(false, false))).x)))) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], clamp(gl_NumWorkGroups[1], gl_NumWorkGroups[1], gl_NumWorkGroups[1])), gl_NumWorkGroups[_GLF_IDENTITY(2, (2) ^ 0)])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), length(0.0), sqrt(1.0), 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), length(0.0), sqrt(1.0), 0.0)) * mat2(1.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x) / 1u)), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x) / 1u)), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))).x) / 1u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))), true && (bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))) * mat4(1.0))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), mix(vec4((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[1], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), vec4(_GLF_FUZZED((956.651 * (-9.5))), _GLF_FUZZED(-2.9), _GLF_FUZZED(-6527.2464), _GLF_FUZZED(638.275)), bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0))))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))) : _GLF_FUZZED(146063u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))) * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(1u * (workgroup_size * workgroup_id), max(1u * (workgroup_size * workgroup_id), 1u * (workgroup_size * workgroup_id)))), workgroup_size * workgroup_id)))), uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))), workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) - 0u)) << 0u) * workgroup_id, 1u * (workgroup_size * workgroup_id)), workgroup_size * workgroup_id))))))), (false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), 0u | (_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(((workgroup_size * workgroup_id)), _GLF_IDENTITY(uint(uvec4(((workgroup_size * workgroup_id)), 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)), (uint(uvec4(((workgroup_size * workgroup_id)), 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))) | 0u)) | ((workgroup_size * workgroup_id))))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.2)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), false)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), false))))), true && (! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), false)))))))))), ! (_GLF_IDENTITY(! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))), ! (! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))), ! (! (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))) || false), false))) || false)))))), (true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))) || false))))), ! (! (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false || (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), bvec3(bvec3(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false)))))) || false)) || false)), true && (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false)))))) || false)) || false))))))))) || false), false))) || false))))))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))))))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))))))) && true))) || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))), ! (! (! (_GLF_IDENTITY(bool(bvec3((false), false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), bool(bvec4(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), true, false, true)))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), true && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), ! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), ! (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))), ! (_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ! (! ((_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), true && (! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true))))))))))))))))))))))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), false)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), false))))), true && (! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), false)))))))))), ! (_GLF_IDENTITY(! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))), ! (! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))), ! (! (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))) || false), false))) || false)))))), (true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))) || false))))), ! (! (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false || (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), bvec3(bvec3(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false)))))) || false)) || false)), true && (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false)))))) || false)) || false))))))))) || false), false))) || false))))))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))))))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))))))) && true))) || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))), ! (! (! (_GLF_IDENTITY(bool(bvec3((false), false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), bool(bvec4(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), true, false, true)))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), true && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), ! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), ! (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))), ! (_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ! (! ((_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), true && (! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true))))))))))))))))))))))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)))))))), false)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))), false))))), true && (! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false)))))), false))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))), ! (! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), ! (! (! (_GLF_IDENTITY(! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))), ! (! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), (bool(bool(! (true)))) || false)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))), true && (! ((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), true && (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), bool(bvec2(false, true))), false)))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false)))), false || ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)))), false), bvec3(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)))), false))))))), (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))) || false), false))) || false)))))), (true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))) || false))))), ! (! (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))), false, false))), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false || (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))), bool(bvec2(_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false || ((! (_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false || (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))), false)))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), bvec3(bvec3(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), false), true))), true)))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), ! (! (bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))) || false)) || false)), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), _GLF_IDENTITY(((bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true)))))), ! (! (_GLF_IDENTITY(((bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true)))))), bool(bvec2(((bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true)))))), true)))))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false)))) || false)))))) || false)) || false)), true && (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false))))), ((! _GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ((bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))) || false)))))) || false)) || false))))))))) || false), false))) || false))))))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))))))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))) && true))) || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, true)), true && (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && _GLF_IDENTITY((_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))), bool(bool((_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && (! (true)))))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))), ! (! (! (_GLF_IDENTITY(bool(bvec3((false), false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), bvec3(bvec3(bvec3(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y))))) && (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), true && ((! _GLF_IDENTITY((false), ((false)) || false))))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) || false)))) || false)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))))))))), bool(bvec4(! _GLF_IDENTITY((! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) && true) || false))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), ! (! ((! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec4(bool(bvec4(true, true, true, false)), true, false, true))))))), false))))))))), true, false, _GLF_IDENTITY(true, (true) || false))))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false)))), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))))), false))))))))))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false)), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))) || false)), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))) || false)), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (bool(_GLF_IDENTITY(true, ! (! (true))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), ! (! (true)))))))) && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true)))), ! (_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), false || (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))))), ! (_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), (! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), false)))) || false))))), ! (! ((_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false))), true && (! (bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(false, bool(bvec2(false, true))), false), true))))))))))))))))))))))) || false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6026.4638), _GLF_FUZZED(float(-34824))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(2791.6444, -206.048)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(vec2(2791.6444, -206.048)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), vec2(injectionSwitch)))), _GLF_IDENTITY(min(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch))), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch))))), mix(vec2((min(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch))), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch))))))[0], _GLF_FUZZED(vec3(-0.7, -3.6, 7.0).z)), vec2(_GLF_FUZZED(-90.53), (min(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch))), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch))))))[1]), bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), vec2(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch)))), min(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-227.951)), bool(false))), 1.0))) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), vec2(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0)))), (vec2(injectionSwitch)) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), vec2(injectionSwitch)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(2884.4662, 19.19)) : _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))), vec2(injectionSwitch)))), min(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)) : _GLF_FUZZED((5.4 / injectionSwitch)))), vec2(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch))), (vec2(injectionSwitch)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), abs(vec2(1.0, 1.0)) * (vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0, 1.0), abs(vec2(1.0, 1.0)) * (vec2(1.0, 1.0))))), (true ? vec2(1.0, 1.0) : _GLF_FUZZED((vec2(880.596, 3.6) + vec2(8.9, _GLF_IDENTITY(74.20, float(vec3(_GLF_IDENTITY(74.20, clamp(74.20, 74.20, 74.20)), 0.0, 0.0))))))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))))))) - abs(vec2(0.0, 0.0))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), false || (bool(_GLF_IDENTITY(true, ! (! (true)))))))) && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.60), _GLF_FUZZED(-8.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(4660.5053)), bool(false)))) * 1.0)), bvec2(true, true)))))[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch) : _GLF_FUZZED(injectionSwitch))))[1], max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(36.71))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1))])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))))), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))).y)), _GLF_IDENTITY(true && (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0))))).y))), ! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))))) / vec2(1.0, 1.0))))).y)), (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))))) / vec2(1.0, 1.0))))).y)), bool(bvec3(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))))) / vec2(1.0, 1.0))))).y)), false, false)))) || false))), ! (! ((true && (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))))) / vec2(1.0, 1.0))))).y)), (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))))) / vec2(1.0, 1.0))))).y)), bool(bvec3(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), (clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-7.8)), bvec2(true, false))))) / vec2(1.0, 1.0))))).y)), false, false)))) || false)))))))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u) ^ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0u)) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | 0), 64)), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false)))), ! (! ((! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true, true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, 0 ^ (1))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(uint(_GLF_IDENTITY(read, max(read, read))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), int(int(64))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))) && true))), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), true)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false))))), true)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), _GLF_IDENTITY(true, ! (! (true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false))))), true)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), _GLF_IDENTITY(true, ! (! (true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false))))), true)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), _GLF_IDENTITY(true, ! (! (true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
