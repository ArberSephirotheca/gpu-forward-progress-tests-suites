#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))) >> _GLF_IDENTITY(int(1), int(1))), (0 | 0)))) != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), _GLF_IDENTITY(true, false || (true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), bvec3(bvec4(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), true))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), bvec3(bvec4(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), true))))), bool(bvec4(! (bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), bvec3(bvec4(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3))), false, true), true))))), false, true, false)))) && true))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), false || (true && (false))))))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), false || (true && (false))))))))), false)), false, false, true)), bool(bvec3(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), false || (true && (false))))))))), false)), false, false, true)), false, false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))) || false))
    return;
  }
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-4942) : 6))), int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true)) && true)))
  {
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, true)), true)), (bool(bvec2(bool(bvec2(false, true)), true))) && true)))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y = subgroup_id;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(((mat4x2(348.547, -6.0, -8.7, -2068.1346, 26.21, -8141.9632, -61.28, 3844.1420) * vec4(-3061.0359, -5527.2329, 676.081, 116.549)) - injectionSwitch), (((mat4x2(348.547, -6.0, -8.7, -2068.1346, 26.21, -8141.9632, -61.28, 3844.1420) * vec4(-3061.0359, -5527.2329, 676.081, 116.549)) - injectionSwitch)) + vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    break;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z = GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4.5, -77.28)), _GLF_IDENTITY((_GLF_FUZZED(vec2(4.5, -77.28))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_FUZZED(vec2(4.5, -77.28))) * mat2(1.0), min((_GLF_FUZZED(vec2(4.5, -77.28))) * mat2(1.0), (_GLF_FUZZED(vec2(4.5, -77.28))) * mat2(1.0)))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(vec3(mat2(1.0) * (injectionSwitch), 1.0), (vec3(mat2(1.0) * (injectionSwitch), 1.0)) * mat3(1.0)))))) * mat2(1.0)).y))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.1) : 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 & 1) & 1), bool(bvec2(_injected_loop_counter != ((1 & 1) & 1), false)))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 else
  {
   GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w = subgroup_size;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z = subgroup_local_id;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z = num_workgroup;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0)))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec2(ivec2(0, 1)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))); _injected_loop_counter ++)
    {
     do
      {
       _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z, (GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z) / 1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z)))), ((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z))))) >> 0u));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x), clamp((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           return;
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))))))))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) / 1)) << 0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) / 1)) << 0)) << 0), _GLF_IDENTITY(int(0), max(int(0), int(0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) >> 0)) / (1 & 1))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), (_GLF_IDENTITY(int(0), max(int(0), int(0)))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) / 1)) << 0), _GLF_IDENTITY(int(0), max(int(_GLF_IDENTITY(0, max(0, 0))), int(0))))))) ^ 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        return;
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec4(int(5), (0 | 0), 1, 0)), clamp(int(ivec4(int(5), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0))), 0 | ((_GLF_IDENTITY(0, max(0, 0))))) - 0) | 0), max((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) - 0) | 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) - 0) | 0))), 1, 0)), int(ivec4(int(5), (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec3(ivec2(0, 1), 1))))), 0, 0)) | 0), 1, 0)), int(ivec4(int(_GLF_IDENTITY(5, max(5, 5))), (0 | 0), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) + 0)))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.y;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(-4193.7247, -83.81))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) - 0.0)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(83.78)), float((injectionSwitch.y)), bool(true))), (injectionSwitch.y))) - 0.0)))))))))), false || (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(83.78)), float((injectionSwitch.y)), bool(true))), (injectionSwitch.y))) - 0.0))))))))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bool(false || ((injectionSwitch.x > injectionSwitch.y))))))), true, true)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-617.151))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-63.56))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.y) - 0.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))))))) && true)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), true, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-97.13), _GLF_FUZZED(-644.717)), bvec2(false, false)))), vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bool(false || ((injectionSwitch.x > injectionSwitch.y))))))), true, true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(90.53)))), float(_GLF_FUZZED((- -3026.5020))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x), mix(float(_GLF_FUZZED((+ 3.3))), float((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), bool(true)))) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.8), (_GLF_FUZZED(_GLF_IDENTITY(-2.8, (-2.8) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)))))) * round(length(normalize(sqrt(vec2(1.0, 1.0)))))) : injectionSwitch.x)) > injectionSwitch.y)))), true, false, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.8), (_GLF_FUZZED(-2.8)) / 1.0) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)))), true)), false, true)), ! (! (bool(bvec3(bool(bvec2((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)))), true)), false, true))))))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y)), true, true)))))))), _GLF_IDENTITY(true, true && (true)), false, true))))))))))), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(48.78, -7.1)) : injectionSwitch)).x, mix(float(_GLF_FUZZED(-699.744)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(48.78, -7.1)) : injectionSwitch)).x), bool(true))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.8, max(-2.8, _GLF_IDENTITY(-2.8, (-2.8) / 1.0)))) : injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)))))), bool(bvec4(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y))), true))))))), true, false, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y), false, true)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y), false, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-406.090), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(828.657)), bvec2(true, false))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, true))), true && (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (true ? mat2(injectionSwitch.x, 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(mat2(-1.5, -5.6, 59.95, 94.85)))))), (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.8), float(vec4(_GLF_FUZZED(-2.8), 0.0, 1.0, determinant(mat3(0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, length(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x)), (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false, true))))))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(dot(vec3(0.0, length(0.0), 0.0), vec3(exp(0.0), 1.0, 1.0)), dot(vec3(0.0, length(0.0), 0.0), vec3(exp(0.0), 1.0, 1.0)))), (injectionSwitch.y) / 1.0)))) / 1.0))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x), mix(float((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), float(_GLF_FUZZED(vec3(-788.885, 89.78, -4112.7929).t)), bool(false)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)))), true, false, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.8), min(_GLF_FUZZED(-2.8), _GLF_FUZZED(-2.8))) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, true))), true && (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x), float(vec3(_GLF_IDENTITY((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x), 1.0 * ((false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))), 1.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) - tan(0.0)) : _GLF_FUZZED(-7.7))), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(sqrt(7707.3297)))), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat3x4(vec3(0.0, 0.0, 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, sin(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), 1.0, sin(0.0)), vec3(0.0, 1.0, 0.0))), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, exp(0.0), 0.0)))))))))) > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (true)), false, true))))))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), false))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter < 1, false, false, true)), (bool(bvec4(_injected_loop_counter < 1, false, false, _GLF_IDENTITY(true, (true) || false)))) || false))); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.x = GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w)), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w))) << 0u)) >> 0u)));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy, (GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy) | (GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy)).x + subgroup_base + GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.9))), 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.x + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) << 0u), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) * 1u))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))))) | (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) << 0u), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) * 1u))))) % _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u | (_GLF_IDENTITY(uint(1u), uint(1u))))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(virtual_gid) : 4u)), 4u))), uint(4u))))), min(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), min(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u))))))))), uint(uint(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))))))))), (false ? _GLF_FUZZED(num_workgroup) : GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.x + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) << 0u), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) * 1u))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u + (uint(1u))))) | (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) << 0u), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1)) * 1u))))) % _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u | (_GLF_IDENTITY(uint(1u), uint(1u))))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(virtual_gid) : 4u)), 4u))), uint(4u))))), min(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), min(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u))))))))), uint(uint(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))))))), (true ? _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u | (_GLF_IDENTITY(uint(1u), uint(1u))))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : 4u)), 4u))), uint(4u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), min(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u))))))))), uint(uint(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u)))))))), 0u | (min(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + 0u)), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), min(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u)), uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 0u))))))))), uint(uint(uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(uvec3(GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))))))))) : _GLF_FUZZED(workgroup_id)))))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 0.0, 1.0, 1.0))).x > injectionSwitch.y) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9274.4770), _GLF_FUZZED(702.234)), bvec2(false, false))), injectionSwitch)), 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.4)), bool(false)))) + 0.0)) - 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), clamp(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), _GLF_IDENTITY(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), max(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)))), _GLF_IDENTITY(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), clamp(_GLF_IDENTITY(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), mix(float(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))), float(_GLF_FUZZED(-6.3)), bool(false))), _GLF_IDENTITY(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)), (false ? _GLF_FUZZED(9.2) : distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88)))), distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))))))) : injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))) > injectionSwitch.y)) && true)), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x), (true ? (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x) : _GLF_FUZZED(6.9)))))) > injectionSwitch.y)) && true))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, _GLF_IDENTITY(-6984.3785, mix(float(_GLF_IDENTITY(-6984.3785, max(-6984.3785, -6984.3785))), float(_GLF_FUZZED(-13.71)), bool(false)))), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), 0.0 + (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true)))) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), 0.0 + (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true)))) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), 0.0 + (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true)))) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), 0.0 + (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true)))) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))))) + log(exp(0.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, _GLF_IDENTITY(-78.88, max(-78.88, -78.88))))) : injectionSwitch.x)))) > injectionSwitch.y)) && true)), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec4(-70.48, -7.8, 51.96, -6984.3785), vec4(-7.0, 585.479, 92.18, -78.88))) : injectionSwitch.x)))))) > injectionSwitch.y)) && true))))))) && true), true)))), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true))), ! (! (false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && true), true))))))))))) && true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false))))) || false))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -62116)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x = next_virtual_gid;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(12749) : 4)), 1)), (int(ivec2(4, 1))) << 0)), 64, 2);
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x = read;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) | (0 | 0)), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != (_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) | (0 | 0)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter != (_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) | (0 | 0)), false)), bvec2(bvec3(bvec2(bvec2(_injected_loop_counter != (_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) | (0 | 0)), false)), false)))))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, ~ (~ (1))) & 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      break;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))))), true, false))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), true, false)))))))) && true)))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false))))
    return;
  }
 if((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x], uint(1), 4, 64, 4);
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec3(bvec3(bool(bool(false)), false, false))))))), true)))));
        }
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), ! (! (! ((false))))))) && true)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat2(1.0)))).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1570.8786) : injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 & 80503); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false); _injected_loop_counter ++)
              {
               return;
              }
            }
           return;
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))))))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false), true, false))) && true))))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))))), (false ? _GLF_FUZZED(fma(vec2(-403.379, 7.2), clamp(vec2(4.6, -80.77), vec2(-204.824, -912.308), injectionSwitch), vec2(2.0, -122.978))) : min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))))))), vec2(vec2(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))))), (false ? _GLF_FUZZED(fma(vec2(-403.379, 7.2), clamp(vec2(4.6, -80.77), vec2(-204.824, -912.308), injectionSwitch), vec2(2.0, -122.978))) : min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))))))))))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(vec4(injectionSwitch, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), vec4(mat2x3(vec4(injectionSwitch, 1.0, 1.0), 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(0.0), abs(0.0), 1.0, 1.0))))), 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))))))).x > injectionSwitch.y))) && true)))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) - 0), _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-49838))))) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), int(ivec3((0), 1, 1))), (0))) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), ~ (_GLF_IDENTITY(~ (0 >> _GLF_IDENTITY(int(8), int(8))), (~ (0 >> _GLF_IDENTITY(int(8), int(8)))) << 0)))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), 0 ^ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), 0 ^ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))))))))), ((~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), 0 ^ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)))))))))))) - 0)), ~ (~ (int(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), 0 ^ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))))))))), ((~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), 0 ^ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)))))))))))) - 0))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), clamp((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), max((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))))))))))), (int(0)) | 0))), min(((1 | 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / (0 | 1))) >> 0) >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) | (8))))))), 0 ^ (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))))) | (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))), (int(0)) | 0))), ((1 | 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(ivec4((0), 1, 1, 1))) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 + (0)), 0)) ^ _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))), 0 + (~ ((int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))))))))))))) | (int(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, int(ivec4(_GLF_IDENTITY(8, (8) | (8)), 0, 1, 1)))))))))), (int(0)) | 0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), _GLF_IDENTITY(max(int(0), int(0)), ~ (_GLF_IDENTITY(~ (max(int(0), int(0))), 0 ^ (~ (max(int(0), int(0)))))))), int(0)))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (mat2(0.0, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + (injectionSwitch.y)), 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (mat2(0.0, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + (injectionSwitch.y)), 1.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.y, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (mat2(0.0, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + (injectionSwitch.y)), 1.0, 1.0, 1.0))) - 0.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (mat2(0.0, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + (injectionSwitch.y)), 1.0, 1.0, 1.0)))))))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) || false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) || false))), true && ((! (_GLF_IDENTITY((false), ((false)) || false))))), false, true, true)))) && true)))
            {
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0), mat4x3(mat4(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0))))), (float(_GLF_IDENTITY(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0), mat4x3(mat4(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0)))))) / 1.0)))), 1.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(float(_GLF_FUZZED((+ 6.0))), float(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), bool(true))), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(8223.2042))), 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(_GLF_IDENTITY(0.0, (0.0) * 1.0)), min(length(0.0), length(0.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(float(_GLF_FUZZED((+ 6.0))), float(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), bool(true))), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0)) > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(float(_GLF_FUZZED((+ 6.0))), float(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0, mix(float(_GLF_FUZZED(222.876)), float((_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0), bool(true))))) > injectionSwitch.y))))), (false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(float(_GLF_FUZZED((+ 6.0))), float(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))), (false ? _GLF_FUZZED(-8857.8206) : _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), length(0.0))))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0, mix(float(_GLF_FUZZED(222.876)), float(_GLF_IDENTITY((_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0, mix(float(_GLF_FUZZED(3.3)), float((_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(-7.2)))) * 1.0), bool(true)))), bool(true))))) > injectionSwitch.y)))))) || false)))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-48.31, -6.3, -45.46, 0.4).a)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-53.26) : injectionSwitch.y)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-53.26, (_GLF_IDENTITY(-53.26, float(mat4x3(-53.26, tan(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0), 0.0 + (-53.26))) : injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y) / 1.0, (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y) / 1.0 : _GLF_FUZZED(9972.9828))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y, 0.0 + (false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y))) / 1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, _GLF_IDENTITY(0.0 + (-53.26), max(0.0 + (-53.26), 0.0 + (-53.26))))) : injectionSwitch.y) / 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y, mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-53.26, 0.0 + (-53.26))) : injectionSwitch.y) + 0.0)), bool(true)))) / 1.0))))), _GLF_IDENTITY(dot(vec2(abs(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(4331.1341))))), 0.0)), _GLF_IDENTITY(dot(vec2(abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1193.7949)))), 1.0), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(dot(vec2(abs(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-2.0)))), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(dot(vec2(abs(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-2.0)))), 1.0), vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-541.583)), bool(false))), 0.0))), float(_GLF_FUZZED(78.56)), bool(false))), dot(vec2(abs(1.0), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(1552.0102) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(78.06)), bool(false))), 1.0, 1.0), min(clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(78.06)), bool(false))), 1.0, 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(78.06)), bool(false))), 1.0, 1.0), clamp(clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(78.06)), bool(false))), 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(78.06)), bool(false))), 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(78.06)), bool(false))), 1.0, 1.0))))))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), log(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0))), injectionSwitch.y))))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
              return;
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
                  break;
                 return;
                }
               return;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))), false)), (bool(bvec2(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), false))) || false)), (! (_GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_FUZZED(40.61)), bool(false)))) + 0.0)))) && true)))))), false)), (bool(bvec2(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false))) || false))) || false))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))) || false))))) && (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), false)))))))))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))) && true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)))), (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         return;
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
  {
  }
 else
  {
   subgroupBarrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base , 43997)) : 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), false))))))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), bool(bvec2(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) && true))))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1)))) >> 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1)))) >> 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1)))) >> 0))))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1)))) >> 0)))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-61061) : 4), ((false ? _GLF_FUZZED(-61061) : 4)) / 1)))) >> 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61061) : 4, min(false ? _GLF_FUZZED(-61061) : 4, _GLF_IDENTITY(false ? _GLF_FUZZED(-61061) : 4, min(false ? _GLF_FUZZED(-61061) : 4, false ? _GLF_FUZZED(-61061) : 4)))))), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61061) : 4)), _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-61061, (-61061) - ((1 ^ 1) ^ 0))) : _GLF_IDENTITY(4, (4) << 0)), ((false ? _GLF_FUZZED(-61061) : 4)) / 1))))) * 1), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (false ? _GLF_FUZZED(25409) : max(4, 4)))))), 0))), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
