#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_60 {
 vec2 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 bool _f3;
 float _f4;
} ;

struct _GLF_struct_59 {
 uint _f0;
 mat4 _f1;
 uvec3 _f2;
 mat4x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_58 {
 mat4x3 _f0;
 bool _f1;
 mat3x2 _f2;
 vec4 _f3;
 float _f4;
 bool _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_57 {
 ivec2 _f0;
 float _f1;
 mat3x2 _f2;
 uvec3 _f3;
 uvec4 _f4;
 ivec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_56 {
 mat4x2 _f0;
 bvec2 _f1;
 bvec4 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 bvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_61 {
 _GLF_struct_56 _f0;
 _GLF_struct_57 _f1;
 bvec4 _f2;
 _GLF_struct_58 _f3;
 uint _f4;
 _GLF_struct_59 _f5;
 _GLF_struct_60 _f6;
} ;

struct _GLF_struct_55 {
 ivec2 _f0;
} ;

struct _GLF_struct_53 {
 mat3 _f0;
 mat2x4 _f1;
 vec3 _f2;
 mat2x4 _f3;
 uint next_virtual_gid;
 mat4 _f4;
 mat2x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_52 {
 vec4 _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_54 {
 bvec4 _f0;
 vec3 _f1;
 vec3 _f2;
 _GLF_struct_52 _f3;
 _GLF_struct_53 _f4;
} ;

struct _GLF_struct_62 {
 _GLF_struct_54 _f0;
 mat4 _f1;
 int _f2;
 _GLF_struct_55 _f3;
 mat4 _f4;
 _GLF_struct_61 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_49 {
 uint _f0;
 mat2x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_50 {
 _GLF_struct_49 _f0;
 uint _f1;
 ivec2 _f2;
 vec3 _f3;
 int _f4;
 int _f5;
} ;

struct _GLF_struct_47 {
 ivec2 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 ivec2 _f3;
 uvec4 _f4;
 uvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_46 {
 uint subgroup_base;
 uint _f0;
 vec3 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 uvec4 _f4;
 mat4x3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_48 {
 mat4 _f0;
 _GLF_struct_46 _f1;
 _GLF_struct_47 _f2;
} ;

struct _GLF_struct_51 {
 _GLF_struct_48 _f0;
 vec3 _f1;
 mat3x2 _f2;
 _GLF_struct_50 _f3;
} ;

struct _GLF_struct_43 {
 ivec3 _f0;
 uvec4 _f1;
 uint _f2;
 ivec2 _f3;
 vec4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_42 {
 mat3 _f0;
 vec3 _f1;
 ivec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_44 {
 _GLF_struct_42 _f0;
 _GLF_struct_43 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
 ivec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_39 {
 mat3x2 _f0;
 uvec2 _f1;
 vec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_38 {
 uvec4 _f0;
} ;

struct _GLF_struct_40 {
 _GLF_struct_38 _f0;
 ivec3 _f1;
 _GLF_struct_39 _f2;
} ;

struct _GLF_struct_36 {
 uvec2 _f0;
} ;

struct _GLF_struct_35 {
 int _f0;
} ;

struct _GLF_struct_37 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
} ;

struct _GLF_struct_33 {
 bvec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
} ;

struct _GLF_struct_31 {
 mat2x4 _f0;
} ;

struct _GLF_struct_30 {
 uvec4 _f0;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 uint workgroup_id;
 vec3 _f2;
} ;

struct _GLF_struct_28 {
 bvec3 _f0;
 float _f1;
 float _f2;
 mat2x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_27 {
 mat4x3 _f0;
 int _f1;
 mat3x4 _f2;
 bvec2 _f3;
 vec3 _f4;
 mat4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_41 {
 _GLF_struct_29 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_34 _f2;
 _GLF_struct_37 _f3;
 _GLF_struct_40 _f4;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 ivec3 _f1;
 uvec2 _f2;
 float _f3;
 vec2 _f4;
 vec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_23 {
 bvec4 _f0;
 vec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 int _f4;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 uvec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 int _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 mat4x3 _f2;
 _GLF_struct_23 _f3;
 int _f4;
 _GLF_struct_24 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_19 {
 bvec4 _f0;
 bvec2 _f1;
 ivec3 _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 int _f1;
 bvec3 _f2;
 mat4x2 _f3;
 bvec2 _f4;
 mat2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 uint subgroup_size;
 _GLF_struct_18 _f1;
 mat4 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_26 {
 _GLF_struct_20 _f0;
 mat2 _f1;
 _GLF_struct_25 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_15 {
 bvec2 _f0;
 float _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 vec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 mat2 _f1;
 vec3 _f2;
 vec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 ivec3 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 int _f5;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 ivec3 _f1;
 bvec4 _f2;
 vec4 _f3;
 mat2x4 _f4;
 ivec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 ivec4 _f1;
 bool _f2;
 uvec4 _f3;
 mat3x4 _f4;
 float _f5;
 uint _f6;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 mat2x3 _f1;
 int _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 _GLF_struct_9 _f1;
 ivec3 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 bvec3 _f1;
 mat4 _f2;
 float _f3;
 int _f4;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat4 _f1;
 bvec2 _f2;
 ivec2 _f3;
 uvec2 _f4;
 ivec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 bool _f1;
 mat3x4 _f2;
 bool _f3;
 mat4x3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 mat2 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 bvec3 _f1;
 vec2 _f2;
 mat4 _f3;
 int _f4;
 ivec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_2 _f0;
 _GLF_struct_8 _f1;
 uint subgroup_id;
 _GLF_struct_12 _f2;
 _GLF_struct_16 _f3;
 bvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_2(_GLF_struct_0(ivec4(1), mat4x3(1.0), mat2x3(1.0), mat3x2(1.0)), _GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(48991, 77251, -62938, 26600)) : ivec4(1))), ivec4(1))), _GLF_struct_1(1.0, bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))))), bool(bool(_GLF_IDENTITY(true, false || (true)))))), vec2(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED(mat4(mat2x4(970.613, 91.17, 77.24, 1.6, _GLF_IDENTITY(-942.873, clamp(-942.873, _GLF_IDENTITY(-942.873, max(-942.873, -942.873)), -942.873)), 2.5, 85.21, -3968.6420))) : mat4(1.0))), 1, ivec2(1), true)), _GLF_struct_8(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_3(ivec4(1), true, mat3x4(1.0), true, mat4x3(1.0), ivec2(1)), _GLF_struct_4(mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(350.185, 8.0, 3.9, 6.7)) : _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(0.3, 5.6, 131.218, -23.83)) : mat2(1.0))), mat2(mat2x4(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0))))), _GLF_struct_5(uvec2(1u), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(78.80)), bool(false)))), bvec2(true), ivec2(1), uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), ivec3(1), ivec3(1)), _GLF_struct_6(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, abs(0.0)))) > injectionSwitch.y)))))), mat2(1.0), _GLF_struct_7(mat3x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat4(1.0), 1.0, 1)), gl_SubgroupID, _GLF_struct_12(uvec4(1u), _GLF_struct_9(mat4x2(1.0), mat2x3(1.0), 1, uvec4(1u)), ivec3(_GLF_IDENTITY(1, (1) >> 0)), _GLF_struct_10(bvec2(true), ivec4(1), _GLF_IDENTITY(true, (true) && true), uvec4(1u), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 1u), _GLF_struct_11(ivec3(1), ivec3(1), bvec4(true), vec4(1.0), mat2x4(1.0), ivec2(1), uvec3(1u)), vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_struct_16(bvec3(true), ivec3(1), _GLF_struct_13(vec3(1.0), 1u), _GLF_struct_14(mat3x4(1.0), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(3950.3335), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3950.3335)), float(_GLF_FUZZED(6142.7931)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(3950.3335)), float(_GLF_FUZZED(6142.7931)), bool(false)) : _GLF_FUZZED(-4.9)))) : _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.9), min(_GLF_FUZZED(-2.9), _GLF_FUZZED(-2.9)))), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(float(true))), float(false ? _GLF_IDENTITY(_GLF_FUZZED(3950.3335), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3950.3335)), float(_GLF_FUZZED(6142.7931)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(3950.3335)), float(_GLF_FUZZED(6142.7931)), bool(false)) : _GLF_FUZZED(-4.9)))) : _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.9), min(_GLF_FUZZED(-2.9), _GLF_FUZZED(-2.9)))), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true)))))) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(22.95))))))), vec3(1.0), vec2(1.0), mat2(1.0)), _GLF_struct_15(bvec2(true), 1.0, mat2x4(1.0), mat2x3(1.0), vec4(1.0), ivec4(1)), 1), bvec3(true));
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_20(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) - (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(0), ivec4(0))))), gl_SubgroupSize, _GLF_struct_18(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.91)))), 1, bvec3(true), mat4x2(1.0), bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-477.598)), bool(false)))), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(5.8), _GLF_FUZZED(-4.4), _GLF_FUZZED(32.32), (vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0))[3]), vec4((vec4(1.0, 1.0, 1.0, 0.0))[0], (vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0))[1], _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-8912.0252)), float(float(mat3x2(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true)), (false ? _GLF_FUZZED(injectionSwitch.x) : mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true))))), 0.0, 1.0, 0.0, 0.0, 0.0))), bool(true))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true))), mix(float(_GLF_FUZZED((9.0 - -8.9))), float(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true)))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-8912.0252)), float(float(mat3x2(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true)), (false ? _GLF_FUZZED(injectionSwitch.x) : mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true))))), 0.0, 1.0, 0.0, 0.0, 0.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0), (mat2x4(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-8912.0252)), float(float(mat3x2(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))[2]), bool(true)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch.x) : mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true)), max(false ? _GLF_FUZZED(injectionSwitch.x) : mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true)), false ? _GLF_FUZZED(injectionSwitch.x) : mix(float(_GLF_FUZZED(8.0)), float((vec4(1.0, 1.0, 1.0, 0.0))[2]), bool(true))))))), 0.0, 1.0, 0.0, 0.0, 0.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0)) + mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-3.0)), bvec4(true, true, true, false)))), clamp(float(vec4(1.0, 1.0, 1.0, 0.0)), float(vec4(1.0, 1.0, 1.0, 0.0)), float(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.1))), 0.0))))))), mat4(1.0), _GLF_struct_19(bvec4(true), bvec2(true), ivec3(1), mat3x4(1.0), mat2x4(1.0), mat2(1.0))), mat2(1.0), _GLF_struct_25(_GLF_struct_21(mat3x2(1.0), mat4x2(1.0), ivec2(1), 1, mat3x4(1.0)), _GLF_struct_22(ivec4(1), mat2x3(1.0), uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, (1u ^ 1u)), uvec3(uvec4(uvec3(1u, 1u, (1u ^ 1u)), 1u))))), 1u, 1u))), uvec4(1u), mat3(1.0)), mat4x3(1.0), _GLF_struct_23(bvec4(true), _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), min(vec2(1.0), vec2(1.0))), vec2(1.0))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1))), (ivec4(1)) >> ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) - ivec2(0, 0))))) | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0))))))), 0)), ivec2(1), 1), _GLF_IDENTITY(1, max(1, 1)), _GLF_struct_24(ivec4(1), ivec3(1), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 1.0, vec2(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.7))))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(-9.5 - 0.0, max(-9.5 - 0.0, -9.5 - 0.0))))), float(1.0), bool(true)))), uvec4(1u)), bvec4(true)), bvec3(true));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), false, false)))), true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(_GLF_struct_29(_GLF_IDENTITY(ivec2(1), (ivec2(1, 1) ^ ivec2(1, 1)) ^ (ivec2(1))), _GLF_struct_27(mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true)))), 1, mat3x4(1.0), bvec2(true), vec3(1.0), mat4(1.0), mat2(1.0)), _GLF_struct_28(bvec3(true), 1.0, 1.0, mat2x3(1.0), true), mat4x2(1.0)), _GLF_struct_32(_GLF_struct_30(_GLF_IDENTITY(uvec4(1u), (true ? _GLF_IDENTITY(uvec4(1u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, ~ (~ (1u))))), (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u)))))))) | 0u)), uvec4(1u))) : _GLF_FUZZED(uvec4(_GLF_IDENTITY(173006u, ~ (~ (173006u))), 106384u, 108911u, 61125u))))), _GLF_struct_31(mat2x4(1.0)), gl_WorkGroupID.x, vec3(1.0)), _GLF_struct_34(_GLF_struct_33(bvec4(true), mat3x2(1.0))), _GLF_struct_37(_GLF_struct_35(1), _GLF_struct_36(uvec2(1u))), _GLF_struct_40(_GLF_struct_38(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))), ivec3(_GLF_IDENTITY(1, 0 | (1))), _GLF_struct_39(mat3x2(1.0), uvec2(1u), vec2(1.0), ivec2(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(roundEven(-9.0)) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), true, true), true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_44(_GLF_struct_42(mat3(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sqrt(injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-6546.7015) : _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))), min(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sqrt(injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-6546.7015) : _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))), clamp((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sqrt(injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-6546.7015) : _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sqrt(injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-6546.7015) : _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sqrt(injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-6546.7015) : _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sqrt(injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-6546.7015) : _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))))))), ivec3(1), ivec4(1)), _GLF_struct_43(ivec3(1), uvec4(1u), 1u, ivec2(1), vec4(1.0), uvec4(1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_41._f1.workgroup_id, max(workgroup_size * _GLF_struct_replacement_41._f1.workgroup_id, workgroup_size * _GLF_struct_replacement_41._f1.workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_41._f1.workgroup_id, max(workgroup_size * _GLF_struct_replacement_41._f1.workgroup_id, workgroup_size * _GLF_struct_replacement_41._f1.workgroup_id))) >> 0u)), ivec2(1), ivec4(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), bool(bvec4((_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(_GLF_struct_48(mat4(1.0), _GLF_struct_46(_GLF_struct_replacement_17.subgroup_id * _GLF_struct_replacement_26._f0.subgroup_size, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), vec3(1.0), mat4x2(1.0), mat4x2(1.0), uvec4(1u), mat4x3(1.0), _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.22), max(_GLF_IDENTITY(_GLF_FUZZED(87.22), float(mat4x2(_GLF_FUZZED(87.22), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), _GLF_FUZZED(87.22))), max(_GLF_IDENTITY(_GLF_FUZZED(87.22), _GLF_IDENTITY((_GLF_FUZZED(87.22)) - 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(87.22)) - 0.0, max(_GLF_IDENTITY((_GLF_FUZZED(87.22)) - 0.0, (true ? (_GLF_FUZZED(87.22)) - 0.0 : _GLF_FUZZED(6557.7728))), (_GLF_FUZZED(87.22)) - 0.0)) : _GLF_FUZZED(mod(3.5, 1963.6064))))), _GLF_FUZZED(87.22))), _GLF_FUZZED(-321.487)), vec2((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(vec2(1.0), min(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-99.06)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)))), 0.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)), clamp(_GLF_IDENTITY((vec2(1.0)), clamp((vec2(1.0)), _GLF_IDENTITY((vec2(1.0)), min((vec2(1.0)), (vec2(1.0)))), (vec2(1.0)))), (vec2(1.0)), _GLF_IDENTITY((vec2(1.0)), exp(vec2(0.0, 0.0)) * ((vec2(1.0)))))) / vec2(1.0, 1.0)))), 0.0, 1.0))) * vec2(1.0, 1.0))))[0], (vec2(1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_struct_47(ivec2(1), mat2x4(1.0), mat4x2(1.0), ivec2(1), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(1u, 0u, (0u ^ 1u))), max(uint(uvec3(1u, 0u, (0u ^ 1u))), uint(uvec3(1u, 0u, (0u ^ 1u))))), clamp(uint(uvec3(1u, 0u, (0u ^ _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))))), _GLF_IDENTITY(uint(uvec3(1u, 0u, (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) >> 0u)))), (uint(uvec3(1u, 0u, (0u ^ 1u)))) | (uint(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(usubBorrow(workgroup_size, num_workgroup, workgroup_size)))), 0u, (0u ^ 1u))))), uint(uvec3(1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), (0u ^ 1u))))))), uvec2(1u), bvec4(true))), vec3(1.0), mat3x2(1.0), _GLF_struct_50(_GLF_struct_49(1u, mat2x3(1.0), uvec3(1u)), 1u, _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(ivec2(ivec3(ivec2(1), 0)), _GLF_IDENTITY(min(ivec2(ivec3(ivec2(1), 0)), ivec2(ivec3(ivec2(1), 0))), (_GLF_IDENTITY(min(ivec2(ivec3(ivec2(1), 0)), ivec2(ivec3(ivec2(1), 0))), max(min(ivec2(ivec3(ivec2(1), 0)), ivec2(ivec3(ivec2(1), 0))), min(ivec2(ivec3(ivec2(1), 0)), ivec2(ivec3(ivec2(1), 0)))))) >> ivec2(0, 0))))) << ivec2(0, 0)), vec3(1.0), 1, 1));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(28.68)), bool(false))))), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), float(_GLF_FUZZED(-4.7)), bool(_GLF_IDENTITY(false, ! (! (false))))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(28.68)), bool(false))))), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), float(_GLF_FUZZED(-4.7)), bool(_GLF_IDENTITY(false, ! (! (false))))))))))))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_45._f0.workgroup_base + _GLF_struct_replacement_51._f0._f1.subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), false, false), bvec3(bvec3(bvec3(! (! (false)), false, false)))))))), false, true, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), (bool(bool((_GLF_IDENTITY(false, false || (false)))))) || false)))), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), (bool(bool((_GLF_IDENTITY(false, false || (false)))))) || false)))), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))))) || false)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), (bool(bool((_GLF_IDENTITY(false, false || (false)))))) || false)))), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))))))), ((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), bool(bvec4((! (! (false))), true, true, true))) && true), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), bool(bvec4(bool(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), false, true, false))))), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))))) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true)))), ((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false, true, true))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))))))), _GLF_IDENTITY(true, (true) && true) && (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true)))), ((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false, true, true))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, false || (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), bool(bool(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))), bool(bool(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true))))), false || (false)))))))))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), (true && (_GLF_IDENTITY(false, false || (false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), bool(bool(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))))), true, false))))))), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))))) || false)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (false)))), false, true, true)))), ((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))), (! (! (false))) && true))), false, true, true))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))))))))))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_62 _GLF_struct_replacement_62 = _GLF_struct_62(_GLF_struct_54(bvec4(true), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))))), vec3(1.0), _GLF_struct_52(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec2(1u), mat2(1.0)), _GLF_struct_53(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x4(1.0), vec3(1.0), mat2x4(1.0), _GLF_struct_replacement_45._f0.workgroup_base + _GLF_struct_replacement_51._f0._f1.subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_26._f0.subgroup_size), (((subgroup_local_id + 1) % _GLF_struct_replacement_26._f0.subgroup_size)) << 0u), mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x4(1.0), mat3x4(1.0))), mat4(1.0), 1, _GLF_struct_55(ivec2(1)), mat4(1.0), _GLF_struct_61(_GLF_struct_56(mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bvec2(true), bvec4(true), ivec4(1), mat2x4(1.0), bvec4(true), mat3(1.0)), _GLF_struct_57(ivec2(1), 1.0, mat3x2(1.0), uvec3(1u), uvec4(1u), ivec3(1), ivec2(1)), bvec4(true), _GLF_struct_58(mat4x3(1.0), true, mat3x2(1.0), vec4(1.0), 1.0, true, uvec4(1u)), 1u, _GLF_struct_59(1u, mat4(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), mat4x2(1.0), uvec2(1u)), _GLF_struct_60(vec2(1.0), bvec4(_GLF_IDENTITY(true, (true) && true)), mat3x2(1.0), true, 1.0)), mat2x4(1.0));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, true, false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) || false, true)), true && (bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))) || false, true)))))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) / 1, min((int(3)) / 1, (int(3)) / 1)))), (false ? _GLF_FUZZED(-24103) : 0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) / 1, min((int(3)) / 1, (int(3)) / 1)))), (false ? _GLF_FUZZED(-24103) : 0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))))))) << (0 << _GLF_IDENTITY(int(8), int(8)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
        barrier();
       return;
      }
     atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_62._f0._f4.next_virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_62._f0._f4.next_virtual_gid) * 1u, ((_GLF_struct_replacement_62._f0._f4.next_virtual_gid) * 1u) | 0u))], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_62._f0._f4.next_virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_62._f0._f4.next_virtual_gid), (true ? (_GLF_struct_replacement_62._f0._f4.next_virtual_gid) : _GLF_FUZZED(virtual_gid))) / 1u)], uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) / 1))), 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), true && (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(167940u))), float(injectionSwitch.y), bool(true))))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), false, true, false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-997.106)), float(injectionSwitch.y), bool(true)))) - 0.0)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
