#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uint _f0;
 uint _f1;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 uint subgroup_base;
 mat3 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_7 {
 uint _f0;
 mat2x4 _f1;
 mat3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_6 {
 int _f0;
 bvec4 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 bool _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 float _f1;
 _GLF_struct_6 _f2;
 bvec4 _f3;
 mat2 _f4;
 mat4x2 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 bvec4 _f1;
 uint subgroup_id;
 mat2x3 _f2;
 ivec4 _f3;
 uint _f4;
 ivec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 float _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat3x2 _f3;
 _GLF_struct_3 _f4;
 float _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_4 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 _GLF_struct_8 _f3;
 int _f4;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_4(mat2x4(1.0), _GLF_struct_1(uvec4(1u)), _GLF_struct_2(mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4849.6596)), float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-72.42)), bool(false))), 0.0), vec4(mat2(vec4(1.0, 0.0, 1.0, 0.0))))))), 1.0, mat2x3(1.0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-50330, _GLF_IDENTITY((false ? _GLF_FUZZED(-21895) : -50330), ((false ? _GLF_FUZZED(-21895) : -50330)) ^ 0)))))), mat3x2(1.0), _GLF_struct_3(bvec4(true), bvec4(true), gl_SubgroupID, mat2x3(1.0), ivec4(1), 1u, ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-69252)))), mat4x2(1.0)), 1.0), mat3x4(1.0), mat3x4(1.0), _GLF_struct_8(_GLF_struct_5(mat2x3(1.0), true, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), false)))))))))))))), _GLF_IDENTITY(false, false || (false))))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false))), true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), 1.0, _GLF_struct_6(1, bvec4(true), mat3x2(1.0), mat3x4(1.0)), bvec4(true), mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), float(float(1.0))), 0.0)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_FUZZED(-5.7)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(27.44, -8375.1408)) : mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, min(_GLF_IDENTITY(-80.58, (-80.58) / 1.0), _GLF_IDENTITY(-80.58, clamp(_GLF_IDENTITY(-80.58, mix(float(_GLF_FUZZED(-2.2)), float(-80.58), bool(true))), -80.58, -80.58))))).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, 0.0 + (vec3(4.1, 0.0, -80.58).b)))))))))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0), (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_IDENTITY(_GLF_FUZZED(-5.7), mix(float(_GLF_FUZZED(-5.7)), float(_GLF_FUZZED(-7.7)), bool(false)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true)))))))), float(_GLF_FUZZED(8666.8584)), bool(false))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true))))) * mat2(1.0), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), float(float(1.0))), 0.0)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_FUZZED(-5.7)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(27.44, -8375.1408)) : mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, min(_GLF_IDENTITY(-80.58, (-80.58) / 1.0), _GLF_IDENTITY(-80.58, clamp(_GLF_IDENTITY(-80.58, mix(float(_GLF_FUZZED(-2.2)), float(-80.58), bool(true))), -80.58, -80.58))))).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, 0.0 + (vec3(4.1, 0.0, -80.58).b)))))))))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0), (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_IDENTITY(_GLF_FUZZED(-5.7), mix(float(_GLF_FUZZED(-5.7)), float(_GLF_FUZZED(-7.7)), bool(false)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true)))))))), float(_GLF_FUZZED(8666.8584)), bool(false))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true))))) * mat2(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, sqrt(0.0)), (false ? _GLF_FUZZED(mat3x4(-68.74, 8.6, -6077.5196, -5.4, -23.49, 9292.1419, 2.7, -631.228, 4.6, 7025.4270, -193.233, 2.0)) : _GLF_IDENTITY(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), float(float(1.0))), 0.0)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_FUZZED(-5.7)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(27.44, -8375.1408)) : mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, min(_GLF_IDENTITY(-80.58, (-80.58) / 1.0), _GLF_IDENTITY(-80.58, clamp(_GLF_IDENTITY(-80.58, mix(float(_GLF_FUZZED(-2.2)), float(-80.58), bool(true))), -80.58, -80.58))))).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, 0.0 + (vec3(4.1, 0.0, -80.58).b)))))))))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0), (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_IDENTITY(_GLF_FUZZED(-5.7), mix(float(_GLF_FUZZED(-5.7)), float(_GLF_FUZZED(-7.7)), bool(false)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true)))))))), float(_GLF_FUZZED(8666.8584)), bool(false))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true))))) * mat2(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), float(float(1.0))), 0.0)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b)))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_FUZZED(-5.7)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(27.44, -8375.1408)) : mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, min(_GLF_IDENTITY(-80.58, (-80.58) / 1.0), _GLF_IDENTITY(-80.58, clamp(_GLF_IDENTITY(-80.58, mix(float(_GLF_FUZZED(-2.2)), float(-80.58), bool(true))), -80.58, -80.58))))).b)))), mix(vec2((vec2(_GLF_FUZZED(-9193.1057), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, max(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, 0.0 + (vec3(4.1, 0.0, -80.58).b)))))))))))[0], (vec2(_GLF_FUZZED(-9193.1057), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), (vec3(4.1, 0.0, -80.58)) * mat3(1.0)), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, -80.58))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, clamp(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY((vec3(4.1, 0.0, -80.58).b), 0.0 + ((vec3(4.1, 0.0, -80.58).b))) / 1.0), vec3(4.1, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) ? mat4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(4.1, 0.0, -80.58), mix(vec3(_GLF_FUZZED(-6.3), (vec3(4.1, 0.0, -80.58))[1], (vec3(4.1, 0.0, -80.58))[2]), vec3((vec3(4.1, 0.0, -80.58))[0], _GLF_FUZZED(631.957), _GLF_FUZZED(60.85)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(vec3(4.1, 0.0, -80.58), vec3(4.1, 0.0, _GLF_IDENTITY(-80.58, max(-80.58, -80.58))))).b, min(vec3(4.1, 0.0, -80.58).b, _GLF_IDENTITY(vec3(4.1, 0.0, -80.58).b, min(vec3(4.1, 0.0, -80.58).b, vec3(4.1, 0.0, -80.58).b))))), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, -2518.4160, _GLF_IDENTITY(-1.1, (-1.1) * cos(0.0)), 37.47, -3.1, -8.2, -7884.7018, 7.0, 75.85, 2687.9442, 91.25, 3.1, _GLF_IDENTITY(103.713, (103.713) - 0.0), 6996.3799, -5.1, 7.3))))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0), (false ? _GLF_FUZZED(94192) : 1))) >> 0)]), vec2(_GLF_FUZZED(9846.8810), _GLF_IDENTITY(_GLF_FUZZED(-5.7), mix(float(_GLF_FUZZED(-5.7)), float(_GLF_FUZZED(-7.7)), bool(false)))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (((vec2(1.0, 0.0)))[0]) - log(abs(1.0)))), bool(true))), (false ? _GLF_FUZZED(abs(tanh(-2.9))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((6.4 / float(false)))), bool(false))))))[0]), bool(true))), min(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true))), _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(21.43)), max(float(_GLF_FUZZED(21.43)), float(_GLF_FUZZED(21.43)))), float(((vec2(1.0, 0.0)))[0]), bool(true)))))))), float(_GLF_FUZZED(8666.8584)), bool(false))))), ((vec2(1.0, 0.0)))[1]), bvec2(true, true))))) * mat2(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, sqrt(0.0))))))))))))), mat4x2(1.0), _GLF_struct_7(1u, mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true)))), mat3(1.0), mat3x2(1.0))), 1);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(39.25))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(39.25))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(39.25), min(true ? injectionSwitch.x : _GLF_FUZZED(39.25), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(39.25), mix(float(_GLF_FUZZED(-3939.8988)), float(true ? injectionSwitch.x : _GLF_FUZZED(39.25)), bool(true))))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.x : _GLF_FUZZED(39.25))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - 0.0), tan(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(true, true && (true)) && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), false, false)), bool(_GLF_IDENTITY(bool(bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2369.9316)), float(injectionSwitch.y), bool(true))))) : _GLF_FUZZED(257.262)))), false)))))), false, false))), (bool(bool(bvec3(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2369.9316)), float(injectionSwitch.y), bool(true))))) : _GLF_FUZZED(257.262)))), false)))))), false, false)))) && true))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-51.46)), float(injectionSwitch.x), bool(true)))), max(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-51.46)), float(injectionSwitch.x), bool(true)))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-51.46)), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-70.64) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 0.0, 1.0))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 0.0, 1.0))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 0.0, 1.0))), injectionSwitch[1])))).y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.7) : injectionSwitch.y, float(float(false ? _GLF_FUZZED(2.7) : injectionSwitch.y))))), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-9.8))), _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED((-6.2)), (injectionSwitch)[1]), bvec2(false, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4((! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, false, true)))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) || false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))
    return;
   return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(bvec2(true), _GLF_struct_replacement_9._f0._f4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (true ? _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) ^ 0u)) | ((0u))) : _GLF_FUZZED(workgroup_id))))), (subgroup_size) << (0u & 197912u)), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_struct_10(1u, 1u));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_base, max(_GLF_struct_replacement_11.subgroup_base, _GLF_struct_replacement_11.subgroup_base)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2(1.0), workgroup_base + _GLF_struct_replacement_11.subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 0u)), (uint(uvec3(subgroup_local_id, 0u, 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), int(_GLF_IDENTITY(ivec3(int(ivec2(1, 1)), 0, 1), (ivec3(int(ivec2(1, 1)), 0, 1)) | (ivec3(int(ivec2(1, 1)), 0, 1))))))) ^ 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-770.716)), bool(false))))))), clamp(int(int(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(int(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), min(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), injectionSwitch.x))))), int(int(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) ^ 0u)) % subgroup_size) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1)))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) ^ _GLF_IDENTITY(0u, 0u ^ (0u)))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) ^ _GLF_IDENTITY(0u, 0u ^ (0u))))))) << 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) ^ 0u)) % subgroup_size) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) ^ 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) ^ 0u)) % subgroup_size) ^ 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0))), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0) : _GLF_FUZZED(30644))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, max(1, 1)), 1), (min(_GLF_IDENTITY(1, max(1, 1)), 1)) + 0)))) | 0)))) / 1u), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(33074) : 4, int(ivec2(_GLF_IDENTITY(false ? _GLF_FUZZED(33074) : 4, (false ? _GLF_FUZZED(33074) : 4) >> 0), 0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(4385.0408, -6.4, 9.0, 4967.0793)[0]) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(4385.0408, -6.4, 9.0, 4967.0793)[0]) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y)))))))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))) * 1.0) < injectionSwitch.y))), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y)), false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false)))))))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0))) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))).y)))) || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat4(injectionSwitch.x, 1.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 1.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.y))), float(_GLF_FUZZED(-3.8)), bool(false)))) && true)) && true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(539.945, 6034.6708)) : (injectionSwitch))) * cos(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0))) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat2(vec2(0.0, 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(vec2(0.0, 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))), cos(vec2(0.0, 0.0)), cos(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))).y)))) || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.y))), float(_GLF_FUZZED(-3.8)), bool(false)))) && true)) && true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false, false))), false), true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
        return;
       return;
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : virtual_gid))], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_IDENTITY(true, (true) || false))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false, false, _GLF_IDENTITY(true, (true) || false)))))))))))
    return;
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, int(ivec3(2, 0, 0))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), (bool(bvec4(_GLF_DEAD(false), false, false, false))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false))), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) && (false), true && (_GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, false || (false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))))))
  return;
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(138490u))), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-96.34) : injectionSwitch.x))))))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
