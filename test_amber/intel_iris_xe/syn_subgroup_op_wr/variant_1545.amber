#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(-61.93), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(-61.93), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 1.0, 1.0)))))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true))))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(107489u, 104500u, 63123u)) : uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), min((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, false)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))))), false || (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(7.8)), vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(863.109))) > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bvec4(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true, true, true)))))), bool(bvec2((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bvec4(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true, true, true)))))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.7)), bool(false))) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false, false, true))), false, false))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, false, true)))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))) << 0u);
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))), true, false))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), 0u + (_GLF_IDENTITY(uint(1), clamp(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1))), uint(1), uint(1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ 0)), (true ? uint(_GLF_IDENTITY(1, (1) ^ 0)) : _GLF_FUZZED(workgroup_size))))), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), (uint(_GLF_IDENTITY(1, (1) | 0))) | (uint(_GLF_IDENTITY(1, (1) | 0))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(8.1, 2.9, 20.21, -9828.5570)[1]) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), ~ (~ ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | 0))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(8.1, _GLF_IDENTITY(2.9, clamp(2.9, 2.9, _GLF_IDENTITY(2.9, (2.9) - 0.0))), 20.21, -9828.5570)[1]) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, _GLF_IDENTITY(max((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(34.26) : max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))).x), 0.0 + ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))).x))) - 0.0, (injectionSwitch.x) - 0.0))))))))))))), _GLF_IDENTITY(uint(1), (uint(1)) << 0u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ ((subgroup_local_id % 2)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm4x8(vec4(-7721.1305, 425.296, -4.1, -46.51))) : (subgroup_local_id))) * 1u) % 2), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm4x8(vec4(-7721.1305, 425.296, -4.1, -46.51))) : (subgroup_local_id))) * 1u) % 2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) % 2), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) % 2), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) % 2)))))))) == _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), _GLF_IDENTITY((true ? _GLF_FUZZED(-58969) : _GLF_IDENTITY(_GLF_FUZZED(-44978), int(ivec2(_GLF_FUZZED(-44978), 0)))), ((true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))) + 0)))) : 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), 1 * (_GLF_FUZZED(-58969))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969)))), (_GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969))))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(-44978), (true ? _GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969)))) : _GLF_FUZZED(-44978)) / 1))))) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), _GLF_IDENTITY(max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(_GLF_IDENTITY(-44978, max(-44978, -44978)))))), (_GLF_IDENTITY(max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(_GLF_IDENTITY(-58969, (true ? _GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(14622) : -58969)) : _GLF_FUZZED(22625)))) : _GLF_FUZZED(_GLF_IDENTITY(-44978, max(-44978, -44978)))))), clamp(max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(_GLF_IDENTITY(-44978, max(-44978, -44978)))))), _GLF_IDENTITY(max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(_GLF_IDENTITY(-44978, max(-44978, -44978)))))), 0 | (max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(_GLF_IDENTITY(-44978, max(-44978, -44978)))))))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(_GLF_IDENTITY(-44978, max(-44978, -44978))))))))) | 0)) : 0))) * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), 1 * (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), (max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> 0))))) ^ (0 >> _GLF_IDENTITY(int(7), int(7)))) >> _GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(ivec2(int(4), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))) | (int(4))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), 1 * (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), (max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), 1 * (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), (max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> 0))), ~ (~ (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), 1 * (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), (max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> 0))))))) | (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), 1 * (_GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4)))), (max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> 0))))))) ^ (0 >> _GLF_IDENTITY(int(7), int(7)))) >> _GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 1 * (_GLF_IDENTITY(-58969, max(_GLF_IDENTITY(-58969, (-58969) << 0), -58969))))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0, int(ivec2(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 1 * (-58969))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, (-58969) / 1)), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, min(false ? _GLF_FUZZED(50689) : -58969, false ? _GLF_FUZZED(50689) : -58969))) | (false ? _GLF_FUZZED(50689) : -58969))))))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)), ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-58969, min(_GLF_IDENTITY(-58969, max(-58969, -58969)), _GLF_IDENTITY(-58969, min(-58969, -58969)))), (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))), int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-58969, min(_GLF_IDENTITY(-58969, max(-58969, -58969)), _GLF_IDENTITY(-58969, min(-58969, -58969)))), (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))), 1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 + (int(_GLF_ONE(1.0, injectionSwitch.y)))), 1))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)))))) | (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), (_GLF_FUZZED(-58969)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0))))) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) / 1, ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 1 * (_GLF_IDENTITY(-58969, max(_GLF_IDENTITY(-58969, (-58969) << 0), -58969))))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0, int(ivec2(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 1 * (-58969))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, min(false ? _GLF_FUZZED(50689) : -58969, false ? _GLF_FUZZED(50689) : -58969))) | (false ? _GLF_FUZZED(50689) : -58969))))))) / 1, int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, min(false ? _GLF_FUZZED(50689) : -58969, false ? _GLF_FUZZED(50689) : -58969))) | (false ? _GLF_FUZZED(50689) : -58969))))))) / 1, 0, (1 ^ 0)))))))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-58969, (-58969) | (-58969)), (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)), ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(_GLF_IDENTITY(50689, (true ? 50689 : _GLF_FUZZED(-82564)))) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, (false ? _GLF_FUZZED(50689) : -58969) ^ 0)))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)))))) | (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), (_GLF_FUZZED(-58969)) / 1), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), int(ivec4(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1) ^ 0))))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), int(_GLF_IDENTITY(ivec2(_GLF_FUZZED(-58969), (0 ^ (1 ^ 1))), ivec2(0, 0) ^ (ivec2(_GLF_FUZZED(-58969), (0 ^ (1 ^ 1))))))))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0))))) * ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))))) >> _GLF_IDENTITY(int(4), int(4)))))) / 1, (false ? _GLF_FUZZED(-63619) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 1 * (_GLF_IDENTITY(-58969, max(_GLF_IDENTITY(-58969, (-58969) << 0), -58969))))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0, int(ivec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 1 * (-58969))), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, min(false ? _GLF_FUZZED(50689) : -58969, false ? _GLF_IDENTITY(_GLF_FUZZED(50689), (_GLF_FUZZED(50689)) / (0 | 1)) : -58969))) | (false ? _GLF_FUZZED(50689) : -58969))))))) / 1)))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), 0 + (_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(50689), (_GLF_FUZZED(50689)) << 0) : -58969, (_GLF_IDENTITY(false ? _GLF_FUZZED(50689) : -58969, min(false ? _GLF_FUZZED(50689) : -58969, false ? _GLF_FUZZED(50689) : -58969))) | (false ? _GLF_FUZZED(50689) : -58969))))))) / _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (_GLF_IDENTITY(1, int(ivec3(1, 0, 1))))))))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(_GLF_IDENTITY(50689, int(ivec4(_GLF_IDENTITY(50689, (50689) << (0 << _GLF_IDENTITY(int(5), int(5)))), 1, (0 | 1), 0)))) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969)))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))), (_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978)))) ^ 0))) : 0)), ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), int(ivec4(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), 0, 1, 1))))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, (-58969) | (-58969))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(_GLF_IDENTITY(50689, int(ivec4(_GLF_IDENTITY(50689, (50689) << (0 << _GLF_IDENTITY(int(5), int(5)))), 1, (0 | 1), 0)))) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969)))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))), (_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978)))) ^ 0))) : 0)), ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), int(ivec4(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), 0, 1, 1))))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, (-58969) | (-58969))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(_GLF_IDENTITY(50689, int(ivec4(_GLF_IDENTITY(50689, (50689) << (0 << _GLF_IDENTITY(int(5), int(5)))), 1, (0 | 1), 0)))) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969)))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))), (_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978)))) ^ 0))) : 0)), ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), int(ivec4(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), 0, 1, 1))))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, (-58969) | (-58969))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(_GLF_IDENTITY(50689, int(ivec4(_GLF_IDENTITY(50689, (50689) << (0 << _GLF_IDENTITY(int(5), int(5)))), 1, (0 | 1), 0)))) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, ~ (~ (-58969)))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))), (_GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978)))) ^ 0))) : 0)), ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), int(ivec4(0 + (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)), 0, 1, 1))))), max(_GLF_FUZZED(_GLF_IDENTITY(-58969, (-58969) | (-58969))), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0))))))) + 0))) | (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_IDENTITY(_GLF_FUZZED(-58969), max(_GLF_FUZZED(-58969), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58969, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969)), (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))) | (_GLF_IDENTITY(-58969, (false ? _GLF_FUZZED(50689) : -58969))))) / 1)))))), max(_GLF_FUZZED(-58969), _GLF_FUZZED(-58969))))), _GLF_IDENTITY(_GLF_FUZZED(-58969), (true ? _GLF_FUZZED(-58969) : _GLF_FUZZED(-44978))))) : 0))))) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) / 1))))))))) | (0)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) || false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))))))))), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) - (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(40009) : _GLF_IDENTITY(0 | 0, int(int(0 | 0)))))), ~ (~ ((0 | 0)))) ^ (0)) >> _GLF_IDENTITY(int(2), int(2)))), 2);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.6))), 0.0, 0.0, 1.0)))))) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)))) > injectionSwitch.y)), true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
