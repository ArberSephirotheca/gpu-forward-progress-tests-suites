#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 int _f0;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat2x4 _f1;
 float _f2;
 mat4 _f3;
 float _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat4 _f1;
 uvec4 _f2;
 ivec4 _f3;
 float _f4;
 bool _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 vec4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 int _f1;
 bvec3 _f2;
 vec4 _f3;
 uvec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 float _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint num_workgroup;
 mat4 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 int _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1550.0483)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1550.0483)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1550.0483)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, false), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_3(_GLF_struct_0(mat4x2(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 0.0))))), (dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 0.0)))))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(4.5), _GLF_FUZZED(-10.67)), vec3(_GLF_FUZZED(8965.3556), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), transpose(transpose(mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) + 0.0))), clamp(_GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(mat4x3(min(1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(134.583) : 0.0)), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.1))), 0.0))) / 1.0), 0.0)), 1.0)), mix(float(float(mat4x3(min(1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-0.3)), bool(false)))), min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), (false ? _GLF_FUZZED(-2204.5941) : _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(4.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), max(min(1.0, 1.0), min(1.0, 1.0)))))) + 0.0)))), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(716.681, -944.970, 3.9, 0.2, 4.1, 8.9, -679.629, 60.47)))))), mix(float(0.0), float(_GLF_FUZZED(8.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true)), (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true))) || false))))))), 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))))))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 0.0))))), (dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 0.0)))))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(4.5), _GLF_FUZZED(-10.67)), vec3(_GLF_FUZZED(8965.3556), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), transpose(transpose(mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) + 0.0))), clamp(_GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(mat4x3(min(1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(134.583) : 0.0)), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.1))), 0.0))) / 1.0), 0.0)), 1.0)), mix(float(float(mat4x3(min(1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-0.3)), bool(false)))), min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), (false ? _GLF_FUZZED(-2204.5941) : _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(4.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), max(min(1.0, 1.0), min(1.0, 1.0)))))) + 0.0)))), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(716.681, -944.970, 3.9, 0.2, 4.1, 8.9, -679.629, 60.47)))))), mix(float(0.0), float(_GLF_FUZZED(8.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true)), (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true))) || false))))))), 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))))))))), (true ? mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 0.0))))), (dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 0.0)))))) / 1.0), dot(vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(4.5), _GLF_FUZZED(-10.67)), vec3(_GLF_FUZZED(8965.3556), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), transpose(transpose(mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) + 0.0))), clamp(_GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(mat4x3(min(1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(134.583) : 0.0)), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.1))), 0.0))) / 1.0), 0.0)), 1.0)), mix(float(float(mat4x3(min(1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-0.3)), bool(false)))), min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0))), (false ? _GLF_FUZZED(-2204.5941) : _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(4.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), max(min(1.0, 1.0), min(1.0, 1.0)))))) + 0.0)))), 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(716.681, -944.970, 3.9, 0.2, 4.1, 8.9, -679.629, 60.47)))))), mix(float(0.0), float(_GLF_FUZZED(8.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true)), (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) && true))) || false))))))), 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))))))))) : _GLF_FUZZED(mat3(9645.7975, -75.09, 7833.1034, -3.1, -72.74, -2.9, -6.8, -2341.3113, -2288.1405))))))), _GLF_struct_1(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(10585u))), float(1.0), bool(true)))), mat2x3(1.0), bvec4(true), mat2x3(1.0), mat2x3(1.0), 1.0, _GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))), gl_NumWorkGroups.x, mat4(1.0), _GLF_struct_2(mat3x4(1.0), 1, bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false, true))))))), vec4(1.0), uvec4(1u), mat4x3(1.0))), 1, _GLF_struct_7(mat3x2(1.0), vec4(1.0), _GLF_struct_4(mat3(1.0)), _GLF_struct_5(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec4(1u), ivec4(1), 1.0, true, ivec3(_GLF_IDENTITY(1, min(1, 1)))), _GLF_struct_6(mat3x2(1.0), mat2x4(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-8450.5282 - -4999.8508))), bool(false))), mat4(1.0), 1.0, mat2x3(1.0))), _GLF_struct_8(1), _GLF_struct_9(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(-62.66)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(-62.66)), bool(false)))))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(-62.66)), bool(false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(-62.66)), bool(false))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(-62.66)), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(-62.66)), bool(false))), true))), true, true)))))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))) ^ 0u)))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))) ^ 0u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))) ^ 0u)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), (subgroup_size))) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))) ^ 0u))))) | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), min((3u), (3u))) | _GLF_IDENTITY(0u, (157784u & 0u) | (0u))))))))) ^ 0u))))), _GLF_IDENTITY(0u + ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), min((3u), (3u))) | _GLF_IDENTITY(0u, (157784u & 0u) | (0u))))))))) ^ 0u)))))), (_GLF_IDENTITY(0u + ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), min((3u), (3u))) | _GLF_IDENTITY(0u, (157784u & 0u) | (0u))))))))) ^ 0u)))))), (0u + ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) + 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) ^ 0u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (0u | 1u), 0u, 1u)))))), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), min((3u), (3u))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), (157784u & 0u) | (0u))))))))) ^ 0u))))))) - 0u)) - (150827u & 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), (workgroup_base + subgroup_base) >> 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) >> 0u, ~ (~ ((workgroup_base + subgroup_base) >> 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u))))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (((1u & 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))) + _GLF_IDENTITY(1, 0 + (1))))), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_size))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 ^ 0)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3((1), (0 ^ 0), 0))) * (1 ^ _GLF_IDENTITY(0, ~ (~ (0))))), clamp(_GLF_IDENTITY(1, (1) * (1 ^ 0)), _GLF_IDENTITY(1, (1) * (1 ^ 0)), _GLF_IDENTITY(1, (1) * (1 ^ 0)))), 0)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, sin(0.0)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0)), ((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0))) + vec2(0.0, 0.0)) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(mat3x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(round(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), max(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-246.673), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(53.32) : (injectionSwitch)[0])), _GLF_FUZZED(96.97)), bvec2(true, false))).x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(injectionSwitch))))))), cos(0.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3679.4777)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0)), ((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0))) + vec2(0.0, 0.0)) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(mat3x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(round(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), max(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-246.673), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(53.32) : (injectionSwitch)[0])), _GLF_FUZZED(96.97)), bvec2(true, false))).x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(injectionSwitch))))))), cos(0.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED((true ? vec2(-4241.5562, 75.99).y : 5761.6167)), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), clamp(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), max(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), (_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8)))))) | 0)))) * 1))), int(8))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-56139, (0 & 62440) ^ (-56139))) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, (8) | (8)))))), int(8)), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, (8) | (8)))))), int(8))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(_GLF_IDENTITY(int(8), (int(8)) ^ 0), int(8), int(8)))), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8))) | 0))))))))), ~ (~ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) | (8))), int(8)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(8) : _GLF_FUZZED((90977 & -72212)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8)))))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(8) : _GLF_FUZZED((90977 & -72212)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(-56139) : _GLF_IDENTITY(int(8), int(8)))))))))))))))) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(8), int(8))) + (4)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(8), int(8))) + (4)) : _GLF_FUZZED(1907)))) | (_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(8), int(8))) + (_GLF_IDENTITY(4, max(4, 4)))))), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) * 1u), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(false || (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false || (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
