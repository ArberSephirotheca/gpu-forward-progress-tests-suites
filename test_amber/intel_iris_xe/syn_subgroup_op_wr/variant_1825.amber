#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_44 {
 int _f0;
 bool _f1;
 mat4 _f2;
} ;

struct _GLF_struct_43 {
 bvec2 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_42 {
 mat2x3 _f0;
 ivec3 _f1;
 bvec4 _f2;
 int _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_41 {
 mat3x4 _f0;
} ;

struct _GLF_struct_40 {
 uvec4 _f0;
} ;

struct _GLF_struct_45 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
 _GLF_struct_42 _f2;
 _GLF_struct_43 _f3;
 _GLF_struct_44 _f4;
} ;

struct _GLF_struct_46 {
 uint next_virtual_gid;
 _GLF_struct_45 _f0;
} ;

struct _GLF_struct_37 {
 mat4x3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 bvec2 _f3;
 uvec4 _f4;
 mat4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_36 {
 mat2x3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_38 {
 vec2 _f0;
 _GLF_struct_36 _f1;
 float _f2;
 _GLF_struct_37 _f3;
} ;

struct _GLF_struct_34 {
 mat4x2 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_35 {
 uint subgroup_local_id;
 vec3 _f0;
 _GLF_struct_34 _f1;
} ;

struct _GLF_struct_32 {
 bool _f0;
 vec4 _f1;
 mat2x3 _f2;
 ivec2 _f3;
 mat3x2 _f4;
 vec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_31 {
 vec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_30 {
 vec3 _f0;
 uint _f1;
 vec2 _f2;
 ivec4 _f3;
 bool _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_29 {
 uvec4 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 float _f3;
 mat4x2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_33 {
 float _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
 vec2 _f3;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_39 {
 _GLF_struct_33 _f0;
 mat4 _f1;
 _GLF_struct_35 _f2;
 int _f3;
 vec2 _f4;
 _GLF_struct_38 _f5;
 float _f6;
} ;

struct _GLF_struct_26 {
 uvec3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 mat2 _f1;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_24 {
 mat4x2 _f0;
 mat2 _f1;
 ivec4 _f2;
 int _f3;
} ;

struct _GLF_struct_23 {
 int _f0;
 bvec4 _f1;
 ivec4 _f2;
 mat3 _f3;
 mat2 _f4;
 mat4x3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 uvec4 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
 mat3x2 _f4;
 _GLF_struct_26 _f5;
} ;

struct _GLF_struct_21 {
 float _f0;
 mat3 _f1;
 uint _f2;
 ivec2 _f3;
 mat2 _f4;
 int _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 float _f1;
 vec3 _f2;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 mat2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 float _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 mat4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_28 {
 _GLF_struct_20 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_27 _f2;
 mat3x2 _f3;
 mat3 _f4;
 uint subgroup_size;
 bvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 uint _f3;
 vec2 _f4;
 mat4x2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
 _GLF_struct_15 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 mat3 _f1;
 mat4 _f2;
 mat3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_12 {
 float _f0;
 mat2 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 mat4x3 _f4;
 uvec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 mat2 _f1;
 vec3 _f2;
 mat3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 _GLF_struct_12 _f3;
 ivec4 _f4;
 _GLF_struct_13 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_17 {
 uint subgroup_base;
 bool _f0;
 _GLF_struct_14 _f1;
 mat3 _f2;
 bvec3 _f3;
 ivec3 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_8 {
 bool _f0;
} ;

struct _GLF_struct_7 {
 uint workgroup_id;
 bvec4 _f0;
 float _f1;
 vec3 _f2;
 bvec4 _f3;
 int _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 vec2 _f2;
 bvec2 _f3;
 vec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_3 {
 float _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 mat4 _f4;
 int _f5;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 mat2 _f2;
 float _f3;
 vec3 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)), true && ((_GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false)))))) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_20(vec4(1.0), 1.0, _GLF_struct_18(bvec4(true), uvec2(1u)), _GLF_struct_19(uvec4(1u), mat2(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, sqrt(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0)))), ivec3(1)), mat4(1.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_struct_22(_GLF_struct_21(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(mat2(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), (true ? mat2(1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(4235.6048, -25.73, -3.3, 89.55))))))))), mat3(1.0), 1u, ivec2(1), mat2(1.0), 1), 1.0, vec3(1.0)), _GLF_struct_27(_GLF_struct_23(1, bvec4(true), ivec4(1), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(8.0, 8522.4368, 933.635, -4.8, 1.2, -2.6, 411.550, -0.7, _GLF_IDENTITY(-62.23, (-62.23) / 1.0))), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat3(8.0, _GLF_IDENTITY(8522.4368, mix(float(8522.4368), float(_GLF_FUZZED(-2658.8144)), bool(false))), 933.635, -4.8, 1.2, -2.6, 411.550, -0.7, _GLF_IDENTITY(-62.23, (-62.23) / 1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat3(8.0, 8522.4368, 933.635, -4.8, 1.2, -2.6, 411.550, -0.7, _GLF_IDENTITY(-62.23, (-62.23) / 1.0)))), transpose(transpose(transpose(_GLF_FUZZED(mat3(8.0, 8522.4368, 933.635, -4.8, 1.2, -2.6, 411.550, -0.7, _GLF_IDENTITY(-62.23, (-62.23) / 1.0)))))))))))) : _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(transpose(transpose(mat3(1.0))), (false ? _GLF_FUZZED(mat3(mat3x2(-5.3, -7.3, -8899.0621, -3.5, -7.2, 7.7))) : transpose(transpose(mat3(1.0)))))))), mat2(1.0), mat4x3(1.0), mat4x3(1.0)), uvec4(1u), _GLF_struct_24(mat4x2(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0))), (true ? transpose(transpose(mat2(1.0))) : _GLF_FUZZED(mat2(5.5, 2035.2706, 98.51, -39.32))))), ivec4(1), 1), _GLF_struct_25(vec4(1.0), mat2(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), ivec2(1)), mat3x2(1.0), _GLF_struct_26(uvec3(1u), mat4x2(1.0))), mat3x2(1.0), mat3(1.0), gl_SubgroupSize, bvec2(_GLF_IDENTITY(true, false || (true))), mat4x2(1.0));
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_33(1.0, _GLF_struct_29(_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), _GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(167446u, 180654u, 15988u, 143576u)))))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))))), mat4x3(1.0), 1.0, mat4x2(1.0), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_struct_30(vec3(1.0), 1u, _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), _GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)) * ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(0), ivec4(0))) >> _GLF_IDENTITY(ivec4(0), _GLF_IDENTITY(ivec4(0), (ivec4(0)) >> ivec4(0, 0, 0, 0)))), ((ivec4(1)) * ((_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) | (ivec4(1, 1, 1, 1))) << _GLF_IDENTITY(ivec4(0), ivec4(0))) >> _GLF_IDENTITY(ivec4(0), ivec4(0)))) - ivec4(0, 0, 0, 0))))), true, ivec3(1)), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), _GLF_struct_31(vec3(1.0), vec4(1.0)), _GLF_struct_32(true, vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(mat3(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))) ? _GLF_FUZZED(-0.9) : 0.0)))), 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0))))))), float(_GLF_FUZZED(-50.99)), bool(false)))), mat2x3(1.0), ivec2(1), mat3x2(1.0), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(vec2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-248.620), _GLF_IDENTITY(_GLF_FUZZED(-5899.5231), max(_GLF_FUZZED(-5899.5231), _GLF_IDENTITY(_GLF_FUZZED(-5899.5231), max(_GLF_IDENTITY(_GLF_FUZZED(-5899.5231), _GLF_IDENTITY(min(_GLF_FUZZED(-5899.5231), _GLF_FUZZED(-5899.5231)), mix(float(min(_GLF_FUZZED(-5899.5231), _GLF_FUZZED(-5899.5231))), float(_GLF_FUZZED(9.8)), bool(false)))), _GLF_FUZZED(-5899.5231)))))), (vec2(_GLF_FUZZED(-248.620), _GLF_FUZZED(-5899.5231))) * vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(238.739) : 1.0)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0)))), mix(vec2(((_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0)))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0)))))[1], float(mat2x4(((_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0)))))[1], 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))))), vec2(_GLF_FUZZED(-9235.1514), _GLF_FUZZED(-942.437)), bvec2(false, _GLF_IDENTITY(false, (false) && true))))[0], (vec2(1.0))[1]), bvec2(true, true))))), uvec4(1u))), mat4(1.0), _GLF_struct_35(gl_SubgroupInvocationID, vec3(1.0), _GLF_struct_34(mat4x2(1.0), mat4x2(1.0), mat2x3(1.0))), 1, vec2(1.0), _GLF_struct_38(vec2(1.0), _GLF_struct_36(mat2x3(1.0), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) * (1u | 0u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) / (1u | 1u))))) * 1u)), min(uvec4(uvec3(1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u)), _GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) ^ (0u ^ 0u)))))), (_GLF_IDENTITY(1u, (1u) << 0u)) >> (0u & 103116u))))) * 1u)), min(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(1u, 1u)))), (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) * 1u))) * 1u)), (false ? _GLF_FUZZED(uvec4(27961u, 91721u, 173656u, 35379u)) : uvec4(uvec3(1u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))) * 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))) * 1u, 0u + ((_GLF_IDENTITY(1u, (1u) | (1u))) * _GLF_IDENTITY(1u, max(1u, 1u)))) : _GLF_FUZZED(subgroup_id))))))), uvec4(uvec3(1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))))), 1.0, _GLF_struct_37(mat4x3(1.0), bvec3(_GLF_IDENTITY(true, true && (true))), bvec4(true), bvec2(true), uvec4(1u), mat4(1.0), bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))))))), 1.0);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat3(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), 1.0) * (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y) / 1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_1(_GLF_struct_0(ivec4(1))), _GLF_struct_6(_GLF_struct_2(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-5831.0837)), bool(false)))), bool(true)))), 1.0), _GLF_struct_3(1.0), _GLF_struct_4(uvec4(1u), vec2(1.0)), _GLF_struct_5(ivec3(1), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(266.017)), bool(false))))), mat4(1.0), _GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-2730.0800, 0.4, 5.0, -247.773)) : mat2(1.0))), 1.0, vec3(1.0), _GLF_struct_9(_GLF_struct_7(gl_WorkGroupID.x, bvec4(true), 1.0, vec3(1.0), bvec4(true), 1), _GLF_struct_8(true), vec2(1.0), bvec2(true), vec2(1.0), mat2x3(1.0)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_10._f5._f0.workgroup_id;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(subgroup_id * _GLF_struct_replacement_28.subgroup_size, true, _GLF_struct_14(_GLF_struct_11(bvec4(true), mat2(1.0), vec3(1.0), mat3(1.0), vec3(1.0)), mat4x3(1.0), uvec3(1u), _GLF_struct_12(1.0, mat2(1.0), mat4x3(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, abs(exp(0.0)) * (1.0)))), 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0)))), uvec3(1u), mat4x3(1.0), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) + uvec4(0u, 0u, 0u, 0u)), ~ (~ ((uvec4(1u))))) ^ _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u))) | (0u)), 1u * _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(uvec2(61326u, 57981u)[1]) : (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(157796u)))) * 1u)), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u))) | (0u)), 1u * _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(uvec2(61326u, 57981u)[1]) : (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(157796u)))) * 1u)), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u))) | (0u)), 1u * _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(uvec2(61326u, 57981u)[1]) : (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(157796u)))) * 1u)) : _GLF_FUZZED(uvec4(97037u, 23952u, 51267u, 36090u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u))) | (0u)), 1u * _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(uvec2(61326u, 57981u)[1]) : (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(157796u)))) * 1u)), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u))) | (0u)), 1u * _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(uvec2(61326u, 57981u)[1]) : (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(157796u)))) * 1u))) / uvec4(1u, 1u, 1u, 1u))))), uvec2(1u)), ivec4(1), _GLF_struct_13(mat3x4(1.0), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(vec3(940.050, -0.4, -7203.8870), vec3(-9920.9559, -4.6, -120.996), vec3(-5838.6505, _GLF_IDENTITY(-87.66, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(-87.66, (true ? _GLF_IDENTITY(-87.66, (-87.66) - 0.0) : _GLF_FUZZED(3.4))), tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(mat4(_GLF_IDENTITY(-87.66, (true ? _GLF_IDENTITY(-87.66, (-87.66) - 0.0) : _GLF_FUZZED(3.4))), tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat4(_GLF_IDENTITY(-87.66, (true ? _GLF_IDENTITY(-87.66, (-87.66) - 0.0) : _GLF_FUZZED(3.4))), tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), -4.0))))), mat4(1.0), mat3(1.0), ivec2(1)), uvec4(1u)), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0), abs(1.0), 0.0, 1.0, 1.0)), (float(mat2x3(1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0))) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(85.89, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(85.89, 0.0 + (85.89)))))))), float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0), abs(1.0), 0.0, 1.0, 1.0)), (float(mat2x3(1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0))) / 1.0) : _GLF_FUZZED(85.89)))), 0.0, 1.0, 0.0, 0.0, 0.0)))), bvec3(true), ivec3(1), _GLF_struct_16(true, _GLF_struct_15(ivec2(1), mat3x2(1.0), uvec4(1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), vec2(1.0), mat4x2(1.0), ivec4(1)), mat4x2(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec4(false, false, _GLF_IDENTITY(true, (true) || false), false))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), true, false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! _GLF_IDENTITY((! (bool(bvec4(false, false, true, false)))), true && (_GLF_IDENTITY((! (bool(bvec4(false, false, true, false)))), ((! (bool(bvec4(false, false, true, false))))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-288.842)))))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.0)), bool(false))) > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))) || false), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(false, false, true, false)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec4(false, false, true, false)))), (_GLF_IDENTITY(! (! (bool(bvec4(false, false, true, false)))), (! (! (bool(bvec4(false, false, true, false))))) && true)) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))), ! (! (bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), false || (! (! (! (_GLF_DEAD(false))))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), false || (! (! (! (_GLF_DEAD(false))))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_17.subgroup_base + _GLF_struct_replacement_39._f2.subgroup_local_id;
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(workgroup_base + _GLF_struct_replacement_17.subgroup_base + (_GLF_IDENTITY((_GLF_struct_replacement_39._f2.subgroup_local_id + 1), ((_GLF_struct_replacement_39._f2.subgroup_local_id + 1)) | ((_GLF_IDENTITY(_GLF_struct_replacement_39._f2.subgroup_local_id + 1, (_GLF_struct_replacement_39._f2.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_39._f2.subgroup_local_id, (_GLF_struct_replacement_39._f2.subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1))))) % _GLF_struct_replacement_28.subgroup_size), _GLF_struct_45(_GLF_struct_40(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))))), _GLF_struct_41(mat3x4(1.0)), _GLF_struct_42(mat2x3(1.0), ivec3(1), bvec4(true), 1, mat2x3(1.0)), _GLF_struct_43(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), mat3x2(1.0), bvec4(true), mat4(1.0)), _GLF_struct_44(1, true, mat4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_struct_replacement_46.next_virtual_gid], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)))), false)))))))))), true)), false)))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-6268.5881), (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[1]), vec2(_GLF_IDENTITY((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0], ((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0]) - 0.0), _GLF_FUZZED((mat3(-23.11, 7.7, -1.6, 27.44, -77.66, -1949.7529, 27.98, -8.0, 4.2) * vec3(-3.3, 5503.3383, 3.8)).t)), bvec2(true, false)))).y)), true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(85.73, -4756.4105)) : injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), ! (! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-72.68)), bool(false))))))), true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true)), false)))))), true, false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false) || (! (bool(bvec3(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, false)))), true, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, false)))), true, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(7.9)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(7.9)))))))))), true))))))))), true)), false)))))), true, false))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 32.35)), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(vec2((injectionSwitch)[1], 1.0))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), bvec2(true, false))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if((_GLF_struct_replacement_39._f2.subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(25.52), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-58.28)), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), 0u, 0u, 0u)))))), max(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), uint(uvec3(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) >> 0u), 1u, 1u))))), buf[virtual_gid])), 4, 64, 2), uint(_GLF_IDENTITY(uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), 64, 2), 0u, 1u, 0u), max(uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(4, 4)))), 64, 2), 0u, 1u, 0u), uvec4(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), 64, 2), 0u, 1u, 0u)))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, _GLF_IDENTITY(64, 1 * (64)), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-98.27) : (injectionSwitch.x)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-98.27) : _GLF_IDENTITY((injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.x) : _GLF_FUZZED(-63.22)))))) > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-98.27) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(563.090)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.7)))), bool(true))))), mix(float(_GLF_FUZZED(1470.9603)), float((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-98.27) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(563.090)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.7)))), bool(true)))))), bool(true)))), min(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-98.27) : (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(-98.27), 0.0 + (_GLF_FUZZED(-98.27))) : (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, true, true)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(565.155))), 1.0)), 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.1)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, determinant(mat2(sqrt(0.0), exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-111.137)), bool(false)))) / 1.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r))), _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r)))), float(0.0), bool(true)), 0.0 + (mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), float(mat2x3(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))), float(0.0), bool(true))))), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r)), float(0.0), bool(true)), 0.0 + (mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), float(mat2x3(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))), float(0.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725), mix(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-3.5)), vec2((vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725))[1], ((vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725))[1]) - sqrt(0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).r)), float(0.0), bool(true)), 0.0 + (mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), float(mat2x3(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))), float(0.0), bool(true))))), 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r)), float(0.0), bool(true)), 0.0 + (mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, _GLF_IDENTITY(1.0 * (-9.7), min(1.0 * (-9.7), 1.0 * (-9.7))))) + sin(0.0)), -7435.4725).r), float(mat2x3(_GLF_FUZZED(vec2(_GLF_IDENTITY(-9.7, (_GLF_IDENTITY(-9.7, 1.0 * (-9.7))) + sin(0.0)), -7435.4725).r), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))), float(0.0), bool(true))))))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), log(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) + 0.0)), 0.0)), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, tan(0.0) + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), exp(0.0) * (max(0.0, 0.0)))), float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - determinant(mat2(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) - 0.0), 0.0))) + abs(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.9)), float(0.0), bool(true))))))), 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))), false, false))), (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false), false, false, false))) || false)))))), false, false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))), false, false))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))), false, false))))))))) && true) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
