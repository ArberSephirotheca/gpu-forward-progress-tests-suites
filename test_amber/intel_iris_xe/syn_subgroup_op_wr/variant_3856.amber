#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-3.5) : (injectionSwitch)[0])), _GLF_FUZZED(float(false))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6278.7693), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(-62.41)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5211.2458))), 0.0, 0.0)), 0.0)))))[1]), clamp(vec2(_GLF_FUZZED(-6278.7693), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1]), mix(vec2((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1]))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))[1]))[1], mix(float(_GLF_IDENTITY((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(737.029)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) : injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) - 0.0), _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(9.3), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))) : injectionSwitch)))))))[1]))[1], min((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1]))[1], _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[_GLF_IDENTITY(1, clamp(1, 1, 1))])), (false ? _GLF_FUZZED(vec2(-2.1, 777.767)) : (vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[_GLF_IDENTITY(1, clamp(1, 1, 1))])))), clamp((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1])), (vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(vec2(5.1, 85.95))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1])), mix(vec2(_GLF_FUZZED(-7.4), ((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1])))[1]), vec2(((vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[_GLF_IDENTITY(1, (1) << 0)])))[0], _GLF_FUZZED(3515.9241)), bvec2(true, false)))))[1]))), float(_GLF_FUZZED(-830.018)), bool(false)))), vec2(_GLF_FUZZED(47.33), _GLF_FUZZED((_GLF_IDENTITY(88.17 - 9.1, min(88.17 - 9.1, _GLF_IDENTITY(88.17 - 9.1, mix(float(_GLF_FUZZED(9.9)), float(88.17 - _GLF_IDENTITY(9.1, (true ? 9.1 : _GLF_FUZZED(distance(7.2, -6.2))))), bool(true)))))))), bvec2(false, false))), vec2(_GLF_FUZZED(-6278.7693), (injectionSwitch)[1]))), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], (false ? _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, _GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-0.4) : -3.5))))) : (injectionSwitch)[0])), _GLF_FUZZED(float(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6278.7693), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(-6278.7693), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED(-6278.7693), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6278.7693), (true ? _GLF_FUZZED(-6278.7693) : _GLF_FUZZED(-5.0))), (injectionSwitch)[1]))), bvec2(false, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 1 * _GLF_IDENTITY((0), ~ (~ ((0)))))))], _GLF_IDENTITY((false ? _GLF_FUZZED(-3.5) : (injectionSwitch)[0]), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-3.5) : (injectionSwitch)[0]), float(mat4x2((false ? _GLF_FUZZED(-3.5) : (injectionSwitch)[0]), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-3.5) : (injectionSwitch)[0])))), _GLF_FUZZED(float(false))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6278.7693), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), clamp(vec2(_GLF_FUZZED(-6278.7693), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(-6278.7693), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6278.7693, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -6278.7693 : _GLF_FUZZED(-86.89)))), (injectionSwitch)[1]))), bvec2(false, true))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.1), (_GLF_FUZZED(-4.1)) / 1.0), _GLF_FUZZED(float(-48010))), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))))), true)))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), 1.0 * (float(vec2(injectionSwitch.y, 1.0)))), mix(float(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), max(float(vec2(injectionSwitch.y, 1.0)), float(vec2(injectionSwitch.y, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(35.52), max(_GLF_FUZZED(35.52), _GLF_FUZZED(35.52)))), _GLF_IDENTITY(bool(false), true && (bool(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), false || ((! (false)))) || false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y)))))) || false); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1))))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
 for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false)))), true)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false)))), true))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), (! (bool(bvec4(false, true, true, true)))) || false)))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), false, true))), false, false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, true, true)))), (! (! (bool(bvec4(false, true, true, true))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false))) && true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((316.429 + 9354.6391))), bool(false)))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1) ^ 1, ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1) ^ 1) / _GLF_IDENTITY(1, clamp(1, 1, 1))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = ((55495 | -25115) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | 0), 0, 0), (false ? _GLF_FUZZED(-57273) : clamp(0, 0, 0))))) | 0) | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0)))), clamp(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7), int(7))))), bool(bvec4(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0)))), clamp(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7), int(7))))), true, false, true)))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(207.261)), vec2(_GLF_FUZZED((-3.2 + -898.333)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))))), true && (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))))))))));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) / 1u))) >> 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id))) >> 0u))), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id))) >> 0u)))) >> 0u)), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id))) >> 0u))), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))) ^ 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)))))) >> 0u)))) >> 0u))))));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (0u) | 0u), 1u))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(143545u))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(143545u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(143545u))), 0u | (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(143545u))))))), subgroup_size))))))))), 0u | ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), clamp(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(subgroup_size, 0u, 1u)) | uvec3(0u, 0u, 0u)))))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(143545u))), max(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 1u, 0u))))) : _GLF_FUZZED(143545u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(143545u))), 0u | (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)) : _GLF_FUZZED(_GLF_IDENTITY(143545u, (143545u) - 0u)))))))), subgroup_size))))))))))) | (subgroup_id * subgroup_size)), 1u, _GLF_IDENTITY((0u | 0u), ~ (_GLF_IDENTITY(~ ((0u | 0u)), (_GLF_IDENTITY(~ ((0u | 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((0u | 0u)), clamp(((0u | 0u)), _GLF_IDENTITY(((0u | 0u)), (((0u | 0u))) ^ 0u), ((0u | 0u)))), max(((0u | 0u)), _GLF_IDENTITY(((0u | 0u)), (((0u | 0u))) / 1u))), min(~ (_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(((0u | 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (((0u | 0u)))) | ((0u | 0u)))), _GLF_IDENTITY(~ ((0u | 0u)), (~ ((0u | 0u))) << 0u)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((0u | 0u)))), (((0u | 0u))) >> 0u), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((0u | 0u)))), (((0u | 0u))) >> 0u)), min(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((0u | 0u)))), (((0u | 0u))) >> 0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((0u | 0u)))), (((0u | 0u))) >> 0u))))))))) - 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) % subgroup_size), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) % subgroup_size), (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) % subgroup_size)) | 0u)));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5277.4956), _GLF_FUZZED(-752.681)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5277.4956), _GLF_FUZZED(-752.681)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5277.4956), _GLF_FUZZED(-752.681)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y), false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(true, _GLF_IDENTITY(false, (false) && true))), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec2(true, _GLF_IDENTITY(false, (false) && true))), true)), bool(bvec4(bool(bvec2(bool(bvec2(true, _GLF_IDENTITY(false, (false) && true))), true)), true, true, true))), false)))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(true && (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(true && (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (bool(bvec4(_GLF_DEAD(false), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   else
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (0 | (0 << _GLF_IDENTITY(int(5), int(5)))) ^ _GLF_IDENTITY((5), ((5)) | ((5))))), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(52848))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) | (_GLF_IDENTITY(int(5), 0 ^ (int(5)))))) * 1), int(5))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), (true ? _GLF_IDENTITY(int(5), min(int(5), int(_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, (5) ^ 0), 5))))) : _GLF_IDENTITY(_GLF_FUZZED(52848), clamp(_GLF_FUZZED(52848), _GLF_IDENTITY(_GLF_FUZZED(52848), clamp(_GLF_FUZZED(52848), _GLF_FUZZED(52848), _GLF_FUZZED(52848))), _GLF_IDENTITY(_GLF_FUZZED(52848), 0 | (_GLF_FUZZED(52848))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) * 1), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) ^ 0))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))) - log(vec2(1.0, 1.0))).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true))))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
          barrier();
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), (0.0))) / _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1)))), 0 | (_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))))) ^ (0 | 0)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1) | (1))))) ^ (0 | 0))), (_GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), bool(bool(_GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), (_GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), bool(bvec3((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), false, true)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (_GLF_IDENTITY(~ ((1) | (1)), 0 | (~ ((1) | (1))))))) ^ (0 | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, 0 | (0)), 1, 1, 1)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1)))), 0 | (_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))))) ^ (0 | 0)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), (_GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), bool(bool((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), _GLF_IDENTITY(~ (~ ((1) | (1))), max(_GLF_IDENTITY(~ (~ ((1) | (1))), _GLF_IDENTITY(int(int(~ (~ ((1) | (1))))), min(int(int(~ (~ ((1) | (1))))), int(int(~ (~ ((1) | (1)))))))), ~ (~ ((1) | (1))))))) ^ (0 | 0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (_GLF_IDENTITY(~ ((1) | (1)), 0 | (~ ((1) | (1))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (_GLF_IDENTITY(~ ((1) | (1)), 0 | (~ ((1) | (1)))))))) * 1) ^ (0 | 0))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1)))), 0 | (_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))))) ^ (0 | 0)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), (_GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))) ^ (0 | 0))), bool(bool((_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1)))), 0 | (_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))))) ^ (0 | 0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (_GLF_IDENTITY(~ ((1) | (1)), 0 | (~ ((1) | (1))))))) ^ (0 | 0))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-489.792)), vec2(_GLF_FUZZED(float((ivec3(-69709, 28413, 76191) == ivec3(-14353, 10143, -74236)))), (injectionSwitch)[1]), bvec2(false, true))).y, (injectionSwitch.y) / 1.0)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat4(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0))))), bool(true))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(_GLF_IDENTITY(-1.2, (-1.2) + 0.0)), _GLF_IDENTITY(_GLF_FUZZED(-1.2), min(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), max(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), float(mat4x3(_GLF_FUZZED(-1.2), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))))), _GLF_FUZZED(-1.2))), _GLF_FUZZED(_GLF_IDENTITY(-1.2, min(_GLF_IDENTITY(-1.2, 0.0 + (-1.2)), _GLF_IDENTITY(-1.2, 0.0 + (-1.2))))))), _GLF_FUZZED(-1.2)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED((-49.88))), bool(false)))), float(_GLF_FUZZED((+ -12.40))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))) && (false))))), bool(true)))))), max((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.2, (true ? -1.2 : _GLF_FUZZED(-60.22)))), min(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), max(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), float(mat4x3(_GLF_FUZZED(-1.2), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))))), _GLF_FUZZED(-1.2))), _GLF_FUZZED(-1.2))), _GLF_FUZZED(-1.2)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED((-49.88))), bool(false)))), float(_GLF_FUZZED((+ -12.40))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, false || (false))))) && (false))))), bool(true)))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), min(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), max(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), float(mat4x3(_GLF_FUZZED(-1.2), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, 0.0, 0.0))))), _GLF_FUZZED(-1.2))), _GLF_FUZZED(-1.2))), _GLF_IDENTITY(_GLF_FUZZED(-1.2), max(_GLF_IDENTITY(_GLF_FUZZED(-1.2), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), float(mat3x4(_GLF_FUZZED(-1.2), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-9004.2480)), bool(false))), _GLF_FUZZED(-1.2)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED((-49.88))), bool(false)))), float(_GLF_FUZZED((+ -12.40))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), bool(true)))))))) << 0), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, clamp((1.0) * 1.0, (1.0) * 1.0, (1.0) * 1.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), min(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), min(_GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2))), _GLF_FUZZED(-1.2))), _GLF_IDENTITY(_GLF_FUZZED(-1.2), (true ? _GLF_FUZZED(-1.2) : _GLF_FUZZED(-64.19))))), _GLF_FUZZED(-1.2)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)))), float(_GLF_FUZZED((-49.88))), bool(false)))), float(_GLF_FUZZED((+ -12.40))), bool(false))), bool(true)))))) << 0)) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((+ injectionSwitch)) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((+ injectionSwitch)) : injectionSwitch)))).y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true) || false)))))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_IDENTITY(_GLF_FUZZED(-1.2), min(_GLF_IDENTITY(_GLF_FUZZED(-1.2), clamp(_GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2), _GLF_FUZZED(_GLF_IDENTITY(-1.2, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? -1.2 : _GLF_FUZZED(-2398.5384)))))), _GLF_FUZZED(-1.2))), _GLF_FUZZED(-1.2)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED((-49.88))), bool(false)))), float(_GLF_FUZZED((+ -12.40))), bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), bool(true)))))) << 0))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, 1.1, 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), sin(0.0), 1.0, 1.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0)))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) >> 0)))], _GLF_FUZZED(-6.7)), (vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), sin(0.0), 1.0, 1.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0)))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ _GLF_IDENTITY((0), ((0)) | ((0)))) >> 0)))], _GLF_FUZZED(-6.7))) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(_GLF_IDENTITY(-5.9, clamp(-5.9, -5.9, -5.9)))), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), true && ((true))), bool(bvec2(! (true), false))))), false))).x)) ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))))) << 0)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, 1.1, 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, _GLF_IDENTITY(-6.7, (true ? -6.7 : _GLF_FUZZED(4917.9011))))))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mat2(1.0) * (vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), false))))).x)) ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))))) << 0)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-168.560) : 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, 1.1, 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-159.029), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(4274.7331)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true ? mix(vec2(_GLF_FUZZED(-159.029), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8281.2625) : (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(4274.7331)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-6.7), float(mat3x4(_GLF_FUZZED(-6.7), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), log(1.0), 0.0, 1.0, 0.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0)))), mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), (true ? (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(_GLF_IDENTITY(-5.9, (false ? _GLF_FUZZED((-141.288 / 1.9)) : _GLF_IDENTITY(-5.9, (-5.9) - 0.0))))), vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3((injectionSwitch)[0], 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3((injectionSwitch)[0], 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0))))), _GLF_FUZZED(_GLF_IDENTITY(-6.7, (false ? _GLF_FUZZED(996.628) : -6.7)))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), bvec2(true, false))).x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-168.560) : 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, 1.1, 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-159.029), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(4274.7331)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-6.7), float(mat3x4(_GLF_FUZZED(-6.7), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), log(1.0), 0.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), sqrt(1.0), 1.0, 1.0, 0.0)))), mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), _GLF_IDENTITY((true ? (vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)), max(_GLF_IDENTITY((true ? (vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)), min((true ? (vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)), (true ? (vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)))), (true ? (vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(_GLF_IDENTITY(-5.9, (false ? _GLF_IDENTITY(_GLF_FUZZED((-141.288 / 1.9)), clamp(_GLF_FUZZED((-141.288 / 1.9)), _GLF_FUZZED((-141.288 / 1.9)), _GLF_FUZZED((-141.288 / 1.9)))) : -5.9)))), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), bvec2(true, false))).x))) | (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-168.560) : 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, 1.1, 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-159.029), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(4274.7331)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-6.7), float(mat3x4(_GLF_FUZZED(-6.7), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), log(1.0), 0.0, 1.0, 0.0, tan(0.0), sqrt(1.0), 1.0, 1.0, 0.0)))), mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))))[0], _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))) ? (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(_GLF_IDENTITY(-5.9, (false ? _GLF_FUZZED((-141.288 / 1.9)) : -5.9)))), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), false, true)))), true))))), bvec2(true, false))).x)))) ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))))) << 0))) | (int(_GLF_ZERO(_GLF_IDENTITY(0.0, abs(1.0) * (0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, 1.1, 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 1, 1)), (int(ivec4(0, 1, 1, 1))) | 0))], max((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 1, 1)), (int(ivec4(0, 1, 1, 1))) | 0))], (injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 1, 1)), (int(ivec4(0, 1, 1, 1))) | 0))])), _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-35.42, (true ? -35.42 : _GLF_FUZZED(6.5)))), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (0))], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(-41.47), _GLF_FUZZED(-5.9)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))))), bvec2(true, false))).x)) ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(true, (true) && true)))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))))) << 0)))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-873.444, _GLF_IDENTITY(1.1, (1.1) / _GLF_ONE(1.0, injectionSwitch.y)), 5.1, -6115.3237).w), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), _GLF_IDENTITY(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), min(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]))), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true)), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(-35.42), _GLF_FUZZED(4.2)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[0], (vec2(_GLF_IDENTITY((injectionSwitch)[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + ((injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(-6.7, (false ? _GLF_FUZZED(asin(-5.7)) : -6.7)))))[1]), bvec2(true, true))))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-774.683)), vec2(_GLF_FUZZED(-5.5), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))))[0], _GLF_FUZZED(-6.7)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-41.47), 1.0 * (_GLF_FUZZED(-41.47))), _GLF_FUZZED(-5.9)), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), vec2(0.0, 0.0) + (_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), clamp((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))), vec2(0.0, 0.0) + ((vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7))))), (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-6.7)))[1]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))), true))))), bvec2(true, false))).x)) ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))))), (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))))) << 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, min(2, 2))))), int(2))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, _GLF_IDENTITY(((2) ^ 0) << 0, (0 & 98289) ^ (((2) ^ 0) << 0))))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
          {
           atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(tan(0.0), 0.0, 1.0, log(1.0))) + (injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || false)), false), true))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), true))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(smoothstep(66.84, _GLF_IDENTITY(4.6, clamp(_GLF_IDENTITY(4.6, _GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0)), min(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(389.977)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(389.977)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(389.977)), float(0.0), bool(true))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))), 0.0)), float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0)))), _GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), min(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), _GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), min(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)))))), float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0))))), 4.6, _GLF_IDENTITY(_GLF_IDENTITY(4.6, (4.6) / 1.0), (true ? 4.6 : _GLF_FUZZED(-86.12))))), -48.19))))).x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), min(~ _GLF_IDENTITY((int(8)), min((int(8)), (int(8)))), ~ (int(8)))))), int(8)), 0 | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(smoothstep(66.84, _GLF_IDENTITY(4.6, clamp(_GLF_IDENTITY(4.6, _GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0)), min(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(389.977)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(389.977)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(389.977)), float(0.0), bool(true))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))), 0.0)), float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0)))), _GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), min(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), _GLF_IDENTITY(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), min(float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)), float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0)))))), float(mat4x2(4.6, sqrt(0.0), sin(0.0), 1.0, 0.0, 0.0, tan(0.0), 0.0))))), 4.6, _GLF_IDENTITY(_GLF_IDENTITY(4.6, (4.6) / 1.0), (true ? 4.6 : _GLF_FUZZED(-86.12))))), -48.19))))).x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), min(~ _GLF_IDENTITY((int(8)), min((int(8)), (int(8)))), ~ (int(8)))))), int(8))))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), _GLF_IDENTITY(float(mat2x4(smoothstep(66.84, 4.6, -48.19), 0.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(1.0), 0.0, 1.0)), float(vec4(float(mat2x4(smoothstep(66.84, 4.6, -48.19), 0.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(1.0), 0.0, 1.0)), 1.0, 0.0, 0.0))))))), (true ? (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), _GLF_IDENTITY(float(mat2x4(smoothstep(66.84, 4.6, -48.19), 0.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(1.0), 0.0, 1.0)), float(vec4(float(mat2x4(smoothstep(66.84, 4.6, -48.19), 0.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(1.0), 0.0, 1.0)), 1.0, 0.0, 0.0))))))) : _GLF_FUZZED(vec2(-6.9, -3.1))))).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19)), (vec2(smoothstep(66.84, 4.6, -48.19))) / vec2(1.0, 1.0)))))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4(0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-583.991, 5.0, -9.8, 2481.2327, 5694.0718, -416.208, 1617.1746, 5.0, 6.1, 3081.5491, 464.302, 2.7, 0.6, -0.9, -3.8, 71.13))))))))))))))))).x)))), float(_GLF_FUZZED(-9.9)), bool(_GLF_IDENTITY(false, ! (! (false))))))) - 0.0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(refract(-265.341, 80.60, 86.99)) : 0.0)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x)))))))), float(_GLF_FUZZED(-9.9)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))) - 0.0)), (false ? _GLF_FUZZED(31025) : int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4027.6473)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9.9, mix(float(-9.9), float(_GLF_FUZZED(69.00)), bool(false))))), bool(_GLF_IDENTITY(false, ! (! (false))))))) - 0.0))))) | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.5, -77.77)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.15)), vec2(_GLF_FUZZED(-10.44), (injectionSwitch)[1]), bvec2(false, true))))))) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19)))))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(3132.0647), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0)))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0)))[0], _GLF_FUZZED(3.3)), bvec2(true, false)))) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(exp2(injectionSwitch)))) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(smoothstep(66.84, 4.6, -48.19), float(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, -48.19), 0.0), (false ? _GLF_FUZZED(vec2(-526.206, 6.0)) : vec2(smoothstep(66.84, 4.6, -48.19), 0.0))))))))).x)))), float(_GLF_FUZZED(-9.9)), bool(_GLF_IDENTITY(false, ! (! (false))))))) - 0.0)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))), min(_GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))), clamp(vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))), _GLF_IDENTITY(vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))), max(vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))), vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))))), vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998))))))))))), vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(-48.19, _GLF_IDENTITY(-48.19, _GLF_IDENTITY((true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)), (false ? _GLF_FUZZED(-9531.2483) : (true ? _GLF_IDENTITY(-48.19, _GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)), sqrt(0.0) + (float(mat3x2(_GLF_IDENTITY(clamp(-48.19, -48.19, -48.19), (clamp(-48.19, -48.19, -48.19)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 1.0)))))) : _GLF_FUZZED(957.998)))))))))))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? _GLF_IDENTITY(vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))), mix(vec2((vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))))[0], _GLF_FUZZED(-77.87)), vec2(_GLF_FUZZED(993.155), (vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), vec2(mat2x3(vec2(mat3x4(_GLF_IDENTITY(vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))), mix(vec2((vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))))[0], _GLF_FUZZED(-77.87)), vec2(_GLF_FUZZED(993.155), (vec2(-2594.9508, _GLF_IDENTITY(-6.8, max(_GLF_IDENTITY(-6.8, (-6.8) / 1.0), -6.8))))[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)))) : refract(vec2(-3682.0918, -4.5), injectionSwitch, -47.83))))), max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(injectionSwitch)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(smoothstep(66.84, 4.6, _GLF_IDENTITY(-48.19, max(_GLF_IDENTITY(-48.19, (false ? _GLF_FUZZED(-7.8) : -48.19)), -48.19))))), (_GLF_FUZZED(vec2(smoothstep(66.84, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)), _GLF_IDENTITY(-48.19, max(_GLF_IDENTITY(-48.19, (false ? _GLF_FUZZED(-7.8) : -48.19)), -48.19)))))) / abs(vec2(1.0, 1.0))))).x)))), (float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x : _GLF_FUZZED(3.1)))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(injectionSwitch)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(injectionSwitch)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(smoothstep(66.84, 4.6, -48.19))))).x), length(vec3(0.0, 0.0, 0.0))))))))) - 0.0), float(_GLF_FUZZED(-9.9)), bool(false)))) - 0.0))) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), max(0 << _GLF_IDENTITY(int(0), int(0)), 0 << _GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(-42745) : _GLF_IDENTITY(int(8), (int(8)) | (int(8))))), ~ (_GLF_IDENTITY(~ (int(8)), min(~ (_GLF_IDENTITY(int(8), (int(8)) | 0)), ~ (int(8)))))), int(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) ^ 0)) + 0), 8))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | 0)) | (_GLF_IDENTITY((0), _GLF_IDENTITY(min((0), _GLF_IDENTITY((0), max((0), (0)))), (_GLF_IDENTITY(min((0), _GLF_IDENTITY((0), max((0), (0)))), (min((0), _GLF_IDENTITY((0), max((0), (0))))) >> 0)) ^ 0)))) | (0))) / 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70353) : _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 1))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0))) | (0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70353) : _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 1))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0))) | (0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70353) : _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 1))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0))) | (0)), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70353) : _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 1))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0))) | (0)), 1)))))))) / 1)) + 0))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroupAll(false);
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (! (true)), false || (false || (! (true)))))))))
        {
         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true)))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) || false)))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) - 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))))))))))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) && true, bool(bvec4((_GLF_WRAPPED_LOOP(false)) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, false))));
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(2), (int(2)) | (int(2))) : _GLF_FUZZED(_injected_loop_counter), int(ivec3(_GLF_IDENTITY(true ? _GLF_IDENTITY(int(2), (int(2)) | (int(2))) : _GLF_FUZZED(_injected_loop_counter), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (true ? _GLF_IDENTITY(int(2), (int(2)) | (int(2))) : _GLF_FUZZED(_injected_loop_counter))), 1, 0))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     do
                      {
                       subgroupAll(false);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-449.643)), float(injectionSwitch.y), bool(true)), float(mat3x4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-449.643)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true)), float(mat4x3(mix(float(_GLF_FUZZED(-449.643)), float(injectionSwitch.y), bool(true)), 1.0, exp(0.0), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(1.0, 0.0, exp(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(1.0, 0.0, exp(0.0), 1.0)), (true ? dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(1.0, 0.0, exp(0.0), 1.0)) : _GLF_FUZZED(3.9)))), 1.0, 1.0, 1.0))))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8599.5313)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 2), max(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(max(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) : buf[virtual_gid]) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> 0u), subgroup_size)), 1u * (subgroup_size))) : buf[virtual_gid]))), uint(_GLF_IDENTITY(uvec2(max(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) : buf[virtual_gid]) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> 0u), subgroup_size)), 1u * (subgroup_size))) : buf[virtual_gid]))), 1u), ~ (~ (uvec2(max(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) : buf[virtual_gid]) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> 0u), subgroup_size)), 1u * (subgroup_size))) : buf[virtual_gid]))), 1u))))))))), 4, 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4))) << 0), 64, 2))), (read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 2), max(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(max(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))) * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u * (subgroup_size))))))) : buf[virtual_gid]) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> 0u), subgroup_size)), 1u * (subgroup_size))) : buf[virtual_gid]))), uint(_GLF_IDENTITY(uvec2(max(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, uint(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) : buf[virtual_gid]), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, uint(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) : buf[virtual_gid])) >> 0u) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> 0u), subgroup_size)), 1u * (subgroup_size))) : buf[virtual_gid]))), 1u), ~ (~ (uvec2(max(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) : buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / 1u)))) >> 0u), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) : buf[virtual_gid]) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), ~ (~ ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) * 1u)) >> 0u), subgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))) * (subgroup_size))) : buf[virtual_gid]))), 1u))))))))), 4, 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4))) << 0), 64, 2)))) / 1u);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + abs(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.9))), 0.0))) * mat2(1.0))) + vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.8))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(((false ? -3143.3664 : -11.29))), _GLF_FUZZED(7.6)), vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch)))[1], _GLF_IDENTITY(1.0 * ((((injectionSwitch)))[1]), (1.0 * ((((injectionSwitch)))[1])) + sin(0.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + abs(vec2(0.0, 0.0))) * mat2(1.0))) + vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.0)), bool(false))) : _GLF_FUZZED(4.8))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))).y))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(-1.7, 92.99, -4.1, 3712.1061).w)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0)))) / 1.0)), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp(7.0)))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), false || (bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-64.29), _GLF_FUZZED(vec3(-8433.2575, 531.259, 1227.4809).t)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(17.01)), vec2(_GLF_FUZZED(75.06), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(17.01)), vec2(_GLF_FUZZED(75.06), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))) && true))), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, -1.8)))).y)))), false)), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), false)), false)))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true)), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false)), false)))), false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-28.13, -0.9).x)), float(0.0), bool(true))), 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5621.8514) : injectionSwitch.y)))), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false)))), (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), false)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))))))), false, false))))))))) || false)))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - 0.0), injectionSwitch.y))), float(_GLF_FUZZED(vec4(-2042.2978, 510.735, _GLF_IDENTITY(-3.4, min(-3.4, _GLF_IDENTITY(-3.4, max(-3.4, _GLF_IDENTITY(-3.4, mix(float(-3.4), float(_GLF_FUZZED(-525.374)), bool(false))))))), -2985.1496).r)), bool(false)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-12.81)), bool(false)))))));
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((0 | 0), int(ivec2((0 | 0), 0))), (_GLF_IDENTITY(_GLF_IDENTITY((0 | 0), int(_GLF_IDENTITY(ivec2((0 | 0), 0), min(_GLF_IDENTITY(ivec2((0 | 0), 0), ivec2(0, 0) ^ (ivec2((0 | 0), 0))), ivec2((_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) + 0), (0 | 0) / 1)))), 0))))), clamp(_GLF_IDENTITY((0 | 0), int(ivec2((_GLF_IDENTITY(0, (0) | 0) | 0), 0))), _GLF_IDENTITY((0 | 0), int(ivec2((0 | 0), 0))), _GLF_IDENTITY((0 | 0), int(ivec2((_GLF_IDENTITY(0 | 0, (0 | 0) - 0)), 0)))))) / (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))), injectionSwitch.y))))));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED((80.46 / 0.7))), bvec2(false, false))).y, (false ? _GLF_FUZZED(-3.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED((80.46 / 0.7))), bvec2(false, false))).y, float(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED((80.46 / 0.7))), bvec2(false, false))).y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(0.0), abs(1.0), 0.0, 0.0, 0.0))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(-5.5)), bvec2(false, false))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), _GLF_IDENTITY(true, true && (true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), _GLF_IDENTITY(true, true && (true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), _GLF_IDENTITY(true, true && (true)))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), _GLF_IDENTITY(true, true && (true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), _GLF_IDENTITY(true, true && (true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), _GLF_IDENTITY(true, true && (true)))), false)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))))) / 1)) ^ 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))) || false))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, ! (! (true)))), true), true)))))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) >> (-48131 & 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0)))))); _injected_loop_counter ++)
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) << 0), _GLF_IDENTITY(4, ~ (~ (4))), 4), clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (4) - 0)), clamp(4, 4, 4))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717))))))), max(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717))))))), int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717)))))))))))), (true ? _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717))))))), max(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717))))))), int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717)))))))))))), (clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + _GLF_IDENTITY(35717, max(35717, 35717))))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? _GLF_IDENTITY(4, (4) / 1) : _GLF_FUZZED((92390 + 35717))))))), max(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY((92390 + 35717), clamp((92390 + 35717), (92390 + 35717), (92390 + 35717))))))))), int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((_GLF_IDENTITY(92390 + 35717, (92390 + 35717) | (92390 + 35717))))), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), ~ (_GLF_IDENTITY(~ ((true ? 4 : _GLF_FUZZED((92390 + 35717)))), (true ? ~ ((true ? 4 : _GLF_FUZZED((92390 + 35717)))) : _GLF_FUZZED(-21836))))))))))))))) + 0) : _GLF_FUZZED(_injected_loop_counter))), (clamp(4, 4, 4)) | 0)), ((_GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? 4 : _GLF_FUZZED((92390 + _GLF_IDENTITY(35717, 0 | (_GLF_IDENTITY(35717, (35717) / 1)))))), ((_GLF_IDENTITY(true, true && (true)) ? 4 : _GLF_FUZZED((92390 + _GLF_IDENTITY(35717, 0 | (_GLF_IDENTITY(35717, (35717) / 1))))))) >> (0 | 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + _GLF_IDENTITY(35717, (35717) + (0 | 0))))), max((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY((92390 + 35717), (false ? _GLF_FUZZED(99269) : (92390 + 35717))))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED((92390 + 35717)), (_GLF_FUZZED((92390 + 35717))) | 0)))))), max(int(int(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), (true ? 4 : _GLF_FUZZED((92390 + 35717))))))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(true ? 4 : _GLF_FUZZED((92390 + 35717)), (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED((92390 + 35717)), (true ? 4 : _GLF_FUZZED((92390 + 35717))) | 0)) << 0)), max((true ? 4 : _GLF_FUZZED((92390 + 35717))), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED((92390 + 35717))), ((true ? 4 : _GLF_FUZZED((92390 + 35717)))) << 0)))))))))), (_GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, 4), clamp(4, 4, 4)))) | 0))) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), 0 + (clamp(4, 4, 4))), (clamp(4, _GLF_IDENTITY(4, int(int(4))), 4)) | 0)), 0 ^ ((_GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << 0)) | 0)))) | 0))) - (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) ^ 0))))), 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2x3(mat2(injectionSwitch, 0.0, 0.0)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackUnorm2x16(workgroup_id)) : injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) || false), false)), bool(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false)), true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), bool(_GLF_IDENTITY(bvec2(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), false)), true, false))))))))), _GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))))))))))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : injectionSwitch.x)) < injectionSwitch.y)), true, false)))))), false)), true))))), true && ((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), bool(_GLF_IDENTITY(bvec2(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), false)), true, false))))))))), _GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true)))))))))))))), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : injectionSwitch.x)) < injectionSwitch.y)), true, false)))))), false)), true))))))))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
