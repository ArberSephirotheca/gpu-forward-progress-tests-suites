#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_34 {
 mat3 _f0;
 vec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_33 {
 mat2x3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_32 {
 uvec3 _f0;
} ;

struct _GLF_struct_35 {
 uint read;
 _GLF_struct_32 _f0;
 _GLF_struct_33 _f1;
 mat2x3 _f2;
 _GLF_struct_34 _f3;
} ;

struct _GLF_struct_30 {
 uvec4 _f0;
 mat3 _f1;
 vec4 _f2;
 uvec4 _f3;
 uvec2 _f4;
 mat2x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_29 {
 mat4x2 _f0;
 uint _f1;
 mat3 _f2;
 mat2 _f3;
 mat3x4 _f4;
 ivec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_28 {
 ivec4 _f0;
 mat2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 mat4x2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_31 {
 bool _f0;
 _GLF_struct_28 _f1;
 mat2 _f2;
 _GLF_struct_29 _f3;
 mat4 _f4;
 bvec3 _f5;
 _GLF_struct_30 _f6;
} ;

struct _GLF_struct_36 {
 _GLF_struct_31 _f0;
 int _f1;
 _GLF_struct_35 _f2;
} ;

struct _GLF_struct_25 {
 bvec4 _f0;
 vec2 _f1;
 mat4 _f2;
 vec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_24 {
 vec2 _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_23 {
 bvec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
 mat2 _f1;
 uint _f2;
} ;

struct _GLF_struct_19 {
 uint _f0;
 int _f1;
 bvec3 _f2;
 bvec4 _f3;
 bvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_21 {
 mat3x4 _f0;
 mat3x2 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 mat2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_27 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 uint subgroup_base;
 _GLF_struct_23 _f2;
 _GLF_struct_26 _f3;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 vec4 _f1;
 mat4 _f2;
 mat3 _f3;
 float _f4;
 uvec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 uvec3 _f3;
 bvec3 _f4;
 ivec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 uvec2 _f1;
 mat3x4 _f2;
 uint num_workgroup;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 vec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 vec2 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 mat3 _f1;
 bvec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_8 {
 float _f0;
 uint _f1;
 float _f2;
 mat3x2 _f3;
 float _f4;
 vec2 _f5;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 vec2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 uvec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 int _f4;
 mat3 _f5;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 vec3 _f1;
 bool _f2;
 bvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 bool _f1;
 uvec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_18 {
 _GLF_struct_6 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 ivec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat2x4(1.0), ivec3(1), _GLF_struct_0(vec2(1.0), mat4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_struct_1(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-24.93)), bool(false)))), gl_SubgroupSize)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-7.2, _GLF_IDENTITY(_GLF_IDENTITY(977.365, float(mat2x3(977.365, 1.0, sin(0.0), 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(977.365, float(mat2x3(977.365, 1.0, sin(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(977.365, float(mat2x3(977.365, 1.0, sin(0.0), 0.0, 1.0, 0.0))), (_GLF_IDENTITY(977.365, float(mat2x3(977.365, 1.0, sin(0.0), 0.0, 1.0, 0.0)))) + 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED((vec4(5.7, 17.33, -6.3, -8436.8726).g)), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-7.2, _GLF_IDENTITY(977.365, float(mat2x3(977.365, 1.0, sin(0.0), 0.0, 1.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), mix(vec2(_GLF_FUZZED(-3566.6536), _GLF_FUZZED(93.03)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_FUZZED((vec4(_GLF_IDENTITY(5.7, 0.0 + (5.7)), 17.33, -6.3, _GLF_IDENTITY(-8436.8726, (-8436.8726) * determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))))).g)), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), true && ((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.2, 977.365)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_6(_GLF_struct_4(ivec3(1), true, uvec3(1u), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-557.714)), 1.0 * (float(_GLF_FUZZED(-557.714)))), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0)))), _GLF_struct_5(ivec3(1), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9)))) + 0.0) : _GLF_FUZZED(mix(-8.8, -7.0, -0.2)))), 1.0), _GLF_IDENTITY(float(mat4x3(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9)))) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.9))))), 1.0), sqrt(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0)), mix(float(float(mat4x3(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-640.660)), float(1.0), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), (true ? 1.0 : _GLF_FUZZED(-3.9))), 1.0), sqrt(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-1150.1023)), bool(false)))))), true, bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), false))))))), ! (! (true)))), bvec4(true))), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))))), mix(float(_GLF_FUZZED((-4826.3089 / -72.56))), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0))))))), bool(true))))), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0))))))), float(_GLF_FUZZED(-4471.1666)), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(5.6))))), 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-147.822) : _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), mix(float(float(vec3(1.0, 0.0, 1.0))), float(_GLF_FUZZED(7.3)), bool(false))), float(vec3(1.0, 0.0, 1.0))))))), float(_GLF_FUZZED(-4398.9787)), bool(false)))), float(_GLF_FUZZED(89.60)), bool(false)))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0))))))))), uvec2(1u), _GLF_struct_10(_GLF_struct_7(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u)))), uvec2(1u), uvec2(1u)))), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)), 0u) | _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | uvec2(0u, 0u))))), bvec4(true), mat3x2(1.0), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0))), bvec3(true)), uvec4(_GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_struct_8(1.0, 1u, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), mat3x2(1.0), 1.0, vec2(1.0)), _GLF_struct_9(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) | (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-18575) : 1))))), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0) * (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), float(_GLF_FUZZED(82.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec4(true), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec3(72.66, 601.514, 6849.4597)) : vec3(1.0, 0.0, 1.0))))))))))), 1, mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_15(_GLF_struct_11(mat3(1.0), vec2(1.0), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_12(mat3(1.0), uvec2(1u), mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)).x), vec2(1.0), _GLF_struct_13(mat2(1.0), mat4x2(1.0), bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), ! (! (! (! (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))), uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)), _GLF_IDENTITY(vec2(mat3x2(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)), 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x2(vec2(_GLF_FUZZED((_GLF_IDENTITY(-9451.3901, (-9451.3901) / 1.0))), _GLF_FUZZED(-910.988)), 1.0, 0.0, 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)), max(vec2(_GLF_IDENTITY(_GLF_FUZZED((-9451.3901)), (_GLF_FUZZED((-9451.3901))) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_FUZZED(-910.988)), vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)))), determinant(mat4(0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9699.2324) : 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, tan(0.0), 0.0, log(1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((3.7 / -2.7))), float(1.0), bool(true))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(-0.0)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 0.0, 0.0), (mat4(_GLF_IDENTITY(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)), _GLF_IDENTITY(max(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)), vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988))), min(max(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988)), vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(-910.988))), max(vec2(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED(_GLF_IDENTITY(-910.988, max(_GLF_IDENTITY(-910.988, min(-910.988, -910.988)), -910.988)))), vec2(_GLF_IDENTITY(_GLF_FUZZED((-9451.3901)), min(_GLF_FUZZED((-9451.3901)), _GLF_IDENTITY(_GLF_FUZZED((-9451.3901)), clamp(_GLF_FUZZED((-9451.3901)), _GLF_FUZZED((-9451.3901)), _GLF_FUZZED((-9451.3901)))))), _GLF_FUZZED(-910.988)))))), determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, abs(1.0), 1.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, abs(1.0), 1.0), vec4(abs(0.0), 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, abs(1.0), 1.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, abs(1.0), 1.0), vec4(abs(0.0), 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), 1.0, tan(0.0), 0.0, log(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec2(61.34, 6962.3986))))), float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), clamp(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))))), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), float(_GLF_FUZZED(-908.649)), bool(false))), length(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 0.0, 0.0)) * mat4(1.0)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(1u))), bvec3(true), ivec4(1), bvec4(true)), _GLF_struct_14(mat4x3(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) / 1), 0)))), min(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) | 0)), 0), (ivec2(_GLF_IDENTITY(1, (1) / 1), 0)) << ivec2(0, 0))))), ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) / 1), 0)))))), (true ? ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-74585, 9921, 81868, _GLF_IDENTITY(22702, (22702) | (22702))), clamp(ivec4(-74585, 9921, 81868, _GLF_IDENTITY(22702, (22702) | (22702))), ivec4(-74585, 9921, 81868, _GLF_IDENTITY(22702, (22702) | (22702))), ivec4(-74585, 9921, 81868, _GLF_IDENTITY(22702, (22702) | (22702)))))))), (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) / 1), 0)))), min(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) / 1), 0), (ivec2(_GLF_IDENTITY(1, (1) / 1), 0)) << ivec2(0, 0))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) / 1), 0)))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) / 1), 0)))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) / 1), 0))))))) | (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))))), (true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))), ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))))) : _GLF_FUZZED(ivec4(-74585, 9921, 81868, 22702)))))), ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, int(ivec3(1, 1, 1))), 1))), 1u)), _GLF_struct_17(_GLF_struct_16(ivec2(1), vec4(1.0), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), uvec2(1u), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY((1.0) * 1.0, clamp((1.0) * 1.0, _GLF_IDENTITY((1.0) * 1.0, min((1.0) * 1.0, (1.0) * 1.0)), _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(3.0)), bool(false))) * 1.0)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), ! (! (! ((_GLF_IDENTITY(false, false || (false))) || false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), ! (! (! ((_GLF_IDENTITY(false, false || (false))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), ! (! (! ((_GLF_IDENTITY(false, false || (false))) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), ! (! (! ((_GLF_IDENTITY(false, false || (false))) || false))))))) && true)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(ceil(2788.8210)) : injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(ceil(2788.8210)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[0], _GLF_FUZZED(3.2)), vec2(_GLF_FUZZED(-1.8), (vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[1]), bvec2(false, true)))).x), max((false ? _GLF_FUZZED(ceil(2788.8210)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[0], _GLF_FUZZED(3.2)), vec2(_GLF_FUZZED(-1.8), (vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[1]), bvec2(false, true)))).x), _GLF_IDENTITY((false ? _GLF_FUZZED(ceil(2788.8210)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[0], _GLF_FUZZED(3.2)), vec2(_GLF_FUZZED(-1.8), (vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[1]), bvec2(false, true)))).x), float(mat4x3((false ? _GLF_FUZZED(ceil(2788.8210)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[0], _GLF_FUZZED(3.2)), vec2(_GLF_FUZZED(-1.8), (vec2(mat3x2(injectionSwitch, 0.0, sin(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)))[1]), bvec2(false, true)))).x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(ceil(2788.8210)) : injectionSwitch.x)) > injectionSwitch.y)) || false))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_21(mat3x4(1.0), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat3x4(2.7, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(2.7, float(mat2(2.7, 1.0, 1.0, 1.0))), 2.7))) : 1.0))), _GLF_struct_19(1u, 1, bvec3(true), bvec4(true), bvec2(true), bvec3(true)), _GLF_struct_20(mat2x4(1.0), mat2(1.0), 1u), mat2(1.0), mat3(1.0)), _GLF_struct_22(mat2x4(1.0)), subgroup_id * _GLF_struct_replacement_3._f0._f3.subgroup_size, _GLF_struct_23(bvec2(true), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((+ -93.95) - 9.3))), float(1.0), bool(true))))), _GLF_struct_26(_GLF_struct_24(vec2(1.0)), _GLF_struct_25(bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(vec2(-913.610, -26.70)))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(vec2(-913.610, -26.70)))))))), mat4(1.0), vec2(1.0), mat3(1.0)), bvec3(true)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), 0u | (max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(192695u) : workgroup_base)), min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u ^ (workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))), max(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))), 0u | (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))))))) ^ (0u ^ (workgroup_base)), ~ (~ ((0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) ^ (0u ^ (workgroup_base))))))))) + _GLF_struct_replacement_27.subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_27.subgroup_base, clamp(_GLF_struct_replacement_27.subgroup_base, _GLF_struct_replacement_27.subgroup_base, _GLF_struct_replacement_27.subgroup_base)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_struct_replacement_3._f0._f3.subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f3.subgroup_size, (_GLF_struct_replacement_3._f0._f3.subgroup_size) << 0u)), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_struct_replacement_3._f0._f3.subgroup_size)));
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_31(true, _GLF_struct_28(ivec4(1), mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 1.0), (mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))))), mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) * sqrt(1.0))), mat4x2(1.0), bvec4(true)), mat2(1.0), _GLF_struct_29(mat4x2(1.0), 1u, mat3(1.0), mat2(1.0), mat3x4(1.0), ivec2(_GLF_IDENTITY(1, max(1, 1))), true), mat4(1.0), bvec3(true), _GLF_struct_30(uvec4(1u), mat3(1.0), vec4(1.0), uvec4(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(~ (~ (uvec2(1u))), (_GLF_IDENTITY(~ (~ (uvec2(1u))), clamp(~ (~ (uvec2(1u))), ~ (~ (uvec2(1u))), ~ (~ (uvec2(1u)))))) << uvec2(0u, 0u))), mat2x3(1.0), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), min(0 ^ (1), _GLF_IDENTITY(0 ^ (1), 0 ^ (0 ^ (1))))))))), 1, _GLF_struct_35(0, _GLF_struct_32(uvec3(1u)), _GLF_struct_33(mat2x3(1.0), mat3(1.0)), mat2x3(1.0), _GLF_struct_34(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), clamp(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, (1) - 0)))), (ivec2(1)) << ivec2(0, 0)), ivec2(1))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))), ((! _GLF_IDENTITY((false), bool(bool((false)))))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false)))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))), ((! _GLF_IDENTITY((false), bool(bool((false)))))) || false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))), ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), (! (_GLF_IDENTITY((false), bool(bool((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))), ((! _GLF_IDENTITY((false), bool(bool((false)))))) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))))) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))) && true)) && true), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, true && ((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, true && ((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))))))))), ! _GLF_IDENTITY((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))), bool(bool((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))))))))))))))), ! (! ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))))))))), bool(bool((! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! ((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), false, false))), bool(bvec4(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! (false))) && true)) && true), false, false, true))))))))))))))))))))))))))))), _GLF_IDENTITY(false || ((! (false))), (false || ((! (false)))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false))), _GLF_IDENTITY(bool(bvec2(false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), false, false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), false || _GLF_IDENTITY((true), false || ((_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(! (! (true)), false || (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), (_GLF_IDENTITY(bool(bvec2(false || (_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false || (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true)))), true)), ! (! (bool(bvec2((! _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true)))), true))))))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), false || (bool(bvec2(bool(bvec2(false || (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))), false || (! _GLF_IDENTITY((! (true)), bool(bvec2((_GLF_IDENTITY(! (true), true && (! (true)))), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), ! (! ((true))))))))))) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_DEAD(false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bvec4((! _GLF_IDENTITY((true), ((true)) && true)), true, false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (! _GLF_IDENTITY((! (true)), bool(bvec4((! _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, bool(bvec2(_GLF_IDENTITY(((true)) && true, ! (! (((true)) && true))), true))))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false)))), true && (bool(bvec2(false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))))), bool(_GLF_IDENTITY(bvec3(bool(bvec4((! (true)), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))))), true, false), bvec3(bvec3(bvec3(bool(bvec4((! (true)), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))))), true, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (! (false)))))) || (false)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (! (false)))))) || (false))))), ! (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (! (false)))))) || (false)))))))))), _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(bool(bvec2(false || (_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), true)))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (false))) && true)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(clamp(workgroup_id, subgroup_id, workgroup_size))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))))))));
   _GLF_struct_replacement_36._f2.read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))))], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4499.2210)), vec2(_GLF_FUZZED(955.848), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4499.2210)), vec2(_GLF_FUZZED(955.848), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4499.2210)), vec2(_GLF_FUZZED(955.848), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4499.2210)), vec2(_GLF_FUZZED(955.848), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4499.2210)), vec2(_GLF_FUZZED(955.848), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4499.2210)), vec2(_GLF_FUZZED(955.848), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   _GLF_struct_replacement_36._f2.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)))) || false)), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), bool(bool(! ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_36._f2.read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(15486) : 4)), _GLF_IDENTITY(64, 0 ^ (64)), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
