#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uint subgroup_base;
 float _f0;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec2((true) || false, true)), (bool(bvec2((true) || false, true))) && true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), (! (false)) || false)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), (! (false)) || false)) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), (! (false)) || false)) && true)))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))) && true)), (! (false)) || false)) && true))))))) && true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))) - 0.0))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch)).y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.y))), 0.0 + ((injectionSwitch.y))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch, clamp(false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch)[0], _GLF_FUZZED(-465.886)), vec2(_GLF_FUZZED(-861.579), (false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch)[1]), bvec2(false, true))), false ? _GLF_FUZZED(vec2(8.5, 3.3)) : injectionSwitch)))).y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), 1.0 * (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) - 0.0))))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), float(mat4x2(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), max(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(_GLF_IDENTITY(3521.5989, max(_GLF_IDENTITY(3521.5989, clamp(3521.5989, 3521.5989, 3521.5989)), 3521.5989))))), max(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), _GLF_IDENTITY(true, false || (true)) ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))))), true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))))), 0.0, 1.0, exp(0.0), 1.0, abs(0.0), 1.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-84.77), max(_GLF_IDENTITY(_GLF_FUZZED(-84.77), max(_GLF_FUZZED(-84.77), _GLF_FUZZED(-84.77))), _GLF_FUZZED(-84.77)))), float(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567)), bool(true)))), float(vec4((_GLF_IDENTITY(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), float(mat4x2(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), max(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), max(true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))), true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))))), true ? (injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(-8183.9567), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-8183.9567) : _GLF_FUZZED(3521.5989))))), 0.0, 1.0, exp(0.0), 1.0, abs(0.0), 1.0, 1.0))), mix(float(_GLF_FUZZED(-84.77)), float(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567)), bool(true)))), 1.0, 1.0, sqrt(1.0))))), 0.0 + ((injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567), mix(float(_GLF_FUZZED(-84.77)), float(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567)), bool(true))))), 0.0 + ((injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))))).y), (_GLF_IDENTITY(_GLF_IDENTITY(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567), mix(float(_GLF_FUZZED(-84.77)), float(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567)), bool(true))), min(_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) : _GLF_FUZZED(-8183.9567), mix(float(_GLF_FUZZED(-84.77)), float(true ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3632.1102)))) : _GLF_FUZZED(-8183.9567), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (true ? (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3632.1102)))) : _GLF_FUZZED(-8183.9567))), mix(float(_GLF_FUZZED(-84.77)), float(_GLF_IDENTITY(true, true && (true)) ? (injectionSwitch.y) : _GLF_FUZZED(-8183.9567)), bool(true))))))), 0.0 + ((injectionSwitch.y))))) - 0.0)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.1)), bool(false)))), float(_GLF_FUZZED(18.08)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-22.37)), float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.1)), bool(false)))), float(_GLF_FUZZED(18.08)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0))))), bool(true))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.4))), exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-7.7, mix(float(-7.7), float(_GLF_FUZZED(0.7)), bool(false)))))), 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, injectionSwitch.y)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))) - 0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (bool((false)))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(-8.5))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0))], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0))], injectionSwitch[1])).y) * 1.0)) / 1.0), (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(-8.5))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))) ? injectionSwitch.y : _GLF_FUZZED(-8.5))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(-8.5)))))))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (true ? uvec3(2u) : _GLF_FUZZED(uvec3(121835u, 145832u, 115758u)))))))) - uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))), (_GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u))))) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, _GLF_IDENTITY(12137u, (12137u) | 0u), 144910u)), max(true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, 12137u, 144910u)), true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(192344u, (_GLF_IDENTITY(192344u, ~ (~ (192344u)))) / (1u | 0u)), 12137u, 144910u)))))))) << uvec3(0u, 0u, 0u))))))[1]) >> _GLF_IDENTITY(0u, (0u) + 0u), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(173593u, 44821u, 63590u)) : _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) - uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(3033u, 111735u, 144143u)) : ((gl_NumWorkGroups)))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))))), 1u)) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, 12137u, 144910u)))))) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(79124u, 85237u, 161949u)) : _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(3033u, 111735u, 144143u)) : ((gl_NumWorkGroups)))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))))), 1u)) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, 12137u, 144910u)))))) << uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(3033u, 111735u, 144143u)) : ((gl_NumWorkGroups)))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))))), 1u)) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, 12137u, 144910u)))))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(3033u, 111735u, 144143u)) : ((gl_NumWorkGroups)))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))))), 1u)) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, 12137u, 144910u)))))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(3033u, 111735u, 144143u)) : ((gl_NumWorkGroups)))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))))), 1u)) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), (true ? _GLF_IDENTITY(((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(112707u, 22547u, 121724u)))) : _GLF_FUZZED(uvec3(38273u, 53770u, 99732u)))) : _GLF_FUZZED(uvec3(192344u, 12137u, 144910u)))))) << uvec3(0u, 0u, 0u))))))))))[_GLF_IDENTITY(1, min(1, 1))]) >> 0u)))), gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], (injectionSwitch)[1]), bvec2(true, true))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y) && true)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) && true)) && true))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)) && true))) && true, (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)) && true))) && true) || false), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)) && true))) && true, (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), min(vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)), vec2(_GLF_FUZZED(79.16), _GLF_FUZZED(-58.66)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[0] : _GLF_FUZZED(-33.62))), (injectionSwitch)[1]), bvec2(true, true))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y) && true)) && true))) && true) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), max(vec2(vec4(injectionSwitch, 1.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), max(vec2(vec4(injectionSwitch, 1.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((-112.915 - injectionSwitch)) : (injectionSwitch)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((-112.915 - injectionSwitch)) : (injectionSwitch)))).x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true, true))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(mat2x4(1.0), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1.0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, true)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, true)))), false, false, false))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base + _GLF_struct_replacement_2.subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base + _GLF_struct_replacement_2.subgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base + _GLF_struct_replacement_2.subgroup_base) * 1u)), ((_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base + _GLF_struct_replacement_2.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_struct_replacement_1._f0.workgroup_base))) | (_GLF_struct_replacement_1._f0.workgroup_base)) + _GLF_struct_replacement_2.subgroup_base) * 1u))) >> 0u) * 1u), ~ (~ (_GLF_struct_replacement_1._f0.workgroup_base + _GLF_struct_replacement_2.subgroup_base))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, ~ (~ (_GLF_struct_replacement_1._f0.workgroup_base))), max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) / 1u))) + _GLF_struct_replacement_2.subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u + (subgroup_local_id)) + 1), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), ~ (~ (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), ((~ ((subgroup_local_id + 1)))) | 0u))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) << 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) / 1u)))))) + _GLF_struct_replacement_2.subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), max(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), max(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) % subgroup_size), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) / 1u))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) / 1u))), _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) / 1u))), _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, max(_GLF_struct_replacement_1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) / 1u))))) + _GLF_struct_replacement_2.subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), _GLF_IDENTITY(int(ivec4(int(int(0)), 1, 0, 1)), (_GLF_IDENTITY(true, (true) || false) ? int(ivec4(int(int(0)), 1, 0, 1)) : _GLF_FUZZED(97726)))))) - 0), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2) == 0), (((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2) == 0)) || false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(6755.4211)), bvec2(true, false))).y))), true && (_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))) - 0, _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) ^ 0)) - 0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))) - 0, 0, 0)), (int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), 1, 0))))) - 0, 0, 0))) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2) == 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) % 2) == 0, bool(bvec4((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2) == 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id, ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_local_id)))) % 2) == 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true))))) || false, bool(bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2) == 0, bool(bvec4((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2) == 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)), (((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id, ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_local_id)))) % 2) == 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), max(64, 64)), 2);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), vec2(_GLF_FUZZED(75.45), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), vec2(_GLF_FUZZED(75.45), (injectionSwitch)[1]), bvec2(false, true))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), vec2(_GLF_FUZZED(75.45), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), vec2(_GLF_FUZZED(75.45), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)))), vec2(_GLF_FUZZED(75.45), (injectionSwitch)[1]), bvec2(false, true))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(30.89)), vec2(_GLF_FUZZED(75.45), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(30.89), mix(float(_GLF_FUZZED(30.89)), float(_GLF_FUZZED(16.17)), bool(false)))), vec2(_GLF_FUZZED(75.45), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y) && true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))) && true) || false))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(5.5), _GLF_FUZZED((8.0))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(true, true)))), 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), ((4)) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) + 0)) - 0), 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) | (_GLF_IDENTITY(4, 0 ^ (4))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), ((4)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) ^ 0), 4)), (_GLF_IDENTITY(4, (4) + 0)) - 0), 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) | (_GLF_IDENTITY(4, 0 ^ (4))))) | 0)))), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
