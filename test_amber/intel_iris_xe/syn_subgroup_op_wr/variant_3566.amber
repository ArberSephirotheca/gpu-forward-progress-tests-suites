#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_size;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec4 GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))
  {
   GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy = GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_size;
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_13_1_1_4num_workgroupread;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) * 1))))); _injected_loop_counter ++)
                {
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                      {
                       GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw.x = subgroup_local_id;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))));
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, clamp(1, 1, 1)))))), (_GLF_IDENTITY(int(1), int(1))) | 0))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) >> 0))) | 0) ^ (_injected_loop_counter --)))
                  {
                   do
                    {
                     GLF_merged2_0_1_13_1_1_4num_workgroupread.x = num_workgroup;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   GLF_merged2_0_1_4_1_1_14readworkgroup_size.y = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = GLF_merged2_0_1_4_1_1_14readworkgroup_size.y, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = GLF_merged2_0_1_4_1_1_14readworkgroup_size.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u) : GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = GLF_merged2_0_1_4_1_1_14readworkgroup_size.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
  }
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_injected_loop_counter != 1))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw.y = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)), clamp(~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y) | (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y), 1u * ((GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y) | (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)))))), ~ (~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)), _GLF_IDENTITY(~ (~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)), (~ _GLF_IDENTITY((~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)), ((~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y))) >> 0u)) << 0u))), uint(uint(~ (~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)))))) * GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw.y;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_id), clamp((false ? _GLF_FUZZED(subgroup_id) : subgroup_id), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))), (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id) | 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id) | 0u)) << 0u)) >> 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_id), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) >> 0u) : subgroup_id)) - 0u)))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) < 1); _injected_loop_counter ++)
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(true, (true) || false)))))))
                                              {
                                               GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x = subgroup_base;
                                              }
                                             else
                                              {
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true)))) && true, bool(bool(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true)))) && true)))))));
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y)), 1.0, abs(abs(0.0)), 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(normalize(vec4(-2.8, 493.383, -12.73, 27.70))) : vec4(1.0, 0.0, 1.0, 0.0))))), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-5827.0813, (-5827.0813) + 0.0)))))), injectionSwitch.y), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5827.0813))))), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5827.0813))))), injectionSwitch.y)))), 1.0, abs(abs(0.0)), 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), float(mat3x2(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(mix(-936.937, -1.5, -5874.5100)) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(mix(-936.937, -1.5, -5874.5100)) : injectionSwitch.y, (false ? _GLF_FUZZED(mix(-936.937, -1.5, -5874.5100)) : injectionSwitch.y) / 1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(mix(-936.937, -1.5, -5874.5100)) : injectionSwitch.y, (true ? false ? _GLF_FUZZED(mix(-936.937, -1.5, -5874.5100)) : injectionSwitch.y : _GLF_FUZZED(-919.692))))))))), 1.0, abs(abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, abs(abs(0.0)), 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))));
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.5) : injectionSwitch.y)))), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-1465.0686)), bool(false)))))));
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, ~ (~ (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))).xy.x + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw.x;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x, _GLF_IDENTITY(max(workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x, workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x), uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id : _GLF_FUZZED(uvec4(174869u, 160095u, 67130u, 73410u)))))).xy, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy)).x, (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy, (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy)).x) ^ 0u), workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x), _GLF_IDENTITY((max(workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x, workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x)) - 0u, 0u ^ ((max(workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x, workgroup_base + GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x)) - 0u))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), ~ (~ (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, _GLF_IDENTITY(0u, 0u + (0u)))))))).x + 1), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), _GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_size)))))) : false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))))) / uvec2(1u, 1u)))), (((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_size)))))) : false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))))) / uvec2(1u, 1u))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_size)))))) : false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))))) / uvec2(1u, 1u)))), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_size) : ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (true ? GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_4_1_1_14readworkgroup_size)))))) : false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(uvec2(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))))) / uvec2(1u, 1u)))))))) | uvec2(0u, 0u)))))).x + _GLF_IDENTITY(1, clamp(1, 1, 1))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, uvec2(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[0], GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[1])), _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (true ? GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))), _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | uvec2(0u, 0u))) << (uvec2(1u, 1u) ^ uvec2(1u, 1u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) * uvec2(1u, 1u))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) * uvec2(1u, 1u))), ~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) * _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) << uvec2(0u, 0u)))))))))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u)))))), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)), uvec2(0u, 0u) ^ (min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / uvec4(1u, 1u, 1u, 1u))))).zw, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u)))))), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, 0u)))) + uvec2(0u, 0u)) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x + 1), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), max(_GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), (((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw))) + uvec2(0u, 0u)), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)))) ^ uvec2(0u, 0u))))) | uvec2(0u, 0u)))))).x + 1), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), max(_GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), (((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw))) + uvec2(0u, 0u)), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)))) ^ uvec2(0u, 0u))))) | uvec2(0u, 0u)))))).x + 1), 0u, 1u, 0u), ~ (~ (uvec4((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), max(_GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), (((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw))) + uvec2(0u, 0u)), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)))) ^ uvec2(0u, 0u))))) | uvec2(0u, 0u)))))).x + 1), 0u, 1u, 0u))))) * uvec4(1u, 1u, 1u, 1u))))), (uint(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) * uvec2(1u, 1u))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) * uvec2(1u, 1u))), ~ (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) * uvec2(1u, 1u))))))))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u), (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u), min((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u)))) ^ uvec2(0u, 0u))))))), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), uvec2(0u, 0u) | (_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw) ^ uvec2(0u, 0u)))))), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), clamp(_GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) | uvec2(0u, 0u)))) + uvec2(0u, 0u)) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x + _GLF_IDENTITY(1, 0 | (1))), uint(uvec4((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), max(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), (((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw))) + uvec2(0u, 0u)), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))), ~ (~ (_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)))) ^ uvec2(0u, 0u))))) | uvec2(0u, 0u), uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), max(_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), (((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw))) + uvec2(0u, 0u)), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)))), ~ (~ (_GLF_IDENTITY(((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw), ((false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw)) / uvec2(1u, 1u)))) ^ uvec2(0u, 0u))))) | uvec2(0u, 0u), 0u)))))))).x + 1), 0u, 1u, 0u))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u | 0u)) % subgroup_size);
 uint read = 0;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (! (bool(bvec4(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)))))), true, false)), (bool(bvec4(false, false, true, false))) || false))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(35.16)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
          {
          }
         else
          {
           do
            {
             GLF_merged2_0_1_4_1_1_14readworkgroup_size.x = read;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9303.2430)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9303.2430)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9303.2430)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))) || false), false, false, false)))))
            {
             do
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       GLF_merged2_0_1_13_1_1_4num_workgroupread.y = GLF_merged2_0_1_4_1_1_14readworkgroup_size.x;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, sqrt(0.0), sqrt(0.0), 0.0, 1.0, 0.0)))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-519.712 - 10.77)), _GLF_FUZZED(-0.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(8396.5602) : (injectionSwitch)[1]))), bvec2(true, true))).x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(1), 4, 64, 4);
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (true ? (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))) : _GLF_FUZZED(_injected_loop_counter))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if((GLF_merged2_0_2_52_2_2_54GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw.x % 2) == 0)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter)))))))), false || ((_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter)))))))))) && true)); _injected_loop_counter --)
                      {
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec2(min(1, 1), 0)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec2(min(1, 1), 0))))) ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))) << 0))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))))), true, true)), bool(bvec4(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))))), true, true)), false, false, true)))); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 subgroupAll(false);
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(2004.2417) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), injectionSwitch.x))))); _injected_loop_counter --)
                {
                 do
                  {
                   _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread.y = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), (GLF_merged2_0_1_13_1_1_4num_workgroupread.y = atomicLoad(buf[virtual_gid], 4, 64, 2)) ^ 0u);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true)))), false, false, true)))))
                  {
                   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ~ (~ ((1 << _GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             subgroupAll(false);
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y))));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread.y = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))))))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread.y = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), atomicLoad(buf[virtual_gid], 4, 64, 2))), (GLF_merged2_0_1_13_1_1_4num_workgroupread.y = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)))) ^ 0u)) >> 0u);
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
  }
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(10436) : int(4)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(10436) : int(4)), ((false ? _GLF_FUZZED(10436) : int(_GLF_IDENTITY(4, (4) ^ 0)))) | 0), (false ? _GLF_FUZZED(10436) : int(4))))), int(4)), (clamp(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(10436) : int(4)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(10436) : int(4)), ((false ? _GLF_FUZZED(10436) : int(_GLF_IDENTITY(4, (4) ^ 0)))) | 0), (false ? _GLF_FUZZED(10436) : int(4))))), int(4))) | (clamp(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(10436) : int(4)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(10436) : int(4)), ((false ? _GLF_FUZZED(10436) : int(_GLF_IDENTITY(4, (4) ^ 0)))) | 0), (false ? _GLF_FUZZED(10436) : int(4))))), int(4)))))), min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) << 0))) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) * (1 & (1 | 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ 44627, (true ? + 44627 : _GLF_FUZZED(81368)))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(+ 44627, (true ? + 44627 : _GLF_FUZZED(81368)))), 1)), int(ivec2(_GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(+ 44627, (true ? + 44627 : _GLF_FUZZED(81368)))), 1)), (int(ivec2((_GLF_IDENTITY(+ 44627, (true ? + 44627 : _GLF_FUZZED(81368)))), 1))) * 1), 1)))))))), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(_GLF_IDENTITY(4, (4) - 0))), clamp(int(4), int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-96596))))))), (_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), clamp(int(4), int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-96596)))))))) * (1 | 1)), _GLF_IDENTITY(clamp(int(4), int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (4)))), 0 + (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * 1)), (int(_GLF_IDENTITY(4, (4) * 1))) | (int(_GLF_IDENTITY(4, (4) * 1)))), 0 | (int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(86571))))), (true ? int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))) : _GLF_FUZZED(-54438))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1, ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1) | ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1))))), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1, ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1) | ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1))))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1, ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1) | ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1))))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1, ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1) | ((_GLF_IDENTITY(int(4), 0 ^ (int(4)))) / 1)))))))))))))))), 0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(4), int(4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))), false))) && true), false, true)))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), max(_GLF_IDENTITY(int(2), min(int(2), int(2))), _GLF_IDENTITY(int(2), min(int(2), int(2)))))) | (int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8864) : _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))))
                              {
                               atomicStore(checker[virtual_gid], GLF_merged2_0_1_13_1_1_4num_workgroupread.y, 4, 64, 4);
                              }
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED((-4.5))), float(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), bool(true)))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
