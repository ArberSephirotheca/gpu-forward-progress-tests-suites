#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uint _f0;
 bvec2 _f1;
 uvec4 _f2;
 uvec4 _f3;
 bvec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_13 {
 float _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat3x4 _f1;
 vec3 _f2;
 int _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat4 _f2;
 mat3x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 _GLF_struct_11 _f1;
 ivec4 _f2;
 uint workgroup_id;
 _GLF_struct_13 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 mat4 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 vec3 _f1;
 uint workgroup_size;
 mat2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bool _f1;
 bool _f2;
 mat2x3 _f3;
 ivec4 _f4;
 mat4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 bvec4 _f1;
 uint _f2;
 vec4 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bvec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 uint _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
 _GLF_struct_3 _f4;
 mat3x4 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 uint _f1;
 vec2 _f2;
 _GLF_struct_0 _f3;
 ivec4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_7 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat3(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3292.5255) : 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log2(82.67)))))), (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))), float(_GLF_FUZZED(-7.4)), bool(false)))))), 1.0, 0.0, 0.0, 0.0, 0.0)))), 1u, vec2(1.0), _GLF_struct_0(uvec3(_GLF_IDENTITY(1u, 1u * (1u))), mat3x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))) : _GLF_FUZZED(9636.9168))))), ivec4(1), _GLF_struct_5(_GLF_struct_1(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), mat3x2(1.0)), 1u, _GLF_struct_2(mat3x4(1.0), bvec4(true), 1u, vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(-13.09) : -8.9)))), float(1.0), bool(true))))), vec2(1.0), _GLF_struct_3(vec3(1.0), true, true, mat2x3(1.0), ivec4(1), mat4(1.0), mat3x4(1.0)), mat3x4(1.0), _GLF_struct_4(mat4x2(1.0), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(9.7, -2475.7840, 7.4, 43.61, 7.5, -7.2, -3.4, -89.87, -2.3, 9082.6123, 651.911, 6194.6112, 48.08, 446.286, -0.1, 2335.3570)))))), _GLF_struct_7(_GLF_struct_6(ivec4(1), mat4(1.0), bvec3(true), mat2x4(1.0), 1, mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat4(mat2x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2x4(-4.0, -226.452, -2.4, 990.317, -82.65, 0.3, -96.78, -55.94))))), (float(_GLF_IDENTITY(mat2x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat4(mat2x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2x4(-4.0, -226.452, -2.4, 990.317, -82.65, 0.3, -96.78, -55.94)))))) / 1.0)) / _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0), vec3(0.0, 1.0, 0.0)))))), vec3(1.0), gl_WorkGroupSize.x, mat2(1.0), uvec4(1u)));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(mat2(1.0), _GLF_struct_11(_GLF_struct_9(ivec3(1), mat2x3(1.0), mat2x4(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), uvec3(1u)), _GLF_struct_10(1, mat3x4(1.0), vec3(1.0), 1, uvec4(1u)), mat4(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, ~ (~ (1))))) / ivec2(1, 1))), ivec4(1), gl_WorkGroupID.x, _GLF_struct_13(1.0, _GLF_struct_12(1u, bvec2(true), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), uvec4(1u), bvec4(true), 1u)), bvec2(true));
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_8._f6.workgroup_size * _GLF_struct_replacement_14.workgroup_id, uint(uvec2(_GLF_struct_replacement_8._f6.workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_14.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_14.workgroup_id)), 1u)));
 uint subgroup_base = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED((uvec4(127137u, 177789u, 109776u, 168324u) << subgroup_base).r), 0u ^ (true ? workgroup_base : _GLF_FUZZED((uvec4(127137u, 177789u, 109776u, 168324u) << subgroup_base).r))))) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((uvec4(127137u, 177789u, 109776u, 168324u) << subgroup_base).r))) + subgroup_base) * 1u) + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, min(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid)).y);
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) / 1)))
      {
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 0:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(8), int(8))))) << (0 & 80800)) | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH(((0 & 43370) >> _GLF_IDENTITY(int(2), int(2)))))
                    {
                     case 56:
                     ivec2 _GLF_SWITCH_4_0v[40];
                     case 31:
                     mat4x3 _GLF_SWITCH_4_1v;
                     case 0:
                     case 55:
                     case 52:
                     case 37:
                     case 1:
                     case 46:
                     case 25:
                     subgroupAll(false);
                     break;
                     case 28:
                     do
                      {
                       -54557;
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
                     case 88:
                     float _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                }
              }
             break;
             case 81:
             vec4 _GLF_SWITCH_4_0v[85], _GLF_SWITCH_4_1v;
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
        }
       break;
       default:
       1;
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
      }
     else
      {
       read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, uvec3(uvec4(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, 1u))).z], 4, 64, 2);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   do
    {
     do
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 61:
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, int(ivec4((0) - 0, 0, 1, (1 ^ 0)))))); _injected_loop_counter --)
          {
           if(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 58:
               mat4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
               case 89:
               ;
               case 0:
               case 18:
               case 70:
               (mat3x4(-0.5, 8.1, -2086.5672, 5.9, -930.693, 87.01, 6.0, -69.54, 421.945, 1288.5928, -8.2, 950.978) , vec3(3030.3613, 166.270, -93.41));
               case 5:
               uvec4 _GLF_SWITCH_0_0v[54], _GLF_SWITCH_0_1v;
               {
                ivec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[78];
                {
                 ;
                 mat2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                 uvec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                 ;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   _GLF_SWITCH_0_5v;
                  }
                 else
                  {
                  }
                 vec4 _GLF_SWITCH_0_8v[90];
                }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    ;
                   }
                  else
                   {
                   }
                 }
                (true ^^ (mat3(5575.9296, -8262.2595, 249.729, _GLF_IDENTITY(_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true ? -7.1 : _GLF_FUZZED(_GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))), mix(float(_GLF_FUZZED(825.255)), float(true ? -7.1 : _GLF_FUZZED(_GLF_IDENTITY(6.9, _GLF_IDENTITY(clamp(6.9, 6.9, 6.9), min(clamp(6.9, 6.9, 6.9), clamp(6.9, 6.9, 6.9)))))), bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) + (1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))), mix(float(_GLF_FUZZED((1.3 + 74.42))), float(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), bool(_GLF_IDENTITY(bvec3(! (bool(bool(true))), false, true), bvec3(bvec4(bvec3(! (bool(bool(true))), false, true), true)))))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))), clamp(0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))), min(_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))), _GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))))), _GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))), _GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0))))), _GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))), min(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))), max(0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))), 0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))))), 0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? -7.1 : _GLF_FUZZED(6.9)), min((true ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0)))))), 0.0 + (_GLF_IDENTITY(-7.1, float(mat4x3(_GLF_IDENTITY(-7.1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))) ? -7.1 : _GLF_FUZZED(6.9)), min((_GLF_IDENTITY(true, true && (true)) ? -7.1 : _GLF_FUZZED(6.9)), (true ? -7.1 : _GLF_FUZZED(6.9))))), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), max(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), float(vec4(_GLF_IDENTITY(1.0 * (1.0), max(1.0 * (1.0), 1.0 * (1.0))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))), 0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(435.097, mix(float(_GLF_FUZZED(-545.406)), float(_GLF_IDENTITY(435.097, float(mat2x3(435.097, 0.0, 1.0, 0.0, 1.0, 0.0)))), bool(_GLF_IDENTITY(true, true && (true))))), 4559.0817, -7.3, -4151.4455, _GLF_IDENTITY(5148.6719, (5148.6719) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))) == mat3(5.4, 5061.9642, -1.4, -9.3, 8.0, -1.1, 80.41, -4.3, -2.2)));
                vec2(0.5, 4.4);
                do
                 {
                  mat3x2(220.282, 307.067, -26.08, 1.9, -2066.5370, 8.8);
                  (inversesqrt(vec4(4772.8973, -86.57, -196.564, -7.9)) * mat2x4(1228.7737, -765.450, -42.12, -9886.2573, 1.1, 4.0, 4.9, -508.377));
                  vec4 _GLF_SWITCH_0_9v[8], _GLF_SWITCH_0_10v[26];
                  bvec4 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                 }
                while(true);
                _GLF_SWITCH_0_1v;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    (ivec2(-39615, -10259) - -8239);
                   }
                  else
                   {
                   }
                 }
                else
                 {
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  reflect(vec2(-389.140, -72.82), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) + -671.674));
                 }
               }
               for(mat3x2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[64]; true; 76173)
                {
                 do
                  {
                   ((_GLF_IDENTITY(uvec4(155303u, 193006u, 93097u, 39397u), (_GLF_IDENTITY(uvec4(155303u, 193006u, 93097u, _GLF_IDENTITY(39397u, _GLF_IDENTITY(min(39397u, 39397u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : min(39397u, 39397u)), min((false ? _GLF_FUZZED(subgroup_size) : min(39397u, 39397u)), (false ? _GLF_FUZZED(subgroup_size) : min(39397u, 39397u))))))), (uvec4(155303u, 193006u, 93097u, 39397u)) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)) == _GLF_SWITCH_0_1v) ? mat3(719.777, 9.7, 0.0, 4.4, -7.1, _GLF_IDENTITY(8.0, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(4.2) : 8.0)), -456.703, _GLF_IDENTITY(21.63, 0.0 + (_GLF_IDENTITY(21.63, float(mat2x4(21.63, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4309.8212))), 0.0, 0.0))) / abs(exp(0.0)))), (min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4309.8212))), 0.0, 0.0))) / abs(exp(0.0))))) + 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))))), 346.359) : mat3(_GLF_IDENTITY(-4261.4199, mix(float(-4261.4199), float(_GLF_FUZZED(-62.01)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false)), (bool(bvec4(bool(bool(false)), false, true, false))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : injectionSwitch.y))))))), false, true, false)), (bool(bvec4(bool(bool(false)), _GLF_IDENTITY(false, true && (false)), true, false))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), -5461.9818, 3.3, 4.7, _GLF_IDENTITY(-2448.4082, min(-2448.4082, -2448.4082)), _GLF_IDENTITY(7.1, max(7.1, 7.1)), -494.152, 180.467, 35.99));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 28:
                     mat2x3 _GLF_SWITCH_5_0v[17];
                     case 69:
                     ;
                     case 0:
                     case 91:
                     case 60:
                     case 10:
                     case 74:
                     case 25:
                     case 52:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       switch(_GLF_IDENTITY(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0))
                        {
                         case 92:
                         mat3x4(-9.2);
                         case 28:
                         mat4x3 _GLF_SWITCH_6_0v;
                         case 0:
                         case 68:
                         case 61:
                         case 97:
                         case 66:
                         case 50:
                         case 19:
                         case 5:
                         case 71:
                         mat4(mat3(4.0, 690.057, 3088.8802, 2432.8716, -40.66, -47.79, 9850.4305, 2066.0189, 5.4));
                         break;
                         default:
                         1;
                        }
                      }
                     break;
                     default:
                     1;
                    }
                  }
                 int _GLF_SWITCH_0_15v[20], _GLF_SWITCH_0_16v[69];
                 do
                  {
                   do
                    {
                     if(bvec4(false, true, false, true)[1])
                      {
                       (false ? _GLF_IDENTITY(mat3(-203.615, 8.0, -5.1, _GLF_IDENTITY(-1.5, mix(float(_GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, _GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, -1.5))))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(80.98, mix(float(80.98), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 6765.7408, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)), 980.042, -2337.3075), (mat3(-203.615, 8.0, -5.1, _GLF_IDENTITY(-1.5, mix(float(_GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, _GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, -1.5))))), float(_GLF_FUZZED(-4.6)), bool(false))), _GLF_IDENTITY(80.98, mix(float(80.98), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)).x > injectionSwitch.y))))), 6765.7408, _GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)), 980.042, -2337.3075)) * mat3(1.0)) : mat3(1.8, -4.1, 30.91, -7.8, 17.07, -18.42, 316.674, 3017.0873, 787.576));
                       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           25668;
                          }
                        }
                       uint _GLF_SWITCH_0_17v[9];
                       ivec4 _GLF_SWITCH_0_18v[72], _GLF_SWITCH_0_19v;
                       ;
                       mat3x2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(                 injectionSwitch;
 _GLF_IDENTITY(mix(false, false, true), bool(bvec2(mix(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, true), false))); bitfieldInsert(num_workgroup, num_workgroup, 46265, sign(-47640)))
                  {
                   switch(_GLF_SWITCH((_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(5), int(5)))))
                    {
                     case 0:
                     case 40:
                     case 86:
                     case 83:
                     case 68:
                     case 63:
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       switch(_GLF_SWITCH((-35998 & 0)))
                        {
                         case 52:
                         ivec3(_injected_loop_counter, ivec2(-94683, _GLF_IDENTITY(33304, (33304) >> 0)));
                         case 43:
                         int _GLF_SWITCH_1_0v[96], _GLF_SWITCH_1_1v;
                         case 0:
                         mat4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                         case 95:
                         do
                          {
                           ivec3(-90323, -64644, -4808);
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) * 1), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1)))))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             mat4x2(-92.01, 83.19, _GLF_IDENTITY(9228.4167, min(9228.4167, 9228.4167)), -6.4, 413.454, 3837.8519, -14.98, -2.1);
                            }
                           else
                            {
                            }
                          }
                         case 42:
                         case 90:
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           mat2((mat3x4(-9.3, -18.67, -7348.4371, -911.924, 55.09, 31.81, 5611.9409, -6.9, _GLF_IDENTITY(9.2, (9.2) / 1.0), -9.5, 300.111, -188.409)));
                          }
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
                            {
                             mat4x2(-6.3, 1.6, 48.39, 6.3, -8203.8660, 4571.2729, 4.2, 888.472);
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           (mat4x3((mat4x2(9.6, 2324.9831, -70.17, 2294.1193, _GLF_IDENTITY(929.556, (true ? 929.556 : _GLF_FUZZED(-4.5))), -2.7, -739.556, -2383.6032) * mat3x4(1461.4157, _GLF_IDENTITY(5.9, (false ? _GLF_FUZZED(-3.5) : 5.9)), 1.8, 94.96, 6.2, -9.7, 70.55, -12.33, 8.3, -8.4, 9.8, _GLF_IDENTITY(8143.4336, clamp(8143.4336, 8143.4336, 8143.4336))))) - mat4x3(-260.818, -5642.1807, 254.441, 8484.6462, 6.5, 1724.7288, _GLF_IDENTITY(-4.2, (_GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(-4.2, float(mat4(-4.2, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(774.654) : 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))))) / 1.0), -60.03, 21.90, 5.2, -11.90, -2934.1696));
                          }
                         uvec4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[35];
                         vec4(732.919, -2503.8867, 1.0, -8145.2410);
                         uvec4 _GLF_SWITCH_0_27v;
                         break;
                         default:
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY(1 ^ 0, max(_GLF_IDENTITY(1 ^ 0, max(1 ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(0, 0))))), _GLF_IDENTITY(1 ^ 0, int(ivec4(1 ^ 0, 0, 0, 0))))), 1 ^ 0))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))); _injected_loop_counter ++)
                          {
                           1;
                          }
                        }
                      }
                     break;
                     default:
                     1;
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(true)
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 94:
                         vec2 _GLF_SWITCH_5_0v;
                         case 16:
                         mat2x4 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                         case 0:
                         uvec2 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                         ivec4 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v;
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-4450.2632), (min(injectionSwitch, injectionSwitch))[1]), vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(4419.5335)), bvec2(true, false)))).x > injectionSwitch.y)) || false))))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 9:
                               ;
                               case 66:
                               mat4x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[38];
                               case 0:
                               case 92:
                               case 69:
                               case 38:
                               case 77:
                               case 48:
                               case 30:
                               case 37:
                               case 34:
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 84:
                                   case 81:
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 35:
                                     bvec4(false, lessThan(injectionSwitch, injectionSwitch), true);
                                     case 25:
                                     injectionSwitch.xyyx;
                                     case 0:
                                     mat3x4(mat2x3(-6.8, 6944.8244, _GLF_IDENTITY(-92.72, mix(float(_GLF_FUZZED(-4.4)), float(-92.72), bool(true))), 45.38, -818.322, 69.53));
                                     break;
                                     case 76:
                                     float _GLF_SWITCH_2_0v;
                                     case 28:
                                     (-7.1 / mat3x4(1612.3269, -6.2, 4.8, 5.7, -4.5, 7.6, _GLF_IDENTITY(-85.49, (-85.49) + 0.0), 415.020, 3273.8382, -97.65, 6.2, 0.7));
                                     default:
                                     1;
                                    }
                                   break;
                                   case 99:
                                   bvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[82], _GLF_SWITCH_3_2v;
                                   case 35:
                                   mat2(-3473.3755, -902.433, -73.51, 5.6);
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     1;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               break;
                               default:
                               1;
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           _GLF_IDENTITY(vec3(-9.9, 9.7, 97.40), (vec3(_GLF_IDENTITY(-9.9, _GLF_IDENTITY(float(mat2x4(-9.9, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat2x4(float(mat2x4(-9.9, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, abs(0.0), 1.0)))), 9.7, 97.40)) * mat3(1.0));
                          }
                         break;
                         case 87:
                         mat4 _GLF_SWITCH_5_3v;
                         default:
                         1;
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     mat4x3(_GLF_IDENTITY(vec3(22.88, 8.2, 8.8), vec3(1.0, 1.0, 1.0) * (vec3(22.88, 8.2, 8.8))), vec3(-5399.2353, 6505.6558, 68.76), _GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (vec3(-12.98, -9.6, 8126.6376)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(30.51), (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(float(111263u)), _GLF_IDENTITY(_GLF_FUZZED(7779.0944), float(mat2x4(_GLF_FUZZED(7779.0944), 1.0, _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), bvec3(true, false, false))), vec3(0.0, 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (vec3(-12.98, -9.6, 8126.6376)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(30.51), (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(float(111263u)), _GLF_IDENTITY(_GLF_FUZZED(7779.0944), float(mat2x4(_GLF_FUZZED(7779.0944), 1.0, _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), bvec3(true, false, false))), vec3(0.0, 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)), vec3(mat4x2(_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (vec3(-12.98, -9.6, 8126.6376)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(30.51), (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(float(111263u)), _GLF_IDENTITY(_GLF_FUZZED(7779.0944), float(mat2x4(_GLF_FUZZED(7779.0944), 1.0, _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), bvec3(true, false, false))), vec3(0.0, 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (_GLF_IDENTITY(vec3(-12.98, -9.6, 8126.6376), (vec3(-12.98, -9.6, 8126.6376)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(30.51), (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(float(111263u)), _GLF_IDENTITY(_GLF_FUZZED(7779.0944), float(mat2x4(_GLF_FUZZED(7779.0944), 1.0, _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), bvec3(true, false, false))), vec3(0.0, 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)))), vec3(-12.98, -9.6, 8126.6376))), vec3(62.46, -7423.3042, _GLF_IDENTITY(8.7, float(mat3x4(8.7, cos(0.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0))), abs(0.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0)))))[2];
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                }
               case 62:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   ;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               case 54:
               mat3x2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
               case 67:
               case 94:
               mat4x2 _GLF_SWITCH_0_34v;
               break;
               default:
               1;
              }
            }
           else
            {
             switch(_GLF_SWITCH((1 ^ 1)))
              {
               case 33:
               ((mat2x4(-57.51, 5.7, 7.5, -5.2, 28.92, -61.61, -9293.7794, -3961.8754) - mat2x4(-9.5, -7.6, 83.26, 13.27, 9850.5434, -5101.8221, 5599.7606, 0.5)) == mat2x4(-1.2, 286.075, -16.13, 9.9, 2589.2946, -3.6, -52.81, 246.954));
               case 0:
               case 12:
               case 60:
               case 79:
               case 30:
               case 32:
               case 84:
               case 73:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     mat4x2 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
                     ivec2 _GLF_SWITCH_0_37v;
                     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < int(_GLF_ONE(1.0, injectionSwitch.y)))))))))); _injected_loop_counter ++)
                      {
                       for(                       dot(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(2.0, -6664.1819));
 true; mat4(7.0, -2.1, -7340.1189, 99.06, -8651.8839, 6.8, 3.7, -71.81, -1.7, -8647.8124, 5.2, -273.753, -3062.9613, 9.8, -7.2, -1.1))
                        {
                        }
                      }
                     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       bvec4(true, true, false, true).wyww;
                      }
                     _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))));
                     uvec3(19927u, 197538u, 122427u);
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))) != (-810 & (0 << _GLF_IDENTITY(int(3), int(3))))); _injected_loop_counter --)
                      {
                       while(true)
                        {
                         uint _GLF_SWITCH_0_38v;
                         mat2x4 _GLF_SWITCH_0_39v[67], _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           uvec2(49195u, 164529u);
                          }
                         vec4 _GLF_SWITCH_0_42v;
                         uvec4 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           equal((_GLF_SWITCH_0_43v & _GLF_SWITCH_0_43v), _GLF_SWITCH_0_43v);
                          }
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(true)
                        {
                         ivec4 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
                         do
                          {
                           ;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, false))))))));
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               else
                {
                }
               break;
               case 9:
               distance(injectionSwitch, vec2(-3.2, -0.0));
               case 54:
               ;
               default:
               1;
              }
            }
          }
         case 0:
         case 66:
         case 15:
         case 6:
         for(int _injected_loop_counter = (0 ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
            {
            }
           else
            {
             subgroupAll(false);
            }
          }
         case 96:
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z], 4, 64, 2);
          }
         break;
         case 33:
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(false)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), (1 & 1) * (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), min(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), max(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))))); _injected_loop_counter --)
                {
                 while(true)
                  {
                  }
                }
               mat4x3 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v[89];
               int _GLF_SWITCH_0_51v;
               int _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 while(true)
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
                    {
                     case 28:
                     (+ mat3(-247.553, 7231.3671, -3718.2962, -403.495, -5882.1054, 808.572, 4884.4529, 59.86, 2273.4355));
                     case 0:
                     case 52:
                     case 89:
                     (- vec3(-7.5, _GLF_IDENTITY(219.164, (219.164) - 0.0), 78.62));
                     case 11:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         _GLF_SWITCH_0_49v;
                        }
                       else
                        {
                        }
                      }
                     case 49:
                     case 57:
                     case 8:
                     case 41:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
                      {
                       while((_GLF_IDENTITY(ivec3(3896, 32916, 26493) == bitCount(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid), ! (! (_GLF_IDENTITY(ivec3(3896, 32916, 26493) == bitCount(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid), bool(bvec3(ivec3(3896, _GLF_IDENTITY(32916, (32916) / 1), _GLF_IDENTITY(_GLF_IDENTITY(26493, (26493) | 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(26493, (26493) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (26493) | 0), 1, 0)))) == bitCount(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))
                        {
                         int _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           uvec4(124093u, 28040u, 77028u, 39339u);
                          }
                         ivec4 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v;
                        }
                      }
                     break;
                     default:
                     1;
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false), true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || (false))))));
         default:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 subgroupBarrier();
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(7, (7) - 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       atomicStore(checker[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z], _GLF_IDENTITY(read, 1u * (read)), 4, 64, 4);
       break;
       case 79:
       ivec3 _GLF_SWITCH_4_0v;
       default:
       1;
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
