#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((34.23 - 1.2), max((34.23 - 1.2), (34.23 - 1.2))))), float(injectionSwitch.y), bool(true)))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(2.8)), bool(false))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, true, false))))) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))) && (bool(bvec3((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), false, true, false)))))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), false, true, false)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), false, true, false)))))), bool(bvec3((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(899.987)))))))))), false, true, false)))))), false, false)))) && true)))), false)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, true, false))))))))), (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(53.10)), bool(false))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(false || (! ((injectionSwitch.x > injectionSwitch.y))), false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-5.3)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))), (false ? _GLF_FUZZED(-81.22) : injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false))))))))))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY((~ (0u)), ((~ (0u))) - 0u)) - 0u)), 0u)) | (subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_base, (workgroup_base + subgroup_base) / 1u))))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : (~ (workgroup_base + subgroup_base)))), (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), min((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u)), (workgroup_base + subgroup_base))))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) >> 0u)) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), max((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))) / (0u ^ 1u)))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u))), max((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u)))))))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), _GLF_IDENTITY(~ (~ (~ (workgroup_base + subgroup_base))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), max(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base))))))) - 0u)), min(~ (~ (~ (workgroup_base + subgroup_base))), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), min(~ (~ (workgroup_base + subgroup_base)), ~ (~ (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) - 0u))))))) - 0u))))))), clamp(~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))) << 0u)))) >> 0u)), ~ _GLF_IDENTITY((~ (~ (workgroup_base + subgroup_base))), ((~ (~ (workgroup_base + subgroup_base)))) / 1u)))), clamp((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / _GLF_IDENTITY(1u, 0u ^ (1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) / 1u))) << 0u)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) | ((~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))), ~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) / 1u) - 0u))), ~ (~ (~ (workgroup_base + subgroup_base))))))))), ~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), (true ? workgroup_base + subgroup_base : _GLF_FUZZED((+ num_workgroup)))), (workgroup_base + subgroup_base) / 1u))), (~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base + subgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (~ (workgroup_base + subgroup_base)))))))), min(clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))) ^ 0u))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))), ~ (~ (((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) + subgroup_base, (workgroup_base + subgroup_base) / 1u))) ^ 0u))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))))))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base) ^ 0u))))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | 0u))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))), ~ (~ (~ (workgroup_base + subgroup_base))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base))))))))), (clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base)))))))))) | (clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base))))))))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base), ~ (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) / 1u, ((workgroup_base + subgroup_base) / 1u) ^ 0u)))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base))))))))))))), ~ (~ (clamp((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base)))))))) / 1u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_base, (workgroup_base + subgroup_base) / 1u))))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : (~ (workgroup_base + subgroup_base)))), (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), min((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u)), (workgroup_base + subgroup_base))))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) >> 0u)) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), max((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))) / (0u ^ 1u)))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u))), max((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u)))))))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), _GLF_IDENTITY(~ (~ (~ (workgroup_base + subgroup_base))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), max(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base))))))) - 0u)), min(~ (~ (~ (workgroup_base + subgroup_base))), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), min(~ (~ (workgroup_base + subgroup_base)), ~ (~ (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) - 0u))))))) - 0u))))))), clamp(~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))) << 0u)))) >> 0u)), ~ _GLF_IDENTITY((~ (~ (workgroup_base + subgroup_base))), ((~ (~ (workgroup_base + subgroup_base)))) / 1u)))), clamp((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / _GLF_IDENTITY(1u, 0u ^ (1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) / 1u))) << 0u)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) | ((~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))), ~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) / 1u) - 0u))), ~ (~ (~ (workgroup_base + subgroup_base))))))))), ~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), (true ? workgroup_base + subgroup_base : _GLF_FUZZED((+ num_workgroup)))), (workgroup_base + subgroup_base) / 1u))), (~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base + subgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (~ (workgroup_base + subgroup_base)))))))), min(clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))) ^ 0u))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))), ~ (~ (((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) + subgroup_base, (workgroup_base + subgroup_base) / 1u))) ^ 0u))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))))))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base) ^ 0u))))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | 0u))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))), ~ (~ (~ (workgroup_base + subgroup_base))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base))))))))), (clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base)))))))))) | (clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base))))))))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base), ~ (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) / 1u, ((workgroup_base + subgroup_base) / 1u) ^ 0u)))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base))))))))))))), ~ (~ (clamp((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base)))))))) / 1u), (~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_base, (workgroup_base + subgroup_base) / 1u))))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : (~ (workgroup_base + subgroup_base)))), (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), min((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u)), (workgroup_base + subgroup_base))))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) >> 0u)) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), max((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))) / (0u ^ 1u)))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u))), max((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) / 1u)))))))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), _GLF_IDENTITY(~ (~ (~ (workgroup_base + subgroup_base))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), max(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-3438.3918, 5.3, 1.5, 7.6))) : ~ (~ (workgroup_base + subgroup_base))))))) - 0u)), min(~ (~ (~ (workgroup_base + subgroup_base))), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), min(~ (~ (workgroup_base + subgroup_base)), ~ (~ (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) - 0u))))))) - 0u))))))), clamp(~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))) << 0u)))) >> 0u)), ~ _GLF_IDENTITY((~ (~ (workgroup_base + subgroup_base))), ((~ (~ (workgroup_base + subgroup_base)))) / 1u)))), clamp((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / _GLF_IDENTITY(1u, 0u ^ (1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) / 1u))) << 0u)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) | ((~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))), ~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) / 1u) - 0u))), ~ (~ (~ (workgroup_base + subgroup_base))))))))), ~ (_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), (true ? workgroup_base + subgroup_base : _GLF_FUZZED((+ num_workgroup)))), (workgroup_base + subgroup_base) / 1u))), (~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (~ (~ (workgroup_base + subgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (~ (workgroup_base + subgroup_base)))))))), min(clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))) ^ 0u))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))), ~ (~ (((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) + subgroup_base, (workgroup_base + subgroup_base) / 1u))) ^ 0u))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))))))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base) ^ 0u))))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | 0u))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))), ~ (~ (~ (workgroup_base + subgroup_base))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base))))))))), (clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base)))))))))) | (clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u))), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (~ (~ (workgroup_base + subgroup_base))))))))))), min(clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u))) / 1u))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base), ~ (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) / 1u, ((workgroup_base + subgroup_base) / 1u) ^ 0u)))), (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), ~ (~ (~ (workgroup_base + subgroup_base))))))))))))), ~ (~ (clamp((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base)))))))) / 1u)) | 0u)) ^ ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))), 0u ^ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), min(~ (~ (workgroup_base + subgroup_base)), ~ (~ (workgroup_base + subgroup_base))))) | 0u), max(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_base)), ~ (~ (workgroup_base + subgroup_base)))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)) + subgroup_base)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)), max(((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)), ~ (~ (((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base))))))) - 0u))) - (1u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), max((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (~ (workgroup_base + subgroup_base))), (clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u + (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), 1u * ((workgroup_base + subgroup_base)))), max(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_base)), ~ (~ (workgroup_base + subgroup_base)))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)) + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)) + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))), max((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(~ (~ ((workgroup_base))), 0u | (~ (~ ((workgroup_base))))))) | (_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))) * 1u), workgroup_base)) + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u))))), subgroup_base))), (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))), workgroup_base)) + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, workgroup_base)), workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, workgroup_base)), workgroup_base))))) + subgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base), ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)) | ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)))) - 0u))))) - (_GLF_IDENTITY(1u, (1u) + 0u) ^ ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) - _GLF_IDENTITY(0u, min(0u, 0u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (~ (workgroup_base + subgroup_base)))) + 0u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), false, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.92) : injectionSwitch.y))) - 0.0), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.92) : injectionSwitch.y))) - 0.0), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.92) : injectionSwitch.y))) - 0.0), injectionSwitch.y)), (false ? _GLF_FUZZED(325.588) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.92) : injectionSwitch.y))) - 0.0), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.92) : injectionSwitch.y))) - 0.0), injectionSwitch.y))))), float(_GLF_FUZZED(-7.8)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)));
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) << 0)))), (true ? _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ _GLF_IDENTITY((4), ((4)) | ((4))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))), 1 * (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-58541))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))) * (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((4), min((4), (4)))), clamp(~ (_GLF_IDENTITY((4), min((4), (4)))), ~ (_GLF_IDENTITY((4), min((4), (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((4), min((4), (4)))), max(~ (_GLF_IDENTITY((4), min((4), (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((4), min((4), (4)))), (~ (_GLF_IDENTITY((4), min((4), (4))))) | 0))))), int(int(~ (_GLF_IDENTITY((4), min((4), (4))))))))) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY((1) / 1, (1 ^ _GLF_IDENTITY(1, int(int(1)))) | (_GLF_IDENTITY((1) / 1, int(_GLF_ONE(1.0, injectionSwitch.y)) * ((1) / 1)))), ~ (~ ((1) / 1))) : _GLF_FUZZED((+ -70758)))))))))))))), (_GLF_IDENTITY(true ? clamp(4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(~ (4), 1 * (~ _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, (false ? _GLF_FUZZED(floatBitsToInt(9.7)) : _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, ((_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((4)) | ((4)))) / 1) ^ 0)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1) * (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))), (false ? _GLF_FUZZED(79182) : (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) ? ~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | 0)) / 1)), (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((+ -70758), ((+ -70758)) ^ 0))))))) : _GLF_FUZZED(-41398)))))))))) : _GLF_FUZZED(97813), clamp(true ? clamp(4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(~ (4), 1 * (~ _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, (false ? _GLF_FUZZED(floatBitsToInt(9.7)) : _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, ((_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((4)) | ((4)))) / 1) ^ 0)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1) * (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))), (false ? _GLF_FUZZED(79182) : (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) ? ~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | 0)) / 1)), (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((+ -70758), ((+ -70758)) ^ 0))))))) : _GLF_FUZZED(-41398)))))))))) : _GLF_FUZZED(97813), true ? clamp(4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(~ (4), 1 * (~ _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, (false ? _GLF_FUZZED(floatBitsToInt(9.7)) : _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, ((_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((4)) | ((4)))) / 1) ^ 0)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1) * (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))), (false ? _GLF_FUZZED(79182) : (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) ? ~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | 0)) / 1)), (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((+ -70758), ((+ -70758)) ^ 0))))))) : _GLF_FUZZED(-41398)))))))))) : _GLF_FUZZED(97813), true ? clamp(4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(~ (4), 1 * (~ _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, (false ? _GLF_FUZZED(floatBitsToInt(9.7)) : _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | ((4)))) / 1, ((_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((4)) | ((4)))) / 1) ^ 0)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1) * (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))), (false ? _GLF_FUZZED(79182) : (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -70758, 1 * (_GLF_IDENTITY(+ _GLF_IDENTITY(-70758, max(-70758, -70758)), (+ -70758) | (+ -70758))))), ((+ -70758)) ^ 0))))))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) ? ~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY((1) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | 0)) / 1)), (true ? _GLF_IDENTITY((1) / 1, ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)) / 1))) : _GLF_FUZZED(_GLF_IDENTITY((+ -70758), ((+ -70758)) ^ 0))))))) : _GLF_FUZZED(-41398)))))))))) : _GLF_FUZZED(97813))))) : _GLF_FUZZED(-47057)))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(86215, (86215) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_FUZZED(5431.6448)), vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), ~ (~ (0)))], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-209.122)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED((_GLF_IDENTITY(-506.055 / -5805.5913, (true ? -506.055 / -5805.5913 : _GLF_FUZZED(366.827))))), _GLF_FUZZED(-7.6)), bvec2(false, false))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9247.2277), _GLF_FUZZED(-8.4)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), (true ? _GLF_IDENTITY(((injectionSwitch)), vec2(mat4x3(((injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))[1]), ((((injectionSwitch))[1])) - 0.0) * 1.0)), bvec2(true, true)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2480.9043), _GLF_FUZZED(_GLF_IDENTITY(-1.4, float(mat3x4(-1.4, determinant(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), tan(0.0), 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), bvec2(false, false))))), injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(65.32, -2415.1850)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(9279.4580), _GLF_FUZZED(70.55)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9247.2277), _GLF_FUZZED(-8.4)), _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, true && (false)))))[1], _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-9317.9353, -2.4)))))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), _GLF_IDENTITY(vec2(mat2x4(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec4(true, false, true, true))) ? (((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), (vec2(mat2x4(vec2((_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(7760.6553), _GLF_FUZZED(5.7)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_IDENTITY((((injectionSwitch)))[0], max((((injectionSwitch)))[0], (((injectionSwitch)))[0])), _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(_GLF_IDENTITY(false, (false) || false), false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))) - tan(vec2(0.0, 0.0)))), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) || false)))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2480.9043), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-2480.9043), (_GLF_FUZZED(-2480.9043)) - 0.0), 0.0, 0.0, 0.0))), _GLF_FUZZED(-1.4)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), true)))))))))))), mix(vec2(_GLF_FUZZED(44.51), _GLF_FUZZED(8722.5054)), vec2((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9247.2277), _GLF_FUZZED(-8.4)), _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), ((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), _GLF_IDENTITY(vec2(mat2x4(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), ((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-3667.5128, -84.09)) : (injectionSwitch))))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[_GLF_IDENTITY(1, clamp(1, 1, 1))]) * 1.0 : _GLF_FUZZED(2785.4996))))), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), (vec2(mat2x4(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))) - tan(vec2(0.0, 0.0)))), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) || false)))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2480.9043), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-2480.9043), (_GLF_FUZZED(-2480.9043)) - 0.0), 0.0, 0.0, 0.0))), _GLF_FUZZED(-1.4)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), true)))))))))))))[0], (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9247.2277, max(-9247.2277, _GLF_IDENTITY(-9247.2277, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(-9247.2277, (false ? _GLF_FUZZED(-5.8) : -9247.2277)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat3x4(_GLF_IDENTITY(-9247.2277, (false ? _GLF_FUZZED(-5.8) : -9247.2277)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(38.14)), bool(false))))))), _GLF_FUZZED(_GLF_IDENTITY(-8.4, max(-8.4, -8.4)))), _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), _GLF_IDENTITY(vec2(mat2x4(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (((injectionSwitch))[1]) * 1.0 : _GLF_FUZZED(2785.4996))))), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), (vec2(mat2x4(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch))), clamp((((injectionSwitch))), (((injectionSwitch))), (((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))[1], _GLF_IDENTITY((((injectionSwitch))[1]) * 1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY((((injectionSwitch))[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (((injectionSwitch))[1]) : _GLF_FUZZED(-6630.7946))) * 1.0 : _GLF_FUZZED(2785.4996))))), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))) - tan(vec2(0.0, 0.0)))), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) || false)))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2480.9043), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-2480.9043), (_GLF_FUZZED(-2480.9043)) - 0.0), 0.0, 0.0, 0.0))), _GLF_FUZZED(-1.4)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), false)), true))), false, false)))))))))))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), injectionSwitch)).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(65.32, -2415.1850)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(9279.4580), (_GLF_IDENTITY(true, (true) && true) ? _GLF_FUZZED(9279.4580) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-0.9, exp(0.0) * (-0.9)), min(-0.9, -0.9))))), _GLF_FUZZED(70.55)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(320.363), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), mix(vec2(_GLF_FUZZED(-9247.2277), _GLF_FUZZED(-8.4)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], _GLF_IDENTITY((((injectionSwitch)))[1], (true ? _GLF_IDENTITY((((injectionSwitch)))[1], max((((injectionSwitch)))[1], (((injectionSwitch)))[1])) : _GLF_FUZZED(20.17)))), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false))), min(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2(((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false))), (_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(0.2)), bool(false)))), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false))), (_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false))), (_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, tan(0.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), sqrt(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], ((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))[1], (((injectionSwitch))[1]) * 1.0)), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, true, true))), true && (bool(bool(bvec3(false, true, true)))))))), false))))), (bool(bvec4(true, false, true, false))) || false)))))[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-12432) : 0))))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2480.9043), _GLF_FUZZED(-1.4)), bvec2(false, false))))), injectionSwitch)).y)), false || (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(65.32, -2415.1850)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(9279.4580), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool(_GLF_IDENTITY((true) && true, ! (! ((true) && true))))))) ? _GLF_FUZZED(9279.4580) : _GLF_FUZZED(_GLF_IDENTITY(-0.9, min(-0.9, -0.9))))), _GLF_FUZZED(70.55)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), mix(vec2(_GLF_FUZZED(-9247.2277), _GLF_FUZZED(-8.4)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_IDENTITY((((injectionSwitch))), (false ? _GLF_FUZZED(vec2(7.3, 232.141)) : (((injectionSwitch)))))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false))), min(_GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(_GLF_IDENTITY(-1.5, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.7), clamp(_GLF_FUZZED(-7.7), _GLF_FUZZED(-7.7), _GLF_FUZZED(-7.7)))), float(-1.5), bool(true))))), bvec2(false, false))), _GLF_IDENTITY(((injectionSwitch)), mix(vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-443.899), _GLF_FUZZED(-1.5)), bvec2(false, false)))))[1], (((injectionSwitch))[1]) * 1.0)), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))), (bool(bvec4(true, false, true, false))) || false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2480.9043), _GLF_FUZZED(-1.4)), bvec2(false, false))))), injectionSwitch)).y)))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u), subgroup_local_id % 2)))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false, false, true))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false, false, true))), true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))) || false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-92552) : 0))], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(1.7)), bool(false))), max(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-92552) : 0))], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(1.7)), bool(false))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-92552) : 0))], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(1.7)), bool(false))))), injectionSwitch[1])).x, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -40.33))), float(1.0), bool(true)))) / 1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, sqrt(1.0), 1.0), max(vec3(1.0, sqrt(1.0), 1.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(1.0), 1.0))), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), max(0.0, 0.0)), 0.0)), dot(vec3(1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(1.0), bool(true)))), 1.0), vec3(0.0, 0.0, 0.0))), 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2((injectionSwitch), 1.0, 0.0))))), (injectionSwitch))), (injectionSwitch))) / vec2(1.0, 1.0)))).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))) || false) && true) && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))) - 0.0) > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(6.7, -4114.3735)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))) || false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(211.546))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec4(2.4, 6.4, 9.7, -9.3).sp) : mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false || (true)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-433.742)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)))), min(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-433.742)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)))), max(float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(697.648, 5951.7197).g)), float(1.0), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-433.742)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0)) * (0.0)))), float(float(_GLF_IDENTITY(0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7684.0802))), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-433.742)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)))))), float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-433.742)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))))))), injectionSwitch.x), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), (_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))) + 0.0), exp(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), 0.0))), injectionSwitch, injectionSwitch))), max(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))) * (injectionSwitch), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(2.4, max(_GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), 6.4, 9.7, -9.3).sp) : mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || false)))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))))), injectionSwitch.x), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), (_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))) + 0.0), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0))))))), 0.0))), injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec4(2.4, 6.4, 9.7, -9.3).sp) : mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, 9891.6982)) : injectionSwitch)), injectionSwitch)).y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, 9891.6982)) : injectionSwitch)), injectionSwitch)).y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, 9891.6982)) : injectionSwitch)), injectionSwitch)).y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, _GLF_IDENTITY(9891.6982, float(_GLF_IDENTITY(vec3(9891.6982, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(vec4(vec3(9891.6982, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))))))) : injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, _GLF_IDENTITY(9891.6982, float(_GLF_IDENTITY(vec3(9891.6982, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec3(vec4(vec3(9891.6982, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))))))) : injectionSwitch)), injectionSwitch)).y)))))))), true, true)))) || false)))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))))), 0.0 + (_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))))))), injectionSwitch.x), _GLF_IDENTITY(exp(length(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) * mat2(1.0), vec2(1.0, 1.0) * ((vec2(0.0, 0.0)) * mat2(1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), (_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))) + 0.0), 1.0 * (_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), (_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))) + 0.0))), exp(length(vec2(0.0, 0.0))))), 0.0))), injectionSwitch, injectionSwitch)))))).y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(2.4, 6.4, _GLF_IDENTITY(9.7, _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), max(float(mat4x3(9.7, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0))))), -9.3).sp), (false ? _GLF_FUZZED(vec2(-2042.4223, 78.25)) : _GLF_FUZZED(vec4(2.4, 6.4, _GLF_IDENTITY(9.7, _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), max(float(mat4x3(9.7, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0))))), -9.3).sp))) : mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(atanh(-722.747))))))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-64254)), 1.0 * (_GLF_FUZZED(float(-64254))))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), max(mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-64254)), 1.0 * (_GLF_FUZZED(float(-64254))))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-64254)), 1.0 * (_GLF_FUZZED(float(-64254))))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((+ 0.5), mix(float((+ 0.5)), float(_GLF_FUZZED(float(88521u))), bool(false))))), float(1.0), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))) - 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), true && (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))), true && (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), _GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-583.284)), bool(false))), float(1.0))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat3x2(mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))))) * _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat4(vec3(0.0, 1.0, 0.0), 1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(107.697) : 1.0)))), 0.0, length(vec2(0.0, 0.0)), determinant(mat2(0.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0)), 1.0))), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(-64254, (0 ^ 0) | (_GLF_IDENTITY(-64254, clamp(-64254, _GLF_IDENTITY(-64254, max(-64254, -64254)), -64254))))))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-64254))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 0.5))), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED((-173.446 - 4984.8258))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))))), injectionSwitch.x), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), clamp(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))))) + 0.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), min(exp(length(vec2(0.0, 0.0))), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), clamp(exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))))) + 0.0, 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), max(exp(length(vec2(0.0, 0.0))), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), (true ? exp(length(vec2(0.0, 0.0))) : _GLF_FUZZED(atan(-710.140, 7163.0569)))))), min(exp(length(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))), _GLF_IDENTITY(exp(length(vec2(0.0, 0.0))), clamp(exp(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0))))), exp(length(vec2(0.0, 0.0))), exp(length(vec2(0.0, 0.0)))))))) + 0.0))), float(_GLF_FUZZED(-5.5)), bool(false)))), exp(length(vec2(0.0, 0.0))))), 0.0))), injectionSwitch, injectionSwitch)))).y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), clamp(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), clamp(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), max(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))))))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9643.7672))), 0.0), vec2(1.0, 0.0)))), (true ? mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat2x3(2.6, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(3.0)), bool(false))), -7.3)), -7.4, -915.148, -7.1, -1.2))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) - 0u)) | (atomicLoad(buf[virtual_gid], 4, 64, 2))), (atomicLoad(buf[virtual_gid], 4, 64, 2)) << 0u), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 2)) / 1u), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))));
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
