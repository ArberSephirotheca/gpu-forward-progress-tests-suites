#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, false))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(951.951))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(951.951))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(951.951))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w)), (false ? _GLF_FUZZED(4803u) : GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w) ^ 0u))))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.6)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), clamp(vec2(vec4(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), vec2(vec4(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2625.6431, 7205.5579)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(sqrt(vec2(0.0, 0.0)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0))) * mat2(1.0)))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) * mat2(1.0)), max((_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) * mat2(1.0)), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) * mat2(1.0)))) - vec2(0.0, 0.0))), injectionSwitch)).y), true, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(17.21, (17.21) - 0.0))), bool(false)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-64.15)), vec2(_GLF_FUZZED(vec2(-3.1, 9999.6139).s), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(17.21)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true, false, true)))))) && true)) || false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bool(false)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, false)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, false))))))) || false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), true, true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false)))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(361.318))), mix(float(_GLF_FUZZED(-20.72)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(1.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(1.0))), 0.0))), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9929.3838)), bool(false))) > injectionSwitch.y)), true, false, false))), (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))) || false))), true, false, true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9929.3838)), bool(false))) > injectionSwitch.y)), true, false, false))), (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))) || false))), true, false, true))))), false)), (bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9929.3838)), bool(false))) > injectionSwitch.y)), true, false, false))), (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))) || false))), true, false, true))))), false))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(157668u, 79116u, 87234u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) << 0u), 1u)), uint(uvec4(uint(uvec3(gl_NumWorkGroups.x, 0u, 1u)), 0u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) + 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))).x), 0u ^ (uint(gl_NumWorkGroups.x)))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))).x), 0u ^ (uint(gl_NumWorkGroups.x))))) | 0u), (0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))), max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((~ (gl_NumWorkGroups)), min((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), uvec3(0u, 0u, 0u) | (~ (gl_NumWorkGroups))))))).x), 0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))))) - (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) + 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x))))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(44722u, 64995u, 13339u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u), ((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)) | ((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), uvec3(uvec4(_GLF_IDENTITY((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u), min((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), 1u))))) - uvec3(0u, 0u, 0u)))))).x, gl_NumWorkGroups.x), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), (max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x)) | (max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x))), _GLF_IDENTITY(1u, (1u) | (1u))), (true ? _GLF_IDENTITY(uvec2(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), 1u), max(uvec2(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x), 1u), uvec2(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), 1u))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.qs))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), (max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x)) | (max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x))), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(169257u) : (1u))))), (true ? _GLF_IDENTITY(uvec2(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), 1u), max(uvec2(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), 1u), uvec2(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), 1u))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.qs)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), max(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_size) : max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), gl_NumWorkGroups.x), (max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), gl_NumWorkGroups.x)) ^ 0u)))), _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(uint(uint(uint(gl_NumWorkGroups.x))), (197516u & 0u) ^ (_GLF_IDENTITY(uint(uint(uint(gl_NumWorkGroups.x))), (_GLF_IDENTITY(uint(uint(uint(gl_NumWorkGroups.x))), _GLF_IDENTITY((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)), clamp((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)), 0u ^ ((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED(57106u))), _GLF_IDENTITY((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)), min((true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)), (true ? uint(uint(uint(gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)))))))) | (uint(uint(uint(gl_NumWorkGroups.x)))))))))), gl_NumWorkGroups.x)))), (1u ^ 1u), 1u, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (true ? _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(1u, 0u, 1u))), 0u ^ (~ (uint(uvec3(1u, 0u, 1u))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))), (false ? _GLF_FUZZED(155405u) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))), (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u))))) * 1u))), max(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (true ? uint(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), 0u, 1u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))))) | 0u)))), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) ^ 0u), gl_NumWorkGroups.x)), (1u ^ 1u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) - 0u))), (1u) >> 0u)), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), (max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x)) - 0u)), (_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY(min(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) >> 0u)), (min(1u ^ 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))) ^ 1u, (1u ^ 1u) >> 0u))) - 0u))), 1u, 1u), uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), gl_NumWorkGroups[2])), uvec3(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((5.4 , subgroup_local_id))))) + (gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x)), (1u ^ 1u), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, sin(0.0), 1.0, 1.0, 1.0, log(1.0), length(vec3(0.0, 0.0, 0.0)), length(sin(vec2(0.0, 0.0))), log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_NumWorkGroups))))).x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(172710u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(172710u)) - 0u))))), (1u ^ 1u), 1u, 1u)))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.x = _GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u), _GLF_IDENTITY(num_workgroup, (num_workgroup) + 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) << (0u ^ _GLF_IDENTITY(0u, min(0u, 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, true && (false))), true, false)), bool(_GLF_IDENTITY(bool(bool(bvec3((_GLF_IDENTITY(false, true && (false))), true, false))), bool(bvec3(bool(bool(bvec3((_GLF_IDENTITY(false, true && (false))), true, false))), false, true)))))) && true)))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(61732u, 37055u, 100115u)))).x, 0u, 1u))), gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-930.362), _GLF_IDENTITY(clamp(_GLF_FUZZED(-930.362), _GLF_FUZZED(-930.362), _GLF_FUZZED(-930.362)), 1.0 * (_GLF_IDENTITY(clamp(_GLF_FUZZED(-930.362), _GLF_FUZZED(-930.362), _GLF_FUZZED(-930.362)), (clamp(_GLF_FUZZED(-930.362), _GLF_IDENTITY(_GLF_FUZZED(-930.362), min(_GLF_FUZZED(-930.362), _GLF_IDENTITY(_GLF_FUZZED(-930.362), float(mat4(_GLF_FUZZED(-930.362), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_FUZZED(-930.362))) + 0.0)))) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true, false)))))), _GLF_IDENTITY(true, (true) && true) && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id))).w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w), ~ (~ (uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w))))))) / 1u))) | (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id))).w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w), ~ (~ (uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w))))))) / 1u))) | (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id))).w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w), ~ (~ (uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w))))))) / 1u))) | (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id))).w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u)), (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w), ~ (~ (uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w))))))) / 1u))) | (uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.w) / 1u))))))))))))) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (3))])))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) + uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)).z, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3])), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3]))) >> uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3])), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3]))) >> uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3])), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3]))) >> uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3])), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3]))) >> uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) + _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(mix(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, bvec4(false, true, false, true))) : uvec4(0u, 0u, 0u, 0u))))) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u))))).z) ^ 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) + uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id - 59857u)) : _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) + 0u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, min(0u, 0u))))), ((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) + uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))) / uvec4(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))), 1u, 1u, 1u)).z : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id[3])).z), clamp((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z) : _GLF_FUZZED(subgroup_size))))) - 0u), _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z) << 0u, 0u ^ ((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z) << 0u))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z, _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), clamp((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), ((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z)) | (_GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), _GLF_IDENTITY(uint(uint((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z))), min(uint(uint((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z))), uint(uint((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z)))))))), _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z) : _GLF_FUZZED(subgroup_size))))) - 0u), _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z) << 0u, 0u ^ ((workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z) << 0u))) + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), ! (! (! ((_GLF_IDENTITY(false, false || (false)))))))) && true)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-80.25)))))), 0u, 1u, 0u)))], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), bool(bvec4((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), false, true, true))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), bool(bvec4((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), false, true, true)))))), (bool(! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), bool(bvec4((_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))), false, true, true))))))) || false))), (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))) || false)))) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.y = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)), injectionSwitch.y), mix(float(min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)), injectionSwitch.y)), float(_GLF_FUZZED(-9444.4675)), bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) || false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true), true, false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(207.667)), float(injectionSwitch[0]), bool(true)))))) * 1.0), injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0))) * vec2(1.0, 1.0)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(62.13)), (float(_GLF_FUZZED(62.13))) - 0.0), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(62.13)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(62.13)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(62.13)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(62.13)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(62.13)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, true && (false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.y) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0)))) - 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), bool(bool(! (bool(bvec4(false, false, true, true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), max(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(vec3(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, 1.0)))))) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-227.794)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, clamp(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_basesubgroup_id)).y, 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(741.207), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(684.841), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), bvec2(true, false))).y), min(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(684.841), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), bvec2(true, false))).y), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(684.841), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.9)), bvec2(true, false))).y))), bool(true))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), float(injectionSwitch.y), bool(true)))), max(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), float(injectionSwitch.y), bool(true)))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.88)), float(injectionSwitch.y), bool(true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)))) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (! (false || (_GLF_IDENTITY(false, (false) || false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (! (false || (_GLF_IDENTITY(false, (false) || false)))))), ! (! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (! (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false)))))))))))))))))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), true, false))) && (bool(false)))) && true)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2642.7935)), bool(false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
