#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 ivec2 _f0;
 mat2x3 _f1;
 uint _f2;
 ivec3 _f3;
 mat2x4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 uint _f3;
 uint workgroup_base;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 ivec4 _f1;
 ivec4 _f2;
 int _f3;
 mat3x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 vec3 _f1;
 bvec3 _f2;
 float _f3;
 mat4 _f4;
 ivec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 ivec4 _f1;
 _GLF_struct_3 _f2;
 uvec2 _f3;
 _GLF_struct_6 _f4;
 uint _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))), ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))))))))) || false), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))), false, true))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))), ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))))))))) || false), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))), false, true))))), ! (! (bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))))))))), ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))))))))) || false), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true))))))))))), false, true))))))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atanh(-7.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED((9587.9984 + 700.028)), float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED((9587.9984 + 700.028)), 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_FUZZED((9587.9984 + 700.028)), 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 1.0))))))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED((9587.9984 + 700.028)), float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED((9587.9984 + 700.028)), 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_FUZZED((9587.9984 + 700.028)), 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 1.0))))))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED((9587.9984 + 700.028))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(5.8))), _GLF_FUZZED(-5.5)), vec2(_GLF_FUZZED(-7.6), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED((9587.9984 + 700.028))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2383.9668)), vec2(_GLF_FUZZED(-16.65), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-35.96, 3.6))))[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[0])), mix(float(_GLF_FUZZED((9587.9984 + 700.028))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, exp(0.0)))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))))) < injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), clamp(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0)), mix(float(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0))), float(_GLF_FUZZED(7971.7276)), bool(false)))))), vec2(mat2(injectionSwitch, 1.0, tan(0.0))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), (vec2(mat2(injectionSwitch, 1.0, tan(0.0)))) * vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), clamp(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0)), mix(float(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0))), float(_GLF_FUZZED(7971.7276)), bool(false)))))), vec2(mat2(injectionSwitch, 1.0, tan(0.0))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), (vec2(mat2(injectionSwitch, 1.0, tan(0.0)))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), clamp(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0)), mix(float(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0))), float(_GLF_FUZZED(7971.7276)), bool(false)))))), vec2(mat2(injectionSwitch, 1.0, tan(0.0))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), (vec2(mat2(injectionSwitch, 1.0, tan(0.0)))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), clamp(vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0)), mix(float(float(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(1.0, log(1.0), 0.0, 0.0), vec4(0.0, 1.0, sqrt(1.0), 1.0))), 1.0))), float(_GLF_FUZZED(7971.7276)), bool(false)))))), vec2(mat2(injectionSwitch, 1.0, tan(0.0))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, tan(0.0))), (vec2(mat2(injectionSwitch, 1.0, tan(0.0)))) * vec2(1.0, 1.0)))))), vec2(mat2(injectionSwitch, 1.0, tan(0.0)))))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), false, false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), false), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), false, false)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)) : _GLF_FUZZED(atomicMax(subgroup_size, 121152u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(injectionSwitch, vec2(-842.166, 9.9))))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) ? injectionSwitch : _GLF_FUZZED((vec2(916.396, 546.932) * mat2(5.4, -9635.2569, -1.9, 9214.6324))))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) ? injectionSwitch : _GLF_FUZZED((vec2(916.396, 546.932) * mat2(5.4, -9635.2569, -1.9, 9214.6324))))).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) ? injectionSwitch : _GLF_FUZZED((vec2(916.396, 546.932) * mat2(5.4, -9635.2569, -1.9, 9214.6324))))).y)), true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1249.7411)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(bvec2(true), ivec4(1), _GLF_struct_3(_GLF_struct_0(mat3(1.0), vec3(1.0), bvec3(true), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), mat4(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec3(ivec3(1))), (ivec3(ivec3(ivec3(1)))) | (ivec3(ivec3(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), bvec2(true)), _GLF_struct_1(ivec4(1)), _GLF_struct_2(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec4(1), ivec4(1), 1, mat3x4(1.0), vec2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) ^ (uvec2(1u)), max(uvec2(0u, 0u) ^ (uvec2(1u)), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u))), ~ (~ (_GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u)))))))), uvec2(1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) ^ (uvec2(1u)), max(uvec2(0u, 0u) ^ (uvec2(1u)), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u))), ~ (~ (_GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u)))))))), (true ? _GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) ^ (uvec2(1u)), max(uvec2(0u, 0u) ^ (uvec2(1u)), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u)))), ~ (~ (uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u)))))))) | (uvec2(1u))))), ((~ (_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u)))), ~ (~ (uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u)))))))) | (uvec2(1u)))))) >> uvec2(0u, 0u))))) : _GLF_FUZZED(uvec2(145567u, 162304u)))))), (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u)))), clamp(max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) << uvec2(0u, 0u))) | (uvec2(1u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | _GLF_IDENTITY((uvec2(1u)), uvec2(uvec2((uvec2(1u))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u)))), (max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u))))) * uvec2(1u, 1u))) | (max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u)))))), max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec2(1u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u)), (uvec2(0u, 0u) ^ (uvec2(1u))) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(1u, 1u)))))) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), (uint(_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u))))), 0u) ^ (uvec2(1u))) - uvec2(0u, 0u), ((uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), (uint(_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u))))), 0u) ^ (uvec2(1u))) - uvec2(0u, 0u)) / uvec2(1u, 1u)))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (true ? uvec2(_GLF_IDENTITY(1u, max(1u, 1u))) : _GLF_FUZZED(uvec2(72357u, 100089u)))), uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (true ? uvec2(_GLF_IDENTITY(1u, max(1u, 1u))) : _GLF_FUZZED(uvec2(72357u, 100089u)))))))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), clamp(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)) ^ (_GLF_IDENTITY(1u, max(1u, 1u))))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))))))) | (uvec2(1u)), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))) >> uvec2(0u, 0u))) ^ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))), uint(6u)))))) | (uvec2(1u)))))))) >> uvec2(0u, 0u)))), _GLF_struct_6(bvec4(true), _GLF_struct_4(bvec2(true)), _GLF_struct_5(ivec2(1), mat2x3(1.0), 1u, ivec3(1), mat2x4(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), 1u, workgroup_size * workgroup_id), 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))) && true)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.9, 1555.1100)))).x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(3.9, 1555.1100)), (true ? injectionSwitch : _GLF_FUZZED(vec2(3.9, 1555.1100))) * mat2(1.0)))).x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_7._f4.workgroup_base + subgroup_base, (_GLF_struct_replacement_7._f4.workgroup_base + subgroup_base) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_7._f4.workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) | 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, sqrt(1.0), 0.0, 1.0)), min(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, sqrt(1.0), 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, sqrt(1.0), 0.0, 1.0))))) > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-484.071) : injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-484.071) : injectionSwitch.x)) > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-18.10) : injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-18.10) : injectionSwitch.x)) : _GLF_FUZZED(-415.041))) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((_GLF_IDENTITY(435.917, min(435.917, 435.917)))), _GLF_FUZZED(7686.2744)), bvec2(false, false))).y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-18.10) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((435.917)), _GLF_FUZZED(7686.2744)), bvec2(false, false))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((435.917)), _GLF_FUZZED(7686.2744)), bvec2(false, false))).y))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 0.0, abs(0.0)), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 0.0, abs(0.0)), mat3x2(mat4x3(mat3x2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), 0.0, abs(0.0))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u)))) << (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))))), 1u, 0u, 1u)))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) ^ 0u)), (true ? uvec3(~ (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)) : _GLF_FUZZED(uvec3(69642u, 157603u, 171469u)))))), max(~ (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)))), ~ (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)))))))), virtual_gid))))) ^ 0u)], _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u)], 0u | (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid))), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid))))) ^ 0u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid))) ^ _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), max(virtual_gid, virtual_gid)), min(virtual_gid, virtual_gid))) ^ 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), min(virtual_gid, virtual_gid))) ^ 0u)))) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))]))) / 1u, ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))))) ^ 0u)], 0u | (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u)]))) / 1u) ^ 0u)), (buf[virtual_gid]) << 0u), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), min((4), (4))), 1 * (~ (4))))), 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, int(ivec2(2, 0))), 2))) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, int(ivec2(2, 0))), 2))) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, int(ivec2(2, 0))), 2))) / 1)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, int(ivec2(2, 0))), 2))) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, int(ivec2(2, 0))), 2))) / 1)) | 0), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, int(ivec2(2, 0))), 2))) / 1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(969.886)), bool(false))))), true, true, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), true, true))), true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) ^ 0u), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
