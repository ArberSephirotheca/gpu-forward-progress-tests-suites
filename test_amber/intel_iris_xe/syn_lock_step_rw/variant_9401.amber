#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-343.905, 5.5), vec2(-1.8, -8274.7954), vec2(-1192.5139, -3219.7460))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 76.39 : 381.300))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4((bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, true))), (! (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))) && true) ? _GLF_FUZZED(asin(-8.7)) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 1.0, 1.0, 1.0, 0.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), vec2(mat4x3(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), 1.0, abs(1.0), 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)))), bvec2(false, false))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), bvec2(false, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), bvec2(false, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(8370.5017)), bvec2(false, false))).y))))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))) : injectionSwitch)).y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))) : injectionSwitch)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))), mix(vec2((_GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))))[0], _GLF_IDENTITY(_GLF_FUZZED(2078.0358), clamp(_GLF_FUZZED(2078.0358), _GLF_FUZZED(2078.0358), _GLF_FUZZED(2078.0358)))), vec2(_GLF_FUZZED(float((false))), (_GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : injectionSwitch)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, vec2(-7871.7259, -5.7))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? 2764.2746 : -78.53)), _GLF_FUZZED(-4171.2972)), bvec2(false, false))), (false ? _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))) : injectionSwitch)).y) - tan(0.0)), 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-7871.7259, -5.7))) : injectionSwitch)).y, 1.0, 0.0)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(678.603, 9.6)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, cos(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, log(1.0)))), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, cos(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, log(1.0))))))))))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(vec4(-2222.1295, -4346.6966, -1977.2180, -2653.1353))) : _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(float(78641))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[0], _GLF_FUZZED(8.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1]), vec2(vec2(vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1])))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-605.739), (injectionSwitch)[1])) * mat2(1.0)))))), bvec2(false, true))) : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, _GLF_IDENTITY(622.184, _GLF_IDENTITY(float(mat3x2(622.184, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), (false ? _GLF_FUZZED(-0.6) : float(mat3x2(622.184, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 0.0, 0.0))))), _GLF_IDENTITY(-44.56, (false ? _GLF_FUZZED(3.6) : -44.56))))))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, (false ? _GLF_FUZZED(-449.808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))), _GLF_IDENTITY(mat2(1.0) * (_GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56)))), min(mat2(1.0) * (_GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56)))), mat2(1.0) * (_GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56)))), mix(vec2(_GLF_FUZZED(-510.851), _GLF_FUZZED((-321.878 / 5.9))), vec2(((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56)))))[0], ((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56)))))[1]), bvec2(true, true)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), _GLF_IDENTITY(clamp(injectionSwitch, 622.184, -44.56), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.7), clamp(_GLF_FUZZED(-2.7), _GLF_FUZZED(-2.7), _GLF_IDENTITY(_GLF_FUZZED(-2.7), (_GLF_IDENTITY(_GLF_FUZZED(-2.7), max(_GLF_FUZZED(-2.7), _GLF_FUZZED(-2.7)))) + 0.0))), _GLF_FUZZED((- 8.0))), vec2((clamp(injectionSwitch, 622.184, -44.56))[0], (clamp(injectionSwitch, 622.184, -44.56))[1]), bvec2(true, true)))))), ((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), _GLF_IDENTITY(clamp(injectionSwitch, 622.184, -44.56), mix(vec2(_GLF_FUZZED(-2.7), _GLF_FUZZED((- 8.0))), vec2((clamp(injectionSwitch, 622.184, -44.56))[0], (_GLF_IDENTITY(clamp(injectionSwitch, 622.184, -44.56), (clamp(injectionSwitch, 622.184, -44.56)) / vec2(1.0, 1.0)))[1]), bvec2(true, true))))))) * vec2(1.0, 1.0))).x) + 0.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))), min(_GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))), _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))))).x)), (false ? _GLF_FUZZED(-449.808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))), mix(vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED(-6092.1735)), vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], clamp((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0]))), bool(true))), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[1]), bvec2(true, true)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))), mix(vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED(-6092.1735)), vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], clamp((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0]))), bool(true))), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[1]), bvec2(true, true)))), vec2(vec3((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))), mix(vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED(-6092.1735)), vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], clamp((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0], (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[0]))), bool(true))), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, _GLF_IDENTITY(vec2(-8.1, 229.545), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(-8.1, 229.545), (_GLF_IDENTITY(vec2(-8.1, 229.545), (vec2(-8.1, 229.545)) * mat2(1.0))) / cos(vec2(0.0, 0.0))))), clamp(injectionSwitch, 622.184, -44.56))))[1]), bvec2(true, true)))), 1.0))) : _GLF_FUZZED(vec2(-8.3, -37.26))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, _GLF_IDENTITY(-44.56, (true ? _GLF_IDENTITY(-44.56, (-44.56) - 0.0) : _GLF_FUZZED(4353.1535)))))))).x)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, (false ? _GLF_FUZZED(-449.808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(_GLF_IDENTITY(-8.1, (_GLF_IDENTITY(-8.1, mix(float(-8.1), float(_GLF_FUZZED(1651.7771)), bool(false)))) / 1.0), 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, _GLF_IDENTITY(622.184, 1.0 * (622.184)), -44.56))))).x), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, (false ? _GLF_FUZZED(-449.808) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), _GLF_IDENTITY(clamp(injectionSwitch, 622.184, -44.56), vec2(mat2(clamp(injectionSwitch, 622.184, -44.56), determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0))))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))).x)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, _GLF_IDENTITY(622.184, mix(float(_GLF_IDENTITY(622.184, min(622.184, 622.184))), float(_GLF_FUZZED(-749.884)), bool(false))), -44.56)))), min((true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(_GLF_IDENTITY(-8.1, min(_GLF_IDENTITY(-8.1, min(-8.1, -8.1)), -8.1)), 229.545), clamp(injectionSwitch, 622.184, -44.56)))), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-8.1, 229.545), clamp(injectionSwitch, 622.184, -44.56))))))).x)))) > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), uint(uint((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))) / 1u) + 0u);
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), (subgroup_local_id) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.4)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), max(ivec4(1, 1, 1, 0), ivec4(1, 1, 1, 0))))), _GLF_IDENTITY((1), clamp((1), (1), (1))) | (_GLF_IDENTITY(1, (1) + 0)))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), ivec3(0, 0, 0) ^ (ivec3(1, 0, 0)))), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))))) | 0)), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) ^ ivec3(0, 0, 0))), int(ivec3(1, 0, 0)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) - ivec3(0, 0, 0))), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0))))))) : _GLF_FUZZED(405)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) ^ ivec3(0, 0, 0))), int(ivec3(1, 0, 0)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) - ivec3(0, 0, 0))), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0))))))) : _GLF_FUZZED(405))) ^ 0)))) | 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, 0 ^ (0))))), 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))))) | 0))))), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, _GLF_IDENTITY(0, (0) | (0)))), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)))))))) | 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), _GLF_IDENTITY(int(ivec3(1, 0, 0)), 0 | (int(ivec3(1, 0, 0)))))))) | 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0))))))) ^ 0) | 0)))), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), clamp(int(ivec3(1, _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, min(0, 0))), 0)), int(ivec3(1, 0, 0)), int(ivec3(1, 0, 0)))))) | 0)))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_base))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), min(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)) / 1u))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1) % subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (~ (1u)))))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))), max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) % subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))), max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) - 0u) % subgroup_size) | 0u))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % subgroup_size) | 0u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))))), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(9313.6393)), float(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, determinant(mat4(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(67.86)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0))))), float(_GLF_FUZZED(-795.392)), bool(false))), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.2) : injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))))), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(9313.6393)), float(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(1.3)), float((1.0)), bool(true))) * _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0))))).y, (false ? _GLF_FUZZED(fma(59.37, smoothstep(4352.0302, -2.4, -2.3), (-9.3 + 4168.0515))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))))), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(9313.6393)), float(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(1.3)), float((1.0)), bool(true))) * _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0))))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.2) : injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), false, false, false))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0)))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))))), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, abs(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(9313.6393)), float(float(mat3x2(1.0, abs(1.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.2) : injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), false), false))))))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), mix(float(_GLF_FUZZED(24.57)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))))))))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), mix(float(_GLF_FUZZED(24.57)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))))))))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), mix(float(_GLF_FUZZED(24.57)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))))))))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)), mix(float(_GLF_FUZZED(24.57)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(7.7, -5.2, 9760.1905)) : vec3(injectionSwitch.y, 1.0, 0.0))))))) / 1.0))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))))))))))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0))))) / 1.0)))))))))))) || false))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid])), (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_base))), 4, 64, _GLF_IDENTITY(2, 0 + (2)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, exp(0.0), 0.0, 1.0, determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, exp(0.0), 0.0, 1.0, determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0))).y) / 1.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(990.866) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-56.64))), float(injectionSwitch.y), bool(true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
