#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.4) : injectionSwitch.y))), float(_GLF_FUZZED((9.8 + 997.960))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))) || false)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.4) : injectionSwitch.y))), float(_GLF_FUZZED((9.8 + 997.960))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))) || false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6775.3504, 0.6)) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6775.3504, 0.6)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6775.3504, 0.6)) : injectionSwitch)).y))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(120257u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(41.53)), bvec2(true, false))).x, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(clamp(3.2, 25.61, 6.3)) : max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (injectionSwitch.y)), injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), mix(float(_GLF_FUZZED((-68.63))), float((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), bool(true)))))) || false))))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.5, 1626.0746)) : injectionSwitch)))))).y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), mix(float(_GLF_FUZZED((-68.63))), float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), bool(true)))))) || false), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - abs(log(1.0)))), injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(942.085)))) / 1.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), mix(float(_GLF_FUZZED((-68.63))), float((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), bool(true)))))) || false)) && true))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-9.7)), float(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), bool(true)))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : 0.0)), (0.0) / abs(1.0))), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.6) : injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-72.14))))))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-72.14))))))), injectionSwitch.y), clamp(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-72.14))))))), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-72.14))))))), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-72.14))))))), injectionSwitch.y))), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.6) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.6) : injectionSwitch.y, (false ? _GLF_FUZZED(2.6) : injectionSwitch.y) + 0.0)) - 0.0)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-38.30)), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(atan(501.147, 6073.4584)))), 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-38.30)), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(atan(501.147, 6073.4584)))), 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x, 0.0, log(1.0), 0.0, 1.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-38.30)), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(atan(501.147, 6073.4584)))), 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x, 0.0, log(1.0), 0.0, 1.0, 0.0))) / 1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))))))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(376.843, -7.8)) : injectionSwitch)).y) / 1.0))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * mat2(1.0))).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6.0), clamp(_GLF_FUZZED(-6.0), _GLF_FUZZED(-6.0), _GLF_FUZZED(-6.0))), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3((! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3821.1053)), float(mat4(float(_GLF_FUZZED(-3821.1053)), tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), float(injectionSwitch.y), bool(true))))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (injectionSwitch.y) / 1.0))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * mat2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * mat2(1.0))), (false ? _GLF_FUZZED(vec2(-40.79, -410.723)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))))))))).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))), false, false)), (bool(bvec3((! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * mat2(1.0))).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y))))))), false, false))) || false))))), (((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.6) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(2.6) : injectionSwitch.y, (false ? _GLF_FUZZED(2.6) : injectionSwitch.y) + 0.0), false ? _GLF_FUZZED(2.6) : injectionSwitch.y))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(0.0), round(length(normalize(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(981.531)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), max((clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))) * mat2(1.0))).y)) ? _GLF_FUZZED(cos(exp(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y))) * 1.0)) / 1.0), injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3((! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED((+ -9450.0103))), bool(false))))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * mat2(1.0))).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0))), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0))), (injectionSwitch)[1]), vec2(mat4x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0))), (injectionSwitch)[1]))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) / cos(vec2(0.0, 0.0))), bvec2(false, true))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), false, false)), (bool(bvec3((! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 0.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3821.1053)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true)))))), _GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (injectionSwitch)).y), (min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) * mat2(1.0))).y)) ? _GLF_FUZZED(cos(exp(1.0))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.75)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))), false, false))) || false)))))) && true)))))) || false), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(341.247)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u))))))))) ^ 0u), subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(182188u, 112014u, 13483u, _GLF_IDENTITY(59022u, (true ? 59022u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))))[0]), max(_GLF_IDENTITY(_GLF_FUZZED(uvec4(182188u, 112014u, 13483u, _GLF_IDENTITY(59022u, (true ? 59022u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))))) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))))))[0]), 0u ^ (_GLF_FUZZED(uvec4(182188u, 112014u, 13483u, _GLF_IDENTITY(59022u, (true ? 59022u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))))[0]))), _GLF_FUZZED(uvec4(182188u, 112014u, 13483u, _GLF_IDENTITY(59022u, (true ? 59022u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))))[0]))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> 0u))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), clamp((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) : _GLF_FUZZED(13351))))) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(12899) : _GLF_IDENTITY((~ (1)), ((~ (1))) >> 0))))))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) : _GLF_FUZZED(13351))))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), clamp((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) : _GLF_FUZZED(_GLF_IDENTITY(13351, (13351) / 1)))))) % subgroup_size)), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) % subgroup_size) << _GLF_IDENTITY(0u, (0u) >> 0u))), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (1 ^ 1) | (~ (1)))))) | _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0)), clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0))) | 0))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 0, 1, 0)))) | 0), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (0 ^ 0) + (1)))), int(ivec4(~ (~ (1)), (1 | 1), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, (1 | 1))), int(int(int(ivec3(0, 1, (1 | 1))))))), (0 >> _GLF_IDENTITY(int(2), int(2)))))))) | (1), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), clamp((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), ((_GLF_IDENTITY(1, ~ (~ (1)))) | (1)) | 0))), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), ~ (~ ((1))))), ~ (~ (~ (_GLF_IDENTITY((1), ~ (~ ((1))))))))))))) | _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(ivec3((1), 0, 0))), (1))))) : _GLF_FUZZED(13351)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 0, 1, 0)))) | 0), clamp((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (0 ^ 0) + (1)))), int(ivec4(~ (~ (1)), (1 | 1), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, (1 | 1))), int(int(int(ivec3(0, 1, (1 | 1))))))), (0 >> _GLF_IDENTITY(int(2), int(2)))))))) | (1), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), clamp((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), ((_GLF_IDENTITY(1, ~ (~ (1)))) | (1)) | 0))), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), ~ (~ ((1))))), ~ (~ (~ (_GLF_IDENTITY((1), ~ (~ ((1))))))))))))) | _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(ivec3((1), 0, 0))), (1))))) : _GLF_FUZZED(13351))) / 1)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (1) | (1))))), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (0 | 0) ^ ((_GLF_IDENTITY(1, ~ (~ (1)))) | (1))))))) % subgroup_size) << 0u))) ^ 0u);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(2, (2) + 0));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> 0u, (true ? _GLF_IDENTITY((next_virtual_gid) >> 0u, 0u ^ ((next_virtual_gid) >> 0u)) : _GLF_FUZZED(subgroup_base))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), int(ivec3((4), 0, 1))), 0 ^ ((4))) / 1), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), int(ivec3((4), 0, 1))), 0 ^ ((4))) / 1), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) | 0)) / (1 & (1 | 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))], read, 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, 64))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, 64))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), _GLF_IDENTITY(int(ivec2(min(64, 64), 0)), (int(ivec2(min(64, 64), 0))) - 0))) : _GLF_FUZZED(42850))), 64, 64))), 1, 1), min(ivec3((_GLF_IDENTITY(64, clamp(64, 64, 64))), 1, 1), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), ~ ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), ~ ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), ~ ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))), 1, 1, (0 & -87997)), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), ~ ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))), 1, 1, (0 & -87997))))), int(ivec4(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), ~ ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))), 1, 1, (0 & -87997)), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), ~ ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))), 1, 1, (0 & -87997))))), 1, 0, 1))))) | 0)), 1, 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(68401))), 1 * (4)));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
