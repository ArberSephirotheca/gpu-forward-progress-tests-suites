#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, abs(0.0)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), bool(bvec2(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), true)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(2595.8858, 475.518, -839.839, -88.17).x), _GLF_FUZZED(-64.35)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1])) * abs(vec2(1.0, 1.0))), bvec2(_GLF_IDENTITY(true, false || (true)), true)), mix(vec2((mix(vec2(_GLF_FUZZED(vec4(2595.8858, 475.518, -839.839, -88.17).x), _GLF_FUZZED(-64.35)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1])) * abs(vec2(1.0, 1.0))), bvec2(_GLF_IDENTITY(true, false || (true)), true)))[0], _GLF_FUZZED((- 0.0))), vec2(_GLF_FUZZED(-4976.4520), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(vec4(2595.8858, 475.518, -839.839, -88.17).x), _GLF_FUZZED(-64.35)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1])) * abs(vec2(1.0, 1.0))), bvec2(_GLF_IDENTITY(true, false || (true)), true)))[1], clamp((mix(vec2(_GLF_FUZZED(vec4(2595.8858, 475.518, -839.839, -88.17).x), _GLF_FUZZED(-64.35)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1])) * abs(vec2(1.0, 1.0))), bvec2(_GLF_IDENTITY(true, false || (true)), true)))[1], (mix(vec2(_GLF_FUZZED(vec4(2595.8858, 475.518, -839.839, -88.17).x), _GLF_FUZZED(-64.35)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1])) * abs(vec2(1.0, 1.0))), bvec2(_GLF_IDENTITY(true, false || (true)), true)))[1], (mix(vec2(_GLF_FUZZED(vec4(2595.8858, 475.518, -839.839, -88.17).x), _GLF_FUZZED(-64.35)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1])) * abs(vec2(1.0, 1.0))), bvec2(_GLF_IDENTITY(true, false || (true)), true)))[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (_GLF_IDENTITY(true, (true) || false))) && true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false))) && true)))), true, true), false)))), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(9.0))), injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])).y), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat3(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0), transpose(transpose(mat3(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, abs(1.0))), 1.0, 0.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))).y))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))), (true) && true))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))), (true) && true))), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))), (true) && true)))) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(8608u, 49270u, 20393u)) : (gl_WorkGroupSize)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(8608u, 49270u, 20393u)) : (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(8608u, 49270u, 20393u)) : (gl_WorkGroupSize)), min((false ? _GLF_FUZZED(uvec3(8608u, 49270u, 20393u)) : (gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(8608u, 49270u, 20393u)) : (gl_WorkGroupSize)))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) : _GLF_FUZZED(uvec3(20996u, 71266u, 24624u)))))) / uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize))), (gl_WorkGroupSize))), (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u) | (gl_WorkGroupSize.x))) / 1u))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true, false || (true)) && (! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(669.513) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), clamp(((0u)), ((0u)), _GLF_IDENTITY(((0u)), 1u * (((0u)))))) << 0u))) | 0u)) * 1u) | (workgroup_id))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))), ~ (~ (~ (workgroup_id))))) | 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), ! _GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), bool(bool((! ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))))) && true))))))))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), bool(bool((! ((! (_GLF_DEAD(false))))))))))), _GLF_IDENTITY(bool(bvec4(true && (bool(bool(_GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), bool(bool((! ((! (_GLF_DEAD(false))))))))))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true && (bool(bool(_GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), bool(bool((! ((! (_GLF_DEAD(false))))))))))), true, true, false))), ! (! (! (bool(bvec4(true && (bool(bool(_GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), bool(bool((! ((! (_GLF_DEAD(false))))))))))), true, true, false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))), ! (! (! ((_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bool((! ((! (_GLF_DEAD(false)))))))))), true && _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (! (((! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((! ((! (_GLF_DEAD(false))))))), bool(bool(bool(bool((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), false)))))))))))))))))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (! (((! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((! ((! (_GLF_DEAD(false))))))), bool(bool(bool(bool((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), false)))))))))))))))))), true), bvec2(bvec4(bvec2((bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (! (((! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool((! ((! (_GLF_DEAD(false))))))), bool(bool(bool(bool((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), false)))))))))))))))))), true), false, false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true))), bool(bool((! ((! (_GLF_DEAD(false)))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), ((! ((! (_GLF_DEAD(false)))))) || false), bool(bool((! ((! (_GLF_DEAD(false)))))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! ((! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))), bool(bool((! ((! (_GLF_DEAD(false)))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), true, true, true)))) || false)))), bool(_GLF_IDENTITY(bool((! ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), true, true, true)))) || false))))), ! (! (bool((! ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), true, true, true)))) || false)))))))))), bool(bool((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))))), true)))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false || (bool(bvec2(false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true), ! (! (_GLF_DEAD(false))))) && true)) && _GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(1367.5254)), bool(false))), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), true))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, false, false))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), true, true, false)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), true)), true))))), false, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (! (false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (! (false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (! (false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), true)))))), false))))), false, false, false))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), ((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), ((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true))))))), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), true))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true))))))), false)))), false, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))))), (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))), _GLF_IDENTITY(true, false || (true)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || false)))))))))), false), true)), true))))), false, false, false))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, true && (false))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, true && (false))), false)), false, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), true))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), bool(bool(true))))), true)))))))), false, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))), (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false))) && (_GLF_DEAD(false))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, false || (true)))))))))), false), true)), true))))), false, false, false))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false), _GLF_IDENTITY(true, false || (true)))), true)))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(true, bool(bool(true))))), true)))))))), false, _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (false), false), false)))))))) || false))))), (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false)))) || false), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(true, false || (true)))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(true, false || (true)))), ! (! (((_GLF_IDENTITY(true, false || (true))))))), true))))))))), false), true)), true))))), false, false, false))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(-8.4, 243.493))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) || false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ((_GLF_IDENTITY(false, true && (false))) || false) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) || false), ((_GLF_IDENTITY(false, true && (false))) || false) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) && true))) && true)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) / 1u, max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) / 1u, max(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) / 1u)), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) / 1u)))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), ~ (~ (0u | (subgroup_size)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u, 0u))), (true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700)))), (false ? _GLF_FUZZED((+ workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u, 0u))), (true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | 0u), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))), uint(uvec3((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u, 0u))), _GLF_IDENTITY((true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) << 0u)))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700))), max((true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) << 0u)))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700))), _GLF_IDENTITY((true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) << 0u)))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700))), 0u ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) << 0u)))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700))), max((true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) << 0u)))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700))), (true ? _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), uint(uvec3((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) << 0u)))), 0u, 0u))) : _GLF_FUZZED(bitfieldExtract(subgroup_size, -14274, 42700)))))))))) : _GLF_FUZZED(workgroup_base))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u | (subgroup_size))) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))))) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), (_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (~ (uvec3(0u, 1u, 0u))))) | (uvec3(0u, 1u, 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) << 0u) << 0u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY((_GLF_FUZZED(num_workgroup)), ((_GLF_FUZZED(num_workgroup))) | ((_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u)))) * (1u | 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((workgroup_size --)) : workgroup_base)))), clamp(workgroup_base, workgroup_base, workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base)), (true ? true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base)) : _GLF_FUZZED(workgroup_size)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ subgroup_base))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base))))))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED((subgroup_local_id ^ _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base))))))), 0u)))))) << 0u))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u)) >> 0u) + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u))))) + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) >> 0u))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base), (clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)) / 1u)))), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), min(uint(uvec4(workgroup_base, 1u, 1u, 1u)), uint(uvec4(workgroup_base, 1u, 1u, 1u))))), workgroup_base, workgroup_base))) << 0u))))) + subgroup_base))) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) << 0u) + subgroup_base) | 0u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), 0u, 1u))) << 0u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) - _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_FUZZED(write_val), _GLF_FUZZED(write_val))), (_GLF_FUZZED(_GLF_IDENTITY(write_val, max(write_val, write_val)))) | (_GLF_FUZZED(write_val))) : 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), min(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), ~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), _GLF_IDENTITY(uint(uvec3(atomicLoad(write_val, 4, 64, 0), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u)), 0u ^ (uint(uvec3(atomicLoad(write_val, 4, 64, 0), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
