#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)))).y), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)))).y)) || false), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true))))) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))))), true, true)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), true))))))), ((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), true)))))))) && true), ! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))))) > injectionSwitch.y, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (_GLF_IDENTITY(! (bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), ! (! (! (bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), true && (! (_GLF_IDENTITY(bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (_GLF_IDENTITY(! (bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), ! (! (! (bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))), true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true, true))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, true && (true)), true)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), true && ((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), true && ((_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), bool(bool(! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), bool(bool(! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bool(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)), true)))))))))))), bool(bool(! (! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))))))))))))))) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-67.73) : injectionSwitch.y)), true, true))), bool(bool(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true)))))))))))))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), max(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), 1u * (uint(workgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), (max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))) | 0u), max(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))) << 0u), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), 0u, 1u), ~ (~ (uvec3(max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), 0u, 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), 0u, 1u), ~ (~ (uvec3(max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), 0u, 1u))))), (~ (_GLF_IDENTITY(uvec3(max(~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))), ~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(workgroup_size), 0u | (uint(workgroup_size)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(workgroup_size), 0u | (uint(workgroup_size)))))), 0u ^ (uint(_GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(workgroup_size), 0u | (uint(workgroup_size))))))))) + 0u)))), 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), ~ (~ (uvec3(max(~ (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), uint(_GLF_IDENTITY(uint(uint(workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(workgroup_size))))))))), ~ (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))))), 0u, 1u)))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), max(~ (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), (true ? _GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u))) : _GLF_FUZZED((subgroup_id))))))), ~ (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), uint(uvec4(uint(workgroup_size), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))))))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(196.251) : injectionSwitch.y)), injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat3x4(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.y = workgroup_base;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.x = subgroup_base;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.y, (GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.y) << 0u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.y, (GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.y) << 0u)) - 0u) + GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base.x + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, min(write_val, _GLF_IDENTITY(write_val, 0u | (write_val)))), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(64, 0 | (64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(-3.1)), bool(false))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, cos(0.0), 1.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, cos(0.0), 1.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0)))), (vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, cos(0.0), 1.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, cos(0.0), 1.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0)))), vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5791.3469) : 0.0)), 0.0, 1.0, cos(0.0), 1.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0))))))).y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), false, false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(vec4(injectionSwitch, 0.0, 1.0))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))), false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), bool(_GLF_IDENTITY(bvec3(bool(bvec4((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))), false, true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))), true, true), bvec3(bvec3(bvec3(bool(bvec4((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)))))))))), false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, true))))))))))) ? mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0) : _GLF_FUZZED(mat3x4(7623.2364, 55.68, 300.255, 7.3, 6057.6382, 0.5, 4934.4376, 87.44, -9439.0133, _GLF_IDENTITY(-326.118, _GLF_IDENTITY(mix(float(_GLF_FUZZED(609.274)), float(-326.118), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(609.274)), float(-326.118), bool(true)), mix(float(mix(float(_GLF_FUZZED(609.274)), float(-326.118), bool(true))), float(_GLF_FUZZED(5478.2925)), bool(false)))) + sin(length(vec4(0.0, 0.0, 0.0, 0.0))))), 928.290, -47.08)))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.1)), float(0.0), bool(true))), 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(0.0, abs(0.0), 1.0))) * 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, mix(float((0.0) / 1.0), float(_GLF_FUZZED(-4651.6023)), bool(false))))) / 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(489.123), _GLF_FUZZED(-241.251)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-14.37)), vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)))))))))))) ? mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), (false ? _GLF_FUZZED(vec3(-22.45, -84.36, -5.3)) : _GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), mix(vec3(_GLF_FUZZED(-3.5), _GLF_FUZZED(-72.91), _GLF_IDENTITY((vec3(0.0, abs(0.0), 1.0))[2], (true ? (vec3(0.0, abs(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(19.09)), float(1.0), bool(true)))))))[2] : _GLF_IDENTITY(_GLF_FUZZED(-0.8), clamp(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8), _GLF_IDENTITY(_GLF_FUZZED(-0.8), 0.0 + (_GLF_FUZZED(-0.8)))))))), vec3((vec3(0.0, abs(0.0), 1.0))[0], (vec3(0.0, abs(0.0), 1.0))[1], _GLF_FUZZED(-5.8)), bvec3(true, true, false)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-945.837)), bool(false)))))), 0.0) : _GLF_FUZZED(mat3x4(7623.2364, 55.68, _GLF_IDENTITY(300.255, min(_GLF_IDENTITY(300.255, (300.255) * 1.0), _GLF_IDENTITY(300.255, mix(float(_GLF_FUZZED(-4.8)), float(300.255), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(7.3, float(vec3(7.3, sin(0.0), 0.0))), min(7.3, 7.3)), 6057.6382, 0.5, 4934.4376, 87.44, -9439.0133, _GLF_IDENTITY(-326.118, mix(float(_GLF_FUZZED(609.274)), float(-326.118), bool(true))), 928.290, -47.08)))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), (dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), min(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))))), vec3(0.0, abs(0.0), 1.0))) * 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(489.123), _GLF_FUZZED(-241.251)), vec2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-9562.8283, -9695.1558))))[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-7890.1468)))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-180.900))))).x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) ? mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0))), 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), (false ? _GLF_FUZZED(vec3(-22.45, -84.36, -5.3)) : _GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), mix(vec3(_GLF_FUZZED(-3.5), _GLF_FUZZED(-72.91), _GLF_IDENTITY((vec3(0.0, abs(0.0), 1.0))[2], (true ? (vec3(0.0, abs(0.0), 1.0))[2] : _GLF_FUZZED(-0.8)))), vec3((vec3(0.0, abs(0.0), 1.0))[0], (vec3(0.0, abs(0.0), 1.0))[1], _GLF_FUZZED(-5.8)), bvec3(true, true, false)))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(142.071)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0), vec3(0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-945.837)), bool(false)))))), 0.0) : _GLF_FUZZED(mat3x4(7623.2364, 55.68, _GLF_IDENTITY(300.255, min(_GLF_IDENTITY(300.255, (300.255) * 1.0), _GLF_IDENTITY(300.255, mix(float(_GLF_FUZZED(-4.8)), float(300.255), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(7.3, min(7.3, 7.3)), 6057.6382, 0.5, 4934.4376, 87.44, -9439.0133, _GLF_IDENTITY(_GLF_IDENTITY(-326.118, (-326.118) / 1.0), mix(float(_GLF_FUZZED(609.274)), float(-326.118), bool(true))), 928.290, -47.08)))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false))))))))) ? mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0) : _GLF_FUZZED(mat3x4(7623.2364, 55.68, 300.255, 7.3, 6057.6382, 0.5, 4934.4376, 87.44, -9439.0133, _GLF_IDENTITY(-326.118, mix(float(_GLF_FUZZED(609.274)), float(-326.118), bool(true))), 928.290, -47.08)))))) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-69.46)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.0) : injectionSwitch.y)))) ? mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0) : _GLF_FUZZED(mat3x4(7623.2364, 55.68, 300.255, 7.3, 6057.6382, 0.5, 4934.4376, 87.44, -9439.0133, -326.118, 928.290, -47.08)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.5)), bool(false))), abs(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(_GLF_IDENTITY(atan(7.0), min(atan(7.0), _GLF_IDENTITY(atan(7.0), 0.0 + (atan(7.0)))))) : -2.2))) : 0.0, min(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_IDENTITY(_GLF_FUZZED(atan(7.0)), min(_GLF_IDENTITY(_GLF_FUZZED(atan(7.0)), (_GLF_FUZZED(atan(7.0))) / 1.0), _GLF_FUZZED(atan(7.0)))) : -2.2))), clamp(_GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))), (false ? _GLF_FUZZED(2.5) : _GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))))), _GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))))) : 0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))) : 0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.2, _GLF_IDENTITY((false ? _GLF_FUZZED(atan(7.0)) : -2.2), min(_GLF_IDENTITY((false ? _GLF_FUZZED(atan(7.0)) : -2.2), ((false ? _GLF_FUZZED(atan(7.0)) : -2.2)) - 0.0), (false ? _GLF_FUZZED(atan(7.0)) : -2.2))))) : 0.0) - 0.0)) - 0.0), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))) : _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))) : _GLF_FUZZED(max(6.8, _GLF_IDENTITY(-1765.4881, clamp(_GLF_IDENTITY(-1765.4881, (-1765.4881) + 0.0), -1765.4881, _GLF_IDENTITY(-1765.4881, max(-1765.4881, -1765.4881)))))))), float(mat2x3(false ? _GLF_FUZZED(_GLF_IDENTITY(-2.2, (false ? _GLF_FUZZED(atan(7.0)) : -2.2))) : 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (float(mat2x4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * 1.0)), abs(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (true ? float(mat2(1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(86.61))))))), 0.0) : _GLF_FUZZED(mat3x4(7623.2364, 55.68, 300.255, 7.3, 6057.6382, 0.5, 4934.4376, 87.44, -9439.0133, -326.118, 928.290, _GLF_IDENTITY(-47.08, (-47.08) / 1.0))))))) > injectionSwitch.y)))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_base) : read_val))) >> 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, exp(0.0)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))) && true)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(7753.1659) : (injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), bool(bool(true))), true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))) || false))) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
