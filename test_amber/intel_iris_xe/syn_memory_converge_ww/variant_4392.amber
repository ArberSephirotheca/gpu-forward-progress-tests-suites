#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4399.2877) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))))), false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))))))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))))), false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldReverse(79319)))), _GLF_IDENTITY(1, int(ivec3(1, 1, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), max(_GLF_IDENTITY((~ (0)), ((~ (0))) - 0), (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED(3283)))))), (~ (0)), _GLF_IDENTITY((~ (0)), ((~ (0))) >> 0))))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
        break;
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(569.220)), float((injectionSwitch.y) - 0.0), bool(true))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) + 0.0)))) || false))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || false))), true, false))))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1938.3707) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(252.098)), float(0.0), bool(true))))), 0.0, 1.0, 0.0)))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)), determinant(mat4(1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(25.33))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   do
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5553.9195 / -7.1)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(30.13))))), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-3630)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-18989 & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(vec3(-97.83, 5597.9075, -5693.3141).g)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat2x4(mat4(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(vec3(-97.83, 5597.9075, -5693.3141).g)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (mat2x4(mat4(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(vec3(-97.83, 5597.9075, -5693.3141).g)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) + vec2(0.0, 0.0))).y), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) - abs(0.0), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).y))) - abs(0.0) : _GLF_FUZZED(6459.7773), (true ? true ? (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).y))) - abs(0.0) : _GLF_FUZZED(6459.7773) : _GLF_FUZZED(6.8))))))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) / 1, (_GLF_IDENTITY((_injected_loop_counter ++) / 1, ~ (~ ((_injected_loop_counter ++) / 1)))) >> 0)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(1662.3432, -8697.9834) * injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((vec2(1662.3432, -8697.9834) * injectionSwitch)), (mat2(1.0) * ((vec2(1662.3432, -8697.9834) * injectionSwitch))) + vec2(0.0, 0.0)))) : injectionSwitch)).x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9106.2889)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2200.7158))), 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), max(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(31.08, (false ? _GLF_FUZZED(331.836) : 31.08)) * -0.5)), mix(float(_GLF_FUZZED((-7.9))), float(_GLF_FUZZED((31.08 * _GLF_IDENTITY(-0.5, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(-0.5, mix(float(-0.5), float(_GLF_FUZZED(3907.0514)), bool(false)))))))))), bool(true))), _GLF_FUZZED((31.08 * -0.5)))), (_GLF_FUZZED((31.08 * _GLF_IDENTITY(-0.5, (true ? -0.5 : _GLF_FUZZED(394.742)))))) - 0.0), _GLF_FUZZED((31.08 * -0.5)), _GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_FUZZED((31.08 * -0.5))) * 1.0)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) + (1.0), (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) + (1.0)))), 0.0))))), (false ? _GLF_FUZZED(-2164.3692) : float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2200.7158))), 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), max(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(31.08, (false ? _GLF_FUZZED(331.836) : 31.08)) * -0.5)), mix(float(_GLF_FUZZED((-7.9))), float(_GLF_FUZZED((31.08 * _GLF_IDENTITY(-0.5, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(-0.5, mix(float(-0.5), float(_GLF_FUZZED(3907.0514)), bool(false)))))))))), bool(true))), _GLF_FUZZED((31.08 * -0.5)))), (_GLF_FUZZED((31.08 * _GLF_IDENTITY(-0.5, (true ? -0.5 : _GLF_FUZZED(394.742)))))) - 0.0), _GLF_FUZZED((31.08 * -0.5)), _GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_FUZZED((31.08 * -0.5))) * 1.0)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) + (1.0), (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) + (1.0)))), 0.0))))))) : _GLF_FUZZED(3.8))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(274.324, -2.6, -9.9, -79.21))))).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9106.2889)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), (true ? float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.9)), float(0.0), bool(true))), 0.0)))), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2200.7158))), 1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), clamp(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_FUZZED((31.08 * _GLF_IDENTITY(-0.5, clamp(_GLF_IDENTITY(-0.5, max(-0.5, -0.5)), -0.5, -0.5))))) - 0.0), _GLF_FUZZED((31.08 * -0.5)), _GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_FUZZED((31.08 * -0.5))) * 1.0)))), float(1.0), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), clamp(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), abs(0.0) + (_GLF_FUZZED((31.08 * -0.5))))) - 0.0), _GLF_FUZZED((31.08 * -0.5)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((31.08 * -0.5), ((31.08 * -0.5)) / 1.0)), (_GLF_FUZZED((31.08 * -0.5))) * 1.0)))), float(1.0), bool(true))) - 0.0)), 1.0, 0.0))))) : _GLF_FUZZED(3.8))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(-7.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) * sqrt(1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9106.2889)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), (true ? float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2200.7158))), 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), clamp(_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_FUZZED((31.08 * -0.5))) - 0.0), _GLF_FUZZED((31.08 * -0.5)), _GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_IDENTITY(_GLF_FUZZED((31.08 * -0.5)), (_GLF_FUZZED((31.08 * -0.5))) - 0.0)) * 1.0)))), float(1.0), bool(true))), 1.0, 0.0))))) : _GLF_FUZZED(3.8))))), true, false))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), 0 | (~ (int(4)))))), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((vec3(1.8, 27.96, 882.775).s + -6.7))), float(injectionSwitch.x), bool(true)))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(14.21)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.5) : 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))) + (int(4))), int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-71172) : _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)), (0) << 0)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
                          return;
                         return;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(171.498)), bvec2(true, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.1, clamp(-7.1, -7.1, _GLF_IDENTITY(-7.1, min(-7.1, -7.1))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(171.498, clamp(171.498, 171.498, _GLF_IDENTITY(171.498, min(171.498, _GLF_IDENTITY(171.498, float(mat2(171.498, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, sin(0.0), 1.0))).x), 1.0, 1.0))))))))), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-271.283, -47.01)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-271.283, -47.01)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-271.283, -47.01)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(171.498)), bvec2(true, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.1), mix(float(_GLF_FUZZED(-2581.3713)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1)))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1)))), mix(float(_GLF_FUZZED(8.1)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1))))), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1)))), mix(float(_GLF_FUZZED(8.1)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1))))), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1)))), mix(float(_GLF_FUZZED(8.1)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), min(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1))))), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(171.498, clamp(171.498, 171.498, 171.498))), (_GLF_FUZZED(_GLF_IDENTITY(171.498, clamp(171.498, 171.498, 171.498)))) / 1.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-271.283, -47.01)), (_GLF_FUZZED(vec2(-271.283, -47.01))) * mat2(1.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(171.498)), bvec2(true, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, cos(sin(0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), max(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), mix(float(_GLF_FUZZED(2401.3251)), float(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0)))), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), mix(float(_GLF_FUZZED(2401.3251)), float(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0)))), bool(true))), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), mix(float(_GLF_FUZZED(2401.3251)), float(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0)))), bool(true))) : _GLF_FUZZED(-3356.6132)))), float(_GLF_FUZZED(640.577)), bool(false)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(log(1.0)))), vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, cos(sin(0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), mix(float(_GLF_FUZZED(2401.3251)), float(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, exp(0.0)))), bool(true)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), cos(log(1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(171.498, clamp(171.498, 171.498, 171.498)))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-271.283, -47.01)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false, true, false))) && true))))))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | 0) != _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                              continue;
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                              continue;
                             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                              break;
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              return;
                             return;
                            }
                          }
                         if(_GLF_DEAD(false))
                          continue;
                        }
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                  break;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) * 1)), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true))), false), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true))), false), true, false))))) && true)))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.7))))) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0), _GLF_IDENTITY((mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0)) * mat2(1.0), transpose(transpose((mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0)) * mat2(1.0)))))), mix(float(_GLF_FUZZED(9.9)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0), _GLF_IDENTITY((mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0)) * mat2(1.0), transpose(transpose((mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0)) * mat2(1.0)))))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0), _GLF_IDENTITY((mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 1.0, 1.0)) * mat2(1.0), transpose(transpose((mat2x3(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 1.0)) * mat2(1.0))))))) * 1.0)), bool(true)))) < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
              }
            }
          }
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))) > injectionSwitch.y)) || false))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(57702))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), false, false), true))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           break;
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, true))))) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
         if(_GLF_DEAD(false))
          break;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ (0 << _GLF_IDENTITY(int(6), int(6)))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-972.500)), vec2(_GLF_FUZZED(6356.6157), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)))), vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))), true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-5.5)), 1.0 * (float(_GLF_FUZZED(-5.5)))), bool(false)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false)))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat4((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), determinant(mat4(0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), determinant(mat4(0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0)) * mat2(1.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat4((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0), (mat4((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false)))))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / sqrt(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(mat2(vec2(mat4((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-90.68) : 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), (1.0) / 1.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0)))), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), ((injectionSwitch) * mat2(1.0)) - sin(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-528.615)), (float(_GLF_FUZZED(-528.615))) - 0.0), float(1.0), bool(true))), 1.0)), vec2(mat2(vec2(mat4((injectionSwitch) * mat2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(134063u)), (_GLF_FUZZED(float(134063u))) + 0.0)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.4)), bool(false))), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))), abs(0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))))))))).y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7)), 1)), int(ivec4(int(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7)), 1)), 0, 1, 0))))) >> _GLF_IDENTITY(int(7), int(7))), (false ? _GLF_FUZZED(-89483) : _GLF_IDENTITY(1 ^ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0 + (1 ^ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (87330 & 0)) != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)), bvec2(bvec4(bvec2(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)), false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)), bvec2(bvec4(bvec2(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)), false, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)), bvec2(bvec4(bvec2(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)), false, true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bool(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)))))))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)));
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    break;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))), true))))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))
                break;
               continue;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(bvec4(bvec3((true), true, false), false))))) && true)))))
              {
               atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (0))), min(0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (0))), _GLF_IDENTITY(0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (_GLF_IDENTITY(0, (0) + 0)))), min(_GLF_IDENTITY(0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (0))), (0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (0)))) << 0), _GLF_IDENTITY(0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(_injected_loop_counter)))))))), ~ (~ (0 + _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ~ (~ ((0)))))), (0))))))))))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, _GLF_IDENTITY(1, 0 | _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ (_GLF_IDENTITY((1), ((1)) | ((1)))))))))), (ivec4(0, 1, 1, 1)) >> ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0), 0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec4(0, 1, 1, _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) | ((1))))), (ivec4(0, 1, 1, 1)) >> ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0), 0, 0, 0)))))), min(int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1))), int(ivec4(0, 1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, 0 ^ (0))) : _GLF_FUZZED(43172))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))))))))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 1), (ivec4(0, 1, 1, 1)) >> ivec4(0, 0, 0, 0))), min(int(ivec4(0, 1, 1, 1)), int(ivec4(0, 1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (~ ((0))))) | ((0))) : _GLF_FUZZED(_injected_loop_counter))) >> 0) : _GLF_FUZZED(43172))))))))) - ivec4(0, 0, 0, _GLF_IDENTITY(0, max(0, 0)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0 + (0), (0 + (0)) - 0)), int(_GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), min(_GLF_IDENTITY(int(ivec2(1, 1)), (true ? int(ivec2(1, 1)) : _GLF_FUZZED(-99261))), int(ivec2(1, 1))))), 0), (ivec4(0, _GLF_IDENTITY(1, (1) >> 0), 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 1), _GLF_IDENTITY((ivec4(0, 1, 1, 1)), (_GLF_IDENTITY((ivec4(0, 1, 1, 1)), (_GLF_IDENTITY((ivec4(0, 1, 1, 1)), ((ivec4(0, 1, 1, 1))) ^ ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(5), int(5)))), 0))), _GLF_IDENTITY(min(int(ivec4(0, 1, 1, 1)), int(ivec4(0, 1, 1, 1))), (_GLF_IDENTITY(true, (true) || false) ? min(int(ivec4(0, 1, 1, 1)), int(ivec4(0, 1, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) >> 0) : _GLF_FUZZED(43172))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))))))))) - ivec4(0, 0, 0, _GLF_IDENTITY(0, max(0, 0)))))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(_GLF_IDENTITY(ivec4(0, 1, 1, _GLF_IDENTITY(0, max(0, 0))), (ivec4(0, 1, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 1), (ivec4(0, 1, _GLF_IDENTITY(1, max(1, 1)), 1)) >> ivec4(0, 0, 0, 0))), min(int(ivec4(0, 1, 1, 1)), int(ivec4(0, 1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, min(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-56976))) >> 0, _GLF_IDENTITY(_GLF_IDENTITY((0) >> 0, clamp(_GLF_IDENTITY((0) >> 0, (0 << _GLF_IDENTITY(int(3), int(3))) | ((0) >> 0)), (0) >> 0, (0) >> 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0) >> 0, clamp((0) >> 0, (_GLF_IDENTITY(0, (0) + 0)) >> 0, (0) >> 0))), (~ (_GLF_IDENTITY((0) >> 0, clamp((0) >> 0, (0) >> 0, (0) >> 0)))) >> 0)))))) : _GLF_FUZZED(43172))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))))))))) - ivec4(0, 0, 0, _GLF_IDENTITY(0, max(0, 0)))))), 1)) + ivec2(0, 0))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, 1), (ivec4(0, 1, _GLF_IDENTITY(1, min(1, 1)), 1)) >> ivec4(0, 0, 0, 0))), min(int(ivec4(0, 1, 1, 1)), int(ivec4(0, 1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172)), ~ (~ (~ (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172)))))))) << 0))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 1), (ivec4(0, 1, 1, 1)) >> ivec4(0, 0, 0, 0))), min(int(ivec4(0, 1, 1, 1)), int(ivec4(0, 1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172)), ~ (~ (~ (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172)))))))) << 0))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172)))))))) << (1 ^ 1)))) - ivec4(0, 0, 0, 0)))), 1))) | (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 1, _GLF_IDENTITY(1, 0 + (1))), (ivec4(0, 1, 1, _GLF_IDENTITY(1, 0 + (1)))) - ivec4(0, 0, 0, 0)), (ivec4(0, 1, 1, 1)) >> ivec4(0, 0, 0, 0))), min(int(ivec4(0, 1, _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))))), int(ivec4(0, 1, 1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, min(1, 1)), 1, _GLF_IDENTITY(1, 0 + (1))), (ivec4(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (0)), 1, 1, 1)) >> ivec4(0, 0, 0, 0))), min(int(ivec4(0, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))))), int(ivec4(0, 1, 1, 1)))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0) : _GLF_FUZZED(43172))), (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), (true ? (0) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> 0))))) : _GLF_IDENTITY(_GLF_FUZZED(-75028), (_GLF_FUZZED(-75028)) - 0))) >> _GLF_IDENTITY(0, ~ (~ (0)))) : _GLF_FUZZED(43172)))) - 0), min(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) >> 0) : _GLF_FUZZED(43172)), ((true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), (0) >> 0) : _GLF_FUZZED(43172))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(43172, (43172) / 1)))), (true ? _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(43172))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-44244, ~ (~ (_GLF_IDENTITY(-44244, clamp(-44244, -44244, -44244))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (-44244)), (_GLF_IDENTITY(~ (~ (-44244)), ~ (_GLF_IDENTITY(~ (~ (~ (-44244))), int(int(~ (~ (~ (-44244))))))))) << 0), max(_GLF_IDENTITY(~ (~ (-44244)), (~ (~ (-44244))) - (0 >> _GLF_IDENTITY(int(6), int(6)))), ~ (~ (-44244)))))))))))))) - ivec4(0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 0)))), 1)))))) | 0));
              }
             else
              {
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x)) > injectionSwitch.y, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))))))))))))))))));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-1.9, _GLF_IDENTITY(float(mat3x4(-1.9, 1.0, log(1.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0))), 0.0 + (float(mat3x4(-1.9, 1.0, log(1.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0)))))), 2.2)))).x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.2) : 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
  return;
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u + (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ (~ (atomicLoad(write_val, 4, 64, 0))))))) | (atomicLoad(write_val, 4, 64, 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))) : (atomicLoad(write_val, 4, 64, 0)) | (atomicLoad(write_val, 4, 64, 0)))), uint(uvec3((atomicLoad(write_val, 4, 64, 0)) | (atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4)))))), 64, 0)), 0u, 0u))))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-271.757)), float(injectionSwitch.x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0), (true ? mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(75.57) : 0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(-4226.6683, 1.8, 124.457, 2724.2999, 1754.2232, 2091.1324, _GLF_IDENTITY(-3067.7824, (true ? -3067.7824 : _GLF_FUZZED(-214.114))), -46.37)))))) : _GLF_FUZZED(-11.86))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(uvec3(read_val, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val), clamp((read_val), (read_val), (read_val))) >> 0u, 1u * ((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) / 1u)) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), (true ? (read_val) : _GLF_FUZZED(workgroup_base)))) | ((read_val))) >> 0u)), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (read_val) + 0u)) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), _GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(uint(uvec2((read_val) >> 0u, 1u)), 0u ^ (uint(uvec2((read_val) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 1u))))))))) / 1u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val), clamp((read_val), (read_val), (read_val))) >> 0u, 1u * ((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) / 1u)) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), (true ? (read_val) : _GLF_FUZZED(workgroup_base)))) | ((read_val))) >> 0u)), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (read_val) + 0u)) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), _GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(uint(uvec2((read_val) >> 0u, 1u)), 0u ^ (uint(uvec2((read_val) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 1u))))))))) / 1u)))))), min(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val), clamp((read_val), (read_val), (read_val))) >> 0u, 1u * ((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) / 1u)) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), (true ? (read_val) : _GLF_FUZZED(workgroup_base)))) | ((read_val))) >> 0u)), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, ~ (_GLF_IDENTITY(~ ((read_val) >> 0u), (~ ((read_val) >> 0u)) >> 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (read_val) + 0u)) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), _GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(uint(uvec2((read_val) >> 0u, 1u)), 0u ^ (_GLF_IDENTITY(uint(uvec2((read_val) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 1u)), (uint(uvec2((read_val) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 1u))) ^ 0u)))))))) / 1u)))))), _GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val), clamp((read_val), (read_val), (read_val))) >> 0u, 1u * ((_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) / 1u, max(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) / 1u, _GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) / 1u)))) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), (true ? (read_val) : _GLF_FUZZED(workgroup_base)))) | ((read_val))) >> 0u)), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) ^ 0u), (read_val) + 0u)) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY((read_val), ~ (_GLF_IDENTITY(~ ((read_val)), (~ ((read_val))) - (0u | 0u)))) >> 0u)), _GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(uint(uvec2((read_val) >> 0u, 1u)), 0u ^ (uint(uvec2((read_val) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 1u))))))))) / 1u)))))))))))), (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, uint(uvec3((read_val) >> 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val), ((read_val)) ^ 0u) >> 0u, 1u * (_GLF_IDENTITY((read_val) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((read_val), ~ (~ ((read_val)))) >> 0u, _GLF_IDENTITY(uint(uvec2((read_val) >> 0u, 0u)), clamp(uint(uvec2((read_val) >> 0u, 0u)), uint(uvec2((read_val) >> 0u, 0u)), uint(uvec2((read_val) >> 0u, 0u)))))) - 0u))), _GLF_IDENTITY((read_val), 0u ^ ((read_val))) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) >> 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) >> 0u, 1u, 1u)), (uint(uvec3(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) >> 0u, 1u, 1u))) | 0u))))) * 1u))), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) * (_GLF_IDENTITY((read_val) >> 0u, (_GLF_IDENTITY((read_val) >> _GLF_IDENTITY(0u, (0u) | (0u)), (true ? (read_val) >> 0u : _GLF_FUZZED(read_val)))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u * ((read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u))), (1u * ((read_val) >> 0u)) >> 0u)), min((_GLF_IDENTITY(1u * ((read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u))), (1u * ((read_val) >> 0u)) >> 0u)), (_GLF_IDENTITY(1u * ((read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u))), (1u * ((read_val) >> 0u)) >> 0u)))) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u)))) / 1u)))), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val), ((read_val)) ^ 0u) >> 0u, 1u * (_GLF_IDENTITY((read_val) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((read_val), ~ (~ ((read_val)))) >> 0u, _GLF_IDENTITY(uint(uvec2((read_val) >> 0u, 0u)), clamp(uint(uvec2((read_val) >> 0u, 0u)), uint(uvec2((read_val) >> 0u, 0u)), uint(uvec2((read_val) >> 0u, 0u)))))) - 0u))), _GLF_IDENTITY((read_val), 0u ^ ((read_val))) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (_GLF_IDENTITY((read_val) >> 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) >> 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) >> 0u, 1u, 1u)), (uint(uvec3(_GLF_IDENTITY((read_val), ((read_val)) | ((read_val))) >> 0u, 1u, 1u))) | 0u))))) * 1u))), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) * (_GLF_IDENTITY((read_val) >> 0u, (_GLF_IDENTITY((read_val) >> _GLF_IDENTITY(0u, (0u) | (0u)), (true ? (read_val) >> 0u : _GLF_FUZZED(read_val)))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u * ((read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u))), (1u * ((read_val) >> 0u)) >> 0u)), min((_GLF_IDENTITY(1u * ((read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u))), (1u * ((read_val) >> 0u)) >> 0u)), (_GLF_IDENTITY(1u * ((read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u))), (1u * ((read_val) >> 0u)) >> 0u)))) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u)))) / 1u))))))))))), 0u ^ (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, _GLF_IDENTITY(1u, min(1u, 1u)) * ((read_val) >> 0u)), (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(write_val) : read_val))) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (88166u & 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u))) | 0u))), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(read_val, 0u + (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (read_val) - 0u)) | (read_val))))) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u)))) / 1u)))))))), _GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))) >> 0u)), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(read_val, ~ (~ (read_val)))) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u)))) / 1u))))))))) - 0u, (true ? _GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))) >> 0u)), (read_val) >> 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(read_val, ~ (~ (read_val)))) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u)))) / 1u))))))))) - 0u, ~ (~ ((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))) >> 0u)), (read_val) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) >> 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(read_val, ~ (~ (read_val)))) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u))), (uint(_GLF_IDENTITY((read_val) >> 0u, max(_GLF_IDENTITY((read_val) >> 0u, 1u * ((read_val) >> 0u)), (read_val) >> 0u)))) / 1u))))))))) - 0u))) : _GLF_FUZZED(subgroup_id))))))) + 0u))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
